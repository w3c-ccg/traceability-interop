{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "40ae2221-e086-4fda-b2a9-3457bb3af068",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e1b2d4e1-29ab-4460-80aa-d0b3fc368513",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4a11f98-7f58-4c12-8692-7660f198c918",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6c3cd8f3-2788-4805-bb3c-1b51bd8bd2ef"
                }
              }
            ]
          },
          {
            "id": "f7058432-8858-401f-bd02-91520fca3e70",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6cbfd65e-fcca-43ff-98c0-215d373c3e31",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "38bb429a-1956-45e0-99be-7faeaa40163a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3e472576-e6fe-450c-b52c-1b339df16c29",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7c8a1904-b6b6-42bf-8cac-45973d0371e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d31c1008-327a-478d-913f-dd47b134040a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c54c202-7cda-4976-9e32-41459a49f2ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e14ead4-cd97-42f5-ac8e-f81054a579cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a22ef4d1-b572-4dfb-86ce-5ea951c656f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "afe5739d-995b-4f32-80fc-d9ade3004f03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f341466-2f20-4fcf-b9cc-bae67e2b8ab8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7f49b1f-2611-4618-b852-236d434e9d52"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81123ad5-2602-46e1-b6ad-6235fe396edb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4d44d250-8d80-401b-861e-8a79884556b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5fafd17-0a08-46cc-a6a4-5ed40f16dc49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0724fe44-ce45-4006-b04c-67badd8bd47d"
            }
          }
        ]
      },
      {
        "id": "e34ed291-bc95-4d3c-8ae3-a3a04654bfef",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bb30393a-f87c-4c95-89ae-1c7e02fa6f15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7da50793-2cc6-483b-9f9d-5cec79a9e6e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "178475aa-5b42-42b0-bb41-d28e1eafeacd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57c39a0-68fc-4086-be43-2e5ec0600fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4380eda9-960d-489f-90d0-01a6791bf292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab85c41-9c34-4bc0-bdf9-02c9fa4b0cee",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b23a39-72cd-421e-b357-1433e772dd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c566fed-ead9-4b1a-97aa-487e24c893d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51b73c4-14d8-4616-a9de-5a0f074527f1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf30ddec-d622-4873-abf4-a104de3676e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "987b5301-c2b3-4118-bb62-c431a4523254"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24ee0439-4353-4d6f-8ea5-a5e8f0bec6b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7b02d30-f8a1-4842-ba17-3403ed85c969",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dd0ec1-8901-42a9-8a60-bbb8f948e3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "108f39e5-2b00-4839-8a9c-f917a12b1220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a964f80c-2540-448f-9873-c1a452e65d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1e4036-45f2-428f-a973-7f46a3b72bc3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3b02c1dd-8e71-4626-b0ac-47e985a4cacf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b2841e5-6939-4141-bda8-2a3f7de13f14",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f607537-505a-4f6d-9f8c-ad7281b431c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "100d798d-fd0f-4ef4-b034-3b8f6a6b88e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3555d83-5e26-4069-8478-837e78f90035",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "145d46ed-b0ae-4294-9214-47787f5b1cf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76c4950b-cfd4-40be-bfdb-fb18e8b3309f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b6f228c-8304-4863-946d-557bea653daf"
            }
          }
        ]
      },
      {
        "id": "ed93ff6c-9f94-4d79-8ee2-a1126d346bc9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e764ed9d-6281-4bf7-ab12-249901a1f732",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1d8fc43-a140-400e-b142-121d7edcde95",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ef53e11f-871b-41c4-8e3e-e9cad5f3fd02",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb361c35-e81c-4e00-b43b-dc47e08b4469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac8d96d-42c5-467c-8f06-15609c90616b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab23ebd0-e51e-4b3d-9857-a596b74a3fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e435944a-1e00-484f-898a-5b6c1771b786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dfd47d-4c62-4b1c-9a2b-d7f2080a7e13",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5fc117-6d43-422d-840a-24e3311585ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5d8070-5061-4554-8ea7-1de6db18a853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef46d9e1-c5ef-4448-a0c1-874c72aa1aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7349cac-2c1a-4389-971b-4f13e6f6bd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ede0bf5-c99e-42a4-a3b3-4cc1a0a5eca1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b2ebff-fce5-43ba-a94a-febead91365a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35dbae3-0005-4567-b214-682c2fb12233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5022a7-5347-4eaa-9139-b7e7dedee0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc9b4cfa-7b7e-4ced-8330-4f68ef4d342a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abc05c4-613c-49c4-b4fb-269654cfcfe0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a3b41e-a316-4be0-af96-f1dd2b2fccba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44490f60-264d-481c-8e1d-8352c86864a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa0d383-cc92-4cba-8b8a-fec701473ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b6fad09-0e9b-4e99-9c49-913e730f099b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f7b0e3-83b5-4451-b06b-e3d83281271c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32556fa5-2cd9-4c94-9bf7-3e803a22d179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0f90ab-7cac-4642-9d6c-a7f4bdd8378c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aad94d7-d2cf-41c4-a868-79a5df140bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ed17072-ef2f-4d45-83b6-207d58883c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f018ae-c036-4480-959b-f098117e8260",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f687391-0f33-40a8-adbd-f55b180a1ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3eea1d8-55c2-43a2-af89-94b2197b4257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b200847-2eeb-4ec4-bc40-e83b9f640519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b442c343-7d00-4e1a-bfc4-f5a603e90e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9886d4d0-2219-4912-8b06-e53fd415823b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e28a642-92ba-4d46-809e-7da3ae8347af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da832bb-fd6d-42ef-b8f8-3bcd60843a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054485a2-1009-4b66-938f-5fee98174f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ae950aa-345f-4f8f-8fd2-9bed2e5f79af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e5954a-2551-4e39-be13-023e03ef1966",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b9a8dd-a1dd-4761-ab23-4cd5430c2e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8faeb29-966d-4028-bc2c-47e40ede47fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00f6791-d6d2-4025-9e15-d076e6ecf583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5840c163-2f6d-473c-a3c7-6f4ab430ae13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11caab22-928d-435c-bc24-53135bed44af",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc4e7cd-08f1-4c0f-8bd9-60155009e6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35af34b7-7f9c-44d0-bb86-e8fcd50ca09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e44197c-b74b-4df7-8c73-73c61bb78eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f8421d7-2c86-4b74-aed7-171311442390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5bda04-d231-4d1d-a5ea-d376d2b8050e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529daf6b-ebc6-4a17-934b-af1ae06b569a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5a6e9e-5ea8-4135-9342-3e30755b52fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa32bd2-0967-4236-a00e-524cc8a886d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2011b866-b503-4148-909a-8629a9d217e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6a0a8a-3eef-49ce-b21f-d2ce2d8b76b1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6871ca-a2ba-4eac-81cf-8b30b46aacd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67ebef0-205a-418e-bec5-e33ba21200b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636f9d95-6024-425a-baea-18253875a15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4d7645f-ef5d-4c76-9c7a-02f3a6428471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc99303-992c-44aa-b4d6-8e13c55f33a4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1b38d7-8afa-4b32-bfdc-d71b86cf3628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3399081a-d815-4a4c-bd5d-7d1652f934f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60443c88-a4ca-4c24-b137-d97171860e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c1f3886-81a6-44c2-b1d7-4f5ca0475f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1641b781-f074-4be3-b429-fa56262a8b41",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995fceb3-d3c0-4373-84f8-1d1e8180e644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1f4b7f-bdb1-4b7c-b085-5fa480312fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbe8096-d706-47df-a5f5-8559d966d53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6f3e19d-eca4-4579-b859-91d76079313b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048393c1-ee91-4637-8541-c2547e1992bb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb64fa1-f979-4b5c-a9d7-3ef0bef6076d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e3f5ef-cd3d-4a3e-a9af-a93c4aabf6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a974a0-82ed-478e-a866-242d7221c295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "945b1a0e-7cc5-4dea-adbd-181f962652d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceee56d6-04cb-4126-a362-626bf4f876ab",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb89428-e60a-4340-8e84-acbf0b131df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff23a0de-9181-4a4c-88cb-76849e9f2c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6013d0c5-894b-4283-9371-a4e92f26312d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21d62ed7-3344-4307-b616-3773a62ac866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92b19b8-8196-4829-b4ef-fbe1b5fe6390",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762c0c7a-8152-4468-b9f5-20e7300aa44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fe1b7d-05e3-4568-92f9-27268ac1bc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23158a3d-2410-45d0-9198-7630f5fce3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "433b0402-71e4-4121-bf65-0714013a2aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bcd7c5-13bc-4d17-8328-02188abba376",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8747129-9ba4-4d06-b27b-6970413f2f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1e7f19-36ea-4534-80eb-7e52f7c49082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a095c71-d715-48d7-8ff3-11cde980a960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a45e1808-517e-480f-a38f-774776aeb703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09451aca-2da5-43ee-8f70-a05433cd4a9a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96a8015-f566-4cd7-9185-43ae97a40441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7f7e69-3b8d-4224-8b14-f402412d8f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9f4317-1444-4957-bdc3-0042a1f190fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4a0523-b3cf-462e-abb7-6f11815fe09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ca2f50-7486-4cea-b057-b9ec2df2658f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281df433-cbac-440d-8e85-26872c89ddbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f88a943-1ffd-4e25-aca7-5be0c1548c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b86d25-191b-4428-b121-249065636d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "256380b2-fb3e-46f4-9535-fbb3f997da62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e63d8e-54bc-425a-86f5-9b19707014ba",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006d23d4-fc85-44cd-b003-8ef283cb8554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a87834-e920-46d9-aa8d-924937fc1c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaef470-9981-436c-ba0b-1ae4db32291f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b66aed-4579-4686-9125-33fc4fc24b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e021cb-3113-40c9-995b-6fb4a58d634e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527feea8-29c9-42bc-ace7-37f35e333bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d5f86f-209b-4fb2-88d7-96440686244b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4c4939-9fbf-4fa6-832d-1b29e1fdc888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b9f856-1a87-4df0-a976-04b22aa6e357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a45cca-7074-457d-9c97-0585dc16628d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5321c871-21c0-4e29-aa19-1ca59b63438c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1fa29e-0d9c-44a9-9eb6-d97027de9845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69601e02-bbf7-4983-afbb-b730a4775d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e60bd298-eb35-4c91-90ab-4409c53342f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7fd5a5-16eb-4f26-93d4-9d99e159a78e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd82bb8-c6ff-4133-a4cd-0bce7ec1dd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd71f399-e323-4028-87b1-202179c6c291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b146ec11-b47c-4ee3-a97d-a1f938349558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56c419eb-ca97-4b69-84f9-85056774ffc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa11ba52-a219-4b50-9ea9-c9f886536835",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d096f6-25fc-4084-a044-cf92a061c9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb71748-28e3-46b5-ada0-373c7321d4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e59638-385c-4507-bdd6-933a711c0b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "689bd02a-f345-4c9a-a17f-1da4d4184e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb17d97-ab32-4b39-b741-ac987f9ce9d1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3a62f7-dea2-49c5-937e-9564d8a35d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6c07aa-240f-4b8e-8d9c-7367fced5a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722c9a29-2a5a-4a06-a743-2fed304ce83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e2a445-33dd-41ad-8486-d887b8c047b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dfd3be-e030-4516-a4df-46142ee9980f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db3f2f0-e271-4c62-b8e9-34fc7b13ff90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7de46f0-63b9-4f1b-9f2e-afda0ceb7c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4deb86-c0ce-4c17-b83f-90d957e1dcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a430ccf4-c1b9-4caa-9c98-924db36da621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7bbf20-52e8-404e-93ff-e5729b0a5e1b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7f942a-d616-41c6-bba0-8bf32911c940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98baefb-b241-49d1-9632-d5f35e4e14a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb3e974-a427-49bb-982c-2d9da76cfc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d951115-9bcd-45d4-a79f-af508a6e1bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c656d3-2bdd-4779-9323-c613ade333a1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7916716-d9e5-43b9-81e3-9724ca7020e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f292ea-12dd-4b63-806e-efb006862d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51aaa98-edf5-4f53-9dc7-af5c1dc71e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b82a3f-2182-43dd-874a-52501a99b48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0f48a3-13f9-48b4-ac2f-aa6156be73e1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d13b5b-ebbe-4110-8b9f-11d7bf16b530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9716b2cd-10b2-47a4-914b-150b98f8d126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416690f3-e165-4f4d-b21f-9d0f04852910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90062468-f35d-4fa5-aeaa-9109f24f72ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c7d4ba-1aee-4dc6-962b-afebd1df0117",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e6d5bf-7749-4439-815c-301184ff1b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525a5cfe-845e-44a2-ae6c-b06e36596c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc6ac42-5b76-4a3a-a7be-d8a3924e53a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3572374b-1e55-454f-a39a-5e3cede5cc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d79f04-98f3-42e3-a293-4f81498cc0da",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe8cf3a-23a9-4978-bfbc-4eaaaad8b85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698431f4-3ed1-4bc9-8bbc-b08581b8afff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2e96f6-541d-4cdb-bb71-f262140cff66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05884ec-0f68-4003-99ed-b4dcc38dca27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83efec84-7c1a-4011-9541-aaf8a9e214aa",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2417943-e79b-432e-87d6-8484414d1d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5747976-5497-42fa-89b4-66fae33009d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891a811e-31f5-44d5-9522-6d18081c24f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c050978-23b8-4460-be23-2c1b8b4e2a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67af7881-e102-4b10-ab49-b36d9f8b5203",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfae4637-be50-45c7-a16c-ee19cbfbe9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cc1dad-538c-4d67-8d73-27cbd9055218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266918eb-c0c0-4bab-abe0-fbd579321af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20722de7-1661-44aa-8c05-061c0f9832aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2bdfe8-c8be-46d8-8ded-0ed521593859",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0f48a4-2edc-40d2-9b7c-a8ffb0a7284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8f7d29-7808-4ee6-94ff-70c149febec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3b37f1-c876-4dda-ac4c-3f3064d6a80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fda3b5c-3950-4015-9817-508748c54077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4728093b-808c-4370-b11e-9460c09d060e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dc0864-6e80-42cc-96b1-e127f52b8346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dca7588-6bfc-44b2-bcc0-dd7d68d70183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f503049b-515e-4db0-a70a-b6558db12e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5366dd22-99eb-4945-a46a-40958c79112a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da959d6e-0a62-4a6f-b65e-e3e8f9e5ce38",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef27cba2-c354-49d6-bc60-dbbd7e582c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94b31790-db16-441c-bce9-e46dcbf3939b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ff3d8e-250e-4ea4-be08-4761c74027b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d25b20e4-3942-43c5-80ed-02e26ef82e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94c4791-826c-4086-a9c3-c8bf6a55de88",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1eab1d-e34e-441a-979a-64e369b8ebcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26213717-a44e-4c5d-a4db-e22500e57dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1709f737-3055-4cd1-ac3c-163170dd4bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e68e25d4-5e50-4646-8aee-ff03c0d6959c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af75d3e-231a-4238-9f2d-4f27dfb18cfd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b19693-6812-4622-b9e1-c20049cea5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8ed961-f983-4747-95a9-c209e2a497d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fd328a-65e5-4a94-9ae0-fe4d544aeaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc5c898-fa1d-4cb1-9c71-a9f8b23844a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc2cd5c-6fb6-4b00-b2b5-277bacf418da",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb51441-c6ac-408d-90ac-5475a93c4c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d099c8ad-ed95-458d-ae27-beecaba0931d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a4438d-5748-49d1-9b84-1bf09f7c300e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f578f189-e529-4a2a-a47c-db3ff304df80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f569e868-2ab8-48e5-a9fb-056b57bb2973",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e95db2e-0f4b-4e16-a9e7-85a37996a492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47e314d-d141-41d7-9bad-3fb5dae2de46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b76632-1600-4d50-a2c0-b6475aef10e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "56230655-14fa-40b5-9090-0f9382780d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15518cef-999b-4ea5-8be9-a54e4d3a1d30",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a61cc3d-3c05-4d39-8330-a92c8c59dc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf96f09-e3ff-465c-bbaa-49c336ab705e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a87ddc1-5151-4046-a96c-b90293f896f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b96a9c-dee6-4828-b5e5-09df99cb482f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f64b67-93d8-4bc2-a4be-1181c3ffefa4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461da7f5-b933-45ad-8872-1232a1a83158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f34d69-1ded-4576-b272-58afdf4229af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3800ae01-ed25-4377-b005-3c9022dd4fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "57307efd-ffc9-495e-acf4-910577dd2bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625326b4-2e5f-4a44-997c-24b0a053a28c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dca493-fe14-448b-91e6-a70cf3fc6a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fddba9-2aa6-4003-b292-4708c7f5ef40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bc416f-6d84-4df2-94f6-09ef697fcbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "784c18cb-5a36-45d1-8619-c7409e7f4895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96361f53-a5cc-4f73-81eb-40dc29c0d1e1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e2284c-ef7c-4bce-9b27-f61997fca7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4876bc2-95fd-4923-ba02-0363e37e504f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15305151-d488-44de-8f5b-feb89c8a6999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2a74a3-1e6a-44b7-8882-d1775c9b3794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa291056-2af7-4feb-b10f-81f481d0cef4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa5bdeb-2821-4510-932e-fd8f8a63a3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a337764a-0292-4ece-be20-06b3883fc3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f5da6a-f1fb-408b-8330-2a35527c3c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21b810f7-2560-417e-a934-4d5d5d50b2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05442c1-f084-4819-a97a-3089fc13c582",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f5aa38-5a25-4503-8488-9697fec45370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ce7f4d-b9ab-48ed-81d9-0363eaeb7c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01251fb7-2759-427b-af3f-ddce9a8d2eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba38b06a-4d7a-4257-bc6f-c72205a77033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e006cd7a-d77a-40e7-94ea-eb31090a8aab",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee2cdfa-b765-4f3f-9285-74849f6a8e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8019114-6ccb-4361-8fde-83acc97bf204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa1203c-ebc1-4ed3-bc72-d8e5e414dacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "609ecb42-467a-465e-992f-896e2de6fc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84973a75-357e-4e06-8fa1-10e1dda58a2a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5582763f-37bf-4556-b7f4-fbab0e83a89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bc552f-f425-4164-9673-5fed69390051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a18ab4f-4a97-4fdf-9c3f-b158bb2e1046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69a9322f-e1cd-417f-ad17-a531e5bbba38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e184923-e8cc-4cfd-b4b7-3ae6514f2b2b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b957e0-9c43-47a4-ad7e-7c2817779cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f40bf2c-f725-461a-a810-9536e2809dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c278ec5-b233-41c2-890c-26d24a427d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10dd6fac-5be9-4bba-a712-f0752ee5769e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f5bb7b-3bc1-4432-b4a0-74574937c038",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5d8c1b-1d82-460a-aee0-723f5529adad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc746ef4-d149-47d4-9cbb-4a921a4cab5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44a8c7e-d93e-4a63-a56b-f07f677c47ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca2bc8b-3033-4787-adcc-33410df05bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff9d190-63f0-4971-9aac-dd0dca7d2c94",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0454dc-cc1c-49d6-8e09-fceb418ad058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b428622-aa55-4f1d-8fd3-63ec52209bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1bdfa7-62b1-451a-9d43-3d8c3e98c25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd081260-894f-4acf-9b97-629d92f1874f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409566d3-1d91-4da0-afbb-b2964a9e9e24",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fffd33a-b77c-4ddc-ab3d-729bff4f9f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f5b8dd-269f-4398-adc8-11b88bb9931a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bfeef5-32b9-4cc7-aff6-0582e63dd31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e48a2831-1e10-4fbe-85b3-dec1f1121e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9959ddb9-af33-40cb-a195-13735f75ceea",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d3a1df-44d4-4787-bc68-42891238fe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3a7134-e573-4b49-8a59-95b90c20d77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcfda14-6a30-4519-a749-cafb854d8dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63de8a07-724b-4889-a722-63c9365126f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2ad545-34d0-41a8-8ea0-dd748734e247",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3df1ec4-3555-4906-ad39-5281bcd2c449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b9cb4c-c58f-41c4-b73d-b5bf956f6aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c45f606-9ba1-454f-a7c6-f913959c95cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b42b06-d264-4263-b7c3-55530beba4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07856889-a21b-4008-9fe4-179265432d35",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082bb4b2-577c-491f-997d-4c4e582e6924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4905559f-181f-4848-a7b6-00f58adca33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5ebcba-1b86-4065-8ab8-c99ad0ffe3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c68af34b-d4f5-4a6f-9719-d6b3c4d47f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ff8810-e7e5-468f-aaa2-aa0975757431",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cb4c9f-214f-4a54-a5aa-d14f59abca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89656d4b-20fb-42c5-8c50-44ffccd959b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9bb1cd-b1ad-4a83-af42-68c486a15cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7b2584-c997-45d1-adb2-3a82027da0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc22a4d6-befb-40fd-870f-86a9392f553a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b26f4d-699b-4939-a976-ee024d91258f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72164918-ab4e-42f6-ae8d-9e71029b31f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f8fe6e-3c14-4338-a59a-ec8974749fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "241178b6-824c-4037-be4f-fb0977608505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30aafa2e-cec4-4aa4-be0a-feadfb391fb7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83dd757-7272-46b5-9133-e275bf17f0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787c1547-a202-4f1e-b588-408df252e8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621dc3ca-1fc4-4391-9403-87cfde0d7967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0afe7cbf-ec6a-4989-abc1-745e7702b665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1369844c-b740-4029-9ffe-5bc79e961c39",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f06bb4b-e7f2-42fb-bacf-4d960a8366d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfff2b69-93ef-444a-95f1-1726017f0ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03aaf29-a9b7-4cf6-9ce7-96e10062371c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "74fc1a15-58d5-43b9-acb1-617129274748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbf9591-8c2d-4b72-bbe6-834c3cfe9f11",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d7d6a7-f53d-4420-acba-91e77698cef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c629977-e37c-44c5-998d-24e90bf64992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765a2886-4154-4f57-8498-1d17806b34d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad67afef-b165-4586-ae8f-658298157912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e20cff6-896c-4ba4-88d3-fedf143e3c2c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c222f66-0c08-482d-939f-bb3fbdc55701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de42166-cbb5-4c1a-ba34-f65c7091ace8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8db4375-de67-4cc3-8d99-4e2f315fb632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c57ab1-6627-4ed3-a9e4-1e0b256fe54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514c168f-9bed-4546-a88b-f74fb1220996",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5f70bb-f522-44e1-9a89-8e99dfaf4208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac00908-c418-431b-81aa-e22733f8c0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd55b8e8-adf0-4216-8a5d-e2bf64473394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "30be3e2d-e3f1-4309-94d3-e66966049ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fb4093-4a92-416c-ac2d-12e6d32e79f6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35902222-f761-403d-a4c6-8b6966d5d9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9a890a-d62b-42eb-a248-f68822c6b344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21301599-8b6d-4c7f-a632-2f01599bab7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f91d69-c53e-4b03-bbde-96bef7bbc94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43efb829-71b2-4ae7-986d-bd33c27f6fe8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2103cb28-8de9-4b2a-a274-60aed647eea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5607178-45d4-499f-b642-dfd2402fb25b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce37725-d9cd-4efa-9263-6580d152e8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2843387e-1c4c-42df-9eff-2ef3de1c3607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55ec1e1-ebd7-44e0-bfb0-3ba7ee440f1f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095abe21-805b-41a2-b3e1-857e1c9ba46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f63d86-ea77-4a5a-a3c9-bcf9dc60c9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6357e0fc-e6df-4fe9-a9c7-470f5c385d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38406eb0-83c6-4f74-a2a4-df1055292551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6424bb45-d7ca-4d81-af2a-be7dd98e8e4d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dc6ce0-9b1e-4077-bca0-7815f93699b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c746b61e-65e4-4b0d-af90-f78b98b51fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf175217-63ac-4755-acb1-9e65d355c7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a416df1-312e-445f-9b9b-06f5dae4d226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13f7cb5-b98e-43fa-86ef-8aadd20b23c0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0896e2e6-9780-42e9-8229-f011dbfb316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408b17bd-7efb-4f17-ab3b-df545c40d9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78736243-7e31-44cd-8da2-5e8062e42810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b8331f-8dfe-436e-acbd-cc432aa7875e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d93764-2c40-45a2-a183-9a5be224b70e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdb905d-80c1-4d3f-b6a5-ce44f5cc6619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc288dd-9cbc-4786-afeb-5bf11125ab4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d478092a-d43a-42eb-ba2b-093db6b3444e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "745dc155-48c2-44c3-9f7c-06b1872ec575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668e162f-ef1c-450d-b9eb-f005bcfa5284",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb3d9d1-920e-404e-b71c-d3da38b28e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dba3975-3362-4be1-98da-a26f39e1d2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61acfd47-ba27-4b53-b4f5-5484e43345b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee1cf34-0cc9-4ed4-8e2d-c812add025f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7619be3-3cc3-4e18-bed3-cc165ef4e2f4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a2ff77-590a-4056-9b63-1f1014483ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243d6282-fa26-4942-8170-0676321f7e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e9513a-f05f-4e04-b266-1246914fd5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3122fae-5f06-4b16-8711-0b50dfbb7fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375e6d32-1d3b-470d-8d81-0e5a3a860fcc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fb7c7a-d90b-4e52-a191-9a7dcd204760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023bd63a-f729-424b-a428-01a6ff32181b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20941de1-7e4c-4e42-a576-e0979aab7597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8791fdb1-0267-487c-ab4b-e453ca97b0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40931c92-ebec-4690-b5f6-3d7125dcb3b3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d24e89-61d4-49ec-a188-cbc5f3933875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29cd671-b0de-418d-8b54-c40d1cbcbbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50249d58-e575-43b2-b876-a032185e96f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "494a3e82-f419-4d24-8f3e-71f94d30916c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bee42a-b376-49be-aeec-a96141a40d2f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc97ee7-dc5b-4238-acd7-97c76a506b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbb2b7c-cf4a-45d9-bd6c-0bb3fe72fddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ff8c9c-ccdd-4dfc-a818-fa81887f7ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9a4bda-cd2f-4cb5-b465-56307361d819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff52f5e1-fd4a-4e7a-b589-0f81e3bfa507",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be02a2be-6ab9-463c-a268-e502bee7cc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ace6711-6944-4d15-9c20-139f464a5dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96eee0db-1dc7-404b-8b86-f9efb7d49243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3302675d-447b-42d7-8d63-bd2a6ed76c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6fcf8e-1f81-40ba-9349-781ac26a999c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e9e453-0a9f-4071-aeca-9864ba0ad1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd62f25-96c9-4484-b405-342874af106d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c21662-5d3c-4b3a-967e-604eacf76aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9591299d-a644-4030-b192-c215650acca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f8d225-b99b-4b06-80b7-9fe4301f6d0a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086b322b-ae06-4818-b435-5184bb7b0fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ba903a-cce9-498e-a37e-2812690684ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a209b90-e88a-4db6-929e-1a44b8e3c2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07761709-5cc3-4736-a1ed-299dc2d60652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44cb8b4-0621-46ee-96f5-d9b310899ecf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259c5a1b-7196-414b-9cdc-746ef5c22bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f427125d-3b1f-4633-a15d-b70e583140b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d99cd65-c279-4e64-accb-a0ee097b9b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7f83ac-5f53-4e36-bf43-d9fdf160c1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e124669a-5f25-4552-8475-dad6a61fdb73",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb496bf0-f07d-4fa6-bc64-2f7cdd0b8218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28dc2c1b-0c40-4da7-b153-d23e3a1f860e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb42fef-30d4-48e4-8a5e-5b02e6932f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6beda026-ef76-47bc-bf73-242e56de5bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c829103-f8b3-4142-9cb6-df896332cc31",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e1394e-70a9-4ada-95f1-b9fb042d91c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162a9413-af58-4b02-811d-892ea94309d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad02c485-a0f0-4c11-a13d-12141e8f16ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3802b200-2e24-458e-b197-a73dcf62f812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196462d0-58ca-4ccd-bee3-e6b487b816c7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d490b2-4e93-40d6-8c98-7ef032e78037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1a83cd-1734-46b0-a550-4561b4e8a5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b12615-ad7d-4e52-878a-2d30cfebbfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e1a741-8e15-4e29-a820-2e1c60883042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c5a485-1c31-4358-b074-439aa1892bee",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466be1bf-1d3d-4d67-87d5-f317e82dd905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16e1842-a4ea-4de3-98fe-20e0a4a572c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf4861f-4728-4879-8674-c0343a03bc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0bab6e-d9c6-47a6-b7a9-68d8a4a88921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220b8f36-6f54-4b4f-a169-0ca2cea56fbf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c686b3-fede-4f54-8b6d-94630a7ffa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbeca1ab-1281-469f-b925-b67dd84265d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6dfcc1-6910-47c0-a909-9dc4c2aa6e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8609ea-f0de-452f-8ed2-7356c9d9fac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e451eb57-1444-4c2d-ad8e-779d666e7b59",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1781a79-858a-48e6-91dc-e7f9dd698dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325f7421-2444-4ca1-98e5-f5b0ce8bd9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29e0a36-0cf4-408c-b47e-6cab223905a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "814ac182-a0c6-4197-8ff8-a1445a23d163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e11fb9-4f53-4644-9f20-6a1224d31309",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae6dce3-c229-4032-88b6-6ff9ff058474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48099ee7-9ca4-4b4b-a917-f41c91001c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9d9912-c338-4620-a325-303275edbd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18128b1-82c4-46db-ab8f-9de15250954a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb3744b-f261-42cb-a212-deb9e524cad9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbb5361-05da-4de3-9c28-3d148c8abe01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2be761-e964-44a7-9f08-6e41c5487f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a775fe19-662c-4b97-a028-bf0c0dfc697d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6146bf93-57db-42e0-8982-2f0d7f4da956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a8b811-6f50-44d5-86f6-7e16c040c765",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3901ce-0b89-4bc7-aea4-ca5b77a3f6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81667884-798f-4b71-a873-01c706367da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c8bb9-360f-48f7-8b36-05492e264af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b652adc-fa0e-4241-bf4b-21a4a30e2c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cff4598-882d-4f20-aea6-5968124bee9c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5235fa29-2701-44a4-9b1f-f9c02424dbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf3559a-0311-429e-bf84-3bc1b6ed3f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40511208-f96f-401c-8910-094f98de4fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac11f26c-636a-4fc9-a75c-227e4aafe4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512a04e7-8d40-4036-843b-3b935d8f59e4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9128dd-7e3f-448d-a9eb-b9bb560b71c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5653ec0b-df7d-4808-ae18-0d2bb72acf89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9245954-e477-4b7e-a9db-6ea38638d4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6112a8-c723-4d70-adbb-d3f88d4d6a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586fe6fe-70db-44ae-9101-4ef0a9c0e789",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6233e70e-1429-4c80-aefc-7b8ac70e72f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17f1e9d-9290-4cb6-9744-1b18d851411e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9566b7-c5b1-41ea-84f0-df598d3f1b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "53ddb416-6a62-47ba-9508-692725eb75fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66aa1f01-336f-4ced-b6aa-a8e9ef0e6389",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c124cd43-75cc-4e67-a5a7-429e3250b402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5219da42-780e-4b6f-aec7-64c0dd50d6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c44e436-c365-4f4f-9cda-5b14f1850cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d308d50a-2585-4dd8-8fbe-eabbc7978ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6559977f-5b90-44d9-8e8d-0874789c94ac",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b1c8f9-4c21-4f94-a8d7-2bacda17cc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95d7377-dbd6-418c-bbf3-3f8e439883b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73339f70-227b-45a9-bcb8-0c400f8daf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6a0af6-c05d-4baa-bb6c-36e535bb5efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff27708-f74c-4349-8255-5e4322be0fb3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820a4acd-f874-4d90-b736-1da52f6f3470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2dab4362-43c2-46fc-aeae-09c69e05ae90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0b47d4-a932-447a-8ccf-fdb331f55685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "daa489f2-5010-4b45-8da1-23b9e7cce331"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea99e3e6-f1b5-45b5-b5de-e09b31e3cdd7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8a11abd-a164-45b3-8e77-a2b7392c6723",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c56551d-7524-4905-b8a8-1396efbf6500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f490f39c-e6f0-4093-a024-ab43984992fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85f53b2-5e98-4714-9616-eb8258e70243",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24c10ec0-7928-4d66-bc22-78ae69ecfef7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a53e752-5454-43e7-a17e-0154e68e69dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd045a61-e9f2-4b8a-970e-fd755d2a1e24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17e9f37a-be5b-4dfc-aeef-fcbc73a8fdb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58f54c50-70f8-4b05-8354-d395eaebdcca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3420d2fb-8ccd-4149-a2b9-f451a7c640a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60cfabe1-4aea-4b5c-a8de-f332427edd88"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c7f5da3-e8c1-44d3-bb9a-5bd5b1c1a5ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f27581fc-b182-4388-ad58-ae9db1e54300"
                }
              }
            ]
          },
          {
            "id": "63ff4b90-86c9-432b-bdb4-3fe2d661aea2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "702944da-4e72-4659-a703-62db1c452bca",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9cc2f06a-1c5c-46bb-a0bd-13e7665da8fe",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea2566a-73c8-46c9-9007-c3dd42aeb31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d910b977-7173-48ee-b12c-9d5be3d65cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0952ff8f-2618-4ec1-815d-4e3218673b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573ee204-95d4-43ac-b37b-95fd553991ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "226be415-8a11-43b1-8a3e-4e52c070b53e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3617fb3-e177-460c-80a8-d22050deb9c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57842d14-03f5-4a1f-ba8b-6a09b7e36b0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3293a82f-1db5-40a8-908c-b370f68f1cb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41d62407-da9f-4898-b58f-c37f73d19a85"
                    }
                  }
                ]
              },
              {
                "id": "876f1898-6ceb-4b11-ab08-471be485d220",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f74a2690-1a84-424e-afe5-2d863cf2bdc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b098f1c-92ea-4917-a32c-31db078e8662"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d6e4c99-afbc-4de4-bab3-526e278659e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8bc40721-2129-463c-8025-17f8bf7ccc93"
                    }
                  }
                ]
              },
              {
                "id": "65262ccd-6dc4-4cd3-97df-a8e9b746ad63",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a12f4bd-84d8-4169-b734-ffba8fb8497e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ab913c1-0dff-48eb-b254-1b4741bc8109"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e263bd8-37ea-44ab-8264-a9810efbd737",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e8787ca-1716-4e41-a923-190b21135d57"
                    }
                  }
                ]
              },
              {
                "id": "130eb55d-6b1e-4785-b10e-53a0e61ed53d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66bbe8ce-7c74-417b-8cd8-240d5a3140fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "091520f5-232c-4ec3-832f-649bd790cf48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b781ca7-641b-4f2f-ab8b-7cf984f51a3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "99af30be-8adc-4af9-9700-37bb50217377"
                    }
                  }
                ]
              },
              {
                "id": "e2a50cd5-b790-4e0d-b270-d0e4b963d51e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f6f9314-40f0-4ca6-b430-0e38875cbe49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1d2d688-6156-4e06-8315-76a0190edf27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a6effdb-ce75-4182-ad96-444533daa248",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3b03b649-9719-46a2-8cf2-6b1fdd0f00e8"
                    }
                  }
                ]
              },
              {
                "id": "d8cc118d-0dba-4f1b-a24a-e3a9b3a35b92",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34bfad9a-f2e6-4e91-b079-be3fdb3c1a29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "318f7c61-d267-4b0c-a0cb-cb77c9064551"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa4617c9-0964-49f6-8e96-fb39cc7ac2aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "28db31d8-819e-4a40-84e6-515c341352ec"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12c0d366-c794-4cab-8371-e658f3e82f36",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2db1d4cc-f57d-4420-aba5-3ee392e74cd5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6a9e1a46-24fd-4a28-bf68-9ea6f9795818",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96173a37-6de8-4bf7-b7ed-8f33f6687e82"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb9f79d2-c77d-49e9-814d-c208f5080999",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ab0e52c8-a49f-4b59-96f2-78bccbece21e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f0fd5a6-f496-4e45-9cfb-0ef4c1e60ced",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4746e5e-f5d4-4b31-ac26-ca5d50570e01"
            }
          }
        ]
      },
      {
        "id": "fd0b0463-44e7-4150-a13c-4e686763808f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6eba2d20-528e-4957-9252-f7fd22d3ff2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "138c5964-f979-42f3-a3d5-41304ccb98f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c49235ba-82b3-49ea-a05c-a733a6584a59",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992e8e3f-f9f7-4b51-99ea-cfc7f309660c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc4aad9-02e6-4723-a9c3-a9adb3f733a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bcd744-ece9-4262-be49-34103174e0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe6aa63-670d-447d-86e8-1300cb08c77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01aafe19-dba6-46ec-83af-512343cf90e2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4131c2e-9f10-4eee-8aa3-b278e6265f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf03f2b-acf0-4a17-b91c-f0419caedbc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d129db-8cb5-4617-9997-3e873f490f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb856ccd-2a17-400d-a6fe-49b4600ba698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8380092-6d17-42d3-a87b-d3f478bcb91a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7917ca-c0a9-4762-8ff8-1491f00c8ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343fe8e0-813c-497b-98e7-d67696c48267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12644b91-b3a7-4b9f-af30-e0945cce197f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aca44cd-b96b-4aa6-9bc7-842b0c5643cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d830ecaf-658b-44b5-88b1-b6497850318d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdb6e4c-172d-43b5-905a-5e95813576e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058d1a74-f48e-4ddb-8d04-c01b7cbaca38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e916fe-f6c3-4392-8e3d-5c380e9668f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1bbf81-ff90-45f5-9e84-82d0d128123b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e3821e-5d3a-4c19-a4df-a7741db41222",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5efe4e-13cf-4569-8082-bbaee72dbaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1e61bf-ac1c-4a11-8afa-ae87eaf6c20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46213872-5f5b-4939-b38f-c808868882ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "895a914a-a1a0-448a-a188-bc585ea1bbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933e1df6-ccb4-40fb-a8b8-54298591c451",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67088b2-003f-4565-8e72-f005adde3a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd36a99-f358-45aa-9e92-f16ae284ad08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4feddf-99c5-4a78-86e0-e1a5f50562f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "291c93b4-82af-4dc5-9e71-cb09a85d66d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bb8bde-02ed-48f6-86ba-1278b2771f03",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4e909b-c037-4c7f-94c8-7f67ae5fb66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866b17b4-acd0-4366-aa7f-411630b7da13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1357bb74-f276-409b-96a6-fad9e9d3cce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e29baf61-662a-4607-b858-ba7472bb745d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c4d9d2-2c52-40f4-b2ea-cfb90cd8e685",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7fc73b-442f-4568-895b-88a44c8c8ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b936b1d6-253a-4eec-8ccd-c66b5fbbaa50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3969fd-e8dc-4986-95ff-63083bf861c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10b66cc6-7855-43dd-a6c2-f227229f9c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0727de-b04c-4bba-89b1-ef4145bc3c6e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1131410b-9f2d-4f75-a96c-2247179c25d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b59686-918c-49f3-a1f1-e019f4305b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e0101c-de7d-41a6-bb3d-1ab6a570eb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfee88ce-628a-40ab-acb3-545d6715ee74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9909c0-02d0-4306-828e-3a5456308750",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afded7a-aefe-4da1-8717-c41df834bcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9b9331-35b6-4ba3-bc24-9cbe3953888d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc07c1b-c162-4740-bc3b-d9c38c81374f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e62d0a-7d0c-426b-9b60-f9cafae39d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06ad97a-85ce-4bba-996e-b412cbe03b41",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63a5c38-5db8-434a-916a-897b1ebe76ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba57c885-6fa8-4e4a-9b6e-115d0983eff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f442ddb9-8149-4856-82fa-612c5acb45fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a93c8ab0-e68e-45c2-a290-fdba90bd1e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d22b327-bdf6-4ba7-899b-8e332026e7db",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052c65ff-ef06-45da-b836-f2ffb0dd8f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25efcc63-b083-4161-be50-90b0ad8b552d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc260722-fb81-42b9-84bc-2f114bc96939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b43def7f-2e60-44cb-9841-6266b15f7301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3859f10-dee7-409f-9d84-b3e7e3014f52",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fcd86c-7cc7-4d17-8ad8-8c57a2482379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65123a7-5c0d-44ef-bd70-bdd3f90bfe8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d0c86e-1360-4672-b37a-eb0cb2b83831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70f972eb-0dae-4de0-9056-a127ecf0d120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eba8b9a-b000-46ee-bc14-830072b83764",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781256eb-3383-41ec-b431-f777e45f46e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af002aa-42bb-42eb-866a-f2c74a786083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7076aaf-d26b-4919-857c-695e06cb6a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b750e239-c5d9-49dd-abac-a6cf47af2cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b71ba6-1097-4991-a002-cf1b251914ea",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857e9e1e-5ffa-4c5f-87df-7f9e407dbd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48472ca4-7448-437d-adac-effa43887d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24cc0d8-3c15-45da-917c-03bf32a5787c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "db44afbd-f757-4f6a-a39b-7f492a7bafb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d93974f-f85a-4b96-b8f8-28ce9027fbac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b1b215-80d4-41f7-a506-4516cea066b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01d56ab-5adf-4a69-ad38-7527f9b81acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5499d0-7eef-45ea-bb81-54292ae27635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1c180f-de2e-444f-811f-48f9f1899048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98b8ebb-c3a1-4757-96d0-ed643a229c0d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e41774-d147-4e05-a86a-2afbc873ab02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e23434-be12-4fe8-90a0-8e7510d5407b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267cc7ee-cc2b-41ba-a50b-e478440689a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b403614-599e-4b5c-937d-0ea3609a4a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07ecae0-7674-4966-bf0f-3637c2229021",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e66e12-8521-42ab-a5e9-b443b4f42cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892dcd5c-e11b-4ce1-bcfc-bc11a316f6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a52e609-a854-4e08-856a-d6b1a7023002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "437d0df4-47fd-42f1-9269-18e59303ab2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3421c20-5ffd-42a5-ba65-0e8ad6560405",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760d8e76-822b-4eca-bce8-9e085ea7c396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eef2d17-c1d6-4e6b-bacb-91d6c2a443ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1682a2e5-6e37-4bd4-bea3-d1439254eaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c52dbd3-5f58-4514-8c5e-2ee0836754a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa35f928-2c23-47ed-abfe-17edba44e0d7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081d698d-78ff-4607-8f28-e17de3d5ea7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614183f7-ed59-499f-9121-002932e748d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d188031b-e7df-43e7-bab9-b905ae6a1ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18163e68-064e-4594-89b3-0a067eba83f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99ab83b-2bb6-40d9-b1fe-221b4d388998",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450b8133-0612-4114-8aee-5371bf177e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744f731b-944b-432d-8151-7ba5fac004eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30175b5-840c-449a-9f42-161319317a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7a0847-5fe0-4b48-a35c-af4b0de6ebba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4048334e-c392-4604-8b33-194d63df35b2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9708cb18-57eb-4f8d-acf2-ad5a91c1c71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0903cc-8e96-4e5b-bc4a-fd8ba67b601e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ccbf12-9af7-49be-a586-b91107f329d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbbbb10-9124-4339-aebe-743bb9697086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af1ee58-651a-42fd-be7c-16de3851b724",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379357be-c088-4e41-b47f-bdff29904300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83a7dec-60a8-4390-a1d9-e0156b1aa4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedec62b-07be-4e8e-bc4a-3ca0519323ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5f4cfb-d276-4822-81d7-f50929270a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f81edad-24df-46c4-9ecd-cbc78232a318",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf404f9-1e19-4d4a-ba6a-2ee93d3cc157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb1196f-52fa-489b-b681-86e74bd58b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2e4bf3-6218-4bc2-bf31-69fd3397b5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e1e8e9-0d57-470f-b5f7-25205f4bb72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa425bb-d439-410e-a4f5-af7f80ddb851",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b717c5f-0430-46ce-8146-0eadc4d9ad91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732b97ef-6dab-4bdb-ad63-4a1bcd5b48a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c4ac61-2862-4a26-b1c2-72cce124800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec9a402-8d60-4f44-bf1f-d71721492e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bf078c-c236-4507-8dda-3ba683f2947d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1936841f-3672-4e1c-89a1-d82adeccb70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9698fe83-6753-458b-9819-fa7c41fca71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d64800-d4d4-4d64-bc41-597083faf27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1f8639-6586-46d7-8f8a-fdd81b485b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a42eb7-b9f3-492b-97da-e0585ce9898b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dec43e-2975-4848-a1d5-6856b565745d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465c7c1b-b2ed-4432-bec7-47b48c2f0aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280da56f-aa98-4b8a-bd24-af0a8e9506ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5ddc2b-159d-44ee-94da-daf07ac94d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645f86b2-5a81-40c3-86a5-ab58d270c768",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01355efb-70d5-474e-a826-23646b041f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b914a210-b183-4438-a89b-711914919100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5143f281-c89c-4256-b3e5-43eabd88ca53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b742e651-91ef-4f2a-be5c-cbd7bdb83a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79f26cc-cde0-4342-b0be-b195402b5575",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd75e6f-dd63-4467-a3d9-b7de6abe2a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d699ca-277b-4660-be5d-4fa13186a5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b862a85-2b97-48bc-9a61-c1ef34740190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a32c68f-2343-475d-b6bc-3db499b8bd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b90b2a-baa5-42bd-943a-1c73759ad213",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f72004-e1b8-41bf-9a08-17a2c4a97bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37da4709-58cd-48d5-abef-ee0a9121c937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080ba40a-752a-417b-99a1-2e475b1bdcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20eb9dce-34e1-4be5-a918-5b52189178ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aae98c6-1160-4028-9aef-81f7d66bd35e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4863ab1-3bb2-4936-87c1-281b04e68703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d074cda0-65ec-47ff-b1a8-5252bb824d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda8c1d6-5c08-4311-a522-954e764b378f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8aaf2d-8e42-4076-bb5c-2f98dfc9ff2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b378eee-c398-4f55-ad8f-77413a725871",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4544c0ed-a5c0-4fa3-9d98-064ccdc2096c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6054548-1f66-4fce-9127-fd9ad55afbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4bef66-8d66-4c7e-99f1-26858497a6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a094d013-c2f7-4085-bde8-32e8b881fbc9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "65d8891a-2169-4cbb-875a-187e4afaed68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fc86b20-14d7-4fd0-987b-43ff6ffc1143",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f78bbfa-f8c0-47e9-9133-40bced2a02f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "821cd2e9-579e-495c-9e41-d197cd89194a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043668ac-99d7-4c93-92f5-8323d4b2a059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f23256e-977a-4277-bd4a-502fb439513c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c3b4840-210d-4783-accc-f04b535cb63b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c28ecb97-bfc1-4ac3-b861-f57560a2b6c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66a58ef3-e67c-40df-bd5f-b8cec32bd821",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b687df77-d1bf-41b3-b410-3051c7b4e8db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b386d321-667b-40ef-8e0d-1e24edecfab0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c02dd98-39cc-4dea-bcf7-f87347d8391a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4f70ed2-27a0-4fcf-9cb9-95bf8c334100",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8bc02a6-5f7c-4d53-ad74-9cd8aef9d29c"
            }
          }
        ]
      },
      {
        "id": "35a4983b-f0db-4430-a450-e41382640d3b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d7068fb0-1e4d-48ea-aff3-368a0f068810",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b18b394-2192-43c3-8418-97b576cccb13",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a418c0d6-d19d-4052-95a2-18f736d83f12",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc8bdd1-bae9-4024-a96c-a3d64295b0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40007803-ce62-493a-b30d-b3e4650e802a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2e9e5b-bcea-4485-85a7-bcebce3820cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bed4a5-fac5-401c-b9f0-0e7ca28426ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabe42a3-c5fd-4c77-ae6b-1c2ba6f59ad0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab7376e-b908-43ab-bab2-eb7dc3e99d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f4ea8e-8692-482c-aa2a-84925727f45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c44beb4-288e-4811-ae4e-165bf2cc6455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "289113d6-9271-4010-82ea-f2e0b235c3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4afe2d-1f85-4bc9-bca5-7a9b4141bf2b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abed49d3-1923-4841-a611-606f55925e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c2b164-819f-4c51-b535-3d2e701856d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc285cd7-f4e0-4734-9487-9f2c93a3e014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e93a35-257d-45f1-92b4-cee7609c5886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bebbbab-6f12-435f-911d-07420daa5fea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2127d3-1fc4-4881-b995-7bcf57018f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a36d85-ecd2-4f51-ab5e-e4dbfd857534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21073dd-0734-44ec-a2bb-9eac5d36082d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd37ce16-d03c-4bdd-be1e-f324d8a82016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59cfaed-b0d7-4bb4-95ae-016e9e3a97c5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a56dc0-d896-4de5-8c84-6b775d551138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a55f0cf-cbe9-483f-8dbe-8de8e69ade82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555a33eb-987e-4168-a518-8b3372094579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a94d3c-6c5f-40d2-9eb1-63945d35755e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43dee6e-6f73-4448-ba6a-02a45cdfb384",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b16d6c-3ad5-4132-b8a2-c5a7cd61cc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2eca3a-352b-486f-9bf6-ee39f7a667f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dfc4fa-66ce-4f47-b052-567a03197fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5998db2e-2e56-4447-ae9a-6f82b98811a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f272baef-cb16-43a6-9777-f2e71a160b6c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba33c4cc-3036-47ee-99f3-8f00d21e7d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea32045c-7b10-4b18-833f-5a4ad057bbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6994e86-5543-4b91-b9f3-39ab0ff1a00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0427222a-cda0-4770-94c7-98a5afe52773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43479372-cfa9-4afb-b36b-34526ed43849",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fcbf4b-5742-4d3c-8c33-da0b397de3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a79639-b784-4de0-abc2-48f5243a07a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251abeb7-8ab6-4410-a2ca-88d7371b8b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7622954f-310e-4a21-a1fd-a21b51228ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88eed55-b57d-46de-8dff-43390f51966b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c17157b-42c3-466a-b17e-b137bb4b551c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db03f56-3c31-4c1a-bcaa-3ca04f52edcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c7bf64-8ec9-43cb-896c-0c87c142da68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9369ef1-5c36-4cd3-a2ae-aa580f5a325d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312b6ace-626d-41fb-8ce8-286504b86325",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07ba87a-8b81-451e-89c9-0cc7162eecf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7d454d-ea8b-4bc8-87dd-4d1259ee7a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c021c7b9-81ea-4c16-b417-5e0eec0abbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db579e9b-8703-4613-a75d-abb6764b3071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12339c1-00f7-47e1-bce7-6c0e8cf57c0b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ede6566-1725-4786-92e2-53a4be2ec03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59d8bf7-77bd-420d-aebe-61b2f28b513e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bf28a7-c59b-4e69-9639-71e0111946f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7836f9e8-a2c2-4c9f-a90e-928e84c33471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710d698f-08d6-4fff-a3ad-e3285fcc382f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a9642a-0f7b-419e-9fce-9594495645f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d69c738-3551-4cde-ade5-c2bbb8c8737e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fcd182-cb59-48da-a447-4ca99662c8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01c4f671-87fa-4580-9cf1-0bbc2229c809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c826c9-3d5a-41b0-9809-0b4dea257614",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3335fe13-34d3-44b0-94ad-36cb5d5999d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a8fdb1-9a21-4619-9a33-3acb03340003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e79f57-65dc-43eb-af54-c7fbb4ab85d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de678c75-7a59-4315-bc25-65bc69cb29ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ac475f-bc56-41a5-905c-f87b4fbd4852",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46767570-6ccd-42ea-8c8a-0e144d4d2667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e467bfa-6dac-46f8-8416-de22172e4f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a2fb8a-1387-4b39-95c7-e7e5a8d58e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6573de6-a88b-4b6d-b184-7db77ef124b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6981d4e6-7866-4648-b07c-66c4e7f9205d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde5dce2-7214-4fb6-9770-3826e24cc99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18305533-46cd-4180-8eb9-6b46128c1738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ab4be3-a734-4d72-828a-e31396458005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff45a0e-4d72-4b9b-8413-ba81ace05a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c23bbd-ddbe-4c46-9a46-7bfb0d79c23e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf132b5f-feb2-4014-ae18-133cc29d5d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ad81d0-8a11-49fc-876e-9f1327b6e59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43999fe0-e412-4056-829b-cd5286a55953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bea21fa9-3118-4b30-a81b-f33f8971d56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df74ba69-0512-4abc-8144-6779c27f3283",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d21af8-0d49-450f-a583-28a429905fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd732078-f972-4f23-a92e-a5c7e6beecbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b186f1c-84ba-46fc-ae94-2bf9ff4abc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "59281289-166a-4f0a-a6ba-768a2a8c9e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56368ae6-e25c-417e-8af2-804c15e383ad",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e199ba-958b-48b2-908a-eb318050d12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0926cc9b-5515-4bd3-a314-8d51253caf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f00b5a-c947-44e2-adeb-66d1a0e48b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83cbbdcd-327f-4ab6-817f-732151a98c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f6b29b-aade-4017-a656-b41936b364ca",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e53b4e-e3b4-4182-b4a2-3fdabdfbff44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5bfe0a-66fd-413a-b594-40fb5d6c6ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51f2f38-67e3-4e6f-a304-7fb71e6c0b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b282002-138e-4b11-ba9f-679d8df95127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badd1669-536f-4a0e-be2c-60e7476c24e5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d46346-2f90-4c78-aab3-84b3f7b66850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e80355b-70c1-4dc2-9686-ce85be409050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534b9366-87df-4ca6-bb05-4a8920c79f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "019d22c0-e037-44d9-8bb9-7c0640b2b1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbb75ad-8637-4bf4-9d60-ef903e53147b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378c3f87-585e-4b10-a777-ff2c3b5cec14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db37f8ac-cb0b-4017-bf83-4d520724f115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a4e9bc-0d78-4bec-b6ce-ef17438e9c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "503cb040-9e63-43b1-a5a1-db67d40bc441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2fbef0-2a58-45e8-a2bc-4b8689df27b3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a615865-6bac-4c21-ac2a-278de46e6f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e31362-efae-4511-9636-86154dd77644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7a5e74-48d8-4f33-b98b-d73555ce9d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebead65-80c5-4040-8188-c89b729d3b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d72487d-c97c-4bf6-ad3c-780cb2cd4ab1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4637e0cb-8865-4096-931c-6d5436649466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad0675c-30d7-48d0-b057-4e3a1c1c5fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4170b89d-f906-4bdf-901e-86d1558512a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5faf38bd-1cd4-47b4-8b1d-d8ed8ee8b6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a616c1-8979-4f9b-a107-610d9bec69f5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46262237-4574-4fc4-a205-929cae2691dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0145d0-e67c-4327-a213-3ebc7e41daba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a3f4ec-2498-4ce7-8530-0615bf1d896b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef55d93-1526-46ee-a274-075b17ec6352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58c9e6e-ed5d-4c2d-9c6f-a11529d9bb68",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511f0c90-eae0-4330-af39-ec1aac97cf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b70f99-85b2-474e-bd7f-0f8db73965a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162565c2-7193-4b40-8fec-2aa7620ccb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5360ca3-60d8-4763-a179-9883d6776e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cb53d5-f833-4c53-9e79-16afbbfbb3c3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed7c521-2bb6-42eb-886e-7700bf2711cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9768d3f-a454-4999-8c1e-4aaf95727fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff70fd0-0809-4cdd-ac53-ba1248d47783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d825d5-c1f2-4719-af13-d3ab6f698004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61db0be4-10af-47c4-8a9d-67fda14de36b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a274b413-03bc-435d-bc23-ddc0c698fb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777563d6-0baf-418e-97b7-82c13e8ad0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7e2837-2330-4e5f-9e35-0a1c0326b89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bbb990-390b-475d-a075-35c877f0e8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d770ed31-047f-4360-8a74-da15ceb79c95",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cfc224-8288-40a0-a6d9-7c689d271531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcb4a2d-73ec-44e7-a2ba-df3f18e51759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a5e7af-f0ab-4b3a-b831-7e688a430995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e68918-e1de-4987-999c-41e3ae19087c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f9706d-6739-45bc-865e-017c3351ccdd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efdd44f-ab9d-427a-b8fd-3a69311b94c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4e37ac-0fd4-4ad7-afe7-f501f137acb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82129c0-c0aa-4f6d-a3a2-bd008d751547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d23ae1b-3033-4fb7-99e3-c6f3d2291d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9243d9-6267-4b14-9de5-3cc2d6060d8a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c47a6f2-b273-4db8-9cfd-304a2ba3aff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c95da9-7b76-43aa-b3b9-89c2b4c86e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc092ad6-8264-4f56-ac32-df92f8084d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f54f9c50-63d4-44ce-b583-a053651accf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40dc72b-50a0-4309-9487-39d9408e9109",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766dd3ad-5300-4ec9-a65a-589c2afd02a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2ff171-82cd-4328-a9d2-8c43bc26fc95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1863eb57-64f5-4818-b0aa-ac244dc0a002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ffdd96-67c4-42a1-9881-5ace028e414e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa57c9c1-2409-4739-92c6-4df23f53b0ca",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c268fcc-c448-4514-8d16-09dcff9b4785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd17719f-6a83-4e76-bec1-460984e87fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d799100-a4c2-4353-8cfe-f396f14cc8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53a8c396-40b0-4def-bd8e-447ef00c427c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9141c88a-a019-4836-b323-9d57f9b946c6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480f8dc8-512f-4071-a9da-9d3449729a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a5d41f-d0ec-49ec-bcdc-4b06b349c39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd2c6cc-9563-4ed1-a966-84057dbcd98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e78208d8-51a0-4d3b-add9-028e99b58252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f7700f-6240-45b9-bc4f-cbf9aba1f65d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb94e51-d0cf-465b-91a9-8e1c14fc8cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56053114-a1f9-4b38-bafd-365509279234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aecb723-9b49-4651-9a36-748b6cab2b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e057d04d-937d-4f78-9f23-de39ab2c9d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac2aee2-47e8-49aa-8706-a3c4b7eede28",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed29960-16fb-4a75-813d-6a226d1cc48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4f889c-5912-4734-81cf-33455542402d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bbb868-b09e-475f-91da-5cb085f98a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e859bd-3e5d-4638-bca7-dbdba3a1b959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a9938f-f73c-49a3-8bcd-9dd287b916f5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40913260-22fc-4671-a1d5-5993277142bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4d45c0-045e-40cb-b6c0-c9bc6ce95bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afae08b9-31ac-46b9-a2c5-79c9f38e37ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45dd9eb0-e43f-462c-b3dd-1a1d5e44fb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8e1f4b-1087-4d22-b797-ad92fdb3dbb6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67c715f-9c1d-4659-a092-34426c1a147d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6e9925-cc74-4fa6-8aa3-5d759ba322fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c91ae8-c073-483a-ac0c-4e25c75926f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "633578e8-969f-4457-a188-5e8c18944cb6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1208a2c1-750c-4309-95cb-86d664f51561",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80ad6c06-2042-4dc7-ba71-7ecc663a72b4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25196486-2c86-43ae-8594-5a3c61340187",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8afe4cd5-bb0b-4c61-b1df-292faf1e864c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e44431b-b125-4368-affc-6757ccc20443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d20cdce5-8878-4716-90f1-1c779b6686e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5661037-85c6-4e5c-8adf-ba3afbb038e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52f64bcd-9151-45a4-9bed-20a8992a4e7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5525457a-becd-49ef-a4fc-721306c8f375",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d4c31df-5c0e-4339-b26d-77cce0f57f91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13a5b465-fe84-46b3-a8b0-c36681c87e32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c3e4bf7-f210-4733-b204-0f497d891865"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44424cf5-4e78-4c65-86b7-34252c6f4581",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62f9d8de-2209-400e-9888-bd229d573a28"
            }
          }
        ]
      },
      {
        "id": "dd8ac6ec-77ab-4649-961d-ddb848e2feb9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "549707c5-1596-41eb-9a28-7306c3c59eb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d94cbf8d-318b-4760-9fd3-1860ce0b36db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6f43430-5ab9-457c-81b6-3e2b13f5553e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a6fe93-a6ea-42b4-85d9-2c8a61c4713e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03af64a9-625b-46c7-a745-df59fdf7cbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a394f2-5639-4307-a92b-594b39e80bcd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ad338a-bb6f-4b1e-b58e-331f588fa6cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b794781a-25e5-48d5-bf30-4c0867a027ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbe632c-6c3c-4ad7-a919-313026e659e8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92250897-225d-4c4b-9cfa-08ed6f90162b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5658527-ab24-476c-847a-4d2fea25bb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df74c4bd-e8aa-463e-bb60-271f8a0b5c3a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4326b4bc-c3c0-4ed1-a8b8-1e6a92bf9380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c09bcab-a5fd-4046-a671-ddffc102d18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4152485f-0d6b-4945-bf75-f90ec9065836",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8ddc97-b48c-49be-ab45-5f8a346c4dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bf1e69-813a-47b2-906a-fd459340e5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87de2664-888d-46d5-8167-51a84dc2b75c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ab9ce3-ec18-4323-89ec-5ce38b35bf9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceb250f-d902-43e1-bb55-ee7fd8020280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbeb6cf-9e80-4d0c-89e9-61d36d1bf442",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b5a610-109a-4fe9-98fb-9f2d4a6811a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3676ab-8500-4d67-901b-b20bfe3ce21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1bbafd-ce60-4ab5-8a32-728a4ecf3f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5212896e-a2a0-45fe-940d-f83d54aa4d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fed0cc-1140-4e0d-bf24-ac9fd1fbc7bc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6032febb-2903-414f-86de-00fedb857a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0378ef3d-987f-42ce-b71f-869109eb5757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e325d8-12fe-420c-8382-e43e761d5216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabade36-2530-4b88-a687-53c69943846b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba9c6b6-f204-4b5b-9812-9064be86f95b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196559d0-36e7-4fa7-93d8-4c6bc4b5e3e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b95b59a8-9245-4b7b-99a3-9029bdec6aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb23713-f509-49ff-a41f-3f06b9fe4bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6bdfb6-38f3-4779-ae47-31ad13e4637e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724d3cbc-8e22-4e3f-bb05-88db54173322",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de313010-e9d6-4ddc-8876-a8921ed36038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df0105d-47cc-4a2b-b76f-b6346de38afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503208af-235f-4b69-b0c9-b57ecdd90170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef02d66-a4c5-4f6c-97d9-d72dd49200f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f093f6-c588-456b-8b82-63ca42d9776e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5122541a-30db-4510-a268-f1cd3e49a4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167e63dc-864a-49ca-b8ed-a815c028c2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1eff346-3896-46ef-91d0-c8b7e18a6f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d526d9-0800-480e-9465-121878b16da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b697a976-eca7-4120-83d8-c194c040b552",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e383a07f-fe7a-41f5-ab97-c7b9a41a59e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67bbeaa-47a3-456a-99df-c64b2ead3a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c025d35e-6cd0-4d80-a54a-203e008bd346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fe3d7d-e52d-44a1-be4e-3db700127e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee35258-136a-4595-93cf-3236d3cafe9e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba2898e-369e-409d-a16d-6897e36f0687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6ebcdc-4a3a-400a-9ce1-3a468cbea4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6914f997-9ae6-4d8b-a835-c148dbb5afe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7458e03d-0ef7-41fe-b3fe-a7eaba6cafd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ca5e45-a5cc-44af-9798-ed005ed23687",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5fb993-afcd-4d43-a478-f89731234f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f8c47c-4210-4fb6-ae54-b1666f745bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413a1669-e348-4d2e-a61d-65d8c1f0674e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6919f6cb-9b2d-4b96-95ea-b8c9c38253b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3a2da4-b278-4a96-9e6c-2634cd01c7ad",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7ab1bc-8d7b-46b5-b143-6a3bb8020005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ee3763-f0c5-4bf7-a446-96a8a213db81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa15c0f2-6a8c-4344-8a38-d01ec720e5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d2f89b-c103-4008-ac35-f6c181195798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02178a8c-44ea-452e-a35f-45e9f40ebdd7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b328fca3-aafb-4bbb-94ac-fa60d6b943e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8d0f443-6eeb-4463-98d7-af6dddd6376e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9828d696-24bb-4d75-a3e6-f0a8ea281037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03a3e38-e3e2-4488-9ca7-c1bcabbef4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5af299-a9f6-41df-b2a5-19fcdb2ba621",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1616b87d-610c-41d6-ae8e-5b6a0651ef54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70552d11-e9e4-4539-9270-52ec7f0b9ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "badfc4cb-330e-4632-960c-b2e1e67876a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab97df0-9a5d-4f18-9360-eac8df9bba41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c11791-2a07-4ac3-ad60-e990ea651ebb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a14100-74db-406c-b7c6-301c8d3fc869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2b4f63-68a9-4e0d-92e2-1558eb9739ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d41e738-99b8-4a65-8d90-0a96bfba9198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96232be5-6e09-4530-b9aa-beff85359926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5c9e4b-415d-4b88-b276-0f491c22f388",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cdacec-8480-47cf-9115-0e63eb890725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9828893-9da0-442c-928c-caab5e0d0622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05923d1-ac54-457c-afb9-111740c4d239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6c1674-139d-42e0-a38d-78dd62d39a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a2d4fa-1117-4df6-a9a2-d1677ca01999",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5a1880-9c0e-4c99-af6d-46687c456405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7a3bbe-f3e4-4556-b59b-ba8c889c7898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c33f930-ebc1-4e4c-9c09-100b7bee0fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b4b38f-eea1-4483-8726-3989e88ca422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f7b3a8-9d3c-48c1-a176-3a85c665a2b5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cc4982-ac96-4196-9192-3767d5209b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4794fe-8c77-4b0f-9b56-ce06198a41d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56d7f32-6134-45c5-b33a-577e1b1d9ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17908e21-11a5-447d-acbf-0f14159c1306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c34f28f-dd55-436d-ba50-a730a130b3b9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69372ec9-b0a0-4aa3-ac0f-392ff893b41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67e2eb8-4ab7-48db-9b58-b93e4a033304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a04a655-e818-4b34-ae5f-2ebd2f796fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b5a02c-f68e-454b-b47a-b9be4c6538d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a617bf77-2ab5-4564-987b-a8460576859b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df5ec83-27ac-4f63-b438-207a354af0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db06fbc0-41bb-4ead-af99-56ed59f05f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9e8ee4-da59-4309-9df4-a1ed4ba22c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cba7bb9-2235-41dd-8746-a8fd05df8810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c5d0d1-8eee-43c5-bc21-0f7dbb213a4e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4740347c-74c3-4fd2-951e-1bd40a30ac19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7b716b1-9c31-482a-a80a-038c363db9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b890368e-a2ac-492f-8951-95cdfeddbe09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17509274-67da-4770-a3fc-ea332bf039b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487afabd-2f1e-4685-bd7a-c4d76236ebb3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1025e6-84fc-47ed-ab93-921397d594b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82b1e80-784b-4ef3-9761-46fec2547165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6235d1f2-bb00-46b0-ac44-7aed41d843a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0ab936-95d7-4140-b82a-a94d5a58fc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d177bb4-842a-4e86-82e7-1e0b310c9fb7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564c3f47-fcdf-4733-a662-6911057fa2b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad6d564-a9d5-47f1-b2f6-a526a58d5fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a456ddcd-63a0-404d-95ad-40591548e069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb072706-2f33-48e9-a84f-ad5fd5a97187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ec673f-f258-45f7-b57f-97a6b03e7160",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549e1c48-5b1a-4100-87bd-08f9a9eface2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aeed185-354c-415e-bcd6-6468940b9835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138daae3-056c-46ee-98d9-fcc6b7f7808a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948281c0-7c73-4af6-a505-51fa49db94ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c279bc-3324-4224-88d6-5b6a5d742acb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363c0d99-d45e-4eef-9e14-46996da94cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10011cbb-6425-474a-96ee-9f9c867a9a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989f304a-d666-4651-965d-bfe2a167e4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57874f5e-99c8-45ff-bc8e-905e4539fef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82f7e1a-ec68-4d93-ba4c-01fa6b065a9e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9e7b5a-ef9c-4dd3-8ee6-fa2b29eb14a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b81b5dbc-35a1-400d-8fc6-a87d1b4deeb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2fb9c3-a8a9-4c78-af9d-36b3904635b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460a9693-6a4d-4d78-beda-772b1d850078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486b87cd-dfa3-4b93-a7a9-97acfb369ec1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7259b4-1bd0-4b0c-b478-4cd81774eac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1645c59-f7fc-4518-9f40-c9ba47e6a0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad301340-7aa3-4bab-9179-2afcfc3bc67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41981191-9e05-4fa3-8ba1-21e8b291d886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314c1b31-f4f4-429e-9bc3-b301774695ce",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149ee0f6-71bf-43bf-8a71-7394d133b92f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15dda3a2-4ef0-4746-934b-c73290c6642a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b97240-96d4-4ba4-8260-e2c5b14510a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707ea019-b77d-41d1-8716-c57312cd89a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ffbae5-fed9-4a3e-895a-cef229d21cea",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff55fad2-c29f-4817-a6ed-433fd8e3f568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9711efee-46de-43a2-9aab-6eb4afddf75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be94a7d-924d-4ecc-91af-cf90edcd10da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71505467-53ec-471b-bc3e-9ae3d54bbc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226e0f99-daf1-427e-9ba0-d344705a442d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039b313f-84ba-4097-9126-c202185c7080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90826680-a5ed-487d-8e33-8b3615e989d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad82f906-7df3-4798-bba0-03edc2713dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aea4826-45cd-4c9c-93da-f1bbf501db6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e19e5f-f185-44bc-9d17-e94d27ed8269",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3ebcc1-2ff0-4828-8e2c-a07da152da52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c0929b6-9a5b-4882-a167-aa36e309ffb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8a4021-c13c-4cd3-8f6e-4b8e0a6f7d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1b00c8-89fa-4051-b1c3-105da459bd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ca3ab4-561c-4e14-92bf-07f7a8a2fcca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd4b1eb-3c0d-4f7f-bad9-d7d5f7e81327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d489d8b5-d30d-4a54-83de-6578bf7bb432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3726cf7a-e107-4dd3-b5ea-557390375064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff5dced-5594-496b-b557-1b07eaf4e86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cdda58-a0e9-4178-8c71-cdcdf6a201b7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561c418e-2e11-4413-9ee0-076bb6ca4675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d9a4cf-4bab-41f5-bbfc-49cefd4936ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82cafbc-ff3f-48cc-bc65-4050e7ab3de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a6c4ab-2aa4-4f3b-a6f4-4b39c6e3b120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1285cf8a-1002-4fb4-b9a9-7ae3eb728f92",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721d3e11-46e8-4a4b-bcef-6c974d0e5d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b157155-aac1-4752-b869-1b9a02752384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663dc581-eab9-46d7-875f-1a9da4791adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3386df-c15b-4ba8-9a1f-bb8df0ab58eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e84d57-c4b5-4187-8167-5df70e5fdb93",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d95babf-3a7a-4954-87eb-75f08c76f392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b33c17e-330c-4439-9f7b-3dd44b6e2024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6658e94-c3a6-4673-babb-911e53755040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363df6e2-2a39-4b5f-aa3c-d41c23c17070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025d0483-3c67-4a17-af00-4595ea7972ac",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab25683-ff22-48f2-9847-635815cd0956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f84b67-538b-4b32-b971-e7fbc9101fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0180db-2773-4fe3-a52e-a5de69a7a2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1519fa1-167f-4247-8ea2-330dcd4692fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce90a30-0193-42a7-bfeb-31517bec67b9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74878c64-acd5-4b9f-8055-590832577346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a835cfb-914f-487f-b439-f3c8db6f58ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1705ba0c-5371-417b-b0a5-978392587083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0d6e71-2bd7-41c5-9fae-3b12a1880507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f764d45-e7f8-486c-a2f3-14896b1e954f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a878ff-e8be-4801-a348-4971048423c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322b9de9-6df2-4e23-ad66-6b15b2998fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9afe0b-0c5f-4db6-8319-0b01e208a9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ad7376-e397-4801-838a-5052d6eefe2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a95c300-c13e-4065-862a-734894034d5f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dbcd93-7ccf-49f0-812b-b16a6ec5d072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd54c5d-ccbb-448d-b1bc-d315c8a78777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c7db81-2791-46ec-b66d-489b4be27838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6670ba-9cf7-4bbc-90af-80bd4b29d012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13bb4b6-70bf-40bd-b258-daec56ea3ad6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb42235-0f4f-4263-8c20-10fb39240bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d8bc42-82e8-4b42-9d3c-62d8a37966b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32874d37-ede4-4ee4-ae79-fabb7e310a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5da819-0600-4006-b2ed-ba76f17a25bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d025c2-f374-40be-bf1e-b8dcd259a6c5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c11634a-d8dc-4294-9258-748d91bbe1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad90edf-aa9c-4df8-ade9-d434958a6c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6520c8c1-3534-4206-a7cc-e5a1fcbd517b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67acecf6-4eb8-4a24-b8a9-6ccefe2f052b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c86fd3-c123-49b0-a159-a019eb9254ff",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0f3e95-6455-4603-b99e-ac2adbd9d4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1600506-0617-4b0b-83bb-daade3f69150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7a4140-dfdd-4abd-8738-a407e5f40d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cbe20a-cf90-4925-b909-56425100317a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f234e6ca-77a0-494c-b05e-c5383c4a0893",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3f2be8-583a-4c7b-9368-af2244ecc8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664d0125-8df7-42a7-aa83-355f9c79d2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4ce352-c94c-4aad-9a2b-2dde09d747f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629149c2-e327-4f82-a144-9ccc3ccb6839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b638eb-db39-4852-a2af-182abafefc47",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7e4d66-1507-4554-b00c-b88968f13bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e02feef-cf25-4bd8-83cf-04ef3a90a7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb532f38-7e38-4d9e-8921-4930279b962b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf93bb9-824d-482b-b69b-882d31900da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9288a118-9fab-45ab-95ed-272bd0c9a0da",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51592124-d25a-4589-920e-8aa605b02301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e988fbe-1d5b-40b8-93d8-11cbecd08657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff83fb7-22b1-488f-8681-87341e3b31c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4e7d31-7fa2-4b39-82b7-489f2b1d1883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f67382-3f6e-4dae-9c19-a50fb836de55",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225b1e8c-b1c7-4dcc-8480-bc2c0f1f35ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd39503-f9d5-46d1-a37b-cfb39d192b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ae6400-422f-4e22-9847-0db5572de050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0c250f-1931-4612-a38f-be63d3be3cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f86fcb-4433-4956-a9e2-a651e77c0aad",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edab01d1-c468-4e6e-a7a9-abb383425eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45dae2cd-bea0-4833-85b1-4c3e7130f884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466398dc-409d-4fc6-8e5b-1171ac1eeabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc69394-e366-4841-ab81-e4f7ebf505fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c8e31f-60a2-4279-8912-47403c2ff28b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c391c0a-e555-4324-9c9c-c58e7f8ace83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9754b3c4-04dd-4d14-97ea-22e7fc91b63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e08193-c224-4ec6-9094-edd0c167348e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af649c3-9f36-4e85-a01b-37d140225a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffefe9f-abd0-4a41-bf12-27ec24038846",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60051a42-2a0f-4977-a3e6-6cc7081fd042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0410cec-3079-4f2a-a862-dc1896c80d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ee7ec4-db20-4b3e-ba94-9b790d3fc5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de3b101-9cfb-4031-8a3f-279fc0a6fa13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c1fc58-228f-4f11-82d9-65fde1c66bea",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6facff29-b9ac-4180-9a8b-a7f4a8b4ba65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc839f1a-d0ef-49ee-88ed-65dfed3e253f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30be804-b6eb-481c-aa59-0414e83c136c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94560afa-4820-4c1c-9bd8-cf325e08069a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6f51a6-3f7a-4ab0-965e-e5bc2d7726b6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386af619-9c13-4404-9c78-33fbf5801632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80cb61a5-6572-48d0-b57f-259786fcea7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f401b21a-712a-480b-88aa-10a08ca385a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7007198f-6aa9-4b7c-b335-ed7c4a306582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004381b1-768d-44d4-8564-84bcc7c2429e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db15e1b8-9157-402c-8d20-da66ac42ff92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6de93ae-b5ba-4b6f-b04b-b48a01c1cd33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5ca197-ceb2-4f24-8a46-1685a927078f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92621629-6a9f-4e40-817d-12a22faf07a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15e8378-f346-4638-9d77-0dabab05602e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c25c375-fd5c-44cc-96dd-59132dca54f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c8343b-ffbc-4dd6-b2ea-62d0697e3434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072cb0fe-ee0a-475a-86b8-996ca06edc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4385af4f-94ea-4b51-909b-5fb9eb974c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e17d03-1155-466a-a86b-965a507cc819",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdbd0bc-b1a6-4525-bd1e-f18db287a19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a57a6f5-2093-46ee-acf9-e5b240317590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf62506-b4dc-4556-8b73-e7cf3dddaa1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5895bb8-bad2-4862-b98d-1baa0e2fd768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb71d5d1-3d05-4496-b603-ce56d29ddd67",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66d6140-78ca-4bb1-b618-e8e5e3825110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d0920f-705c-42ef-a56a-9122a247ac2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbca9427-38a0-43fe-b62c-c9ce994c092f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e128eb31-5cc2-4c5b-a509-7a3da77ee7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7986cd3f-d41f-4427-82a4-93aace4fe7bb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078c7a0c-cac7-4c3f-b748-d56ea2d6d155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d37a603-504e-4b74-ba59-c39ad68f469e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef46a03-095d-4168-911b-55f4c950ee37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83554f72-1d5a-41b9-b0f6-badde421ed4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53442fd9-4e95-45ce-a802-9bf62c87665a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07b885c-5cd4-486a-968b-f414c5f04918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53132ea-c66e-4a31-8c5b-fda27e9c9501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8418bdf6-5788-4780-bd23-1708034c9c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d850e0d9-cd8c-4247-9a6b-ce948be2f391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b717d09d-492a-48da-a9bb-3d5d5b3ebbd9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715cb61e-bc0f-4b69-a2d4-94ab3d2a0464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8fbad7-8d10-4c7a-9df8-86bf397fc04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba40facf-bdb2-420a-bebf-c320e4e9bdca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e83c3f-2aa6-417b-a175-415e6864c2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7e6f96-1cd8-4610-9b5e-520dab0d8452",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234e4e3d-3b8e-4424-874a-50194ce4a010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9a5549-761b-4536-a068-326b6d4e7833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b3b820-9f07-4043-b8fe-afeb4669698a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d62673d-4446-447d-90a4-3a8220e33cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55fdb2c-3c3e-48ee-878f-4479bbac7ff4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b65690c-4841-4b08-a596-bc87e2e3413f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1fc0df-62e8-493f-a255-4e7629f1fe88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc8166c-f0ea-4997-b182-30ccb7f426de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b25bc1-346e-44e2-bea8-d4092a86dfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4d0062-8573-437d-8153-38a6c30e460a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74733e33-0a37-489d-bd09-95193b2e2d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05660d01-537c-41c7-97fe-d9071ba158e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85007c68-da73-439c-93da-b9ebc92eb616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfbbeda-e4a0-478f-8fc6-ade4b41010ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78111649-11ab-4e45-b859-afd81b86a150",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3155cb92-8ea9-42fc-87a0-a052cc90e8ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d278a4-b39f-4e8c-8976-258db14029a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f277f255-3662-4b7f-8ae0-3d738ad9844e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9d043e-c0ba-46e3-ad14-203d35f3b5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0c3210-a480-479e-846d-e8e41cf238ea",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380639aa-7803-4000-b3f3-f6ada114ed31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ffa4c10-03c1-45e4-8910-8f09b1bfb115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab46f2ad-d5ca-48e5-8ad2-7642fb06048e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda6995c-48f6-4db5-9297-2a422608dfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e383ba-1fbc-4413-879c-e28a333fe39e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414d970b-da30-4ad0-8fee-dad39c6d24fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "163edc19-16f0-4ab4-9adc-6c6617f51239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd5ef85-2606-46f1-9677-d8bd6855cf32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0031b073-b42a-4345-9988-4ca7e2bf512a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f466c19b-735e-48ec-8a3d-64c2f5fd1eeb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcc86f2-1532-4d0e-93c9-22f1c2dd1a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ccfb0eb-b002-4a55-aa24-c9e6b37c39de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62542573-1b42-4203-904f-8bff353a4795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2738f39a-18c2-4bca-b34a-cd8c9296a4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4916e3a-20e6-48ca-830b-b8fa32414622",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a939b1-7962-4c60-8913-650e1410e405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b53dcedf-415a-49d6-bd93-5732494ea46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061429b2-e5ec-4d98-ace6-bb7cd5ec3d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fa130a-578d-497b-8999-5b9da57e4b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd651a5-9191-4bff-bb6b-5bc12fe93e22",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea91c9d1-01d1-4b7f-85a3-ee681eec6213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae82256e-9f54-453f-a596-7f5365a44b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa684fe1-2e4a-40fa-9730-143940dafb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38307ca6-cce5-4070-ba2b-5b2f95859591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6dc589-0014-4c6d-bde3-1a39099667d1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585eeb1e-5ecd-4f3b-bbbc-f5088ad66536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12e72fd-1302-4c76-831b-d5c72a6dec4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bc369c-9278-4bed-9d64-79987ea016fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea9bfc4-e728-48f3-b5cc-c3b3adcd3ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4941eafe-67d0-4b01-ab2e-50e2651929c9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7aea89-47a9-44de-b973-965a34bc2654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbc117a4-bcc3-4a24-a152-eb00c95a180b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb632f7d-d14f-4a5e-a41d-1459d9c3a273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2210fc0-07bd-4918-81c7-dd1c08dff4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c9d8da-4009-42d2-b040-1cb0e58af179",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19461530-769b-4663-9b15-795564be30d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc74f917-7e7b-4483-8970-4ac943404841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88230da9-a2e2-46ef-9e5b-d1ef9840d2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce63037-9a13-4e23-8be0-18e4a8b7323c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c423faa-00a4-4bd5-8768-627e570f52f3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017b742a-4578-4596-9291-296094b6f9bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dae31ad-05bd-4f3f-92dc-e91443a5c9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52c1231-e275-41ea-b48f-7634be04a6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30cc78c-bc8e-4bfb-8ae5-9c7fa8d255e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d527d0-d366-4dfe-a8e2-8f1daa9f9170",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08206172-2d4e-4148-a91b-3a9fd5cdab84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a85d8f6-783b-4a28-948d-fe89f92f884f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0597b2b5-db01-4614-a343-40e4e39e3dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ecba13f-6b16-42dc-a228-e92ca1d691eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1a5323-e2e0-40ad-915a-97f77995657d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6facdcb2-dc10-4756-bf8c-fcc36ebae8a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e7d162-d60b-4a29-8315-d0650355352e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a58d78f-8081-4f2b-9a1e-a8acdffc3fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b1a8a3-f23e-4086-bc6c-8e07e4bef39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1157e9d8-375c-48ad-899a-b661a6edd2d5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71257500-f8ad-4575-983e-41819cdcbf00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10a7fa2d-8dd3-419b-8f36-f9675bc176ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a342592a-fc8e-4a67-b582-93faf7d82b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646e2761-fd14-44ea-93b8-55b23dc5651f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccff79e5-7cbc-44c8-be9b-b66df3bb0142",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54562f26-f9ec-4a5e-858f-41ce971a404e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a056702e-f3fe-4c13-90b1-f4a9b4c2e336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724e5e77-84ab-4d03-8487-f94f904baa5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09cefbf-7bb9-42cb-a28e-88ddc63754a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e7263e-4483-46d6-817e-d83f8f7f3310",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180c3d98-e52f-4ff4-a265-47dac0156a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44bbb77c-5eb6-4c21-81d2-770b536bef89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45644f17-0b80-4744-bf18-0b539b2ba919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0c5367-bfdb-4d11-8edd-17f65a9f3c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec55f24-d510-49a4-bb39-4440e9698b16",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92086b37-a066-4b67-861f-b94938eaf65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b131192-3a03-4348-81fb-f2c0418c3565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0d25d3-ca5e-4727-9158-e296ff6f6ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf16a5f-9d53-4c99-bef9-283ff6bcdd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67928d0-7902-41a4-9176-a9a41776e141",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba8f1e1-84ec-4316-a155-b267db7ed220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20bf6ebc-d874-4f7e-b68d-7bafb39d9b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64dab29-151c-4817-a29b-f69ef368c360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57f96f3-a60e-4482-8ed3-fa2828ee5982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503c97d5-df8f-40fb-96ab-25c20387ac04",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d295b140-3c37-458a-b51b-be07f351af73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8301d18-eb21-4d31-884b-83bd3922aa77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d487f8-4922-4b87-8627-59eb3cf792c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7344479b-1953-4b06-bf22-422214055809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5312436b-3462-4fbb-89b7-f7358fac9c12",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16fd4cc-58b2-4cc7-82c6-0f599a320316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46832a06-dada-43e4-8513-48ac8ae5312b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaca9c63-2500-45d6-bc32-30b02b11a87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f1faee-70b3-4277-a1b3-4a3043c56df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390f9f6f-5d6d-46f4-b4af-20b41f1c5892",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56bfa97-4503-4f83-b90f-2844a7730c22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee198ea-057e-4e45-9b06-ec4e618812a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92f391c-b501-4e80-8dd6-81f9626e3fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d018de1-d6bf-49da-931c-71ec9d8fde5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd9b736-dcf0-4219-b39c-250a7d820d91",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ed0a15-7772-47fc-a0ce-a534cc1bc336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c80fdae7-e4b6-4541-96de-d8cf7fca0aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e593b5-d00e-47c9-8079-2e787aec0180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6fb168-691d-45af-bea2-e8a653e6b714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1e6576-28a6-4c56-acd4-6e78112b5ddb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e68a17-3cb4-4d39-9e21-6594af28df7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f550bce-95e6-4b78-a51a-f90dc8541cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96eb18c-37f3-403f-90fb-6139dfb36e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2276b0-683e-4fc6-a6e3-26b75472fa1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff84d79-9dd3-45a5-8e1e-4d3a36cd7172",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e22be6d-05be-4562-b6db-8397bfa1f222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "247de848-0f90-425e-8d93-f6fa8facb32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d65fbf5-60e5-49f8-8594-4d146236d0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9480e07-3a34-4fc2-b0c1-350223ade18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7a6e59-2f07-4ea7-b410-a38a2dde82e5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b233555a-4168-4435-9f5f-0f57a02148a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be0ccad-2a4f-4b35-bc18-745fd0cdc32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "962dfd6b-ec80-4d5a-b576-41d67457fcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b57462-9d47-4475-a838-ab152d572957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bcb64a-9697-4236-9265-30111069a0bc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0f5517-8162-404f-95e5-e14638d1f410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d0610d2-0829-4926-9204-d8b76b76836a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0b7a1f-f51d-4b90-8fcd-f769f8042d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee34386-fe23-4f64-aa9c-ffa186e26d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b446422-3efd-4480-b6df-c3850b0fee45",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eeb739-c887-4d71-9f74-a07ae7fca1f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3bc3c29-f6f1-4461-8dc5-4a7aae92fb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97920937-dbff-4d49-b238-e3fd5c8bfd2e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09a6193-9b81-4648-995b-230d62bef241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10e5a8f-d241-4b7f-96eb-b48d0f88ee88",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a542d04-ddd5-461a-8ac0-d0c5a4d422ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b5dd68-2346-472f-9183-82878649f9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ceecd5-a71f-4f31-978a-38878ed5126a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a2c933-ef03-4be3-8a66-f435c2aec8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c55760a-ff81-4384-aa30-f5e87b520365",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a41756f-969c-4be1-b018-df5fe6d4d758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f48fe28b-d819-4de0-b86a-7de6655b2989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395bc6a6-963b-4e36-9258-6a6a1a9cf82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e3988b-efff-49ab-8a83-6850a49d0959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e996881-c207-4d3d-9ab3-260c7d16c071",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9af076-0e78-4bed-a904-431a01983264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81696b7-dd60-4907-aff0-294fddae490f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243a2108-973e-4127-aa53-678e48653f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26336bbc-45ce-4bad-a453-b679df67cac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae586230-a773-4796-a483-52b419b8ad1e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d597faa-2593-4683-b0d5-9799513bc891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e11b1b-db70-44d1-ac68-6b2b0841b6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fcd484-e8a8-45a3-afa3-4ad6929ba8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7546aaec-4264-4474-9463-ebeb37c4a97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6993f6cd-aca2-41fd-8588-7efb6267f0cb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de00834-5a4a-4c35-a0cf-a84877e17266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf7fc63-1fa3-4695-9d86-8a218f255874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da98a296-64e0-4726-afa5-c94f0d764f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65551b2f-54fa-468e-887a-509f1b32af1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de79ebb5-a058-49d7-a32b-acce5c36f171",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4bc1cf-1e1b-42e5-9bf7-31701d45eaa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df22450-4bde-4259-9687-e86efd640e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c90c21-528b-4236-9362-9fffe70b5222",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a7b9e0-46b1-4a96-9484-66974ac6ab9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f13c04-c9cd-48d2-a301-070d801e950e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a6476a-a683-4159-833b-92cc995f795f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d291e5b7-67c1-42dc-90b4-7c31b69fdf3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf78f529-b2a7-46c5-93be-f196d2cf7896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7de308-3056-4add-92f7-1d49f2a6ffe7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f141994-5868-4ac5-b505-c3341798769c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "997462f0-1bd3-4360-a0d9-0244bfba5c1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c13eac76-2968-47ed-b74d-eae503ec619c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d6b974b-5bd8-4805-a16b-c945fce65d3b"
                    }
                  }
                ]
              },
              {
                "id": "569aba71-d0c8-425c-aa59-f8b2c6a5e44a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12e5b46f-e3c5-453a-9378-b1311fbc198c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c9c582-d54a-4f1b-b827-749b14efab2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "43e4cf1e-a787-49ff-98f7-98538b0b6c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f2e1d9-b7d5-45c8-93be-46868b465c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0089162c-ff9e-4e1a-b4ff-aacde09fa2a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d3b5aff-5c07-4391-8bdc-7f3196e4858f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69e67549-8166-46dd-a7de-be174cb8c9e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93b5d152-a822-45f4-ad3c-d8a6459695f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fb8cd00-114f-41a6-8246-b96c57519073"
                    }
                  }
                ]
              },
              {
                "id": "b8309c18-06a0-4fa7-9313-4df2f67b8827",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d7106702-d43b-4822-9fb4-841283dce27a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8ce25d-65e5-4855-b0d4-8c0d759f6419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "955f42ae-a501-47e8-9630-5b4110484715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a550831a-7dea-4705-ac20-d7737da18ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b010a8e-8707-4fcd-841c-14479eb5c0bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2b5b5215-3de2-4a26-8b90-573e1614a7f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "be7f6d93-b725-4507-962a-c775f88055d0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8acc3109-1d70-41e7-b176-0db275fd4bb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aa478479-2171-4cce-a97d-783f6b775fc0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "141968d9-0b83-4aef-8189-c414225f7aff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "008de353-4dfd-40ce-971e-2bffbbc75dc3"
                    }
                  }
                ]
              },
              {
                "id": "f220430a-e45b-4273-958c-7cc8c303d707",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1b1f5f4-9917-4b4b-a54c-0727defbb519",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "38435f60-50ea-4ac5-9194-6455a4da9b2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4a2a554-fdba-4468-95ba-f5f1b7c38c1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a8a2fc3-b6c5-43ea-a521-7c8ba8bf0d09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fa700f0-dd39-4ed1-aba0-7ad66c3cdc01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "79fd21b2-b633-4586-862b-d3d429ddc7c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13295b9b-0e14-456c-9f54-3fa7e57e5b7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "639de85e-9a44-4d69-84d9-3438fba2ff7c"
            }
          }
        ]
      },
      {
        "id": "08de6fd2-5ad5-412a-9f75-e7d61758d6bd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7530fad9-6748-42a6-89e4-c3d38adeeec2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0adc4d2-492a-406e-8d07-dbcf85bb162d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6bc29f9-fb44-4bc8-ac24-d57188f564cc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6820624-a600-4c48-9e9f-de169fc44d7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ee61fc85-d24a-4486-89ad-74924ff718ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effca919-8174-4dcb-bbfa-996f1707798e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bb006de-d081-4519-b918-1927bf41466d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "393660fe-0f4b-4a85-b726-1f633475b198",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be084a43-0b86-44f4-9650-7e7e35b164dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29369e00-21d1-4240-a034-7763fa50ba5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0d62136-0123-4b02-b5c3-d74fd71727d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b8924c3-3259-4008-b3ae-e1d4e4f135b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "48705350-0647-4418-a776-3946990ba4b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd464f01-c74c-47db-b71a-9a67295938cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97cf8716-fe57-492d-b893-4873e2b70569"
            }
          }
        ]
      },
      {
        "id": "f420b9bb-60d4-4a35-9a3c-a76f36ceb35a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a8f8dbd1-f62d-45d8-87ce-2db8903946cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3c53993-5080-4666-b8d3-abd39b7c7884",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99ae60a9-b0c1-4d4c-8cab-52c09d429c7b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3cbf0d-8b6f-4367-b9d0-8dd7dfba3eba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d8e4426-0b6f-455e-90ff-cad4a9a92fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb28e6a-28c3-4873-af32-9e66a28d1735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8399a53a-e866-4812-9a32-c110e3fe680a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40d75ff1-ef99-46b2-9f8e-5bc710e0bcb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f4478f6-369d-47f5-99b1-42aa6351e555"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5868553-fcea-4842-b379-69ff5d636b51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d800e07-d6f5-4190-ab17-cc3bd3d2d7d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2290c127-8811-4691-b81d-6602553c80a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f23052f4-34a4-44f9-a22a-f25aad752fd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd603c0a-b2d4-4442-87c8-a59456986f0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11b5ca35-9943-4859-a89b-5f2dd22b1d9d"
            }
          }
        ]
      },
      {
        "id": "ad3c6d20-23c8-4c0e-a6bb-597e11fa981f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "52382b52-9172-409b-800d-adbf779b6ffb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d42aded-7193-4ff0-a1cf-52c383a94209",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6508cb6-4165-4cb7-b42b-f80c02d684ec",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68562b0f-db1b-4169-9b69-901d070bcd1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddd304a5-5ca9-41c5-901a-d867e9f8b9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb99ec8-d359-4fa1-9e3c-12a11af0c07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69a18975-45b9-4592-8527-b7faa44357ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bad8273-c6d8-4a79-9fd5-e22c4ec5924d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5902a688-e2e9-43d6-a741-ff9338ffe52d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8451e6f2-4d48-41dc-b11b-21ae1903195c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daef4178-263b-4288-87cf-01bb6b537592"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f53dba09-678c-4eea-9c10-4616d04f8b4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "36a1070f-f0d5-4ca4-b46c-02207b5f0c11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f8d8080-cb68-4b58-85db-680c6298f6ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95fe53ca-c952-4267-9702-24af8cd322a1"
            }
          }
        ]
      },
      {
        "id": "b3af3f98-4ca4-4f40-870d-3a6b20230a21",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa73009b-50e0-4ad1-a811-eef6cdd78521",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f84e3932-0900-4c2c-a78c-ab0f2b907c13",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "793e898b-5b22-49c3-81de-8acbd9c3b560",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99ea3890-55c8-4885-8693-a99d05a1049d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9df2d053-a6d3-4a40-aed1-94cd27dc93e3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.18947368421053,
      "responseMin": 8,
      "responseMax": 4759,
      "responseSd": 420.9251955396283,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705538182845,
      "completed": 1705538224328
    },
    "executions": [
      {
        "id": "e1b2d4e1-29ab-4460-80aa-d0b3fc368513",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "72dedfa4-3b9c-4ff4-8fb7-d75c1c0d18d1",
          "httpRequestId": "8d32e271-978b-43df-9dd8-907018469aec"
        },
        "item": {
          "id": "e1b2d4e1-29ab-4460-80aa-d0b3fc368513",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1a9cbc21-bd86-4763-b6b0-f258a1d1fcf2",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "f7058432-8858-401f-bd02-91520fca3e70",
        "cursor": {
          "ref": "f4320d3f-86ee-4c06-98ee-b4b15ea3ec70",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cb31a3f8-1822-4d82-8b28-ef98bfb10e8e"
        },
        "item": {
          "id": "f7058432-8858-401f-bd02-91520fca3e70",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4595d5c7-ef37-44c7-b36f-47aa024d2720",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "d31c1008-327a-478d-913f-dd47b134040a",
        "cursor": {
          "ref": "67bdccd1-3f6b-4157-a2ca-269a36a21176",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7ff63d18-ae51-483a-8819-5aaf82aedbf8"
        },
        "item": {
          "id": "d31c1008-327a-478d-913f-dd47b134040a",
          "name": "did_json"
        },
        "response": {
          "id": "9dda3bcb-0b20-4874-a706-89efbbff2ba2",
          "status": "OK",
          "code": 200,
          "responseTime": 980,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178475aa-5b42-42b0-bb41-d28e1eafeacd",
        "cursor": {
          "ref": "4412e64c-165f-420a-b4f5-f62f17cccdcf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "70d861ce-84f0-45c6-8c3b-94ee1b686f2a"
        },
        "item": {
          "id": "178475aa-5b42-42b0-bb41-d28e1eafeacd",
          "name": "did:invalid"
        },
        "response": {
          "id": "0e25d92c-3e86-4a46-aa50-d6d038b03442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178475aa-5b42-42b0-bb41-d28e1eafeacd",
        "cursor": {
          "ref": "4412e64c-165f-420a-b4f5-f62f17cccdcf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "70d861ce-84f0-45c6-8c3b-94ee1b686f2a"
        },
        "item": {
          "id": "178475aa-5b42-42b0-bb41-d28e1eafeacd",
          "name": "did:invalid"
        },
        "response": {
          "id": "0e25d92c-3e86-4a46-aa50-d6d038b03442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab85c41-9c34-4bc0-bdf9-02c9fa4b0cee",
        "cursor": {
          "ref": "3102d0b2-1fda-402b-95e6-3d4b46914ac4",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4f43ccae-48d0-4374-b9a9-fa3d822750fa"
        },
        "item": {
          "id": "cab85c41-9c34-4bc0-bdf9-02c9fa4b0cee",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f2ce07bf-7c3e-4c3d-8b73-b490b141e127",
          "status": "Not Found",
          "code": 404,
          "responseTime": 108,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51b73c4-14d8-4616-a9de-5a0f074527f1",
        "cursor": {
          "ref": "9aea2087-a26e-4ca8-8b48-4e73391d6e5b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7275bb07-ba45-41da-ace2-9b0519ded9a4"
        },
        "item": {
          "id": "f51b73c4-14d8-4616-a9de-5a0f074527f1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c34a50ad-c84d-447c-bfd0-2613b3ce8745",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b02d30-f8a1-4842-ba17-3403ed85c969",
        "cursor": {
          "ref": "5aea3753-6e2c-453d-a3fd-3650e48c019a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b68b370f-a1fa-49a2-a000-f79947836c8c"
        },
        "item": {
          "id": "f7b02d30-f8a1-4842-ba17-3403ed85c969",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "250ff3fa-6945-41a0-8902-c0b269a0034c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2841e5-6939-4141-bda8-2a3f7de13f14",
        "cursor": {
          "ref": "61c61226-8a75-4de2-8b25-03037163427a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a140db78-1d63-4c45-a0e7-3adbaded9d7b"
        },
        "item": {
          "id": "6b2841e5-6939-4141-bda8-2a3f7de13f14",
          "name": "identifiers"
        },
        "response": {
          "id": "20a8431f-0498-4ddf-a406-ece8f18a554d",
          "status": "OK",
          "code": 200,
          "responseTime": 333,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef53e11f-871b-41c4-8e3e-e9cad5f3fd02",
        "cursor": {
          "ref": "8b7166ac-5382-4a86-9767-0481bc6f56d0",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "33320f1b-d318-44ce-b245-27d10e87a228"
        },
        "item": {
          "id": "ef53e11f-871b-41c4-8e3e-e9cad5f3fd02",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e7dff12c-4462-465a-859c-240c4b56ebb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dfd47d-4c62-4b1c-9a2b-d7f2080a7e13",
        "cursor": {
          "ref": "34066e39-4798-4f46-a675-09461a818e52",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "68c89b10-3bb0-4390-8f2d-d9221696212c"
        },
        "item": {
          "id": "00dfd47d-4c62-4b1c-9a2b-d7f2080a7e13",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e63d6bd3-f375-4047-a381-d83cf44e4cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ede0bf5-c99e-42a4-a3b3-4cc1a0a5eca1",
        "cursor": {
          "ref": "51566fe3-a555-461a-a35b-33bc726ead89",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1ee97345-be4b-4088-a8d9-b299deba63ef"
        },
        "item": {
          "id": "6ede0bf5-c99e-42a4-a3b3-4cc1a0a5eca1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "baf1d504-ea24-4760-b661-57ab5db1a2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abc05c4-613c-49c4-b4fb-269654cfcfe0",
        "cursor": {
          "ref": "3c549d7a-a16d-4472-b076-f655e8c6419d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3baa7900-140b-410a-bdf9-c96eec4763be"
        },
        "item": {
          "id": "0abc05c4-613c-49c4-b4fb-269654cfcfe0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1a89cd79-7662-4368-a35f-e7c5a790e16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f7b0e3-83b5-4451-b06b-e3d83281271c",
        "cursor": {
          "ref": "7b060d96-8c64-41b2-ad0d-ac7fc60da5c1",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3cf6ac0b-50a5-4feb-a08a-6ba9d44d7e52"
        },
        "item": {
          "id": "31f7b0e3-83b5-4451-b06b-e3d83281271c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a171b121-7426-42df-84db-7c6e168fdc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f018ae-c036-4480-959b-f098117e8260",
        "cursor": {
          "ref": "2ffe269f-4aad-44bc-9de4-ae79cb8a8c60",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "419d53db-bf2d-42aa-b5a7-0cb852683008"
        },
        "item": {
          "id": "05f018ae-c036-4480-959b-f098117e8260",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3f787f28-7a0b-4930-9c87-057e52ec8ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9886d4d0-2219-4912-8b06-e53fd415823b",
        "cursor": {
          "ref": "f555808c-7ae6-4608-b60f-312b0f1d98cf",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "59d13a45-57a0-4b21-97a7-f83756a56432"
        },
        "item": {
          "id": "9886d4d0-2219-4912-8b06-e53fd415823b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f2448949-4b01-4319-8d50-46a39962f422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e5954a-2551-4e39-be13-023e03ef1966",
        "cursor": {
          "ref": "0b3d392e-619d-43bb-9da3-d98c577afb2c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "decaa559-1a3f-47e6-b2ed-74d1a0b779cd"
        },
        "item": {
          "id": "b2e5954a-2551-4e39-be13-023e03ef1966",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7a5cf260-4811-4c63-9e33-39d9ab4c5c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11caab22-928d-435c-bc24-53135bed44af",
        "cursor": {
          "ref": "ea9acb44-db0f-461f-9035-61515b9392c3",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c99e7a8d-4a6e-406e-b661-bc9dbd189dd0"
        },
        "item": {
          "id": "11caab22-928d-435c-bc24-53135bed44af",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8129c5ab-0ece-4109-bcfb-930ba19dac4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5bda04-d231-4d1d-a5ea-d376d2b8050e",
        "cursor": {
          "ref": "a1ab7c45-dbfb-4210-ae3f-6505b6e5296e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ada1a255-b9bd-4cf0-8981-4c00e25ac0f8"
        },
        "item": {
          "id": "fd5bda04-d231-4d1d-a5ea-d376d2b8050e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d92d2982-0557-4057-ad1d-df8bd0cd49ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6a0a8a-3eef-49ce-b21f-d2ce2d8b76b1",
        "cursor": {
          "ref": "4f2bc764-9d0a-4bb6-8561-45e3feeda4ee",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "381572d9-5327-496b-bd63-c12dfd47f6dd"
        },
        "item": {
          "id": "5b6a0a8a-3eef-49ce-b21f-d2ce2d8b76b1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b6a093fa-b80f-4c7d-8971-53267b5b9c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc99303-992c-44aa-b4d6-8e13c55f33a4",
        "cursor": {
          "ref": "a9cf7aa2-6b36-4709-919a-51818f91e61e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8c305a3f-527b-4033-8d63-a3c7545d22a6"
        },
        "item": {
          "id": "2cc99303-992c-44aa-b4d6-8e13c55f33a4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a71a5cf6-d17f-49bf-af9d-c646e7c86484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1641b781-f074-4be3-b429-fa56262a8b41",
        "cursor": {
          "ref": "7a167513-3322-4b55-91fd-b0b4da5014c5",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f76e17ad-5cb6-4f93-b8c4-b1f4715dda7f"
        },
        "item": {
          "id": "1641b781-f074-4be3-b429-fa56262a8b41",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3f9d0df0-41f5-40e5-8fc5-8ed29035e91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048393c1-ee91-4637-8541-c2547e1992bb",
        "cursor": {
          "ref": "94261e50-d38d-4dfb-9697-08a12b0c15f5",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a91f6e12-2f90-4c0c-b5dd-ff8a7cbf6e53"
        },
        "item": {
          "id": "048393c1-ee91-4637-8541-c2547e1992bb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "62380f20-30fd-4070-b359-fd53fe34648d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceee56d6-04cb-4126-a362-626bf4f876ab",
        "cursor": {
          "ref": "7d1b570f-da82-4f89-a232-b0288a7a5bfd",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c8aa2eda-db56-421c-85dd-1f372fbfc968"
        },
        "item": {
          "id": "ceee56d6-04cb-4126-a362-626bf4f876ab",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7a0a7706-388a-46b0-b465-e2eda7ce1e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92b19b8-8196-4829-b4ef-fbe1b5fe6390",
        "cursor": {
          "ref": "a6dff995-e876-4e0e-ac4d-59de4478c0fb",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "78d49210-24a3-42e0-9ee0-1dba81104046"
        },
        "item": {
          "id": "c92b19b8-8196-4829-b4ef-fbe1b5fe6390",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6c0c1516-45f4-4d06-b907-a2fd33770f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bcd7c5-13bc-4d17-8328-02188abba376",
        "cursor": {
          "ref": "4a92d9ab-94fc-454b-abf0-26e8e207a840",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "96f0b85a-0024-491b-90cc-ee780ea64fb1"
        },
        "item": {
          "id": "b8bcd7c5-13bc-4d17-8328-02188abba376",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0281387f-a2f6-4475-b206-45a8ed983d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09451aca-2da5-43ee-8f70-a05433cd4a9a",
        "cursor": {
          "ref": "4d68a4a6-7d8f-46a5-ba8f-af0343d36ca4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dfc3194f-bceb-46b7-bc49-62a59edb343d"
        },
        "item": {
          "id": "09451aca-2da5-43ee-8f70-a05433cd4a9a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a59707fb-ccbd-47d3-88cd-c130e71719f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ca2f50-7486-4cea-b057-b9ec2df2658f",
        "cursor": {
          "ref": "c50194ce-9c48-4412-8dd9-3049ee6ad197",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "50a15824-386b-44c6-82bb-57e53422706a"
        },
        "item": {
          "id": "32ca2f50-7486-4cea-b057-b9ec2df2658f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "07b6f501-c38c-4f37-a54a-d0910a9c183e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e63d8e-54bc-425a-86f5-9b19707014ba",
        "cursor": {
          "ref": "052f38d1-cca8-4c85-b5c3-e79908d9b80b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9873c9b3-638f-4e2e-b9df-022d9aa2d7b5"
        },
        "item": {
          "id": "01e63d8e-54bc-425a-86f5-9b19707014ba",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f50fbcf5-0c31-44e1-9c7e-706c4d93e300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e021cb-3113-40c9-995b-6fb4a58d634e",
        "cursor": {
          "ref": "1e2c12bf-e9c7-4864-b818-be5c826d267a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e2ca6460-01fe-4d53-b2bf-687495e7a231"
        },
        "item": {
          "id": "a1e021cb-3113-40c9-995b-6fb4a58d634e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b6816e06-8d18-478a-9b7c-a9cf6b8a6997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a45cca-7074-457d-9c97-0585dc16628d",
        "cursor": {
          "ref": "d3a42bba-0d79-45e6-b287-d5b81be3bc12",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b0233bce-8bbb-4810-afe1-d37a3956700f"
        },
        "item": {
          "id": "a1a45cca-7074-457d-9c97-0585dc16628d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "747ea8ee-4e68-4e0e-8d0e-6ae71187d782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7fd5a5-16eb-4f26-93d4-9d99e159a78e",
        "cursor": {
          "ref": "fa47f9b0-072f-4bfd-aa8f-50a07f39589d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cb19ee7f-5123-43c9-b9b5-3df2ce232cbb"
        },
        "item": {
          "id": "de7fd5a5-16eb-4f26-93d4-9d99e159a78e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e17daaad-0c26-42d5-ab12-8e276fa2f40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa11ba52-a219-4b50-9ea9-c9f886536835",
        "cursor": {
          "ref": "d6c8a421-cc6a-4ae7-a118-b4da5954dd98",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8ac19212-f8a5-44de-8cf2-90e0bbb3075e"
        },
        "item": {
          "id": "aa11ba52-a219-4b50-9ea9-c9f886536835",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1970a705-6e8e-44fb-aca0-358fbea0542e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb17d97-ab32-4b39-b741-ac987f9ce9d1",
        "cursor": {
          "ref": "4953c079-77dc-4d73-aea9-b24fafbf549b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dc1cfcf1-52e3-4f7a-8e2b-3c0ee64da525"
        },
        "item": {
          "id": "adb17d97-ab32-4b39-b741-ac987f9ce9d1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "12fd4b16-d2ea-4944-ab7b-594b6715fa4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dfd3be-e030-4516-a4df-46142ee9980f",
        "cursor": {
          "ref": "61fda442-fe27-4974-b991-8051293633f9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "22239c5c-c614-49f4-9a94-6de8eb4f51c2"
        },
        "item": {
          "id": "56dfd3be-e030-4516-a4df-46142ee9980f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ab331a19-e94e-48a0-9b81-ca63eef4e10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7bbf20-52e8-404e-93ff-e5729b0a5e1b",
        "cursor": {
          "ref": "9d6e8836-e2c4-43bb-8ca2-4992e2f9502d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5f36df10-2020-426d-bf82-44a338d5d408"
        },
        "item": {
          "id": "ab7bbf20-52e8-404e-93ff-e5729b0a5e1b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "33000d1a-e606-487f-acfc-fb0f2632a0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c656d3-2bdd-4779-9323-c613ade333a1",
        "cursor": {
          "ref": "ba270339-b0fc-4177-940c-6a749fb17abb",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "526b0ed6-02a0-4672-8654-3a563c94017a"
        },
        "item": {
          "id": "01c656d3-2bdd-4779-9323-c613ade333a1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9c1065e9-acd7-4cd9-a0ff-c80d2e783f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0f48a3-13f9-48b4-ac2f-aa6156be73e1",
        "cursor": {
          "ref": "7a14fa5a-6e03-4ba5-bc8e-19dfcda62ac3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f1b2fe33-ce96-4433-ac95-1f742f7775fc"
        },
        "item": {
          "id": "8f0f48a3-13f9-48b4-ac2f-aa6156be73e1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2842cea9-a69d-4f85-988a-ee8059810dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c7d4ba-1aee-4dc6-962b-afebd1df0117",
        "cursor": {
          "ref": "4c549bc9-28fc-4af9-a384-bc84c4a943e1",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4e0642a7-9c3d-413a-8480-2def1c65309e"
        },
        "item": {
          "id": "a8c7d4ba-1aee-4dc6-962b-afebd1df0117",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "77b3eab1-afa7-4454-b801-aa7c18cd57e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d79f04-98f3-42e3-a293-4f81498cc0da",
        "cursor": {
          "ref": "c340a1e2-10a5-47c5-ab69-7364035f0603",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6028b204-60aa-4e18-aa50-8ffd01bc6992"
        },
        "item": {
          "id": "d5d79f04-98f3-42e3-a293-4f81498cc0da",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "57a0f6d4-9551-4671-b6e5-bc908e8bde77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83efec84-7c1a-4011-9541-aaf8a9e214aa",
        "cursor": {
          "ref": "06c805c2-872d-483c-baaf-3e6497d3a3a8",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "714b11eb-8b33-4a31-a1ae-681f4a3709d9"
        },
        "item": {
          "id": "83efec84-7c1a-4011-9541-aaf8a9e214aa",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2eeacfe8-6285-4901-b3e2-813f7a6c2411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67af7881-e102-4b10-ab49-b36d9f8b5203",
        "cursor": {
          "ref": "851bf9db-5dfb-4b1d-98fc-c81d9b98ed67",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a5ebfdf2-f214-48c9-a025-8fa0b6834d5b"
        },
        "item": {
          "id": "67af7881-e102-4b10-ab49-b36d9f8b5203",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3f777abd-efe0-4a91-8c1e-4a586fd24842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2bdfe8-c8be-46d8-8ded-0ed521593859",
        "cursor": {
          "ref": "4b2c97d9-9737-4be1-bef3-23f600b2c1c8",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b8c0247e-94ca-4444-80ff-5c01c1f02bc0"
        },
        "item": {
          "id": "0c2bdfe8-c8be-46d8-8ded-0ed521593859",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "48560978-6657-4d86-851e-449cf59080d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4728093b-808c-4370-b11e-9460c09d060e",
        "cursor": {
          "ref": "7e2afccb-60b3-4248-ad02-9c7df256c0e8",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6647bd93-9d93-4601-9f91-54bc9abc3c9d"
        },
        "item": {
          "id": "4728093b-808c-4370-b11e-9460c09d060e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f842deff-f271-4009-a093-44bbf3406bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da959d6e-0a62-4a6f-b65e-e3e8f9e5ce38",
        "cursor": {
          "ref": "1614b3c8-87a0-4739-a8d6-a37c266a5180",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f38567ff-758f-483a-a821-4498c1238e6f"
        },
        "item": {
          "id": "da959d6e-0a62-4a6f-b65e-e3e8f9e5ce38",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d045d54d-81dc-4e8b-8d94-05a8ccdb1fa6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 318,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94c4791-826c-4086-a9c3-c8bf6a55de88",
        "cursor": {
          "ref": "ae6c13fc-45d7-4e9b-b849-737a4555d863",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "307bbc55-9256-4ade-bbf8-9a2ea1fe4be2"
        },
        "item": {
          "id": "d94c4791-826c-4086-a9c3-c8bf6a55de88",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "88384016-ef81-48e8-8d79-8b89b6f5aac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af75d3e-231a-4238-9f2d-4f27dfb18cfd",
        "cursor": {
          "ref": "e880b087-6a23-45a4-af59-af871c368865",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d2ffb6e2-4def-4348-a674-217549412c3f"
        },
        "item": {
          "id": "2af75d3e-231a-4238-9f2d-4f27dfb18cfd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b7acefbf-9a72-49dc-87c1-fdfa5ff17c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc2cd5c-6fb6-4b00-b2b5-277bacf418da",
        "cursor": {
          "ref": "ecbf0fc0-6cfc-47fa-8aca-148f7be707f8",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "421c37f5-44c6-46ac-9b03-9b1e76e3f7c7"
        },
        "item": {
          "id": "3dc2cd5c-6fb6-4b00-b2b5-277bacf418da",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4a1da129-9a96-4cae-ad61-c1f30dc41d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f569e868-2ab8-48e5-a9fb-056b57bb2973",
        "cursor": {
          "ref": "675860ca-4ddf-47af-9f3d-c3d378b15dfa",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b023d88e-c1ad-4e6a-b1a6-626ef102e421"
        },
        "item": {
          "id": "f569e868-2ab8-48e5-a9fb-056b57bb2973",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "de74c08d-97d5-4675-8b44-926825160524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15518cef-999b-4ea5-8be9-a54e4d3a1d30",
        "cursor": {
          "ref": "5328fda3-a2b3-40dd-841e-9ba5ecd28819",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b3109ea8-4999-40c7-9da0-78919eae9a40"
        },
        "item": {
          "id": "15518cef-999b-4ea5-8be9-a54e4d3a1d30",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1cda521c-233d-44ff-a6e3-dbd2d2f94e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f64b67-93d8-4bc2-a4be-1181c3ffefa4",
        "cursor": {
          "ref": "f54fe424-e48e-4f34-954a-be09dc00245f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7f114687-69ea-4c6d-ace3-7a9ed6ab1e96"
        },
        "item": {
          "id": "13f64b67-93d8-4bc2-a4be-1181c3ffefa4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0fe0ba59-4496-4a92-a926-99363fdf191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625326b4-2e5f-4a44-997c-24b0a053a28c",
        "cursor": {
          "ref": "48ab4cb2-86d4-43f0-9e63-2e327d56255e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7485e6a3-0470-4ed9-b315-3f010356e3bf"
        },
        "item": {
          "id": "625326b4-2e5f-4a44-997c-24b0a053a28c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d0f3468e-83a7-4da8-a657-4aa78ec8e51a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 314,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96361f53-a5cc-4f73-81eb-40dc29c0d1e1",
        "cursor": {
          "ref": "a39abb90-5337-4b82-a482-58fd71c55801",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4cc110ec-2145-40dc-b5d3-95d463a17c43"
        },
        "item": {
          "id": "96361f53-a5cc-4f73-81eb-40dc29c0d1e1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6e28fde2-962f-47da-9afd-4a6fef91a701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa291056-2af7-4feb-b10f-81f481d0cef4",
        "cursor": {
          "ref": "39538da6-26df-422e-8ab9-938a3570c1f2",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9c81e02a-7099-4d37-a97f-75f12a555680"
        },
        "item": {
          "id": "fa291056-2af7-4feb-b10f-81f481d0cef4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6d4c4450-5026-4690-9957-46535aa2a4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05442c1-f084-4819-a97a-3089fc13c582",
        "cursor": {
          "ref": "2aa40e2e-63a1-4627-9a1a-211b7e7bc3b3",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3c00729a-e93b-411d-9789-2f77c1807b74"
        },
        "item": {
          "id": "f05442c1-f084-4819-a97a-3089fc13c582",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2335709e-35a1-46e8-bd84-f02841ad6d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e006cd7a-d77a-40e7-94ea-eb31090a8aab",
        "cursor": {
          "ref": "1e16e439-fde1-425b-822a-586e203872b0",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5760c5c4-57e6-40e5-9ea9-ff688b345d6f"
        },
        "item": {
          "id": "e006cd7a-d77a-40e7-94ea-eb31090a8aab",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "61fa79b9-bef8-447c-93e3-37e2403ad370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84973a75-357e-4e06-8fa1-10e1dda58a2a",
        "cursor": {
          "ref": "dbcb9977-f9d1-46a2-a44b-784fedde8f54",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "92387d7a-eaaf-4b0e-abc1-2107bce9a6f8"
        },
        "item": {
          "id": "84973a75-357e-4e06-8fa1-10e1dda58a2a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1c42358c-f15f-457b-840a-9149cfa734ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e184923-e8cc-4cfd-b4b7-3ae6514f2b2b",
        "cursor": {
          "ref": "edf3f410-f6c0-43da-854d-c1fecef30df8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "96a011c5-d838-4d3d-80ec-4450f6a70c7e"
        },
        "item": {
          "id": "3e184923-e8cc-4cfd-b4b7-3ae6514f2b2b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "78858c83-1029-446e-9b7f-71a34da3fcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f5bb7b-3bc1-4432-b4a0-74574937c038",
        "cursor": {
          "ref": "d9d66d0a-01cc-4800-93f5-3d79cadb0bad",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ac70c999-60a5-496e-bfd7-f7606edea1eb"
        },
        "item": {
          "id": "87f5bb7b-3bc1-4432-b4a0-74574937c038",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dcffc015-6769-42a9-aab7-5100b58c781c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff9d190-63f0-4971-9aac-dd0dca7d2c94",
        "cursor": {
          "ref": "ac07aef2-1313-40d3-ae6c-8677a07b0f41",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c4803d40-3c30-4441-83e0-d957b425e4cf"
        },
        "item": {
          "id": "bff9d190-63f0-4971-9aac-dd0dca7d2c94",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ab94a764-d39e-44f9-a0f2-cdd98daf9c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409566d3-1d91-4da0-afbb-b2964a9e9e24",
        "cursor": {
          "ref": "5071d2be-110e-49ee-a8aa-74f8af0a43c4",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "052e2a0a-31c5-493a-ae24-1a47e1034518"
        },
        "item": {
          "id": "409566d3-1d91-4da0-afbb-b2964a9e9e24",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "405d44c1-9c97-4700-9bd7-8c11dcb7534a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9959ddb9-af33-40cb-a195-13735f75ceea",
        "cursor": {
          "ref": "ace387d8-fa87-421c-8ea8-018e3dd57796",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7a40d16e-d7e2-4477-aef8-c32055d41dcb"
        },
        "item": {
          "id": "9959ddb9-af33-40cb-a195-13735f75ceea",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "124bca17-4695-42cd-bd1c-ee74e31543eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2ad545-34d0-41a8-8ea0-dd748734e247",
        "cursor": {
          "ref": "461a3acf-37a6-4fb6-bd96-c1d43b49bccf",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1ccfde6a-fb91-49fd-a157-3469aa2560c9"
        },
        "item": {
          "id": "2c2ad545-34d0-41a8-8ea0-dd748734e247",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "46bd4ebd-a0fe-434d-9269-19ad9e478978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07856889-a21b-4008-9fe4-179265432d35",
        "cursor": {
          "ref": "d3c7e49d-0833-4bc3-96c1-18e833625c28",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "70a399f0-8c08-46c5-b0d4-bb221ea2eaa6"
        },
        "item": {
          "id": "07856889-a21b-4008-9fe4-179265432d35",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "35e5198d-786b-4e32-8447-d5fb8fd8a33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ff8810-e7e5-468f-aaa2-aa0975757431",
        "cursor": {
          "ref": "6164aaa9-e505-4322-8672-cd98b56e5081",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bf010965-b745-418d-8972-344a344c5488"
        },
        "item": {
          "id": "06ff8810-e7e5-468f-aaa2-aa0975757431",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "57e2c000-02de-47b4-97dc-3a8aa17cf6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc22a4d6-befb-40fd-870f-86a9392f553a",
        "cursor": {
          "ref": "ea7148cc-dd22-4200-bc2e-db459b5de853",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ceed1425-4cac-4b8c-b9d0-3bfff3cf7668"
        },
        "item": {
          "id": "dc22a4d6-befb-40fd-870f-86a9392f553a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "091ce000-9269-4d8d-ae08-25c9ef76470b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30aafa2e-cec4-4aa4-be0a-feadfb391fb7",
        "cursor": {
          "ref": "c6690d3b-52c9-4216-8e51-94e11f2e0452",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7f9d10c3-19ab-45d3-a39d-8a9f9a87fe50"
        },
        "item": {
          "id": "30aafa2e-cec4-4aa4-be0a-feadfb391fb7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7faa53bc-3377-45af-949f-d85a904abd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1369844c-b740-4029-9ffe-5bc79e961c39",
        "cursor": {
          "ref": "ac3f861b-dd31-4027-b387-437f81bec53d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e8d322af-cf51-4dbe-8a4c-81c1eb8adb12"
        },
        "item": {
          "id": "1369844c-b740-4029-9ffe-5bc79e961c39",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "178f03b1-8aa1-474b-b35f-8cb2a7163f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbf9591-8c2d-4b72-bbe6-834c3cfe9f11",
        "cursor": {
          "ref": "f2692116-82ef-4736-9491-5f27f84dbc9c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a2a0c097-0bce-4068-9bfc-c6b2378791e6"
        },
        "item": {
          "id": "cfbf9591-8c2d-4b72-bbe6-834c3cfe9f11",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "96060bfb-322c-455e-910e-54fe76f97199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e20cff6-896c-4ba4-88d3-fedf143e3c2c",
        "cursor": {
          "ref": "66e93f91-b050-4523-8635-990de38a124f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1a6de9fc-c769-48b2-b07a-96eef6477a20"
        },
        "item": {
          "id": "8e20cff6-896c-4ba4-88d3-fedf143e3c2c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "af3dfa14-8f45-4577-a247-d10433b4076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514c168f-9bed-4546-a88b-f74fb1220996",
        "cursor": {
          "ref": "89279d69-dfca-4a67-affc-6587ec49b989",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3148ec85-5a01-409d-a3ab-28d15ef86a85"
        },
        "item": {
          "id": "514c168f-9bed-4546-a88b-f74fb1220996",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f252c030-0fa9-45c8-a444-dda5c0b00f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fb4093-4a92-416c-ac2d-12e6d32e79f6",
        "cursor": {
          "ref": "5cd78aa6-0412-499b-8dfc-05a25a492799",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "774412d2-7ca7-4445-95ab-99ef36a1ccef"
        },
        "item": {
          "id": "94fb4093-4a92-416c-ac2d-12e6d32e79f6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "589aa507-a662-4030-8494-90c7e3abcdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43efb829-71b2-4ae7-986d-bd33c27f6fe8",
        "cursor": {
          "ref": "ba1ebb3b-8f23-416e-aa5d-32aeb5e521ed",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "285245c9-9e6d-4bb1-95ea-a5cf37b50d25"
        },
        "item": {
          "id": "43efb829-71b2-4ae7-986d-bd33c27f6fe8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d661c414-fe9b-404f-be87-61b2e3720f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55ec1e1-ebd7-44e0-bfb0-3ba7ee440f1f",
        "cursor": {
          "ref": "5c87aa4f-a450-4b37-ad6c-889d13360736",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ab117324-8a85-4900-957f-38771d5ab246"
        },
        "item": {
          "id": "e55ec1e1-ebd7-44e0-bfb0-3ba7ee440f1f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ee632a04-73c9-4699-8ab3-88c9ddaead3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6424bb45-d7ca-4d81-af2a-be7dd98e8e4d",
        "cursor": {
          "ref": "9d54138c-392f-4704-bdfc-f87c04ba26b6",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "994b75c8-3039-4711-bc16-803b45e3d7f1"
        },
        "item": {
          "id": "6424bb45-d7ca-4d81-af2a-be7dd98e8e4d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d9ae9a5b-852f-4814-98d9-7ffd43088834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13f7cb5-b98e-43fa-86ef-8aadd20b23c0",
        "cursor": {
          "ref": "12ec7a09-493c-41f7-a314-3f4ebc196e2f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0fc102d9-3aaa-479d-b030-862e3b3f3b10"
        },
        "item": {
          "id": "a13f7cb5-b98e-43fa-86ef-8aadd20b23c0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c7732246-dd0f-4be2-b868-79ffdfa293cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d93764-2c40-45a2-a183-9a5be224b70e",
        "cursor": {
          "ref": "19d48ab5-0910-4ae5-90e0-ed64c11f9a4f",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "668140db-a6fb-41f7-89e0-802605bc550b"
        },
        "item": {
          "id": "45d93764-2c40-45a2-a183-9a5be224b70e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4eeef3de-0769-4b7c-8dbc-1d0df89a96af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668e162f-ef1c-450d-b9eb-f005bcfa5284",
        "cursor": {
          "ref": "76d11c71-1d8b-46b2-8474-6f7b48240010",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c6bc7733-afec-4439-85ec-93d390f52ba0"
        },
        "item": {
          "id": "668e162f-ef1c-450d-b9eb-f005bcfa5284",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b0e7a5fe-1b8b-44e9-89e3-1226698f3bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7619be3-3cc3-4e18-bed3-cc165ef4e2f4",
        "cursor": {
          "ref": "6194610f-65ee-49a3-a8a2-c713d3fce719",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "26c02630-7af6-4d81-8c12-13c9127c87c5"
        },
        "item": {
          "id": "a7619be3-3cc3-4e18-bed3-cc165ef4e2f4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3a7eddb6-df0d-40fc-8673-bb4caec6855c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375e6d32-1d3b-470d-8d81-0e5a3a860fcc",
        "cursor": {
          "ref": "cf002891-5bc0-40ec-97ff-da6e7dc8d28b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1170dac0-f636-4f3d-9cb4-86f34f02c576"
        },
        "item": {
          "id": "375e6d32-1d3b-470d-8d81-0e5a3a860fcc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9d8ae056-362f-4086-8dd4-d5f26706521a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40931c92-ebec-4690-b5f6-3d7125dcb3b3",
        "cursor": {
          "ref": "56ff3593-59c0-4881-a3b6-f216f67cea84",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3636fba8-d900-4bec-a884-ae228b865421"
        },
        "item": {
          "id": "40931c92-ebec-4690-b5f6-3d7125dcb3b3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "71fb3cd2-aae6-4730-8c08-65690fca8692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bee42a-b376-49be-aeec-a96141a40d2f",
        "cursor": {
          "ref": "180eeed3-9870-4505-a289-f856ae0c397f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fb02e64e-83ab-4bb9-af6a-57edbbea9e36"
        },
        "item": {
          "id": "50bee42a-b376-49be-aeec-a96141a40d2f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fdb7878e-b836-4737-a858-1299a6a94a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff52f5e1-fd4a-4e7a-b589-0f81e3bfa507",
        "cursor": {
          "ref": "96df1384-b0ee-4fcc-bce0-c94c94806c14",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f520d49e-e7b5-4c07-ae3a-e2694b090b20"
        },
        "item": {
          "id": "ff52f5e1-fd4a-4e7a-b589-0f81e3bfa507",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4a03ccd9-7c8a-4861-ab88-8a2a30627b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6fcf8e-1f81-40ba-9349-781ac26a999c",
        "cursor": {
          "ref": "fa28237d-391c-4936-86c1-fcbe6ce8877e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e9cb42b7-0450-4f0d-becc-95c66a34a0ed"
        },
        "item": {
          "id": "bd6fcf8e-1f81-40ba-9349-781ac26a999c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5e3d3c4a-077f-4746-9e4e-a6fa38b13627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f8d225-b99b-4b06-80b7-9fe4301f6d0a",
        "cursor": {
          "ref": "14822c86-29d6-4679-b803-46e106e0850c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4350689d-0401-4219-8e99-8d63813d619a"
        },
        "item": {
          "id": "b2f8d225-b99b-4b06-80b7-9fe4301f6d0a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fa7d5886-90bf-4180-b0ad-0f1d9a41bae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44cb8b4-0621-46ee-96f5-d9b310899ecf",
        "cursor": {
          "ref": "2e2e08c6-2f96-44a0-9855-689c74d22cd3",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "081a0b83-1c41-4d29-a2c1-e95ec64d790e"
        },
        "item": {
          "id": "d44cb8b4-0621-46ee-96f5-d9b310899ecf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bd288dcb-cdd3-4a18-b9a3-32fad2f4850a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e124669a-5f25-4552-8475-dad6a61fdb73",
        "cursor": {
          "ref": "54bdb507-1be1-4641-95cf-cc9fd16686a4",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4aa9819e-8672-4be9-a6ca-21ef6d933096"
        },
        "item": {
          "id": "e124669a-5f25-4552-8475-dad6a61fdb73",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4338a69e-55de-4438-9235-7a906cfc5ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c829103-f8b3-4142-9cb6-df896332cc31",
        "cursor": {
          "ref": "54e8facb-77b4-42e6-a06c-6f4b975f245c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "357fae26-7841-46b4-b221-2bfcf0534e45"
        },
        "item": {
          "id": "2c829103-f8b3-4142-9cb6-df896332cc31",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0d9c75f0-8098-477a-adc0-34aace1ddeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196462d0-58ca-4ccd-bee3-e6b487b816c7",
        "cursor": {
          "ref": "ba2cd322-246c-42e5-8d84-7dfa5655d880",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "17ae3eda-12c9-46f5-b1ff-5816438ae5d3"
        },
        "item": {
          "id": "196462d0-58ca-4ccd-bee3-e6b487b816c7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "965239be-02aa-44c2-97a2-7936f72e89a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c5a485-1c31-4358-b074-439aa1892bee",
        "cursor": {
          "ref": "8613af3a-4e92-45f1-911c-6fe43cd271d8",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "94fa9f45-0da7-4539-ab93-7179a0420406"
        },
        "item": {
          "id": "89c5a485-1c31-4358-b074-439aa1892bee",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b30d8408-515e-4f31-94eb-1e256465a145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220b8f36-6f54-4b4f-a169-0ca2cea56fbf",
        "cursor": {
          "ref": "2873d738-aee8-49f2-97e3-a77a36ea774e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e65234e1-4029-4dec-89a6-579aa0ff045a"
        },
        "item": {
          "id": "220b8f36-6f54-4b4f-a169-0ca2cea56fbf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a56d1891-6cf1-4ef5-9b99-c6d0dd1a9061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e451eb57-1444-4c2d-ad8e-779d666e7b59",
        "cursor": {
          "ref": "4eedb0f7-f0f6-4ba4-9bc7-5e0fb82985d7",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d3287ef9-5246-4379-acc2-1a7af4dc8937"
        },
        "item": {
          "id": "e451eb57-1444-4c2d-ad8e-779d666e7b59",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8f8aca77-a5b1-4057-881f-54666be714af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e11fb9-4f53-4644-9f20-6a1224d31309",
        "cursor": {
          "ref": "36227238-392f-47ed-811c-ed28ecb4e897",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7d1c4124-694a-4441-b889-67427fd2abc0"
        },
        "item": {
          "id": "23e11fb9-4f53-4644-9f20-6a1224d31309",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4013e53e-18c5-456f-b6a6-626fc8990e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb3744b-f261-42cb-a212-deb9e524cad9",
        "cursor": {
          "ref": "3a6d418a-2b49-447f-be6f-f7e0af7526c2",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3c7f179d-ca42-4472-9d83-09d1e23e8fbf"
        },
        "item": {
          "id": "7cb3744b-f261-42cb-a212-deb9e524cad9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7d0bc7d9-78e0-4c6e-ba31-d0751668b448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a8b811-6f50-44d5-86f6-7e16c040c765",
        "cursor": {
          "ref": "1a34acb6-0703-4cd6-808c-9c09349e87d4",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c9d5f241-552b-4522-859a-358a53d13740"
        },
        "item": {
          "id": "81a8b811-6f50-44d5-86f6-7e16c040c765",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5e02c2d2-8958-4797-b6ac-84fdfc47efca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cff4598-882d-4f20-aea6-5968124bee9c",
        "cursor": {
          "ref": "6d72bc7a-ed47-4dfa-891a-ea2cb2f9bf8b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "29eaec05-8b30-488f-b97f-da4a42c8b855"
        },
        "item": {
          "id": "0cff4598-882d-4f20-aea6-5968124bee9c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2e002714-44af-48d0-94bb-6d467cba2a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512a04e7-8d40-4036-843b-3b935d8f59e4",
        "cursor": {
          "ref": "7a6cacca-8908-4b74-a8c2-c5f0a78e3403",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "05d0fdae-c7d3-435f-9236-501e3eafb982"
        },
        "item": {
          "id": "512a04e7-8d40-4036-843b-3b935d8f59e4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d6eb0ee3-0c7d-4165-bd33-405a95b40843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586fe6fe-70db-44ae-9101-4ef0a9c0e789",
        "cursor": {
          "ref": "fb4f16a7-c9ba-4539-b9f5-d5a63a9b5642",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9673fb2f-34c1-41d2-9835-c87a74b3ceca"
        },
        "item": {
          "id": "586fe6fe-70db-44ae-9101-4ef0a9c0e789",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b9f26924-188e-4893-ba0d-780016595dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66aa1f01-336f-4ced-b6aa-a8e9ef0e6389",
        "cursor": {
          "ref": "90737f79-d151-4fb2-88eb-db530cbecc71",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8e4980d4-fa93-4dcd-94ed-66c04e267dfb"
        },
        "item": {
          "id": "66aa1f01-336f-4ced-b6aa-a8e9ef0e6389",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "338765cf-07ed-49e2-8c71-8bd60fd67eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6559977f-5b90-44d9-8e8d-0874789c94ac",
        "cursor": {
          "ref": "4c718c9b-746e-4737-8c53-6062acd14699",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "278f6a61-11a4-4579-86a3-0861a55b6c2d"
        },
        "item": {
          "id": "6559977f-5b90-44d9-8e8d-0874789c94ac",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8e9ba12c-f3c5-4bf5-862f-dfcaae494b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff27708-f74c-4349-8255-5e4322be0fb3",
        "cursor": {
          "ref": "5c219098-1799-48b0-b95d-1fcfb91a550f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fa291589-cef3-4dff-a26d-2be468e6c1ab"
        },
        "item": {
          "id": "cff27708-f74c-4349-8255-5e4322be0fb3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0494dede-e50f-48ea-8bf0-91e531d44a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a11abd-a164-45b3-8e77-a2b7392c6723",
        "cursor": {
          "ref": "4fbca212-0023-4a23-a57e-9d88665045d0",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1f0e1d56-7dc2-4933-8c2b-32fd162a5a3c"
        },
        "item": {
          "id": "c8a11abd-a164-45b3-8e77-a2b7392c6723",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f189e63a-9af6-48c8-a2a5-cf7242f6ae31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc2f06a-1c5c-46bb-a0bd-13e7665da8fe",
        "cursor": {
          "ref": "e11e7233-3892-45eb-8f45-700a1a2a9dee",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d5cb32b4-6e55-452b-94b9-2c76e06a67f8"
        },
        "item": {
          "id": "9cc2f06a-1c5c-46bb-a0bd-13e7665da8fe",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "64a0063f-8a6d-40ad-9148-a0371a17100e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "226be415-8a11-43b1-8a3e-4e52c070b53e",
        "cursor": {
          "ref": "d3a5ce8d-a4c7-44a0-af8e-a7924251928b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b6027eee-4f05-46e3-b4ea-b7fde1177563"
        },
        "item": {
          "id": "226be415-8a11-43b1-8a3e-4e52c070b53e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6af5af6c-a0e4-438d-a486-e3188ac632f5",
          "status": "Created",
          "code": 201,
          "responseTime": 4759,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "876f1898-6ceb-4b11-ab08-471be485d220",
        "cursor": {
          "ref": "755aaad9-fb67-4da7-abff-9e0930b2081a",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "66aef889-b1ea-4a33-ae6d-99e14b8a183d"
        },
        "item": {
          "id": "876f1898-6ceb-4b11-ab08-471be485d220",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "61bd8d2f-40e6-4133-9d22-e35614187f43",
          "status": "Created",
          "code": 201,
          "responseTime": 2179,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "65262ccd-6dc4-4cd3-97df-a8e9b746ad63",
        "cursor": {
          "ref": "8bf8f6d0-7c92-45f8-8f02-f9bfffff644a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "194c1223-ebae-414d-b22e-9ace4b29a66b"
        },
        "item": {
          "id": "65262ccd-6dc4-4cd3-97df-a8e9b746ad63",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "40a2f96e-ffa1-4505-b7fc-dfdebd45f3a5",
          "status": "Created",
          "code": 201,
          "responseTime": 2985,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "130eb55d-6b1e-4785-b10e-53a0e61ed53d",
        "cursor": {
          "ref": "5dc2bf0d-7d2e-4b43-bd5f-fd65327c2860",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a6d3d675-4c39-47ae-8e66-2d09a19e2350"
        },
        "item": {
          "id": "130eb55d-6b1e-4785-b10e-53a0e61ed53d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b6ac4ab3-80e4-4797-9b34-936673543659",
          "status": "Created",
          "code": 201,
          "responseTime": 2275,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a50cd5-b790-4e0d-b270-d0e4b963d51e",
        "cursor": {
          "ref": "9c60c42d-3b94-4bb7-b2a2-7598f6e92ea2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6ad5dbca-fdfc-4ae3-b731-43db4fa84ba8"
        },
        "item": {
          "id": "e2a50cd5-b790-4e0d-b270-d0e4b963d51e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "874fa8a7-2de5-47af-8425-5b6dc731080d",
          "status": "Created",
          "code": 201,
          "responseTime": 2249,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cc118d-0dba-4f1b-a24a-e3a9b3a35b92",
        "cursor": {
          "ref": "a39896cd-02be-4402-963c-51791b586a09",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ca46c631-f253-4907-b248-94c8da78f24e"
        },
        "item": {
          "id": "d8cc118d-0dba-4f1b-a24a-e3a9b3a35b92",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e3933c02-5ee7-4075-8cf4-6e17688f57df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c49235ba-82b3-49ea-a05c-a733a6584a59",
        "cursor": {
          "ref": "7ecf0206-f748-4f44-bf34-a37806575979",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4bce66b2-2aef-45b0-80be-96ec2ed2a6e3"
        },
        "item": {
          "id": "c49235ba-82b3-49ea-a05c-a733a6584a59",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b98b2073-a29e-4e37-a613-ae3b242c7365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01aafe19-dba6-46ec-83af-512343cf90e2",
        "cursor": {
          "ref": "f16c5610-21b1-4258-9936-4c3b67448537",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "698cca91-3939-4441-8a5c-02bfc7d16b08"
        },
        "item": {
          "id": "01aafe19-dba6-46ec-83af-512343cf90e2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1f65b3ce-b24a-4bfa-9570-3e342bbf875c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8380092-6d17-42d3-a87b-d3f478bcb91a",
        "cursor": {
          "ref": "3f54c8da-85e0-495d-a73f-14310c675ef1",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "37bc957e-88e5-4bf5-8717-b1ea84936adb"
        },
        "item": {
          "id": "f8380092-6d17-42d3-a87b-d3f478bcb91a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "93be277a-6ad9-4035-bd99-75c5739a9118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d830ecaf-658b-44b5-88b1-b6497850318d",
        "cursor": {
          "ref": "9e6abd87-8f79-4f7b-b782-20e6206f00fd",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c1cc8fc8-ce4e-4265-8501-ca7f5e926d34"
        },
        "item": {
          "id": "d830ecaf-658b-44b5-88b1-b6497850318d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "92f6e0e6-b02d-4df2-af7b-c838935d18b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e3821e-5d3a-4c19-a4df-a7741db41222",
        "cursor": {
          "ref": "f8b97b69-a76f-4ece-bc0d-d5b8d375c42d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "78f755d1-faa4-4b09-a5ba-0d08fb3e37fb"
        },
        "item": {
          "id": "58e3821e-5d3a-4c19-a4df-a7741db41222",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "567ede27-acb3-480f-b2ed-515491b16294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933e1df6-ccb4-40fb-a8b8-54298591c451",
        "cursor": {
          "ref": "3282289f-115c-4ed3-bb3e-16b99f2bdb94",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "647789c9-6b64-4208-a198-49d4ef12989d"
        },
        "item": {
          "id": "933e1df6-ccb4-40fb-a8b8-54298591c451",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c9de6c79-1fbf-4a67-85a4-54fc022bc98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bb8bde-02ed-48f6-86ba-1278b2771f03",
        "cursor": {
          "ref": "04390578-fbdc-43c6-8f7f-7e78a5b84734",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "650f95a6-9aa0-4098-a78c-adbfdb3213eb"
        },
        "item": {
          "id": "16bb8bde-02ed-48f6-86ba-1278b2771f03",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5c8850f7-c9b0-45ca-a24a-6c085f6e76b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c4d9d2-2c52-40f4-b2ea-cfb90cd8e685",
        "cursor": {
          "ref": "17d7cff5-1f03-44cd-ae83-69e4b1613164",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "894186da-2065-4ed4-9a40-68b6fad373dc"
        },
        "item": {
          "id": "e9c4d9d2-2c52-40f4-b2ea-cfb90cd8e685",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5caaecff-6819-4f86-b8a2-e626bdaee403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0727de-b04c-4bba-89b1-ef4145bc3c6e",
        "cursor": {
          "ref": "f8e80328-5707-4ddf-87d4-478fdf6dbf69",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "111d731d-9623-4a86-b3c6-aae1b9c0f54d"
        },
        "item": {
          "id": "0b0727de-b04c-4bba-89b1-ef4145bc3c6e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a6cc2bbf-4220-4de6-9c74-d17a09d24ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9909c0-02d0-4306-828e-3a5456308750",
        "cursor": {
          "ref": "774e2201-659a-4213-9bde-f17ea6839822",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a7a0a279-91f3-40a0-a721-79ad12f2198d"
        },
        "item": {
          "id": "1a9909c0-02d0-4306-828e-3a5456308750",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62cf0d30-cfb8-4458-a048-70055aa32c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06ad97a-85ce-4bba-996e-b412cbe03b41",
        "cursor": {
          "ref": "9a3397b9-45aa-4bd8-bd07-e7075d82fa2c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "62e22705-5b33-4268-9727-43044a8a14fa"
        },
        "item": {
          "id": "b06ad97a-85ce-4bba-996e-b412cbe03b41",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "394f6d21-083c-477d-9298-fd51854e3fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d22b327-bdf6-4ba7-899b-8e332026e7db",
        "cursor": {
          "ref": "58be03b6-ab81-4aae-a18f-2ebbd9368444",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d4dc9209-793a-40ca-9423-7b2c68e430af"
        },
        "item": {
          "id": "5d22b327-bdf6-4ba7-899b-8e332026e7db",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "320f7b26-df99-42fd-90f4-a8eb858765ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3859f10-dee7-409f-9d84-b3e7e3014f52",
        "cursor": {
          "ref": "470b67e7-a30b-468e-89d1-1f2586e185c7",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "becffd4b-54b3-4a94-b356-d5ae6241e53a"
        },
        "item": {
          "id": "e3859f10-dee7-409f-9d84-b3e7e3014f52",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d0551c95-765f-44b4-92e2-3f098edd0770",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 96,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eba8b9a-b000-46ee-bc14-830072b83764",
        "cursor": {
          "ref": "1024989a-6bee-42de-b687-82943004a337",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5cf51003-3022-4f7e-af5a-7ee124228ecc"
        },
        "item": {
          "id": "7eba8b9a-b000-46ee-bc14-830072b83764",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1d4bfee6-5e34-4ac5-b9a0-69325d91c6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b71ba6-1097-4991-a002-cf1b251914ea",
        "cursor": {
          "ref": "4bf7adb0-ee62-4242-b4dc-95b7ace99856",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e9c8b331-6ca7-4089-892c-cbdcf7f37d6e"
        },
        "item": {
          "id": "d8b71ba6-1097-4991-a002-cf1b251914ea",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6737fbe1-a326-44cc-a48c-f1a79e96e3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d93974f-f85a-4b96-b8f8-28ce9027fbac",
        "cursor": {
          "ref": "9d8c0a09-1ce1-4c26-9473-fe2bf16769b4",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3b01f889-c749-4934-a87c-6c06e5c5eea3"
        },
        "item": {
          "id": "2d93974f-f85a-4b96-b8f8-28ce9027fbac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6cd5819a-9cda-45f7-8002-6c8f041cc713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98b8ebb-c3a1-4757-96d0-ed643a229c0d",
        "cursor": {
          "ref": "968fc545-9f20-4aab-9dbc-101c146a6579",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1622ca29-fdf4-49e4-b5b2-2de2be48852a"
        },
        "item": {
          "id": "c98b8ebb-c3a1-4757-96d0-ed643a229c0d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9c130abd-d2b7-476c-bb9b-31e0901cea9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07ecae0-7674-4966-bf0f-3637c2229021",
        "cursor": {
          "ref": "7cb251a9-b0c1-4926-bf83-7df0a89c3d57",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d485b172-f13a-426c-972d-e24ec2f10081"
        },
        "item": {
          "id": "a07ecae0-7674-4966-bf0f-3637c2229021",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7af22dc7-829e-4a29-b56d-bbabb00635b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3421c20-5ffd-42a5-ba65-0e8ad6560405",
        "cursor": {
          "ref": "86862eb5-4a92-42d9-a1ee-3d8f63dc98ac",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6da77767-5bad-4de8-9c50-dc3fe6376038"
        },
        "item": {
          "id": "e3421c20-5ffd-42a5-ba65-0e8ad6560405",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "64313cc4-587d-4d62-a91c-43e189b436dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa35f928-2c23-47ed-abfe-17edba44e0d7",
        "cursor": {
          "ref": "1399c1d8-a2e1-4e04-aad3-598cfcf88eb9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "40a3bf5f-2c1e-4d93-beef-6a927212b86c"
        },
        "item": {
          "id": "aa35f928-2c23-47ed-abfe-17edba44e0d7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f3083a2d-48f3-459c-9ecf-681396ab9dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99ab83b-2bb6-40d9-b1fe-221b4d388998",
        "cursor": {
          "ref": "5d71ca89-29c7-49c7-96c9-913838862fbc",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "691a76ea-9d85-418d-96af-99e180cd4e2d"
        },
        "item": {
          "id": "b99ab83b-2bb6-40d9-b1fe-221b4d388998",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "055baccc-26e3-48a9-8251-0e89850e4f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4048334e-c392-4604-8b33-194d63df35b2",
        "cursor": {
          "ref": "0df9ba33-cc70-4f93-92f9-9e4ebe8ba12b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d24c105d-9118-45f2-9350-e73f29321041"
        },
        "item": {
          "id": "4048334e-c392-4604-8b33-194d63df35b2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3be0fe1b-bda5-422a-983b-30fe26f48752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af1ee58-651a-42fd-be7c-16de3851b724",
        "cursor": {
          "ref": "5590d416-fa11-49f0-b3e8-7e97a8a761d9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cf701336-d57d-46eb-b66d-56a94202275a"
        },
        "item": {
          "id": "6af1ee58-651a-42fd-be7c-16de3851b724",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0bd11999-575b-4322-b89f-3930835fa6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f81edad-24df-46c4-9ecd-cbc78232a318",
        "cursor": {
          "ref": "b9331fdf-23e7-40dd-b15e-87424a51cb46",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1f0d400b-24f2-4cca-9f5b-51e9a9dd6837"
        },
        "item": {
          "id": "0f81edad-24df-46c4-9ecd-cbc78232a318",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bf55e691-e43e-44a2-b842-5ccd3b5c7ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa425bb-d439-410e-a4f5-af7f80ddb851",
        "cursor": {
          "ref": "8fc71096-3418-4ce4-a3d0-1bd84f749e4c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3c21517f-52bd-4976-9746-c4c49760c759"
        },
        "item": {
          "id": "5aa425bb-d439-410e-a4f5-af7f80ddb851",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c0f8d8d5-3cea-4398-a24a-acec53c0f6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bf078c-c236-4507-8dda-3ba683f2947d",
        "cursor": {
          "ref": "bdf6706c-5253-4fd0-abf9-290123143491",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "caa84bcc-1434-444e-9b4f-613b17a81faf"
        },
        "item": {
          "id": "40bf078c-c236-4507-8dda-3ba683f2947d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "686de2c9-f7b4-48f8-9197-801adce604e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a42eb7-b9f3-492b-97da-e0585ce9898b",
        "cursor": {
          "ref": "a8ff6435-c2ea-4489-8169-8284737c283c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a2864fab-cefb-4593-b5ef-3085f1b0ea84"
        },
        "item": {
          "id": "b3a42eb7-b9f3-492b-97da-e0585ce9898b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c309ec70-44f5-4ae1-87da-f767ba319141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645f86b2-5a81-40c3-86a5-ab58d270c768",
        "cursor": {
          "ref": "05ffe690-cee3-44b3-87d3-b8c0c0ced9a0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "16228e86-8dd6-4f7e-8c32-cb054d749233"
        },
        "item": {
          "id": "645f86b2-5a81-40c3-86a5-ab58d270c768",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dd4cd38a-ad02-4cfb-9e58-49d99991d739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79f26cc-cde0-4342-b0be-b195402b5575",
        "cursor": {
          "ref": "e0004b11-7095-4010-8139-9668251d73dc",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e49fc8a6-a654-460c-8490-34fb60eb66d8"
        },
        "item": {
          "id": "d79f26cc-cde0-4342-b0be-b195402b5575",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "22135c28-2fb8-4d01-8af4-8bb2cb986588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b90b2a-baa5-42bd-943a-1c73759ad213",
        "cursor": {
          "ref": "34b8d045-d6fe-4d3d-a420-e21d646ad25d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e73294fc-3778-4dc6-a362-328edae6c0e1"
        },
        "item": {
          "id": "e8b90b2a-baa5-42bd-943a-1c73759ad213",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7bd6fbff-322c-4621-8682-5bfbc17b2fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aae98c6-1160-4028-9aef-81f7d66bd35e",
        "cursor": {
          "ref": "190406ca-881c-4a9a-9b3d-fde8771d03b7",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4e58a894-c1bc-4e62-b211-1549b95fb12f"
        },
        "item": {
          "id": "3aae98c6-1160-4028-9aef-81f7d66bd35e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1ac25ddb-972e-4a51-ad6d-2bfae20e2028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b378eee-c398-4f55-ad8f-77413a725871",
        "cursor": {
          "ref": "24b47d59-59a6-41cd-9782-5bffca2e5c4d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8bacb5f0-6d35-4597-8665-79a6218a42f7"
        },
        "item": {
          "id": "8b378eee-c398-4f55-ad8f-77413a725871",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "92de7e31-80ea-4782-8777-8f1f2cc12ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc86b20-14d7-4fd0-987b-43ff6ffc1143",
        "cursor": {
          "ref": "1d83efa0-6739-40e3-9ed2-a9a4bd4f9c8d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "975eaaf5-329d-4238-89e5-e842ed745526"
        },
        "item": {
          "id": "0fc86b20-14d7-4fd0-987b-43ff6ffc1143",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a6c8ecc4-a4d1-4ebe-815f-cd6a8ad15dbd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a418c0d6-d19d-4052-95a2-18f736d83f12",
        "cursor": {
          "ref": "256bd257-7e8f-4c90-950f-1663321905da",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dc517f98-d6d8-48e7-800a-02d77119bc19"
        },
        "item": {
          "id": "a418c0d6-d19d-4052-95a2-18f736d83f12",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ee82d0e3-958a-4523-a269-e388eebe053b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabe42a3-c5fd-4c77-ae6b-1c2ba6f59ad0",
        "cursor": {
          "ref": "c9e528f6-3835-4972-838f-140713747600",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "186e70e1-bea3-42ac-83f7-8cdc81d7a48f"
        },
        "item": {
          "id": "aabe42a3-c5fd-4c77-ae6b-1c2ba6f59ad0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7af6b172-4c3d-4cd6-b13c-ae5a3cf9ae44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4afe2d-1f85-4bc9-bca5-7a9b4141bf2b",
        "cursor": {
          "ref": "14e8a337-ad6d-4a5b-b571-fb96a4798b0e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1e2a5a2b-81d0-4a3f-970b-24c4b3dd1472"
        },
        "item": {
          "id": "7f4afe2d-1f85-4bc9-bca5-7a9b4141bf2b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e24813ac-24db-4525-901b-0a584554e41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bebbbab-6f12-435f-911d-07420daa5fea",
        "cursor": {
          "ref": "c8d2fc4e-e637-49df-828d-61c11856d424",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f79be8de-19fd-4419-a002-1e6ff8e59df4"
        },
        "item": {
          "id": "6bebbbab-6f12-435f-911d-07420daa5fea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "148544e4-7686-4527-9b1d-3b454fd1e739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59cfaed-b0d7-4bb4-95ae-016e9e3a97c5",
        "cursor": {
          "ref": "92d06b85-9cc9-4aa2-85ca-6720eac9f60c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e557d941-cd6d-4d03-b40c-5a05f4f5d179"
        },
        "item": {
          "id": "e59cfaed-b0d7-4bb4-95ae-016e9e3a97c5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3f5ec24c-73e3-4d65-834c-443dbbd7139a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43dee6e-6f73-4448-ba6a-02a45cdfb384",
        "cursor": {
          "ref": "6d15fb17-b29e-4524-a26f-47687d5592e9",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "575db4f7-051d-4925-a275-6f91ff9f28be"
        },
        "item": {
          "id": "a43dee6e-6f73-4448-ba6a-02a45cdfb384",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2ebf67e5-e00b-4451-8d5a-12da86395db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f272baef-cb16-43a6-9777-f2e71a160b6c",
        "cursor": {
          "ref": "f3c07caa-2bde-40db-9f41-d6f4b6c39a86",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5f633f3a-0e91-4bc5-9877-d750296491d9"
        },
        "item": {
          "id": "f272baef-cb16-43a6-9777-f2e71a160b6c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "473202b2-005a-4a9b-a117-a814b73a45b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43479372-cfa9-4afb-b36b-34526ed43849",
        "cursor": {
          "ref": "f4686cd8-dbbf-432c-84e9-93f8af69e68e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "aca5bf12-8234-48ef-bde1-47df2023c159"
        },
        "item": {
          "id": "43479372-cfa9-4afb-b36b-34526ed43849",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8ad86b18-bf21-4ab6-8ed2-91502fbb592e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88eed55-b57d-46de-8dff-43390f51966b",
        "cursor": {
          "ref": "e42a96fc-db27-45b1-acad-1dbb01dc6e9c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "01e69a9f-840e-4490-8da7-8d5ebe7b4ecf"
        },
        "item": {
          "id": "a88eed55-b57d-46de-8dff-43390f51966b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e552b8c5-d55a-4109-af8c-434727f277c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312b6ace-626d-41fb-8ce8-286504b86325",
        "cursor": {
          "ref": "fc14c91a-0011-4291-9a70-320f26b178b9",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9d32f250-f645-424a-b7d8-2ae952ff36dc"
        },
        "item": {
          "id": "312b6ace-626d-41fb-8ce8-286504b86325",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "12342489-b587-4d68-9820-ce2c735d9378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12339c1-00f7-47e1-bce7-6c0e8cf57c0b",
        "cursor": {
          "ref": "23e5715e-0165-4c92-8264-c73ac29c415f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "db064d14-e76b-408d-9997-a8c2a8e3f89e"
        },
        "item": {
          "id": "e12339c1-00f7-47e1-bce7-6c0e8cf57c0b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "40ef869c-2259-46b5-9ddb-f810b20bfb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710d698f-08d6-4fff-a3ad-e3285fcc382f",
        "cursor": {
          "ref": "d34e9e42-e019-4edf-b0da-e86c866e095b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "83dfab7f-e2a5-490f-a67b-0dfad9395dfe"
        },
        "item": {
          "id": "710d698f-08d6-4fff-a3ad-e3285fcc382f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dc158e1b-d86a-487d-b6d3-7ba08c63b74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c826c9-3d5a-41b0-9809-0b4dea257614",
        "cursor": {
          "ref": "aab03a30-3608-4569-ba26-fd3dec548a48",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "67ab0285-85e1-4112-a07c-2e148477ddfd"
        },
        "item": {
          "id": "60c826c9-3d5a-41b0-9809-0b4dea257614",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "02af0c9f-690e-484a-8068-fac00dc08794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ac475f-bc56-41a5-905c-f87b4fbd4852",
        "cursor": {
          "ref": "2f58495e-bd4f-4d02-954c-fa4a633979a4",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "31fbad36-1612-4fd1-b743-da539bd7898c"
        },
        "item": {
          "id": "76ac475f-bc56-41a5-905c-f87b4fbd4852",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5f7dad54-24aa-4ae6-8305-7f94d6b9b939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6981d4e6-7866-4648-b07c-66c4e7f9205d",
        "cursor": {
          "ref": "de0ca00f-491d-447f-b63b-74a068eb331d",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "29cbca23-f9bb-4b86-aa53-f5fd669271c1"
        },
        "item": {
          "id": "6981d4e6-7866-4648-b07c-66c4e7f9205d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a24c8877-7bb4-4aef-97b2-516a2ae50ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c23bbd-ddbe-4c46-9a46-7bfb0d79c23e",
        "cursor": {
          "ref": "5164e765-3767-4dfd-bf98-527a1bbb4c2b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c0762841-83af-426b-8096-f568276ab0f8"
        },
        "item": {
          "id": "60c23bbd-ddbe-4c46-9a46-7bfb0d79c23e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "17a88783-db65-468f-a9c3-c8a30c4a764e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df74ba69-0512-4abc-8144-6779c27f3283",
        "cursor": {
          "ref": "99e8c940-b576-4949-9def-962295e42e04",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0399f8a1-7831-402c-baf1-cee26be8cbcb"
        },
        "item": {
          "id": "df74ba69-0512-4abc-8144-6779c27f3283",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "951e037b-761b-4eda-95ed-06e3d38b1f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56368ae6-e25c-417e-8af2-804c15e383ad",
        "cursor": {
          "ref": "abf7aa61-37d5-4eec-b2d0-14a1f5ac5c34",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "39e1007a-096d-412a-a20c-7302c3c9f444"
        },
        "item": {
          "id": "56368ae6-e25c-417e-8af2-804c15e383ad",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ba7663a-63dc-452e-afa0-2a7ef2759ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f6b29b-aade-4017-a656-b41936b364ca",
        "cursor": {
          "ref": "8aee14d9-453a-443a-b299-fec4c0f53dbc",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d3c3572b-d1b1-4a05-b2d1-d2089eb5e369"
        },
        "item": {
          "id": "d7f6b29b-aade-4017-a656-b41936b364ca",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1606957e-39b1-4928-90e6-efda46939736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badd1669-536f-4a0e-be2c-60e7476c24e5",
        "cursor": {
          "ref": "5fab238c-b16d-42e4-b680-1b82b5ea6867",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a9cb5aa2-017d-4c55-9583-59d0c9e11805"
        },
        "item": {
          "id": "badd1669-536f-4a0e-be2c-60e7476c24e5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ea016157-55cf-42d7-a95e-05d99ad80ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbb75ad-8637-4bf4-9d60-ef903e53147b",
        "cursor": {
          "ref": "31416bb6-c8d3-4485-a8ba-63aac553e3c1",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8fc3d226-7d9c-47c8-a547-93b020dd8de7"
        },
        "item": {
          "id": "5fbb75ad-8637-4bf4-9d60-ef903e53147b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a0a02c7d-dcf3-4dd3-b1e0-0c5fc5864075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2fbef0-2a58-45e8-a2bc-4b8689df27b3",
        "cursor": {
          "ref": "fc14cc53-513c-4ce2-9b76-2e85b8cf01fd",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "46e6b693-3dfe-42eb-9a25-6818e2d07e6d"
        },
        "item": {
          "id": "8a2fbef0-2a58-45e8-a2bc-4b8689df27b3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7826b9ac-1fb0-43d3-9e10-149b9da91b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d72487d-c97c-4bf6-ad3c-780cb2cd4ab1",
        "cursor": {
          "ref": "33744fca-8687-46ed-b076-7c659ce15061",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "418ecf51-a06a-43fd-9f95-91f93f0eefc2"
        },
        "item": {
          "id": "9d72487d-c97c-4bf6-ad3c-780cb2cd4ab1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d786ad75-7042-4904-8714-2e3f7194e413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a616c1-8979-4f9b-a107-610d9bec69f5",
        "cursor": {
          "ref": "7f0b7c06-0d69-4151-a24e-0b9989199234",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "25c0b2eb-acc1-43a2-aca2-1cb90477ca08"
        },
        "item": {
          "id": "83a616c1-8979-4f9b-a107-610d9bec69f5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "64295ed7-348c-43db-88b8-b5e863cb4420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58c9e6e-ed5d-4c2d-9c6f-a11529d9bb68",
        "cursor": {
          "ref": "cfdf4c0a-7c3e-4b45-8eb8-f50c446b8625",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fc29edf4-3c94-4012-9dc8-5c9eccaea2db"
        },
        "item": {
          "id": "d58c9e6e-ed5d-4c2d-9c6f-a11529d9bb68",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5bff1533-fb4c-4328-83e4-5c24421ae077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cb53d5-f833-4c53-9e79-16afbbfbb3c3",
        "cursor": {
          "ref": "aaee210b-be5f-427d-93d7-e2a4ca4533df",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b2f9760c-840f-4d8f-a4f1-2eddc6abf240"
        },
        "item": {
          "id": "e3cb53d5-f833-4c53-9e79-16afbbfbb3c3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "530a876d-6741-44b8-a6a3-ee8b743076fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61db0be4-10af-47c4-8a9d-67fda14de36b",
        "cursor": {
          "ref": "1b10092b-9d46-42b3-924f-d996f7dfd054",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c648792e-e31b-40e5-b4db-9f41b91f5f4b"
        },
        "item": {
          "id": "61db0be4-10af-47c4-8a9d-67fda14de36b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5df72723-72f2-4e30-a9ab-9aad41c5f255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d770ed31-047f-4360-8a74-da15ceb79c95",
        "cursor": {
          "ref": "30527ce8-a5c0-4f86-9016-a1147119851f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5bca4200-e138-497c-8b4d-5a9621e0b088"
        },
        "item": {
          "id": "d770ed31-047f-4360-8a74-da15ceb79c95",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2805edaa-58d4-4b91-b7a3-3aaa08900d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f9706d-6739-45bc-865e-017c3351ccdd",
        "cursor": {
          "ref": "f65391a3-6509-4f82-af24-d5b0e75a2a45",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c41dcd65-623d-4d51-87fa-ecb2f15dd351"
        },
        "item": {
          "id": "99f9706d-6739-45bc-865e-017c3351ccdd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f442122a-f8b8-49ec-acd6-fc8e9acce3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9243d9-6267-4b14-9de5-3cc2d6060d8a",
        "cursor": {
          "ref": "20148833-9a01-4f7a-b2f0-60464b3116d7",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "54062d58-9482-43a4-9e4a-41d988b219d4"
        },
        "item": {
          "id": "3f9243d9-6267-4b14-9de5-3cc2d6060d8a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "66af290e-5e14-4559-b4f8-63721798059c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40dc72b-50a0-4309-9487-39d9408e9109",
        "cursor": {
          "ref": "75f2cb08-9b2c-47f3-9ad8-b63eac914d43",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2cee7458-127c-4a00-aeb0-e43bd2cd9bd5"
        },
        "item": {
          "id": "f40dc72b-50a0-4309-9487-39d9408e9109",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "779e238a-0dbb-4efe-a479-09b98e0140f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa57c9c1-2409-4739-92c6-4df23f53b0ca",
        "cursor": {
          "ref": "b4343724-4287-4efa-9343-50845b46d56f",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d6c2d6d4-271a-44b1-b95f-8823767edfa4"
        },
        "item": {
          "id": "aa57c9c1-2409-4739-92c6-4df23f53b0ca",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b463a6a1-b0c1-497d-91e3-e42b447879e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9141c88a-a019-4836-b323-9d57f9b946c6",
        "cursor": {
          "ref": "acc5ae82-3573-4c51-b406-8559c790b62a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2d0729ee-9c7e-44aa-bfc9-4f9947a14e3c"
        },
        "item": {
          "id": "9141c88a-a019-4836-b323-9d57f9b946c6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7d9aa4ed-2e7b-46ff-bc94-c29fb094b7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f7700f-6240-45b9-bc4f-cbf9aba1f65d",
        "cursor": {
          "ref": "a59a4c78-8eff-4bd4-97e0-0edca2d7d5e2",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a0bf1d05-75f3-41ee-9983-f94de6f035bb"
        },
        "item": {
          "id": "54f7700f-6240-45b9-bc4f-cbf9aba1f65d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bf3a73df-31a3-4264-8140-21da63fa82a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac2aee2-47e8-49aa-8706-a3c4b7eede28",
        "cursor": {
          "ref": "aa617ab5-77ab-4c7c-ae55-39ef99e60709",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "08d5ebaf-0ddb-4e7f-8136-142fc2e14210"
        },
        "item": {
          "id": "bac2aee2-47e8-49aa-8706-a3c4b7eede28",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e9f0b038-3160-4d61-80dd-0fa6ec81d548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a9938f-f73c-49a3-8bcd-9dd287b916f5",
        "cursor": {
          "ref": "67965923-bbdc-46e2-95f0-bb112d8e7cfe",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0e926450-b5bf-4b76-8763-41e9ae8eeac6"
        },
        "item": {
          "id": "d3a9938f-f73c-49a3-8bcd-9dd287b916f5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8c866462-2bae-42a8-978a-5332f02fb587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8e1f4b-1087-4d22-b797-ad92fdb3dbb6",
        "cursor": {
          "ref": "7ee9f003-2724-4eba-935b-b0082ee62d02",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cfbfa817-056c-4d0d-82b8-a41db3022df0"
        },
        "item": {
          "id": "5a8e1f4b-1087-4d22-b797-ad92fdb3dbb6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4c8dd5d7-90a6-41bc-96b8-00b3ddd19da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ad6c06-2042-4dc7-ba71-7ecc663a72b4",
        "cursor": {
          "ref": "d3a14a34-0b7c-459e-9e45-89a2afe63b2b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b7083bc5-57f1-42a9-857d-e03260614d22"
        },
        "item": {
          "id": "80ad6c06-2042-4dc7-ba71-7ecc663a72b4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6678ef8b-5c92-41cd-b28b-7ee7d2e0955f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f43430-5ab9-457c-81b6-3e2b13f5553e",
        "cursor": {
          "ref": "8d244686-912f-4f07-b1f8-96d09864a44e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "907d2b91-b168-4be7-8206-1ca9f88b055e"
        },
        "item": {
          "id": "d6f43430-5ab9-457c-81b6-3e2b13f5553e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f31620bf-04b2-4d45-9a8f-b73b832ec557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a394f2-5639-4307-a92b-594b39e80bcd",
        "cursor": {
          "ref": "f54d9471-7cae-475c-986a-8b8b2405acb7",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "452805b2-acf6-40e5-a7f3-4bf917f029dc"
        },
        "item": {
          "id": "09a394f2-5639-4307-a92b-594b39e80bcd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f147d6cf-bfbd-4033-93b0-267498b52ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbe632c-6c3c-4ad7-a919-313026e659e8",
        "cursor": {
          "ref": "7929fa7c-befd-4bd7-bcc9-ace123705bb7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "314f0ab6-161a-4774-a798-7336995c6ac4"
        },
        "item": {
          "id": "7dbe632c-6c3c-4ad7-a919-313026e659e8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "76ee3985-d77f-4877-b294-ef3b5301ca96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df74c4bd-e8aa-463e-bb60-271f8a0b5c3a",
        "cursor": {
          "ref": "570cdaf4-12ce-4370-bf15-dc42cdeca12e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1641f66c-7ea0-4701-a894-163473342ad6"
        },
        "item": {
          "id": "df74c4bd-e8aa-463e-bb60-271f8a0b5c3a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "92f080ac-8268-424b-a7c4-4dcc840c2efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4152485f-0d6b-4945-bf75-f90ec9065836",
        "cursor": {
          "ref": "a034fd18-a563-4216-8a6a-8605d4d93d97",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4e69cb35-1b56-490b-892d-52c46c2c3bd5"
        },
        "item": {
          "id": "4152485f-0d6b-4945-bf75-f90ec9065836",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7605cfd7-e03c-4e77-8518-63b70bb92115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87de2664-888d-46d5-8167-51a84dc2b75c",
        "cursor": {
          "ref": "b0f8a391-66fe-48c1-be03-4fcde48ad783",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "649a52b2-a28e-44aa-a0d1-d78bb9c5f62f"
        },
        "item": {
          "id": "87de2664-888d-46d5-8167-51a84dc2b75c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d32377b5-0374-4259-994f-42043e378240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbeb6cf-9e80-4d0c-89e9-61d36d1bf442",
        "cursor": {
          "ref": "244b5009-30f9-4f44-a3ca-78ae0ba2502d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f661f753-9663-4582-aa74-2461bdff149a"
        },
        "item": {
          "id": "dbbeb6cf-9e80-4d0c-89e9-61d36d1bf442",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "22750b36-81a3-423b-9f4b-b6c1a68e71e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fed0cc-1140-4e0d-bf24-ac9fd1fbc7bc",
        "cursor": {
          "ref": "847d6460-5103-4bd1-9b14-6491e0a7a24a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6560f6a6-adde-436f-b9cd-161fd7b6d888"
        },
        "item": {
          "id": "89fed0cc-1140-4e0d-bf24-ac9fd1fbc7bc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b389e97e-9db6-42e1-8c4b-86eb15083ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba9c6b6-f204-4b5b-9812-9064be86f95b",
        "cursor": {
          "ref": "4a1c55d5-09b4-464c-91b8-cce8a8c93a0c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6a0c3299-e5e2-4fa0-9a10-9a1cd9d2ea8f"
        },
        "item": {
          "id": "aba9c6b6-f204-4b5b-9812-9064be86f95b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "01110457-b4d3-4e43-b9bc-d6f9e71fd7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724d3cbc-8e22-4e3f-bb05-88db54173322",
        "cursor": {
          "ref": "d96c74bd-f88c-40fb-9c0c-de00bd056e6c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3f8d051a-94ac-47bd-9cc7-3947a49abbcd"
        },
        "item": {
          "id": "724d3cbc-8e22-4e3f-bb05-88db54173322",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aaa1fa4b-111a-4ddd-92e6-69699c684d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f093f6-c588-456b-8b82-63ca42d9776e",
        "cursor": {
          "ref": "3a4309ab-c966-43e8-9190-78d95f38840e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3439541f-8a8d-4381-a7d1-9f6f2c26c2a3"
        },
        "item": {
          "id": "c2f093f6-c588-456b-8b82-63ca42d9776e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4bc38138-534c-4dbd-9f01-7bf0d14eb3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b697a976-eca7-4120-83d8-c194c040b552",
        "cursor": {
          "ref": "e3eadf41-45cc-4151-bd49-56a2db1d7446",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "54b1567c-7d47-41b7-976c-be7d70ffd6a0"
        },
        "item": {
          "id": "b697a976-eca7-4120-83d8-c194c040b552",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a511a79d-0c25-4b7f-8dc4-42cc66bacfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee35258-136a-4595-93cf-3236d3cafe9e",
        "cursor": {
          "ref": "50137f28-f65a-472a-bdf2-a628ecd79873",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "df7b025b-c583-4a6a-b034-44f2d493187f"
        },
        "item": {
          "id": "aee35258-136a-4595-93cf-3236d3cafe9e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9c90e7d2-e297-47b5-9ef4-30d5c099eda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ca5e45-a5cc-44af-9798-ed005ed23687",
        "cursor": {
          "ref": "7d54cd45-b95b-4a2f-bc0e-dabd93fe5bcd",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bd8bbd91-5097-460a-bab6-cb373d7ecab5"
        },
        "item": {
          "id": "95ca5e45-a5cc-44af-9798-ed005ed23687",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "93c3c8b1-a7e4-4ee3-aeb4-d4a2679170e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3a2da4-b278-4a96-9e6c-2634cd01c7ad",
        "cursor": {
          "ref": "c7eeff4f-7c16-4849-b2cf-3568cb400d17",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d997d3ac-b555-4438-a50f-3162d41d7447"
        },
        "item": {
          "id": "9c3a2da4-b278-4a96-9e6c-2634cd01c7ad",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2b3a8c70-3564-4ad6-a204-2a8496961d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02178a8c-44ea-452e-a35f-45e9f40ebdd7",
        "cursor": {
          "ref": "34656e7a-e849-4cda-a281-ab2091cdd79c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "113f2a34-827b-43b3-aa3d-a2df1cb4c7ff"
        },
        "item": {
          "id": "02178a8c-44ea-452e-a35f-45e9f40ebdd7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3f6e6560-2577-464f-bc6f-5711b5782533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5af299-a9f6-41df-b2a5-19fcdb2ba621",
        "cursor": {
          "ref": "c0366df1-1a2c-4dfe-b9da-3f1bb4df24ad",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ab76ba52-1044-4b68-8952-0eb1edbf9997"
        },
        "item": {
          "id": "6d5af299-a9f6-41df-b2a5-19fcdb2ba621",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1adbe43f-68a2-4fde-8e75-acc52169e2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c11791-2a07-4ac3-ad60-e990ea651ebb",
        "cursor": {
          "ref": "0229e768-2905-4309-afc2-8bdddb801d1b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ff208eb3-f4d1-4b77-b0cc-c68e2c7ee623"
        },
        "item": {
          "id": "01c11791-2a07-4ac3-ad60-e990ea651ebb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "28673181-5d7a-4962-a38f-eea514572df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5c9e4b-415d-4b88-b276-0f491c22f388",
        "cursor": {
          "ref": "9513a324-1d49-4574-b5e7-c069b0f9920f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "15043088-a9bd-4536-9d7e-5b3743c6b911"
        },
        "item": {
          "id": "3d5c9e4b-415d-4b88-b276-0f491c22f388",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "60bffbdb-180e-457a-b8b6-0a991ee98824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a2d4fa-1117-4df6-a9a2-d1677ca01999",
        "cursor": {
          "ref": "5bac83cb-a6b5-47cd-a902-78551324503f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f10a8e04-53c4-4297-b020-d35bd897f3b5"
        },
        "item": {
          "id": "b3a2d4fa-1117-4df6-a9a2-d1677ca01999",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b0d5d34c-578d-4e03-9b65-d643b72ae4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f7b3a8-9d3c-48c1-a176-3a85c665a2b5",
        "cursor": {
          "ref": "24f88578-c522-4500-aa5d-f27034f69869",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2ec16bcf-10d4-49c0-90bf-d328d085ee9e"
        },
        "item": {
          "id": "19f7b3a8-9d3c-48c1-a176-3a85c665a2b5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7cf46351-f09e-4f51-9ff1-84fae34f0083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c34f28f-dd55-436d-ba50-a730a130b3b9",
        "cursor": {
          "ref": "746c21e2-6754-4380-ba7c-6e36f4b44976",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "accb4fab-7eb5-4461-b2a6-6a4d433c5df6"
        },
        "item": {
          "id": "3c34f28f-dd55-436d-ba50-a730a130b3b9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f17e2403-0605-47b1-aadc-c26a2628e7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a617bf77-2ab5-4564-987b-a8460576859b",
        "cursor": {
          "ref": "16666621-6c89-4171-b60e-4334171b27f6",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6c5cebe1-18c9-47e2-a61e-1fd58513e732"
        },
        "item": {
          "id": "a617bf77-2ab5-4564-987b-a8460576859b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d0b5f3e9-cfdc-42d4-b9ef-a98456c242ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c5d0d1-8eee-43c5-bc21-0f7dbb213a4e",
        "cursor": {
          "ref": "6ada1a67-3f32-4c85-8dfc-71c5861058e9",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e0090d8c-34d2-44ec-b4e8-067260fa8538"
        },
        "item": {
          "id": "e5c5d0d1-8eee-43c5-bc21-0f7dbb213a4e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9dd78d11-a7e6-40be-bc93-9067b10f9d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487afabd-2f1e-4685-bd7a-c4d76236ebb3",
        "cursor": {
          "ref": "0d132f8d-9531-46f2-ace4-41048b8f2262",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d795e5f7-9864-466f-84d4-045acaddab58"
        },
        "item": {
          "id": "487afabd-2f1e-4685-bd7a-c4d76236ebb3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0f00834e-9c41-4c85-ab23-a8cc87b92f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d177bb4-842a-4e86-82e7-1e0b310c9fb7",
        "cursor": {
          "ref": "bed26a6d-5e53-4e75-a863-24800353fbdd",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "359a064b-8b4e-4ae3-a344-7b9731afa618"
        },
        "item": {
          "id": "3d177bb4-842a-4e86-82e7-1e0b310c9fb7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c5dc18de-dadc-490b-82b7-faf1dea5e1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ec673f-f258-45f7-b57f-97a6b03e7160",
        "cursor": {
          "ref": "80966713-1af8-4304-a90c-0fa2c6498127",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c20c0c1d-ffde-441c-a1ac-c090a2956ac7"
        },
        "item": {
          "id": "01ec673f-f258-45f7-b57f-97a6b03e7160",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "202e097e-d039-491c-ab0f-4e4f85c4c884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c279bc-3324-4224-88d6-5b6a5d742acb",
        "cursor": {
          "ref": "66fb4b8a-7704-4505-bce5-4a230a99ef53",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5aa7ce9c-6dbe-4ebd-88f6-de9556807b6d"
        },
        "item": {
          "id": "c2c279bc-3324-4224-88d6-5b6a5d742acb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "173bffc6-2741-4ddb-a0a9-653f9428aebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82f7e1a-ec68-4d93-ba4c-01fa6b065a9e",
        "cursor": {
          "ref": "03f930fa-971d-4cc4-87dd-94872a53d2d8",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0d9b9032-ee2a-4a0d-8a93-06615761da1b"
        },
        "item": {
          "id": "c82f7e1a-ec68-4d93-ba4c-01fa6b065a9e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a793a68a-f670-43de-9cb3-6da14ce102f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486b87cd-dfa3-4b93-a7a9-97acfb369ec1",
        "cursor": {
          "ref": "a56526a9-19f8-44ae-a245-cf8a3374f979",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7a576cd2-2150-417e-b524-90a46be92118"
        },
        "item": {
          "id": "486b87cd-dfa3-4b93-a7a9-97acfb369ec1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "80aa0a01-2f6c-4902-aea2-e6e427d14e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314c1b31-f4f4-429e-9bc3-b301774695ce",
        "cursor": {
          "ref": "e111a7e5-cba6-46ef-a802-c74807737094",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1d5f9288-39ef-4b08-9339-f5a275128a28"
        },
        "item": {
          "id": "314c1b31-f4f4-429e-9bc3-b301774695ce",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4372dc40-34f7-400f-9c97-9c34e46c332c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ffbae5-fed9-4a3e-895a-cef229d21cea",
        "cursor": {
          "ref": "9d0c9243-a411-4333-86f1-455a1db9d5a2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b3c830d0-5687-4e3b-b5df-a7b0d246878a"
        },
        "item": {
          "id": "b8ffbae5-fed9-4a3e-895a-cef229d21cea",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3943f0a1-dab9-455b-8f3a-a46a4cc0c807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226e0f99-daf1-427e-9ba0-d344705a442d",
        "cursor": {
          "ref": "2dc884ba-7a6c-4ab9-91f4-444a3c070610",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e9209931-5eee-4bd7-9666-f394a197222b"
        },
        "item": {
          "id": "226e0f99-daf1-427e-9ba0-d344705a442d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6e40d3e2-3ebf-4f4f-8ed5-c00667da42f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e19e5f-f185-44bc-9d17-e94d27ed8269",
        "cursor": {
          "ref": "40440f89-f620-4321-b60f-bf44cd06d8e8",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "462346aa-235c-4dd4-83b3-b3c3b4c8afda"
        },
        "item": {
          "id": "e9e19e5f-f185-44bc-9d17-e94d27ed8269",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1fce7394-a390-4635-88ed-449c0d9c5807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ca3ab4-561c-4e14-92bf-07f7a8a2fcca",
        "cursor": {
          "ref": "d0d91830-a5cf-4537-899a-c66aad20fea6",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e4c4db8f-d7d7-45df-aebd-21ed18a8adfd"
        },
        "item": {
          "id": "00ca3ab4-561c-4e14-92bf-07f7a8a2fcca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "14c997d6-27f1-4668-b875-0fae7ec0953c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cdda58-a0e9-4178-8c71-cdcdf6a201b7",
        "cursor": {
          "ref": "0426d37a-c2f3-48bd-9fba-c35854a4c2ca",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d8d565ec-11a0-457c-835c-3441bdfd2fdf"
        },
        "item": {
          "id": "d8cdda58-a0e9-4178-8c71-cdcdf6a201b7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fbd8aba7-72e2-4da0-9fbb-356e4063b8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1285cf8a-1002-4fb4-b9a9-7ae3eb728f92",
        "cursor": {
          "ref": "b8652779-49c8-4399-9a53-d4a900f79b79",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4fc83d57-ae5b-47f1-97ed-9678aaaead55"
        },
        "item": {
          "id": "1285cf8a-1002-4fb4-b9a9-7ae3eb728f92",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8153aa64-fc30-4774-95bf-d25e68490748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e84d57-c4b5-4187-8167-5df70e5fdb93",
        "cursor": {
          "ref": "1cae9d4d-0cb1-4896-ae0f-29f1d730f542",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8baf1578-f92c-4953-a381-9e674a14ad9d"
        },
        "item": {
          "id": "60e84d57-c4b5-4187-8167-5df70e5fdb93",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "05468742-d8c2-4a88-bdb8-54f10a9b15b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025d0483-3c67-4a17-af00-4595ea7972ac",
        "cursor": {
          "ref": "0bdade22-f2a1-4174-94f2-3fcc91bce13c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6c3c021f-d911-4363-a597-99a8949ab0b7"
        },
        "item": {
          "id": "025d0483-3c67-4a17-af00-4595ea7972ac",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8a17431e-0ef4-49ef-892a-58a34bc40876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce90a30-0193-42a7-bfeb-31517bec67b9",
        "cursor": {
          "ref": "628573ea-f95b-4714-8e16-771e8174a120",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "af1d94ec-858d-41fc-983c-cd8f7b601c31"
        },
        "item": {
          "id": "1ce90a30-0193-42a7-bfeb-31517bec67b9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "17a8caa2-85f1-45b3-b102-bcb2fcf70d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f764d45-e7f8-486c-a2f3-14896b1e954f",
        "cursor": {
          "ref": "61360f23-1f8d-40fd-b80d-cfcf89097406",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fef6342e-ca42-43f6-84f5-76289ca055d9"
        },
        "item": {
          "id": "2f764d45-e7f8-486c-a2f3-14896b1e954f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "11f754bd-b7c9-4a50-a427-2a83256ebdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a95c300-c13e-4065-862a-734894034d5f",
        "cursor": {
          "ref": "02289033-b0c2-4ef2-b333-de1b35690671",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9d26515e-2b9c-41b8-a917-5ebe945147e8"
        },
        "item": {
          "id": "3a95c300-c13e-4065-862a-734894034d5f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6eeab8ee-ba78-43c2-b982-7189797f0fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13bb4b6-70bf-40bd-b258-daec56ea3ad6",
        "cursor": {
          "ref": "71c4a37a-a522-4f1c-9087-f8ccf99feb6a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "98e9d06b-3df0-4083-b0b6-08bac471a54f"
        },
        "item": {
          "id": "b13bb4b6-70bf-40bd-b258-daec56ea3ad6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "66a33f6e-6322-4a58-8680-c9f856b953bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d025c2-f374-40be-bf1e-b8dcd259a6c5",
        "cursor": {
          "ref": "01462f0d-d338-40b2-aa68-ce018429f84c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b6fe4f6c-d549-4a5b-868c-d47c4ce0a1f9"
        },
        "item": {
          "id": "69d025c2-f374-40be-bf1e-b8dcd259a6c5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0f123abc-249f-4ff4-a6c9-746c05266651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c86fd3-c123-49b0-a159-a019eb9254ff",
        "cursor": {
          "ref": "f56cd6ea-f9db-41a5-94eb-86a48b957437",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "92aeb966-1d08-4661-8891-e18244a55fa7"
        },
        "item": {
          "id": "34c86fd3-c123-49b0-a159-a019eb9254ff",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c8f2e604-625f-45a9-9dc8-efd889cbab90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f234e6ca-77a0-494c-b05e-c5383c4a0893",
        "cursor": {
          "ref": "37b7dcf6-28c6-4680-906f-2b49829b5e1e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a6d88484-5194-4365-b319-68f79483848e"
        },
        "item": {
          "id": "f234e6ca-77a0-494c-b05e-c5383c4a0893",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b458f8b6-9597-4f88-ba4c-a974fd55d075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b638eb-db39-4852-a2af-182abafefc47",
        "cursor": {
          "ref": "ac1ab25c-c3b3-4078-8063-8b757af341f0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a99ae75b-8b09-4bab-ad22-2386e8a047a5"
        },
        "item": {
          "id": "83b638eb-db39-4852-a2af-182abafefc47",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c9b0abfb-0fd9-40c7-840f-5710d61f624c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9288a118-9fab-45ab-95ed-272bd0c9a0da",
        "cursor": {
          "ref": "507d3485-ed3c-486a-85b1-2ed6a8e5ef4d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "750c7313-b42c-4cf8-bd07-edc7cf8f12e9"
        },
        "item": {
          "id": "9288a118-9fab-45ab-95ed-272bd0c9a0da",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f4991c0d-142b-44b0-80a7-3141d60d5b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f67382-3f6e-4dae-9c19-a50fb836de55",
        "cursor": {
          "ref": "6d558903-7065-47da-9c8a-9c81d2db0ca9",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6ebac782-9f0e-4739-895c-d75c6de07542"
        },
        "item": {
          "id": "a0f67382-3f6e-4dae-9c19-a50fb836de55",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b4b06b61-4f89-4eac-9a26-6ef995d073c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f86fcb-4433-4956-a9e2-a651e77c0aad",
        "cursor": {
          "ref": "e81f16b9-d052-43fc-9f65-9f2e96ee4660",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e65b2510-8a28-4b7a-9196-1bdd6e16aa5e"
        },
        "item": {
          "id": "64f86fcb-4433-4956-a9e2-a651e77c0aad",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c8344745-a558-4fcd-8d15-6f0c4ff898a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c8e31f-60a2-4279-8912-47403c2ff28b",
        "cursor": {
          "ref": "654038ee-96cb-4d68-8d72-e74d570c7aa6",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c84f9e96-3a5f-42c0-918d-b95d4dabb262"
        },
        "item": {
          "id": "35c8e31f-60a2-4279-8912-47403c2ff28b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "08a176b6-43f2-4cac-b065-1400af8b48de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffefe9f-abd0-4a41-bf12-27ec24038846",
        "cursor": {
          "ref": "6ddf3868-4759-457a-b839-1b0109e8ccb7",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c18babbc-1590-4659-bfad-25859c9d49ba"
        },
        "item": {
          "id": "dffefe9f-abd0-4a41-bf12-27ec24038846",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a79c885f-da58-4830-b8d1-3ce144a6d05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c1fc58-228f-4f11-82d9-65fde1c66bea",
        "cursor": {
          "ref": "7cb0bba7-523f-42aa-8938-2867df1d3516",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ae422d97-5c94-4163-9c71-40e0e3564f93"
        },
        "item": {
          "id": "12c1fc58-228f-4f11-82d9-65fde1c66bea",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e5e0840d-51cc-4b8f-a8d3-56db3c39df6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6f51a6-3f7a-4ab0-965e-e5bc2d7726b6",
        "cursor": {
          "ref": "edc8e9b9-4f0f-4470-8f04-e228f959aa54",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4b6fb370-bc8d-4b2e-8cdb-eeef8f80644b"
        },
        "item": {
          "id": "0d6f51a6-3f7a-4ab0-965e-e5bc2d7726b6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "87603760-704d-4a1f-9684-07ec89160822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004381b1-768d-44d4-8564-84bcc7c2429e",
        "cursor": {
          "ref": "90aa18fb-62df-425e-818a-ecca8df005c5",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0aea564a-b024-445b-84dc-50324be1a3ca"
        },
        "item": {
          "id": "004381b1-768d-44d4-8564-84bcc7c2429e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8e6f0074-5f14-492b-91b1-7c42ee1ebf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15e8378-f346-4638-9d77-0dabab05602e",
        "cursor": {
          "ref": "10087674-2b80-4d45-907b-f2a8028f8736",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a60a6c51-5d5d-4918-b3f1-a85b49e39692"
        },
        "item": {
          "id": "f15e8378-f346-4638-9d77-0dabab05602e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0eb626f9-f080-4aaf-bf7b-f093beef8af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e17d03-1155-466a-a86b-965a507cc819",
        "cursor": {
          "ref": "77c481a1-5aad-45c4-a542-4b47fc0dc489",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9a8e461d-91ad-4c14-9bd4-7aa1caa874d8"
        },
        "item": {
          "id": "74e17d03-1155-466a-a86b-965a507cc819",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "df969e31-e1a1-4cfa-b60a-4d6db078c973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb71d5d1-3d05-4496-b603-ce56d29ddd67",
        "cursor": {
          "ref": "a5ec309c-2dd5-44c7-913a-b8f3d86fcc0b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ab879fc3-0fba-459c-b841-07697010da3c"
        },
        "item": {
          "id": "bb71d5d1-3d05-4496-b603-ce56d29ddd67",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5ceaa87b-e004-43fe-8c9a-31c6e0611997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7986cd3f-d41f-4427-82a4-93aace4fe7bb",
        "cursor": {
          "ref": "beaf93b6-4def-44ef-97fb-221120439890",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a4da99ae-0b20-4c24-bc86-e55796c207bb"
        },
        "item": {
          "id": "7986cd3f-d41f-4427-82a4-93aace4fe7bb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fb340bfd-837c-4a78-bfb8-289d8ee09928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53442fd9-4e95-45ce-a802-9bf62c87665a",
        "cursor": {
          "ref": "482fe53a-8019-4a93-a585-350cd6331c7e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3baef399-1e44-4d36-84ac-707f02389a4e"
        },
        "item": {
          "id": "53442fd9-4e95-45ce-a802-9bf62c87665a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7ba4ab8f-5137-4bb0-96ef-827e6acfe045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b717d09d-492a-48da-a9bb-3d5d5b3ebbd9",
        "cursor": {
          "ref": "388ac65a-81ac-4e25-a07d-2e55b8311aa9",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f04fca1b-6f91-43f7-94ad-2166469768c1"
        },
        "item": {
          "id": "b717d09d-492a-48da-a9bb-3d5d5b3ebbd9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0c230171-276b-47b4-9e5b-f9829d85b64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7e6f96-1cd8-4610-9b5e-520dab0d8452",
        "cursor": {
          "ref": "6d593053-81cf-483d-993d-d5f60831d0a4",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dfda7227-5042-4efc-a304-1778abafc683"
        },
        "item": {
          "id": "3c7e6f96-1cd8-4610-9b5e-520dab0d8452",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bd985b36-76f4-43c2-bfbc-f465b5a05f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55fdb2c-3c3e-48ee-878f-4479bbac7ff4",
        "cursor": {
          "ref": "ef558e79-fabf-4e0d-ab40-6baf8ccf657c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7716b233-b4b1-4885-909a-fe60986b0413"
        },
        "item": {
          "id": "b55fdb2c-3c3e-48ee-878f-4479bbac7ff4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b6fd51c4-5493-41b6-9d1a-2652219c0972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4d0062-8573-437d-8153-38a6c30e460a",
        "cursor": {
          "ref": "775cd8d0-b8ce-44b0-b3a6-ac7c1ca43a78",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2d2b4241-f1df-4a4f-84e8-43a44015fa30"
        },
        "item": {
          "id": "1e4d0062-8573-437d-8153-38a6c30e460a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8773553c-c097-46b4-95af-7ff1959f99b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78111649-11ab-4e45-b859-afd81b86a150",
        "cursor": {
          "ref": "50e86b03-64b0-4558-8593-944d0bc12c5c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "968970e0-ad5a-4e06-8316-220eb09b1bfb"
        },
        "item": {
          "id": "78111649-11ab-4e45-b859-afd81b86a150",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "40843a44-7b68-4a2b-aaac-c4edcc5783a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0c3210-a480-479e-846d-e8e41cf238ea",
        "cursor": {
          "ref": "ca3a87f3-4e8e-4e33-aa2d-5b580dbc70b4",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7fdf6946-77ca-4c99-bd97-d34c8d7436f4"
        },
        "item": {
          "id": "8b0c3210-a480-479e-846d-e8e41cf238ea",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5607dfa0-b165-46b4-9714-8d7b54474799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e383ba-1fbc-4413-879c-e28a333fe39e",
        "cursor": {
          "ref": "2402c267-a65f-4b34-b72e-397b93c9c027",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f565b87e-8b50-45b1-8457-5dc1b51245b0"
        },
        "item": {
          "id": "14e383ba-1fbc-4413-879c-e28a333fe39e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "87314e47-5bdd-4d6a-8dba-8b7bb190a939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f466c19b-735e-48ec-8a3d-64c2f5fd1eeb",
        "cursor": {
          "ref": "c50cbb5a-5f3f-4128-90e4-7642aef27995",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "84e0f42a-fed0-4c46-8f6c-5a5506962bad"
        },
        "item": {
          "id": "f466c19b-735e-48ec-8a3d-64c2f5fd1eeb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "08512c39-7313-4082-b744-0646764379a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4916e3a-20e6-48ca-830b-b8fa32414622",
        "cursor": {
          "ref": "46e99cc7-7a06-4f2d-9077-e0166495e297",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ba34b578-05f4-4ce6-b18e-4b3b36e0c87f"
        },
        "item": {
          "id": "f4916e3a-20e6-48ca-830b-b8fa32414622",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b7bee2ea-6ab1-48d8-839e-fd5733a091c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd651a5-9191-4bff-bb6b-5bc12fe93e22",
        "cursor": {
          "ref": "dc0d325c-1a41-4ec8-9f95-35c6f049407c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a1bc465e-11bf-448f-97e0-b4e1b3ed105b"
        },
        "item": {
          "id": "acd651a5-9191-4bff-bb6b-5bc12fe93e22",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c209b985-42b8-4416-b4c6-780bd8ba1feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6dc589-0014-4c6d-bde3-1a39099667d1",
        "cursor": {
          "ref": "e235da41-d276-403f-bd86-136567c25c25",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dcfe4674-ebe5-4696-9a69-9f8e8c74e8b3"
        },
        "item": {
          "id": "5a6dc589-0014-4c6d-bde3-1a39099667d1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "afc680d7-e6a8-47c7-a8a7-cd5f79f5fe14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4941eafe-67d0-4b01-ab2e-50e2651929c9",
        "cursor": {
          "ref": "8b870fc5-3c86-4fd9-b3eb-6a8a68f01b58",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e89a894e-2125-4082-a438-4804a10e16d7"
        },
        "item": {
          "id": "4941eafe-67d0-4b01-ab2e-50e2651929c9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7eaf0dee-1cb7-4b02-abdf-13c54e84095d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c9d8da-4009-42d2-b040-1cb0e58af179",
        "cursor": {
          "ref": "fd4c9506-ad34-4e34-b9be-da6cbde0a1e9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "63b0763c-4343-4697-a0f9-66398926ccf0"
        },
        "item": {
          "id": "b9c9d8da-4009-42d2-b040-1cb0e58af179",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4f9554f9-d8e4-4d68-8503-cf988ae33eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c423faa-00a4-4bd5-8768-627e570f52f3",
        "cursor": {
          "ref": "8730d187-fac9-44e6-82f7-9abbce4b249d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c437f132-5593-4473-b650-4bbb1e213dc2"
        },
        "item": {
          "id": "9c423faa-00a4-4bd5-8768-627e570f52f3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d77dfd2c-e3f1-41c8-8ce0-5662928b1541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d527d0-d366-4dfe-a8e2-8f1daa9f9170",
        "cursor": {
          "ref": "82cc4049-1950-4662-8b4d-c8e321bc9741",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d15fcf1c-f5a0-4d7a-a337-7c178f5d6765"
        },
        "item": {
          "id": "21d527d0-d366-4dfe-a8e2-8f1daa9f9170",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b8b0fad8-7a01-440f-99a9-ffcbd3707d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1a5323-e2e0-40ad-915a-97f77995657d",
        "cursor": {
          "ref": "e69877ac-ac14-49d7-a2e0-d9eb6c741401",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3359b5b4-3c35-4b40-9b0f-a8f70e2b29d0"
        },
        "item": {
          "id": "4f1a5323-e2e0-40ad-915a-97f77995657d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a6ba199f-7f28-4a49-80f4-cf1677028b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1157e9d8-375c-48ad-899a-b661a6edd2d5",
        "cursor": {
          "ref": "f7e6ac05-74b3-4c05-9a4f-5ae5ca4369d7",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "80e1db07-e99a-4c1d-94ed-b33985283da4"
        },
        "item": {
          "id": "1157e9d8-375c-48ad-899a-b661a6edd2d5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e5752e64-1d79-49ad-a7c4-2a9c1893ee46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccff79e5-7cbc-44c8-be9b-b66df3bb0142",
        "cursor": {
          "ref": "0d80b718-230e-494c-bc4a-1df7f495751a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2974fd43-5445-43e4-b133-5133619cb6c4"
        },
        "item": {
          "id": "ccff79e5-7cbc-44c8-be9b-b66df3bb0142",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "679ecc82-0295-490a-aa10-d635d32be5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e7263e-4483-46d6-817e-d83f8f7f3310",
        "cursor": {
          "ref": "9f0be81b-c7dd-4137-a5bd-f47798fc9391",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b64f8fa2-388c-499a-9406-ea167567ceb1"
        },
        "item": {
          "id": "28e7263e-4483-46d6-817e-d83f8f7f3310",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2d371963-e176-4afe-b7df-e06128c0ef53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec55f24-d510-49a4-bb39-4440e9698b16",
        "cursor": {
          "ref": "3f5102ce-d1e2-4dc3-8fea-27dfcbdc615c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ffddd575-52c7-45f3-82f8-cc41a73de225"
        },
        "item": {
          "id": "aec55f24-d510-49a4-bb39-4440e9698b16",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5c38a1b1-86b1-4ce8-8022-904931525de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67928d0-7902-41a4-9176-a9a41776e141",
        "cursor": {
          "ref": "0fd988f1-24cf-4c68-bfe2-b992b07f1e69",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c873e2b5-d61a-42e2-b68e-bea1c1a2caab"
        },
        "item": {
          "id": "f67928d0-7902-41a4-9176-a9a41776e141",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cb42f42f-8b93-42b7-984d-8c51c4dcad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503c97d5-df8f-40fb-96ab-25c20387ac04",
        "cursor": {
          "ref": "1b912084-0acb-4bd5-8d4d-d70525a97e6d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1f794dc1-a061-4933-9f7c-0811b12fc5f3"
        },
        "item": {
          "id": "503c97d5-df8f-40fb-96ab-25c20387ac04",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "73779959-9d0f-4f60-9f08-eca7ed2487da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5312436b-3462-4fbb-89b7-f7358fac9c12",
        "cursor": {
          "ref": "b2a47d0a-7638-4391-9ac1-d1febbce693b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cedc49f3-17c6-4a27-ae60-773246486ed3"
        },
        "item": {
          "id": "5312436b-3462-4fbb-89b7-f7358fac9c12",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "149c428f-180d-4569-9b08-0f29d0a45afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390f9f6f-5d6d-46f4-b4af-20b41f1c5892",
        "cursor": {
          "ref": "3479c485-99e2-49a7-b10d-093c7f25eb8e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3b33a1ac-fca2-47dd-a355-a68e00d9c5b3"
        },
        "item": {
          "id": "390f9f6f-5d6d-46f4-b4af-20b41f1c5892",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "95c8f2ee-c42e-449d-a9c9-df5399083fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd9b736-dcf0-4219-b39c-250a7d820d91",
        "cursor": {
          "ref": "7e9faf25-57de-43d1-83b6-ff454d0b96cf",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "82f5cf8b-4aba-453f-9649-7eed9edff09b"
        },
        "item": {
          "id": "1dd9b736-dcf0-4219-b39c-250a7d820d91",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "aa570be2-352e-4a69-bf62-5b93f4ae7f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1e6576-28a6-4c56-acd4-6e78112b5ddb",
        "cursor": {
          "ref": "ea4f51f6-8249-4244-84d9-20c654743189",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "776f46f0-85ee-4083-ac95-0088bf0ad6df"
        },
        "item": {
          "id": "be1e6576-28a6-4c56-acd4-6e78112b5ddb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8db81119-6e08-46bd-9799-34425d5dba3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff84d79-9dd3-45a5-8e1e-4d3a36cd7172",
        "cursor": {
          "ref": "c7c9ab9d-1d87-4331-b863-6000715885eb",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a9b9b3fb-e82a-4318-b3ef-8b25012f68f1"
        },
        "item": {
          "id": "6ff84d79-9dd3-45a5-8e1e-4d3a36cd7172",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "206af177-b517-4aea-b84d-d36fedb344c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7a6e59-2f07-4ea7-b410-a38a2dde82e5",
        "cursor": {
          "ref": "b2149e74-7e4c-463e-8446-62decadce0bd",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0683d69f-b47a-4300-8eb1-3f4924ac7d30"
        },
        "item": {
          "id": "aa7a6e59-2f07-4ea7-b410-a38a2dde82e5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1133554f-4d64-4e46-a23b-81d43ca767da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bcb64a-9697-4236-9265-30111069a0bc",
        "cursor": {
          "ref": "b43a3781-f99c-45d0-a8eb-4bec0b546d28",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "28be775f-ff2f-419a-966c-3b9e673fce34"
        },
        "item": {
          "id": "53bcb64a-9697-4236-9265-30111069a0bc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0f7f6bc0-7bdb-452b-861b-be0ee628b973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b446422-3efd-4480-b6df-c3850b0fee45",
        "cursor": {
          "ref": "d0be07a4-7c51-4bbd-bb7d-33af84513665",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1d02b5b9-4993-4a6a-a19c-e6765bc884ec"
        },
        "item": {
          "id": "5b446422-3efd-4480-b6df-c3850b0fee45",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c44d9f6e-4a21-462f-aca4-ba17f975d8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10e5a8f-d241-4b7f-96eb-b48d0f88ee88",
        "cursor": {
          "ref": "9899e073-dca0-4de9-a33f-b4a102ca810c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "62b07032-4e77-47d6-acf5-76a710f5d54d"
        },
        "item": {
          "id": "c10e5a8f-d241-4b7f-96eb-b48d0f88ee88",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "41c41a3b-3d13-4069-b959-a56394405dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c55760a-ff81-4384-aa30-f5e87b520365",
        "cursor": {
          "ref": "c1beaf3d-8f1a-4cad-9d2f-1c7ffc781b74",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2e9db6eb-99d5-475f-aa00-e806f9f8160b"
        },
        "item": {
          "id": "7c55760a-ff81-4384-aa30-f5e87b520365",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6b825462-8929-46d9-a0d4-d040dd57fafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e996881-c207-4d3d-9ab3-260c7d16c071",
        "cursor": {
          "ref": "fab3d4d5-a6ed-47d9-9c63-06948679bce9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a3d14d0a-a60d-4760-9c26-1b6e5a7e2194"
        },
        "item": {
          "id": "5e996881-c207-4d3d-9ab3-260c7d16c071",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "04c90149-04f9-4e1a-ba21-d42f83ba29bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae586230-a773-4796-a483-52b419b8ad1e",
        "cursor": {
          "ref": "79e307f5-51b5-46a8-a074-eb322f2e3231",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "97fd9b83-293f-41c2-bc88-e96c35064591"
        },
        "item": {
          "id": "ae586230-a773-4796-a483-52b419b8ad1e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "02c92b72-b4dd-4d97-9e35-f35d2029da4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6993f6cd-aca2-41fd-8588-7efb6267f0cb",
        "cursor": {
          "ref": "cf230d5d-c149-4bd9-b43b-32dad6de0ab3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "35a7da15-eb98-4d62-a1ce-b8fbe1fb45d8"
        },
        "item": {
          "id": "6993f6cd-aca2-41fd-8588-7efb6267f0cb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1f72393c-cbea-44fa-8d61-e1ba76721418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de79ebb5-a058-49d7-a32b-acce5c36f171",
        "cursor": {
          "ref": "af9caa67-de66-48fd-8468-413c3ddf57e7",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "dbe65594-e4cc-434f-ae02-09170428fb8d"
        },
        "item": {
          "id": "de79ebb5-a058-49d7-a32b-acce5c36f171",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b259777f-5207-4e47-855f-00be4793ef6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f13c04-c9cd-48d2-a301-070d801e950e",
        "cursor": {
          "ref": "ec22f527-916b-4a21-a08e-2f8366ea0624",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c2355454-ca99-4c80-b39f-64513c47d656"
        },
        "item": {
          "id": "a0f13c04-c9cd-48d2-a301-070d801e950e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3125285b-b3e7-4b31-a5a6-239aa8689b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e5b46f-e3c5-453a-9378-b1311fbc198c",
        "cursor": {
          "ref": "a8d400d8-b856-4aaf-b93f-f33f731554cf",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c23fab47-dcb4-4fd2-bd64-11c0406fbe9d"
        },
        "item": {
          "id": "12e5b46f-e3c5-453a-9378-b1311fbc198c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9eecb86f-b7c0-4079-93ce-2a081cd61641",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7106702-d43b-4822-9fb4-841283dce27a",
        "cursor": {
          "ref": "4a6d6fb3-5c4c-43fd-aff6-1beaef6bf79f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ad71ca1f-30f6-433b-b29f-d982c11d1b2b"
        },
        "item": {
          "id": "d7106702-d43b-4822-9fb4-841283dce27a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d9f42e3e-1acd-42a7-9bcd-0c398e16ddc1",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7f6d93-b725-4507-962a-c775f88055d0",
        "cursor": {
          "ref": "34176433-3951-4843-ae3c-61cd88c1d920",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b667da70-9f98-45c9-b853-c7955cd992b5"
        },
        "item": {
          "id": "be7f6d93-b725-4507-962a-c775f88055d0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b41c89cf-c1a2-430b-8aa2-42c4420ba346",
          "status": "OK",
          "code": 200,
          "responseTime": 1431,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f220430a-e45b-4273-958c-7cc8c303d707",
        "cursor": {
          "ref": "801a8a61-a59b-48cd-a7ca-7c76304459d2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ca13edef-23d1-4f88-a7bd-394f08cf4a47"
        },
        "item": {
          "id": "f220430a-e45b-4273-958c-7cc8c303d707",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ac1023f7-cd3b-4600-b0a1-2fb47d30d5fe",
          "status": "OK",
          "code": 200,
          "responseTime": 1791,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bc29f9-fb44-4bc8-ac24-d57188f564cc",
        "cursor": {
          "ref": "f756d86d-8ca9-4fa8-8a47-46e4ad859f23",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "70d52e05-fdff-4761-a4fb-2efef2913774"
        },
        "item": {
          "id": "a6bc29f9-fb44-4bc8-ac24-d57188f564cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c70299a8-886d-4106-b57c-0e596de4d02b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bc29f9-fb44-4bc8-ac24-d57188f564cc",
        "cursor": {
          "ref": "f756d86d-8ca9-4fa8-8a47-46e4ad859f23",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "70d52e05-fdff-4761-a4fb-2efef2913774"
        },
        "item": {
          "id": "a6bc29f9-fb44-4bc8-ac24-d57188f564cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c70299a8-886d-4106-b57c-0e596de4d02b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ae60a9-b0c1-4d4c-8cab-52c09d429c7b",
        "cursor": {
          "ref": "0a861f44-2991-4f36-91da-5fde1743f82b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3f084e90-1a73-41b3-a6bb-d99ce9763647"
        },
        "item": {
          "id": "99ae60a9-b0c1-4d4c-8cab-52c09d429c7b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e8db2963-f597-4228-a054-27d8602c869a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6508cb6-4165-4cb7-b42b-f80c02d684ec",
        "cursor": {
          "ref": "9a0a8b4c-0b4e-43b2-87bc-417c0d5892f0",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b63b84d5-d33b-44e9-b75d-eede38f6ca85"
        },
        "item": {
          "id": "b6508cb6-4165-4cb7-b42b-f80c02d684ec",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0518ea03-8146-427b-96e7-791e9d028d56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}