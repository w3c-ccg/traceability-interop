{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6301f036-8ca6-4d95-a461-17b0e15adc71",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d128b4ac-3133-409f-83d2-b4f8842c6194",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0f9a83e-21f2-48dd-b433-04a1bebdfb1b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7345005d-0a0d-4cbd-98eb-7e7a948a7d16"
                }
              }
            ]
          },
          {
            "id": "cdc92fc2-9881-4ca4-9064-9c2b55f3040c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ef549f4-383f-41e6-a8aa-dac0b103542b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5e4726a7-90f9-4c72-9d27-7f15cae48ba8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "59bc90f1-0e39-462f-9f6b-3408896d6cc1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3f595fcd-f16d-4de9-b16d-736d3930c839",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b20f61ff-e357-4140-ae5b-b8d88751ba45",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5780b961-3b9d-450e-8a11-f35ecbcab14d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff6941d1-6e5f-4103-a956-7f13571f26b9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c62ad8a8-d218-4528-ad6e-4b71b2c261a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6caf3e5-26c3-4a01-a7d9-37079f6e8555"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8bebaa5-abea-4e29-b757-ae933056c9be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95e6da79-096e-4abc-9aba-81b60ed27f0e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d15d101-4fed-4c93-9544-3de1e2e9f4c7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ba76ac33-1769-441d-8521-e0bb9682ffc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dff534e-b0fa-4acb-bed7-8795c778dd23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "526270eb-a43c-4b1d-bcb4-0f9a182b7cf0"
            }
          }
        ]
      },
      {
        "id": "d8bacedd-4f70-454f-a248-d45f34188c99",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0b2cc8cc-5310-4664-bd0d-aa79364e2aaa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "670e6ee3-6fc5-4b9a-b9e4-53cdb1ec695e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5bb54d19-a567-42d7-81ab-70fb3c86850c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70611dd7-10aa-4936-9139-f4c9d6bf0805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50f758f9-2c78-400d-8ec5-e996fe3d40c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01c2bf0-9312-482e-84d5-5cd001cfdf54",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163a9044-d4b6-4669-a851-aceec12c8148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fde4180c-d79e-4c16-9eb3-86571930da25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f568ebb1-0afa-472c-9ea9-44aa60e2fd48",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedeafd7-4b5f-4aaa-ae8c-752f20933efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc2bc9b8-a3cc-46f8-837d-0881d4f3c517"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eaeaa539-83af-46bb-b0c7-2383bb1fb0ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f4c00cb-9fae-421d-8e72-82e8ef37bae0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4e3422-061f-4321-ad1d-c18018f89d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cb44669-cde1-490a-9ee2-86aa04d64338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3932d06-606d-40c3-9e37-24c1ecbe5871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9009fd0-7385-4708-8ad0-209bac0f9d54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "68ba7123-3b1d-43ed-937b-977008f06120",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57670985-ca6b-4bc4-aeb2-1844c6e9c6e2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3092b54f-cff6-45a1-960e-3b71dbf8ed14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0ccbf5c9-a6c4-4cb9-adda-5361280eef17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2ae9f69-37c6-47a6-b8e1-b4eef076d998",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "473caf57-d6f4-4e6c-a105-8b9fcb9e1c07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cceab8b-0335-4dbe-a0b0-c4b27becb509",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39de0af4-8dc2-4cc1-a314-e4f8a36cb52a"
            }
          }
        ]
      },
      {
        "id": "85450369-2dca-435f-9428-4be91837bcee",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6830219a-df84-472f-9b68-19083dfda65f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89f0b5aa-f6a3-4ac4-b349-9b5cfde075c9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e91f2e76-6826-48b1-b02a-b319f7cbe0ea",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3658f5e-b918-4f57-88ca-0556c341e52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7a7f01-4fb1-4555-8c23-6997e603049e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5736a902-572a-48bc-b939-bd743488b9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eafa161-833d-4c3d-a87b-cdce1b0e486f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef463f85-9d87-4967-b32f-e98dfc273b95",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437570c6-655f-4a67-b744-e666d75f688f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653bb07b-8566-49bd-9028-897c195dd873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaab0ed-9968-4784-a096-3ca494c4501d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9720dd8-a6ce-4bbb-8f74-d52b686be4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b710a667-01e8-4849-89d8-5d7897543be1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7891c3-0a91-4882-a222-3112626d9400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5bba81-c9df-466f-8425-d77d95f871ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c576b8d8-75eb-480b-b82b-31279aa54058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20a1dba8-c720-4ef9-add0-a254d44a616c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96b800f-0107-45dd-9b0b-ece674dbf447",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6f4e4e-fa00-4198-882f-3aafe5bea583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87d74d5-2910-4516-8e9a-89cbf15b406b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743ee5f3-08be-4c9f-9b01-e5517ebfc715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ec52d9d-f920-4d02-89c4-60c58f3719a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2581230-ee49-4f61-9e10-931f62946c4b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05ab7c2-cb62-4201-9a38-5a1d6c22f724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78d88cf-095f-4bf9-91a6-b37e77c4e6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be97693-c8a9-42e4-aad5-2fd049db2092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2670ac8d-793d-48aa-89a6-ada2a5ecc23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bec93c-3b6a-4049-8843-a22f27f36d0e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d6ddf6-b4ca-4fda-beab-c43c6783abf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28843748-d013-452a-82fb-10977c369d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2980e0-d7cb-4cf0-aebd-b7b052117a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "766c7550-824f-453a-a936-0320209a6964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a884974-1715-42bb-9063-a399af5bd612",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cf4bcc-5116-481d-a469-d5fc419e0dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07c6c11-4ea5-4916-8f0a-dbfa30517f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c1ee63-b54b-480b-9214-fab71d891f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "576bd93b-d94e-4c57-bb78-062f08a1749f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d84f6a5-c4ab-4fe9-9c69-a31b03b1ea35",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa76d8b7-6736-475a-82e2-573e02bca73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3251e28b-75bc-4a6d-b39b-6998c9d72b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfb37eb-1609-49c5-af09-008f289dde86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54379e40-0b62-4d8e-8962-415e94698836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdf911d-d8d4-4594-bc50-9d60949fbad1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2339bbe-f8fb-497d-82f3-c25729b240c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a33e24-337e-49f6-9548-0a635c93d4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b17417-2f4e-4cbe-ac3a-8256a3e71b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff7139e3-7675-4a9f-aac0-10daea06ef07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff4aec8-9dc6-42bd-b001-63873e7f2167",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7abe16-cff8-4ee1-9f56-a4d0e69576a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1587065-d532-428c-92ed-c5efb961ac14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe63966a-5846-45bb-b5a1-6a9befdabc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48e3fd98-c470-477e-8011-15dadf992c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a01afed-b1a2-4add-8549-86ddffd79884",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f34544c-d3e7-4158-85a5-c2b96f46dd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6163e41b-c52c-4411-8a00-527998058f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06f2146-082b-4efb-a139-69631964a542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed60e82a-8761-4dd3-ab05-418bbf3724ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82128e16-7c18-4a26-897d-821ed32d10cf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbf5e51-8340-496f-9bb7-1cfb9e63eea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b956ea6d-b459-419b-aec3-5a320169c99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00312777-4b1c-469a-8093-f37710b3cdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84e710c1-6b99-4ca5-8c0d-7f755f4fba17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6a6fd2-5169-44fe-b333-f5c79d8d902c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2197da2a-1f59-4e58-8f5f-cf0542d157cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7557dc70-60f5-4e7f-8488-4fc74eb0ef4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a54901c-dc24-49df-bab3-cc202e5f7506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8534a06-723e-44f8-b055-6355a429edf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e2c620-b77e-4b5c-8dec-dbe21826f454",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d143eff3-2397-4a7c-b63d-7be798edd4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75665553-b7eb-4541-ac0b-26385a4cbdf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a14e84b-1e89-4647-8114-ae558ca9317a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a604ce4-a1f9-4157-aaab-c9f15062cd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afa9a41-782b-4db4-8a69-2de7f62c2bbc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1969831-d06c-4eb4-ba9e-846faf9d8a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7066b1-8687-42e9-8ef7-b1526484eeff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d7ac24-4eda-436d-b0b0-3bf92b12f570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c73b9023-8d9d-45fa-9442-772d0efcb347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da470b4-46a1-4fb8-a443-b620c21a55f7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5ccd23-942e-4300-9480-2f2383df6b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53641a13-6a38-41ed-9883-90e130ba46b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadf9eb6-48aa-4647-bb43-5defa63d732e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f29e0b5-b429-4c15-a087-9ae565d76fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eab9ff3-f3f2-4ceb-930a-cfac0933e5cf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a604e9cb-7f13-4c03-b847-ca5685de5970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc6efe6-fba5-481a-940f-de63a61bc5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4863aa54-9dd4-4b10-83ad-349dd4b267b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1131953-1730-4c8c-940e-975d054f5221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9734baaa-0c19-466e-ace7-da6e72c50f15",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d631e833-66e8-4f87-88d0-b6dd01e6244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323233f7-af60-47cc-bace-d015e6599387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e190e969-3631-42b3-b930-afb4a23290d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5cb383-2e3d-4826-a790-09faddf57077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bce479-53c4-4d11-87ed-85193b554e13",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ea2204-02da-4bab-93e5-1d10f570f945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2fce37-918c-40b9-8e18-c5fe670ff753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747d5970-6c00-434e-beae-b14f87533d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb17b04-60fe-48b9-9822-a2d7de791dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e80bfc-2efb-4c35-9d09-dcb8675f3ec9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb7bbd2-9243-4e27-ad45-ace50efc2e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495218ff-74a6-4fd5-9099-99724f1d7ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaefe49-7b40-4a18-9a64-8b1ea85200de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c411d20-82cb-4b85-a162-4bb96c984653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a6fb82-9dcf-434d-a603-b88eb9fcf913",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6acca4-3859-4c0a-ba0d-66073058885a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1029f33-6a05-473c-97c9-6a346b8388e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64580a18-a267-4d30-92f5-011c344deddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab49104-8b54-4f87-b5f7-a65abbbea02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f420a7-2bba-4d25-9422-962e7b0534b1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f0b40f-47f5-46d7-b837-02d6ebf8306c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0544ef57-1d03-4289-858c-18139e2a94a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a87c01e-41f7-49f2-9fd3-44259b05fdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ede4e4-73ba-4e47-9708-0702e6dcc220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dd801d-acb9-417c-8725-0b43ff017302",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6e61be-60e1-48ca-8787-1cf5df246e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355e0c3f-920e-458f-a9bd-fa6d4feeb58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4adf06-a759-470d-82de-30732f93ebfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9002b29-750c-4796-877f-b3ea82fb670f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c54d27-f58d-49d7-bfcb-f5696554f839",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50589880-ad26-4453-9ae4-d6a57a072dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9ed92c-9790-42e2-b3dd-235c9fe8213b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9646d8c6-7305-4fc4-93db-8ee5236cdda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "445daa5f-c767-4ec4-af41-ca29e9804501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acae5e5-daaf-4c14-9735-3bcd7578900c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657ed5fb-c168-4dcd-af3d-73b49e921ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c906e8b2-47a7-4c8e-ba85-9b0689d9cc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e294b2f-a236-434f-b884-2425541aaf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a6c085-1357-419d-a270-dd9065802d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0937ca-2578-4fb2-8016-4a9ea3c5b1cc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d070605-8af1-41bd-9702-2208b819ef00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4dba46-77f2-42b7-9737-d282f1447320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed22099-20ea-466b-b6f2-9cda01758b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7b3004-87ad-4383-b013-f15f4d8872b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc266e6-f195-417d-a358-e21e50005610",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622d1cc6-f7e1-4977-8d06-396389474191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389daf4a-08df-49e0-92ac-47d73de38e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa65ff69-56d4-456a-8895-f3f91a866e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a920068d-e613-400e-b739-cd6af9a7b05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec809c22-fccc-45d2-83a5-906a679d102d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4968f89-4045-45d4-9456-442064d26712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c52e27d-688d-4393-a159-89eb3c22ec04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a90206-05ad-41ae-acd1-6a6f114f20c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a693e5ee-815b-4823-a2c5-bf3894c0c310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3743a610-895a-4ff8-a336-6e31e3892f48",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03de709c-7798-430e-9d59-5aaf4615527b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d040165b-3103-4aa1-a787-fbf5a02d97d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b4677f-245b-49fa-a215-8c39bbed8228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2255d4cf-602c-4326-8861-2a2a62f43fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dd1bde-f6b2-4f73-a916-a829ba022a69",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec192fe3-ccdf-4882-a73c-e0e18e883306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22e9a7c-e01e-44ee-9c63-d11608be4cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9d2869-8518-41ed-9478-a0e595d9bd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "da0d5086-972f-46c8-89f6-97638a69aa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7349cd2-b5c0-480d-bbce-2daaf0ec45b9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3490885e-a7ee-4a3e-a155-8d84acd18c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48465871-8055-4d39-bc7f-87cdaa2116b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c74ec7-fa86-4af6-ab9d-7de68ca9085b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ea4a78-717c-4ab0-95b8-561a2409d49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733527d9-e9a3-4850-99d9-e568f1d3f351",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581df5fa-f14c-4536-931c-2baa2d3fd41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09512e1-c6d4-441a-a843-d583d077edef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec951dc-f23c-46fb-a27c-9c981f3ab94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ad02ae-8394-4d49-b357-48e003477803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f0f5b6-a8a0-49e4-a4d8-450160cee3de",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064381ef-ede6-4503-9c92-02932f7e3184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aae435f-a298-48fc-bae1-0aaaba565ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930aac7f-e293-4532-8a29-deee0196ed71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeeff585-70bd-4a49-a60a-c9dbb56bf2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e681352-b52a-45d3-b90d-6d890a538e2e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab5f7a1-3278-46db-aa8c-27a74ec2b981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c443e9-7dcf-45a3-88bb-ed6c74310761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7656860-8a59-4ce9-9476-a6b12df0299f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20a3c9f-8c1e-4863-9016-2e49726fa67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b525953-7f2c-42b3-8934-850a2b52feb1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b01b5a8-1b6a-4b6f-b422-1a5df874407b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf918be-5362-438d-96af-4dd5ee180d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e6ac6a-21a0-47dc-8f4b-0528fa373782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "94b67627-36a2-49bd-95e9-d749e48569a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b09e43-04d4-495c-92ea-e190839fd843",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b48b52-8bfa-4081-b54e-530e76c23cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b30a9d51-a8b5-4dd9-bead-e66d4810bc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0aa426-7ee4-472d-a51b-d88fff81147e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "225fd638-6f4b-4a31-909a-6a8066d77af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450f6979-7d12-48b4-9949-0438081ce8fb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e36426-a030-4924-8892-e0afee30db04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790ac4b6-56d1-47d3-b1ca-5980115d57d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc593db5-6b20-4ae7-b47a-d49ad668c6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a873bf42-ec54-40de-b032-a2ea3e57f381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270f608a-075c-4571-bb9c-14cae67e07af",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88e75c3-d0a9-4163-ba5f-32e4f49bce82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5e8a87-2fa1-44e2-8c44-5e56ae5230a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c0e683-4eb0-4122-a306-32b886c8fe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5c0368-caf6-4e0f-a31c-0dd78effdfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a66acaa-8b61-474e-880d-9e547a9fee92",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ae167f-0bdc-49f4-969c-8fad5de4eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e857839-5b7b-4c5b-9251-862c78102dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fc0957-06b4-420c-9af9-eaba6d3af2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7858b1-dd8f-4ea3-8531-9fb88de20d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f06202d-d515-4b27-a89f-51a2eadc1cbf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5154b99-10b6-46ee-b40c-6c88c7e267fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3d9341-c8b7-451a-8709-fccdc7a19997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df229bbe-6f80-4560-9a27-2ded74ae801f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63a753da-0bd6-4171-a56f-b95a60034dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332c2790-96e1-49cb-b611-933c6761d026",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f13fd89-2177-4125-8853-bc2a8b56245e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508c8072-b181-4fbb-ad50-59b7d901b122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5966198-58f5-4916-b72d-61e73c3c822b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49a6cc24-5687-4ed2-9f85-bf47cc57cd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa01d0b3-6511-44a9-9257-ae733417b9f0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e2ae2e-1571-4f20-882f-a1fbadee0dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af1e0d2-7079-4267-a6dc-8e41ef7b81d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763f2b59-71f4-4b89-bc3f-09ab8cc51e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d2efe6-2669-4200-a7ae-4561d620b5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04368c3-2241-488b-bcda-4f3fc0ca4b64",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e8b048-cd86-41eb-95a0-e0ed3e3a1e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335f6319-f8a3-4ded-a204-ac8b0c319895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f26547-aab7-4f65-9a02-4e5a354518a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b00ffb-16e7-43ce-8f09-4286ac0ea1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fa1d88-433c-4552-9bc5-198743da41a3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a514584-3cc7-44ac-a056-d4f06bdc1bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1badaa-c4dc-4f21-9230-443fb42872e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec121b7-e3c8-462d-8ff6-7718cc09a653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "825ae21d-3c6a-4562-b585-3946cdb0abaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adead15a-7f97-46b7-917e-1a981dfbc739",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f6ab5d-112f-40c7-bf70-3f9d0808c5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba9c786-6e9c-4b54-827e-e9a9a47d8231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd4f653-f8e2-4ce5-8f3c-5399214e9961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "205cc290-8bd3-4d77-abf4-19b7a43ebfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ccb002-cbdf-46ab-b3ee-f3cde995b157",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5956f71-1db8-4008-a2e9-cdb1ff369fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6d1b5e-6db7-445f-b492-c835e4217e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b85cef1-7f7b-4ac3-9ca1-f29e645e125e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc929ce-ebd2-4a59-90f9-d81a2be59ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f73a1e-163f-4a76-8368-3e00885d86cd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614fd87d-077d-4497-aaf9-9ef88045e894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647ae77b-7df7-41e0-96de-83166181aee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417ad66d-8f26-4e1e-9f51-7d3f2e88d389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b9acab-81ec-42a1-b9c6-c4ea476c7f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fb7da6-2958-4965-b68b-60e64b2343d3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20020095-324d-4842-83b7-7062b8590f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275b3536-8bb7-4e44-a576-4dab723884e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e08e3f-a2ab-47b3-94c8-0035f2e7fe06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17c58e4b-7bf8-4101-baf1-b38b40e505a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd2d97f-fc14-4d76-bb96-243ce7172b53",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908a6f17-48a5-4760-a899-dd16ff540b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4ff3d7-0b53-4ba1-8dc7-25f9a2af8cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0775f64b-0afb-4514-96bc-34a79c46f7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a78112-f32a-4097-983a-c2e32853cdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eb9e14-24f3-43a3-8aa7-1ad7e18d5d97",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403b007b-7d60-4c0c-a0d0-0a5ba52d0e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f223aa91-1c62-45a7-9cca-d58a92d986b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710d1ee6-843b-4e32-907d-b91f681c3225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed0e5ba-1b4a-4c7e-ab04-2f51f611c5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110c4f8d-2ee1-4500-a71a-843e36ed0522",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1b630b-572b-4420-a6e1-4d551857ff39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c10b384-4206-48bb-ad61-bf71b031ec50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81884c8-ccd0-4b62-9e73-9a6d21c4b428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b200444c-2ab8-42c1-8bbc-68ab4823a3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cff7dc5-a6ac-431c-b992-9090c77c9c65",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad6e376-893a-4a5f-9372-f52a4070b4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d276f2-eb22-42aa-b944-33b1be3a74b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24dd844-8b1d-4c15-be9e-1dfe42e4a551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7d4d31-09ae-437a-9703-f5b632c46b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2236042-3849-45f0-ad53-7aa095aed54b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7924d39-90db-400d-8895-588cf538822b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d559e5-5c6b-44d3-a5da-e016a865e484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807c523c-34fd-4bfd-a92f-e8eeac220659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b42391b-4a0c-40ef-a25a-7afa71812ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163ee53d-820f-4ab7-a7df-b079491f778c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f4d07d-72da-4c63-8601-f54768ce477d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e77e84-d8d9-4a05-9be4-4a5fd93db46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa620e6e-601d-4a88-894b-a33cb4bb4d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9dc8d5-3904-4b93-a17f-6d154b2eec59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5023761f-54cb-4a92-b570-e0356b0af2e7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606ee7e7-40f4-490b-b389-0eca92df5b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d9ae5f-c3ad-40ce-ba43-fc094c852c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250fce3d-deda-4344-a4ca-bdb23fcf2665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc6e50d-d8f8-447b-92ee-006203836f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a722bbd-3a37-4a10-816a-a7ef84db936e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e155d9-d909-47cd-bcf7-4b6d829e11c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc19275-9fe2-40f6-b279-2977bb3fc99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc90032-5cd7-43b0-936b-70d0ab714f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bce7c3f7-99a4-46ed-ad2a-53d4f7869838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87c5591-dfc1-46d4-8653-beae5e9f2ed9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd8e40b-eca0-4f8d-8b76-8f2a0c97b763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b02fb8-26f9-4a40-a7ad-9352df9c07b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e7e091-0da4-43da-beda-4ec8cd33f46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "09ad907b-3377-411d-8dc0-41f63ac6bc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974006ff-f227-4dc6-bb34-7de8adbf1741",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5320577-8537-40f3-9a27-0ec45c454125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349cac22-3ddc-4fbd-b839-7385bcf5a8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb4cd8f-9b26-497a-92b7-9a68fd5655fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83181dfc-72d9-473c-a2d6-03cf40e863cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6da0df-18e1-4649-a0c6-22c722cff81d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9860f3eb-768e-4679-b8d9-ffe7a1975aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107ecb2a-ea02-4171-845e-2e769fa86ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcc4ea0-6dba-420b-8d10-87e598bdb95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c76e27d-c975-45c3-a40e-21b472e043d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b55d3b-4c9f-42ff-831c-9512cdc6c1f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa95b0df-c472-414f-a095-f8fc030424a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60052b8a-b327-430c-b4de-7239811677b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5cbd35-2bd1-4339-8e7c-01dd78a1cbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41d2a9d1-4970-4e09-b95f-cd886f63beff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c009a089-ed8d-432e-b29d-fb5ba21435c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e68e26-f401-4c49-bf25-0eea110528db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad715ba6-dd93-44e8-9a39-c4849ef4894f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545a4be7-1c31-4822-8607-281245bbb501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aedea6e3-44fb-45fb-bffd-c715ede168d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330448a4-e87c-4a5c-9782-c680a14a45ab",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37de7ffc-4cfa-43d3-b9a5-bffc741e2ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c14711-a1d1-4767-9f82-04c556b2eddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d4f3a1-af99-48b4-a8eb-f917d84fc58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "04265460-acf0-4a21-b935-f7ea9be580f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d27d93-41d9-480d-b7db-d4b165cbc159",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756f99a6-a143-4efa-8bed-b7b6651fe852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d9a843-60a4-415d-8305-1b7563dc50a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c62f86-7a0f-42e8-a8e0-1c75a6c74608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "efe4ccd2-42f9-40aa-8fd8-0742b2b5ed3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6df755-fc92-4f78-832f-7548ca539f18",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3517fc0d-30b5-4163-ab60-8e3b1e758e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460591ca-81e9-4d2b-8e0a-b7519c4375a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19c01df-aed7-4b6f-97f8-faf472d22eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de67c4b0-d826-425d-a7f7-b175d83e1961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf5565c-5286-4ba7-9032-5b47498b11f7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8f8faf-fce6-49af-8ea8-2a1d45472f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab392c8-facc-4e55-abee-f8819166eac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3594e974-02e6-4d02-8878-4ab2254b0103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9cf478-f2f9-454b-9f41-bb5b617fe485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d36d43d-2c2a-426f-82eb-8e46bac3ba24",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512df279-41a1-4585-a0fc-b33fd8b2a44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9ad7c4-fef6-4d0c-a608-6d3bf28af2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85d0b46-0828-45e5-8b44-262d07bc9d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb923b72-2512-4da7-9e3f-ef0684e796e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9dd33c-c2a5-4216-9037-8a660ae4557b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d9e9c7-3a3d-42a5-8e8e-bbf1cfbb2b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682b0135-4b11-4f77-a82f-f37220cec7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252c7b70-3b1e-4133-88b8-f40f76e84223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "732538d8-03e5-4e67-ac17-c1164bd7f553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b48301e-4f7d-472c-b9b3-a0dc22c2a569",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd78d787-5160-4bbd-b2ae-d210070910b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24278205-80e3-4518-aff2-8f9c5a54aa92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672639db-c987-4422-8088-eaea1319085a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9427f8-0d1b-4051-8d1f-1fb3555183c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7992f7-be9b-4440-91c9-0c5e5f355ea0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fff0515-53c3-4619-8041-36bad9306b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c18e39-cdfa-4366-8f58-08cc6fe25286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdeb6221-2d91-41b2-aea7-da6dc0214679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5663fdcb-f48d-44eb-a458-80451e9182ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5242f057-8517-427f-a627-e302f04f59eb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910b515d-642e-4f13-a8ce-c21bc15a88c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e611eed-2141-4b26-ba6c-1a8381ad39c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af89180d-a418-42cc-8552-8dfacdb87a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b24b8d8f-efb9-49d6-80d2-e6408521be44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9882080-84ec-492f-83da-056e26c69fef",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23f6031-6077-4785-8bd5-25516e7dc3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57dd57e-1c57-41b7-8c41-33500bf37c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3bfe14-380d-474a-bc7c-e382e900f313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9fca2d-5485-4e77-b3e2-1c308b7fd7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e778b1-4ec7-4865-a159-593e79326b51",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1c3685-72d3-426f-b2b7-f629b5124820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa0e3a4-b12f-49fd-897f-545572dea6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4087cafb-a826-4c31-b6d7-215ed109e8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fff9de4-e30b-4d3f-a597-479bd7762778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e9ab00-eb6d-42c0-8232-6814867fcabb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a5b0fb-d183-4601-ab44-b5c3f4dc785a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824252f8-afac-4bce-960e-f7652c415f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b9003a-74c6-4e93-95c8-911de19382a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad612b7a-f353-438c-a058-8b31fcbbf7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c68ae7f-fcf5-4e51-b26a-8a598bb8040e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2189668-b007-4c3c-ac86-1d76ae9f02b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f479b6-c28c-4280-937c-fad64e43c31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464f42a7-28c8-40ed-b7fc-48eccaaf7ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab40ca6-9a8b-4ed9-addd-a01139c10922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d7660b-91a8-4720-9b9f-958ceac68c39",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cd7659-719d-4624-add2-6c56cca28b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32be570a-ac32-4fdb-a1ed-ca42753c89cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cd2b43-f631-4824-ab9a-84b8879ae061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c28bb80d-9619-4801-8ece-48be8a6d6799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9d1285-2c1e-4480-8347-63f1a23d9c5a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1c3726-69a6-4cc8-ba01-c70e3cf813bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b17422-90d5-4f4e-bcc1-feece856a428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c422b5d-bbb8-466a-9ff1-8e95bd764ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e760ae1c-cb41-4eda-8b31-87a8d7eb30ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d33562-46bc-4ec1-ac82-f9e00e4b2526",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0466be-9da9-4449-8e10-7848159a52a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4e2da8-85dc-4ff4-8a98-f6ee3b58ed43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5ad3f9-963f-42d6-b712-40dce425f5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6ba6f4-93f3-42cc-a83c-bf3a29e3b95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e48ce20-3be1-449d-b374-184740d1ee3d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f91e347-fbb6-42e6-9523-983f36a3846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e890ab-1722-4f39-97ac-bc709a5ab538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46510616-fabb-426c-b6bb-9a4f77cdbb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37b64be5-a196-4d62-b092-7cc6342befb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1d38d0-52f6-4041-a25f-03af34b2f9cf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa808a58-60c6-4174-9c5d-e7aa9fb6274f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f34bab-90e3-45bb-a453-d8aefb011ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f30bd1-a3a9-42cd-ba92-39a3689b4a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eca007a3-0a7d-4e55-9106-ff7fd6e10a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c100f0f-bcf7-4491-a44e-1857f73fc760",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7667bd0-77f1-427a-92c2-ce7c4d18d83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23591f9-169f-4a1d-8320-c2ec2e87224e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52eccf0d-90e5-4a90-ba5d-a0f8b7b45c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "370fcc85-d02b-424e-ad4e-5ccfbbc7c949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0e5857-47c6-4876-9ea6-96ac37d2edd4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945c2cf0-e787-4b3e-bb0b-b62783088c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da87185-40e4-41c2-827f-f6696d457d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88baf532-3507-49c6-ac09-a47bf9df673a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af972ea4-94d4-4139-ab17-ed18fea2c0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a396fc-68cf-4054-8a63-49fd223eb0bb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb8f3de-fa1a-41c2-b5ca-afc042e9dd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8741b0ad-04e7-45de-af6a-02aa875b5ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a723913-1225-4c4b-a119-0e4d06eebd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "658dd123-8aa2-4b2f-988f-e6009085f3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f749445b-be2e-43bd-8f46-f2dedf007a09",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e16eaf4-1e38-45d7-af07-9bd975093102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3ce235-3d0b-4601-97a7-f3310043fdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99337dd-6ee5-4025-a9b9-76c4e2ecc71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1bcf84-f0db-4eec-858d-4d04c23d497b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786a948b-d5a3-42b6-a9b2-f5582d77cd24",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf914d2-1c5c-4965-a290-d1a1e977d18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ff886f-cd74-413e-a412-a44e6b3dbbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9ba757-87cf-45dd-82f2-11178d0046af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d700bc67-9ae7-46e3-bb2d-51a8a2582ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a099b6bb-2782-4aea-9258-550e171998c6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da4f7b0-710c-4395-845a-5cb88616222a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9bc5c8-7698-4986-a9e5-7351ab278a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc25268-568f-4f8a-b0bb-e6bcd50280f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83ee58fc-9344-4f42-99d6-b5a22d8a0685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fa89f2-2259-46d4-a68c-ac26fdfeaa02",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcfde78-2f2f-48d4-b51b-978f03f457a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a781077-f3e4-406d-ae9e-adee98fa0ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10727d92-0cd4-444d-97a4-ab0b667a81cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "859db5ed-a08a-4c49-b60e-b9bf6455a4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b22d6da-e350-4107-90bf-b8920978d1f1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfddaa4d-c883-4957-8813-6a98aa400155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa080c6-e987-4d31-92cd-510e1394afd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738cd137-0493-4422-a8e6-41f426f0ef13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6733432-80bc-4b6f-84a1-8d208db0ee95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a07509-32c4-4b17-8da3-70fc17dd6dee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ea7775-1f39-4686-9296-5c1f6e31bf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e8f50c-bc19-47ba-a30c-f4b3e05b8afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7193f8df-cade-402c-b83e-52139851fbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "40d4c0b8-23e1-432f-bdaf-5e60a4726b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723715f2-3ca1-4de0-b8c2-3faf1ebad12e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf686966-22a9-4f60-9e0f-42a454436c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613c53d3-3e29-41c2-b19e-01e9f7c02e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6e7837-d859-4c28-8d31-f0e08edfbe4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb6be44-8194-4f8a-8e02-58e04eafb259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21607a1-cfe1-4a34-bab4-27a083ec8c9d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef15c5c-1342-4d55-a043-da929dab2360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996b0392-a133-4392-ac4d-db086e4c44de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abca77a7-4b25-419b-b0c4-ccecc75f7c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e64e27b-b3c5-4187-ba9a-a779d3f57ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855ad778-70c9-4a63-86e8-1eeba2bc523e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71eaa81-6ed5-4833-969c-c19953fb60c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7971efda-a86a-4638-b186-4428e5c314a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189999cb-9edb-45fd-b631-8e95980c34a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c74346bf-c2b5-4da4-b59e-f1d9fae5c610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6ccb18-3be2-458f-9003-347502a7f307",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b0abaa-7f2c-4fed-bbc2-84730c1b3656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9295a71c-ca74-4d74-b94c-543933d09835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5efa8e-74e7-4896-a3b7-2a5c9e561c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a31199e9-3bfd-4b37-b659-9a124a7b424f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e593f0c-571c-4112-a458-d88cba88f3a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b63f21f-8c25-44d2-acca-93846ac59abe",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb971917-1908-4c9f-b345-3f7ffbcbb8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ceb0ed0-a620-49eb-a94a-fd594221aa2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb651fa-65ef-4c65-8c1d-ac2317d8641d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "238df92e-5871-4820-8b98-46808ad5114e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4e588a5-aeaa-45b5-8150-bb8258c1ddce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f6caa28-2b0d-42c9-b7c5-a16ef59f7edb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b872dc8-eb10-4f5a-a9e6-c16e8e5b5632",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e3a51c9-6ce5-42f2-9631-47acb7352520"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee35f632-88e9-427f-a145-403f12da2eff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed183838-e607-4f4b-98f0-ce1546ec2a04"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eed99a9f-2028-4ce8-ba55-b7c6b0113db3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6656e38-7b3d-4c11-a4bb-0ca094fb8787"
                }
              }
            ]
          },
          {
            "id": "11de63ed-1ed3-4ec4-a924-914264aa6a94",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bda17b7c-a44d-4995-8d33-a096e8deed02",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f426e262-d412-4183-a6ba-baafe6cc6e09",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8272602b-9c49-4d54-97fd-11cfd3bcb0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6627ec0f-d68e-4a8c-81f4-48a483b3bf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b84efc9-2714-49cc-aafa-a83198c7f225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9789e8d-926a-49f3-8c9f-ef2bcfce6fdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0dd20720-b61e-424d-b971-2e0b9fc5b4c4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ca9903a-7538-4c0a-9462-f1cf6f3c7940",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adbb339f-faf0-4ef3-aec7-5436337c07fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8822b09a-807b-4868-b52a-ef69e281d945",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a320d546-eac2-4b60-94a2-8864f736d17b"
                    }
                  }
                ]
              },
              {
                "id": "d8eebf4d-ea9e-439b-ad0e-ab31ab0392bb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c6d0e46-8316-4424-bc61-b01baf7e32f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9206f57d-00cd-4a78-af4d-f979b8b3108e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "062e7843-1d31-47a0-a886-0acc98f763c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2201d299-830b-4825-b8fb-b74ce28e9e73"
                    }
                  }
                ]
              },
              {
                "id": "9d839923-35f2-4f1d-a4ec-179935ac6cf3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de42c0ed-f91f-4675-8561-9efaabac2a91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6ec7201-4c52-4b66-a6e4-664ca8ed670f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e781be2-b13b-42aa-b0c4-426301010823",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "52ae7da3-cc04-40e8-81a9-972ebd7c3943"
                    }
                  }
                ]
              },
              {
                "id": "a47b9163-106b-4637-8a81-f5d1607431c6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a0d914b-b364-42dc-8e8f-aebca3728257",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a0f5390-5e8d-4976-97fa-adbf971096c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9947f1ed-a52f-4924-a97f-55f7ef2faaa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fc24d507-0086-48ba-9166-0bc9d12fff26"
                    }
                  }
                ]
              },
              {
                "id": "ca8149b3-44b9-439e-bb4a-6be7d5672d3f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e101a9b5-e1fe-4234-a560-97644a477599",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63902334-9e26-4aec-9e93-a7cff3b0a39a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb566e35-a5b1-4408-9c75-338802ab52ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d73648fd-908b-450b-8a07-c969344fae60"
                    }
                  }
                ]
              },
              {
                "id": "7e4741a7-6999-483a-80e6-b6f72175bbcd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e4e9b74-3c81-4584-a575-e9a3d7be1834",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79950c8a-2716-4b5e-8cd7-ed2fe897c920"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19490cad-c0dc-400d-85e2-6690cad5f88e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9fe222b-95aa-48fb-b80a-8a5320824258"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5fe636f-e67c-4c59-84cc-598fffdb7270",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24a9b268-2d8e-4440-909d-d8fbb0a3b6d3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "59251895-f650-40ba-8087-d71d9d15bf12",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73003a36-271e-4fb6-b6bd-da5220bd04c7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e161c2a8-9c7c-4727-b8e2-02e82e15bc18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "73bb44ae-b193-498e-81e4-c2b627fce002"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "745926d9-7c8d-4693-9b71-cb9bbd7f84fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28640260-9dc7-48c6-8fb7-79c21991ccdd"
            }
          }
        ]
      },
      {
        "id": "807cdf35-2ae1-4600-b82b-def1f5d673f5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0ae15d2c-fe02-4063-bab1-f7dc9cd6aa3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f239fecb-8dc3-4ff8-a64b-168fdfabe3fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d0d28c1-54d5-4704-9ce2-9b680338a2ad",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e217a64-c508-4a4a-bbf4-41b9a7318129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a2ae17-595b-431e-93a4-97239490dda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389cd1bb-fc6f-4a76-8bb7-3430dbdfc149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "55a5a4a1-b2cf-4858-90dd-5b9c43957605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a75c12f-93b8-4691-98b4-e29ba787af5b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5f9cae-528f-4089-8ba2-bf300f4f3b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d546e4d4-b070-450e-a41e-1806cf7a2ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54873a9-7796-4ae4-b090-0cfad13d6dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71444594-066b-47da-939b-637d8293df2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1c021c-b144-426a-aba5-50e84b9d8518",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33d4b6d-2a63-4e4a-9913-8ae738d9e9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a767e0-075e-479f-a820-cd15378e9197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ba322d-d093-4c27-8adc-48f851063049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec89132e-bd97-4230-8f78-2b02114182ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7fa773-194b-44d0-b651-cfbcc3126248",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b013d935-d3ef-4558-899b-0e894388a264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fb05ef-2904-430a-b967-d60d9184572f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a160754-2a9e-4a3a-942e-f03ceba8624a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f19984dc-88f0-4469-9d03-c8fdd2279c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee08af6-a071-4b13-a8b2-3d8767360df9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138848e6-beab-41f6-adac-93316d918a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a8c4f8-bb05-4c6b-82cc-621121231aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c466663f-0028-4c12-a289-955038ba9598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "218f1412-c7bd-4167-be9d-f4b82c649e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51009706-77b5-4f4b-873f-2d277a39126e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7f9364-820f-42ea-a10b-1410d6476f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7cc351-513a-4fe3-b3ea-493a3176729a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36d93c6-f638-443f-8abd-400c6ae5ff94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c15fae-dfcd-43db-8ede-fa576d35cd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcff195-c0ef-47b5-9950-5b6a427a9323",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7782e7ef-82a8-48c9-8460-5b819b14ffe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc0c093-ef3d-445a-b60d-32f1112ce2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43eef6f3-c426-4aad-ad33-40e4ea12577c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "822085d6-a981-4eb2-b76a-4c70e6fc57d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84679f4a-481a-4a3e-8fea-4f73487cbe51",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fe60cb-32b8-42bb-974a-4d84ac02d229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e64e23-aa7a-4a9f-a797-aea7042f6df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75112cba-f967-465b-b88e-48673bed390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66631fe5-25a7-4ce2-8afd-24a9b4856ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39159428-4f68-417c-9302-89f0acac6523",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41889d7-6c5b-4fac-94d4-902456ff1e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e745f188-adb9-41c7-9260-10b2f8ade7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f8265b-6745-4757-9617-ec3021a75d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e183b7c-852c-4bd7-8097-94eb24ef05c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f90303-32c2-4acf-96da-025164d515f1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e04aec-84a3-4de8-ab72-ceb9a6312a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08865c95-41e4-4834-89a7-6f3d793925e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92ebf30-688f-42b8-b2ca-aee27364e516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "badb16bb-9a69-4978-96d8-c083195e2c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280e4f87-a304-40d4-ad69-ec0924a5c541",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fe9083-2671-4609-9f55-dc84a0707fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97404103-f332-4e79-915d-326f3538c569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876722be-ca9c-4035-9cfc-fed9b362e436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2fe69f-3fcd-4581-8980-a19fe7fc472e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda3c637-d500-4d8e-b189-0af238bcbfe7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394cdccf-044a-4cf7-a649-1a1d3c79fd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4b9740-ccca-498b-8735-c95638c5eb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3356d31-8a7f-4801-95d9-c43ace803fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0299fc5-2148-4bec-a5df-8ba37eb0673b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa60f3f6-e32c-43dc-8608-4c9d9aef5b20",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0db661a-62f3-4e92-bf52-8d58483ed38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c5d63f-72d2-43ee-a044-330da14d0665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e381707-c147-4780-a743-f1f7c1c0c4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db6d512-fe8f-426f-bb77-66a6ddf5d230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aeb8ae-d6c6-4c5f-ac3f-b98a272ee4e5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812b154b-012a-45c1-9c1c-7a802e178a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0755473f-e8b9-443b-bf3a-887347500f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823da63e-62ee-4411-a063-6221ba10fd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "40766b57-e970-4ba4-8e60-53d44c388d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18777c7f-2548-4548-b463-4063042a2a2e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b9cd5d-05c1-4538-98fe-ae87f814e0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e4bf6d-2748-4c31-8143-fbaf0f948407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7d4e43-5dd3-4fe6-a330-dbef4ac05faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "26afd301-5e74-4220-a195-1ad30728526c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded856f6-dda3-4ed5-8021-d6ffdc8fadad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610031ae-d610-4e29-affa-3a59dbe82856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45651fc7-575b-48cd-a82a-d476ebb6e3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e901f0-4715-4f9e-901a-0e73a55b8acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a82e509c-8535-426a-84cf-402adc7c6462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b019572c-f573-4729-9574-b88ded937b13",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f03c9f-7974-4d23-9079-47a440f85bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3028e9f-486e-4e71-97cb-6349c273f49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c9ed1c-1e67-460a-b2d7-562ff2b98963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc848df-6f01-4e91-93ee-8369c9f16ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5220d447-ad56-420d-90f6-6fc6eb6a11d1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f353cf-a828-4d0b-aa66-e06d424ab184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11144c29-197e-430e-b2ee-abe37e36924f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d6fe29-e67e-4b2f-b493-77c308e5ef2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4059d5ff-527c-4162-9d9e-27383724b7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb587028-a2ac-487b-bcbc-a50ef4729172",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cb9f2a-8dfc-4a60-9897-5c30179f4134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aed38e7-a79a-4113-ad1c-55680049c7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d6afc7-2300-410c-aea8-4f8129480f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4764675-fe31-440b-a4e5-5c88d3ae5fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99351765-ea6e-494b-8e3b-b6df0ffda6e6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdb2076-27b0-46d4-b7d2-d167d6f4b6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4367d3a-f634-4745-9562-0305b3ba1c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de212ad-415a-4e7b-89d0-f36775c88a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed68781-5043-44f8-b458-557dc43121bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b937ab00-df9e-4d50-9959-89293f3cd9ae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c7dde4-79d0-4d13-a049-310719ff7f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6ca4b0-d783-40ce-aca5-1751f49b3209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9aa69cd-1db7-4a8b-bbb2-6f790526cf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fa84c4-580c-4820-9d06-c4f9f288cc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be979ba-416f-4024-aae2-2855531c251f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696b769f-d82e-4741-a759-1f19deb6fc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5f637c-fa2f-4964-bfae-452743582518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62980018-a35d-4175-bb44-8fe7eb6de115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adea2326-5180-4c90-865f-54066da83b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4002ac1b-e587-44df-9076-e6657cd78e7d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b88b0aa-ec10-4858-a7df-b10531382067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59c499f-541b-4e52-ba03-a05012ca2732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b101a410-971b-4430-a56e-8b2e342c09e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "746627b1-4d38-4b66-8d28-3fa2bfda3990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55dd3bd-0dcf-405c-a0aa-5743580320f4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e8a179-4621-41f7-92d8-e68ccd70583c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd885b64-0450-4b61-938f-63bf3ee3cb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870a3e6f-9e59-4fd6-a01e-686d3bb2bad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "063928c2-ac31-4479-86d9-a2704da69a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd795353-3289-4b3f-bc85-a9380d5e3023",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a83f9a-90b3-496d-8463-5c9ff32fd494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6340eed-457a-499e-82dc-8dbb356e8516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfa8f29-4a13-48f6-b7a6-26a6aa12be92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9cb9e9-a756-4a24-a4e2-12cc491854d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f7f21f-b36f-43c8-a3ea-31cc7bbb41fe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb58a91-5b0c-4243-9f5b-3e1d93c00468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e7f541-b0c9-42e3-ae75-8c302cafab89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33cad30-fbb3-463d-8191-cdd56a241ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1989004-bafb-456a-9b13-6b493d6a4ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fae297-b893-4957-9064-d57ce92d0ecb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50878734-94ec-4ee8-9016-70bb06338616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ed4986-ff07-42c9-bf2f-4c8fca6ffc30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bacfba-db61-41cf-8928-5af55fed6821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "420f7580-90eb-4afa-863f-db70dd04e1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d13a63-90b3-49f3-9f30-501d6a39ee33",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf97b684-dfd8-4354-a6c5-d1681f9d3b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e5ec91-04e9-4859-8c10-10e524aa3d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d53451-ed97-4137-a72e-d55a79d8c244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6676b9-2169-4607-9a79-b6fe2c7da783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5783ce30-3af3-4d8c-914f-6869fa18aaf0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af9aba1-d034-4749-81e3-6ce74fd5103e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31244e07-81f5-4667-a31c-49de5d1a98b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81f8142-e85e-4472-b64f-8321b6a95c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e84edc60-9e41-4a55-b64f-cf6dc6854788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf0a44b-740d-4590-9132-0df01958b29f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e0df19-a5db-496e-8794-cbe583b97181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cddb61-18ac-4c57-86b6-f58878f1666e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967b8edf-11fc-45c5-913b-2e4065a8d006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c96631-7042-4045-95ef-3812aae6955e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90819c4d-6728-4d9c-9fec-07f139e80bfb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2f28e5-bb23-447e-97ca-8d3da8025584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca03237-2d55-43e5-a1f6-46376fb3c55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b73feb-637b-4875-9722-614b2ea2bbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe2f376-4c58-43cb-aa98-14464cedd586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be308c98-c4f6-4f09-8673-5f7c469ce622",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0d6ac1-6d60-415d-b63d-edca777cd9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febd8efa-1c8a-4c4d-8afa-db8d9ab2d6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d77f48-0890-4ae0-b934-9a83dbd530ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1c6d17-4831-491a-9c70-87f91b530443"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8967da60-6e55-4ddd-8f18-8db9284c71aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed7fb791-a776-4216-bd63-24d6767e83c5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0ed93a-dc2d-4a23-b910-1d05a65979fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c9e16f-9c01-458b-969a-800d81ac07a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c72b1f1-1e72-4c84-928c-e92cdf3e0719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4f7dc85-2d20-4921-aa66-34380d3bf401"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b84880e-49ed-4ffa-a58e-7b22dbbf3b51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8188f7cd-50b8-42cf-81ba-83d0551c8a0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c295191-fe3a-40ea-812c-a095b96eb1c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ea9095b-f859-4af6-a6fe-aa380d4b8eb9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e2fb523-9d70-4ae0-9941-2a1bd56e2a39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d6f0b956-9199-40ac-a7cc-d0aaddbf0f23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfa5f12d-c77f-46f1-8d8d-c0a39578d086",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13734c27-fb46-4e13-8911-48982540f43a"
            }
          }
        ]
      },
      {
        "id": "51109f9b-d2f4-43ee-aede-a85812aaf529",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d838beac-e55f-4433-9c55-e3b9ec0b80ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3f145af-9d37-49e7-85bc-60f193976c12",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17e04112-5e60-4e5a-bdcd-d65f0883a6fb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce7dff5-bbd0-42ec-a268-e639dc4711f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd3fb9a-6ab2-4940-8ff3-0516dcf4f20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f410fd9-13bb-403d-bb4f-bdec1ace6f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f41979-479e-4cf3-b5e7-74124a04e29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff04cc7-4825-4f6c-9b4a-5b04b8402f45",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f45b0c-5451-4e9e-9484-ea083ebb9bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa73d30a-447e-47fb-9701-0b432d4d7f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cc51ea-59f9-4f25-bc7a-a9589d111e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e39ef313-6be0-4d56-a31f-c632278076a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34f0513-44ed-4b1a-a786-d9e0ce4c37dc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31b52a1-f2f5-4fc6-8648-a2c39a79fb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b8ad02-4ee1-4d92-b769-50841d208e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2c46e6-2a19-426b-ba72-e6958d11a6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b620f7-e293-415c-8ae1-045ecca8cf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fa7669-9865-4d9f-94f1-e080dd741a6f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3020ac-c051-44d9-8240-b56fcb2dbf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7671c339-dcf2-4e32-acbf-6f160b89850c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bad87d-66b5-4dab-8b18-7fefaafe6355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8a27b5-4c30-496d-955b-3be56c7cdc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a67ddd4-9265-4ae6-968c-080ccebefc6a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af268f38-a02c-471d-89f2-acab14cee05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bb5131-22b4-4584-9cb1-8ae6f08dc423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9938400a-a975-4305-a560-f09ba4ee5233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35efd7b2-ee7f-484d-a971-16151eaf1e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0034ce-bdf9-49bc-8381-828407720f88",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aded1f43-92ea-4a72-bae5-f38830b1493b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1500fb-1113-467c-a212-930de94d7929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7528a9c1-41a2-44e2-8dbf-23d742e58209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6d4efa-e2e6-4194-9697-0c53d2340b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ab0189-db54-4784-b13d-5c8c10b01658",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17435373-7319-4017-bc20-c86a3588297b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e1ee70-9ab0-482f-a651-bd139c8cc7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31af0d7-3c59-4fae-883b-e66da8a326e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "804feb7b-c500-42c5-9103-930ff4d70dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a1ad4b-4cd8-4be1-9e30-06077b271450",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb4cf90-5511-4d82-9536-b0d281d79ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f975bf-1466-424a-b6d4-ea7a2949e149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0674981-1aff-46d0-b4a0-467da94c5ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0545003-9249-494f-8a2e-2b57c72c36ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccd5ac8-1901-4608-bc86-292f80eba331",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44f427d-42d1-4421-aee8-014e87d03f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0d9018-a197-4f7c-962d-9fe5d3738184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a8c700-db59-439a-bdc5-00e2e2a30854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09fa135f-a049-4ed2-a467-f9defd2bf5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c3a9fa-0fc0-4947-bef1-fe7d536cd53f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ce9e9d-68c1-48f8-92f4-655a3685a6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd693abe-b3ac-463d-a45b-7b2e9ec8db76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652234bd-f222-46ef-92d0-f6e8e6352c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33fb1be1-7ebe-4c1c-8e4a-a47f40e4aac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f03313-8eec-43bb-bb12-72347f2d4df7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85656724-2c0d-4ae0-990d-8040c56cf114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e25634-c4a0-4686-be23-0bf6d7f583ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f6e5c5-2408-48b2-a733-c1e8835189ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1c63d4ff-6f38-488c-8190-759203897a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f925c9-884e-48e1-9604-4a5fab26738e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d94ae7-927d-4c0a-9597-5e8fe6508275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8284e8-3734-4acd-ad1f-ac6afcddd048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24f978b-f7ce-4d58-941d-e521388b4676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0b05fd-746a-445a-83dd-d13a9cc8cefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417720ab-7dbd-4f40-b9f0-d255423a4a66",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12ad9c9-4b5a-4212-9de0-94946ac5fac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b839484-db3a-4c83-99c8-48ff425a5dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28fc955-17e1-4035-a0a0-b23b2e91c3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5b6b41-5f3a-410b-9dde-5ca5e50d4f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15585d5e-361b-42d6-9a87-ffe08f55eea6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d302c34-9cd4-4cbf-ab56-a034f4e9f115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a682a17e-cef8-41ef-990f-95c6f87a6b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db070bb-21ee-4571-a3da-eae12b0b6f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "110c0481-1b8d-4309-b257-742bf4d31d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aaabf68-963f-4d6e-b16b-b107576304ee",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c306e56d-2f4f-4231-b60f-b24232e7bfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68fdf4c-c579-41ea-8fa6-9ac16f8a79a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bf071d-af05-4405-9508-16b020f13d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c22d10-ea10-426b-bc68-d25ecba7bace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cd0c53-3804-43fa-b7cd-1b281935eee2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3916c7-03c7-46dc-a079-113d415ed5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca18bb3-5017-4137-8ec8-cb6ad286b0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55609971-9299-470d-98ff-5d20753c73fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "be739323-b8ce-4c2e-998d-1e0fad4006c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e557ea10-7e63-4da8-9f8b-d4dfedf5437c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d966d05-0378-483f-b33a-4d9789e5e500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c95bbfe-a822-443d-8247-d4e258363b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfe619d-6cf1-499b-843d-9ed51e9436c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccafcbd6-7bdb-495a-9b12-d2d908a530d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab81342e-4d75-4475-ade6-15e2d3743ec1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96626ad-5dfe-4d00-89f8-7860d00ae416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e24d3e7-67d7-47be-a0c1-9c585520feea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7ec850-336a-4b3b-bc9f-981e7d31a055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "acaddde6-79b8-46c7-b8d8-e8efa0ad9344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de4a0f0-5dd3-472c-8db9-4c1486b08c89",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af21e17-b8f3-42fd-b915-bc4f88c42e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527678c5-f99d-4fca-92a0-d93be5522c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d36a779-3709-40a7-a060-ff8489006901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6916b948-897e-46ce-820e-7a0f9f580bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bdf0c0-8de9-4b08-bd97-09ec6b89548b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3e2056-4f50-47a1-8f13-8cba26697340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab53102-b18c-43d8-ac38-3b4704777b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7722e49-faa3-444a-9b6f-0531d2c1846b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6805183-1bcb-472d-972f-1354e112fbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba942c9-3b7b-481d-95bb-d841013abd2d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d822aa-bd5f-460c-9b09-c01ef40e57ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8914bba9-5d30-46c9-842a-465194a85943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e057614-0eca-48ce-854d-0aaf84054075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e67bd08-b113-46da-bffc-b24565fba053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e141117-9e0f-46df-8a84-bd8137727618",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c327760-0b4a-4855-8972-6004182699a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29edd432-6998-4d98-b659-1fc633a61df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097eb24b-9f4f-4257-9338-672263db86e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2db1787-6455-4098-803e-15dc1c6d851d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3551df-4d25-4357-8db9-ce5a69d06d76",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b69284-500b-4349-a708-8573519bf6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c6702c-ba10-44d1-8759-c6c95e95fed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00556f84-ceec-41f0-98e5-5fd7936b2a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4273b372-5aa0-4705-8e92-ebcc599a3b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea13a79-6cb6-4d72-bd96-116c9e67090f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5419d18c-c752-4a8d-976b-166325b8451d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe37daea-cc61-4617-a0e6-ac1ec7f8f57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dc8e02-108c-43da-9c85-1aa692765a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41850db3-fcb3-46fa-98a6-ed33739844a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a696ab11-c48e-43fa-b75d-aa09948cda7b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc69168c-9be8-49ec-9d1b-9d04e6ff8db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01518ca5-eb88-4372-9ead-f0dcc05d87e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17119c7-5f2c-4df4-9f2b-ece0e5eb2dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5583e68-d547-4e03-bf0b-201ca43b6e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0a8fac-f19a-4bdd-b7a9-8485168757ca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fda8026-1cd3-4265-9ace-45373a35f40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5196b238-c4fc-4b44-aadf-e93cb9f834a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d876fc-6dad-46df-bec5-d2b454d31472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2c5788-c1c8-4ea9-bb4b-1180c6354b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168f8fad-eabf-47b5-8dbc-cf9051b3c806",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6d4132-4d38-4f5a-a292-c3e2a397faef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b01756-4292-4b4e-84b0-6f6a46b12cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233b3058-1426-4186-aa2e-e69f33994085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5a5f69-0ad3-4b2b-9fb3-a004aa21c016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb45531-090f-44fa-b918-b5169fdb990f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce9b198-5c05-485c-bf6e-f0fb6be3259b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cce3012-a667-45d7-87f7-81a0ed023fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbbb604-054e-47de-b788-a161b33342e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7751cbe-1a0a-4d1a-a793-3a763a18915a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9083f432-4a88-45fa-b13f-c2ea94be5399",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b67819-d78b-4a6a-be1b-ad3efdcf1d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807555b8-754f-4bd7-ac25-72b848f179c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461cd472-1833-4abf-add2-dca52d9f61cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0286e101-9ed3-4017-9ad0-889471ebaf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fe8084-5047-4bd7-9311-cc5f68480ee7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb65a4f-63a7-4162-9a61-c436f521ee23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474caa7a-eff0-4a73-93ae-1f8a5ce04a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97f49b6-dc31-4b81-aff5-c5541cfbc037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "742ccfb9-6faf-4671-a213-475dd9d9d852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165f8878-833b-4edb-9b2c-0a31a1f90e60",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a5074d-a41f-4a4c-a381-7593e6e1921d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599f4967-2406-458b-b4a5-a789e420b7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b888dd03-4b15-4995-a905-ac107edfb49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d60c92-70d4-4f9e-aaaf-b51755a81dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cf0377-e809-415c-9459-a191a32580db",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecabd3ac-3030-462c-8748-c1d4ebcf6758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5bfd26-949e-4a34-8160-edcf75a4446f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0936e2b8-108d-4cd2-8d51-a074d71c8aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76af7a27-9c6f-4392-88d4-75cbf76f65e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b7e395-4eba-4fb2-a543-a1c760351e87",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e660cd5-28be-48ef-9e7b-aeb3e9c77c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7e314b-f91e-4dae-b742-41c3407fb008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a597567e-67f8-4bd4-9673-ac594dcfa96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1682dc5-0340-4486-b639-53d7884b5c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b46e70-20ef-4909-becd-3429fe591b72",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8194715-8027-4125-984a-0208c40ded39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528af5e5-1527-4697-b457-003d63370848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1105b48-b3c8-475e-aec1-94ea3084c555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8a88f9-4a83-47eb-93a1-301a342c6579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e6ca1c-86a5-43f2-81d5-1af28aad9778",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068bc58f-e2be-4c84-ba7e-5a32d8d3bd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5577744-92cd-454b-9dc8-00ea2c620afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c552cdf9-7a51-4823-b0e6-bec2a1e3c14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f915069-5408-46e1-8eda-edeb77164eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326277f4-b7f5-482c-85c7-97ff70ed40a6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c91f82-573d-4f4f-9951-d9d370d80449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefad6d6-88ae-469c-97f6-1376a1fb59aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dff2a88-b72c-4411-9bf5-1bcba777ff2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5cf63c-90c2-42ec-ac09-2f34663c63f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3962cfe-7ce2-436c-b8f2-080c78ab50bf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d639e9c0-4bad-46f9-a65f-d31829802142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46100735-0d38-4ea6-a4c1-c617001fa442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0845be36-1cf9-4555-a251-131fb26a91e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2991765-52df-4449-ac9f-d11bdc19b09c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18b149a1-5e3c-4e14-a21a-16b2166a3901",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20efda46-3de0-46c7-88c5-7ba90255b6bc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680a8321-db6c-425a-83cc-bcd36b6ac529",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7feed1-ed6f-4ef0-b851-8ae710a630d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a66f037-dcd9-4f52-abc4-2a52a77e6f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a53c56e6-5e3a-4cd1-bb11-07455939b055"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5197643b-9059-4cbc-b6e0-3c2ac6536af7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e63250c-9965-4bb0-a30a-7aa15c4ff8d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cac97ddf-34b5-4123-9fee-6499ff242114",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "affa3f5b-73de-477d-b2f7-2bf4e64d6959"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8e90182-a9cc-46b4-ac76-43829360784d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "699840d6-588b-470a-95cb-202e404213c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3250cd2f-334a-44fa-8652-d9a573af278c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7009526a-85c3-4201-aea1-7469e9a62212"
            }
          }
        ]
      },
      {
        "id": "4eb7ee93-04ab-4fc3-b766-c84c3a2c1436",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4b86c52c-16e1-4468-a55f-8dc855a60fe0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c41d2d37-7330-4e9b-b231-e3b3b0608fcd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "832b6481-9873-4b4b-a6d5-d1a9bb3bbbbd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a904732d-d6cc-464b-8ecf-e4b79ff89b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1cbd7f-9099-4372-8c5a-39f8e076a675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0f57f5-ca4b-4f82-aae1-ca5b2935da1c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84be158-2c1d-49e6-9d4d-562a9f78b905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff62749-f612-4008-8c0f-c6d2e3bc42fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7545472-44fc-4781-a77e-f930a76716cf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b00d4d-f4d2-4772-b621-a8abb6c73496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c863d3c-a3d7-4073-8aee-249b5374bb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d51fcd-24fc-418e-8eed-dbe7a283cc0e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ed725b-2697-48ee-bceb-c04caf3fadf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30748135-f3c4-4dff-a004-d4bd9fd95c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e52abf-b9ef-4f95-8fbb-028473de0fb6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506b392a-30c8-45ee-8950-1625fdceb8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3885c7b6-3f7b-4167-aa0e-fdcaeabb9bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b819cd-5a40-4d81-b276-ec377d7f8817",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1aacc3-0158-40cf-89f1-b4449e79287d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ccff55-f072-46c4-b527-a24f871a65a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ae6fbd-41cd-494a-8094-bd801b5bf6f9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd7859d-fe75-4010-a42d-c8e250b121ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7e2476-bf8f-42bb-a037-c4b67a432f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12b73ef-96c4-47a7-be25-7f5354d2341a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4b0e45-d9cc-440e-a51c-e78f570dcf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c62cd7-e8fb-4f5b-8c0e-59c0ae37a83c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f0d92f-56e0-4487-b45a-8e7d71e55a0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f74035-933a-41fb-9b8c-0538e00275d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfcfe4a-8f77-4d09-9483-13e324691428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb0004b-26fc-4c7d-91ab-1ef837f75e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea0629e-ee49-427c-af09-b1dee3fa7a9c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb2da7b-3c34-42e5-82e2-5bb097137447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0b360b3-b499-4f7c-b10b-4acf82e2bf66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b73ced7-735b-4022-bfe3-1c41658e3fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795b287b-5ad0-474d-a12d-000b4ed194ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb97cf83-71b8-4a6b-ac6c-845b3f572a35",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0f7739-dc3c-475b-9210-0d4611ec91f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a48a2b37-bdb0-4cfa-9cfe-6f54e7e6ab21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463e34d6-8608-4ab2-a752-ca4d84dfe8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbb8892-7944-413b-8d07-a78cb56adc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7208ce00-b4d7-409b-ab22-679cbde235dc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5960376f-2465-4770-8150-d27130f8a42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908ab640-dffd-485a-a578-86a1c6de393f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c8acd3-b80d-4288-9309-4cedeb53de50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87ed7fc-378a-4f63-bf7a-25eb4e418830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b2f09f-63fd-454a-a591-473fea8d7f10",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6b2b9f-c585-4853-a883-013db3076963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c50be9-a9f7-41ff-9d4c-d2d0fac121af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d293947-7ac0-435c-ade1-a0bdb452a81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bab5cb2-22e4-4c9c-979c-cd7208f86376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9c7b1b-2214-4f4b-8b96-c5fc2c2272d6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f65bb68-120f-4d5d-aab2-3ce0b3370d8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "297e0d28-0e24-4b09-89a2-7327cab6a48d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dcb677-882d-421b-b33c-b1bd5a2a3894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe03e3a3-21e5-43e4-8a9e-1afedf45f320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb38c19-7dcd-4e48-ac4d-1ca815926a35",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070bb439-b845-4f9c-87d5-0c82be337e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b932f194-2896-4b14-9c2d-3de2dd44cf64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185432dc-7604-4c0e-841f-4c5f7a94c321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd90147c-6e71-4720-a36b-e3f1be50c537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba5c2e9-0964-4d52-bd1f-a3581eec2917",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9cbe4f-a474-483d-ac3c-cb8d976c3544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96edc6cc-a2a2-4a73-991c-4e90df1a9e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a284f7-9588-49af-9c00-3c6c9047f0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6892c74-040c-4a06-9df1-ca6856a93027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cb1087-c858-4d1b-8625-a017ba49ec45",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b650f9-e3e1-4364-9190-02f56dc941d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b72a27-c2d7-44b4-9abf-ae4f4b705e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f691312f-b411-40ad-9748-8f34364d5931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e79f1d-8197-4628-90f7-70ee977636bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a182e8-8704-4dc7-9a18-b9cdf1e8b555",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a56a5e3-f6b0-4a55-8a0d-de67c6127a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287ff20e-621f-4768-9d0f-94add0b95ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2dd7839-d2af-4704-9391-9120689b9533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3762d264-70e4-41da-9dd9-74ce3f6605b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ef8234-b4cc-4705-aaa8-e56d3c17bae3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bb99d1-dfbc-4045-ab2a-d4cf59b8738a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d53a547-52dd-4bba-ad07-e3659154314e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2f94e4-8ca0-44af-8dc1-7fca74ac4617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd843564-7160-42ad-8c38-9d71b0d34430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66825b67-c56e-4ea9-a5b6-abf8be059245",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc25722-1918-4a7d-b42b-dde053f1b014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1dbeea-a17f-4e90-b245-a3aff3bbf833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93249a9-53fc-4754-acde-5038fa03e909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef2ccbc-8f16-4758-8f98-11f4ee8ce657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81defa95-b418-479b-9da7-acae2ae94fc9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175b6bc9-e0cd-460a-88c6-0df36da5bc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b69458-a19c-4770-8dec-c3311eb74292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737e6704-65bb-42ae-a918-8368d6880e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91eb5474-7997-4913-ac5b-63ba1d264b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac9eb13-6a89-48c3-96ba-ec5449453ad1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdce5bb1-fbb6-4c63-a6a2-3a98270b98b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e58dcb8-78dc-404c-901b-6f88aef10dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00afdc01-a153-40c9-9037-687191b63952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c799a60e-8f45-4126-97b2-af5d9fef4bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb732c2-da2d-4f5e-8eb3-4829d8634870",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d43ca1d-9015-494e-81ef-f2a299fd1632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7aecee-f6e3-4701-98f4-47d6821df21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffc99eb-1bbd-4ec3-bea6-0bdc2dc06866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db655027-72d5-418c-8b76-93b4e1277bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55d3a8d-9e8e-4d37-a3de-4e2a389c097d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffebe688-98d0-47c4-8646-089472a6e132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ddcbaa-1136-4e1b-9dba-8d0440a7077a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b95507-f754-49a5-9c6d-726b0bdb6b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491f8cf1-ab8e-44d8-b227-e91c82b49909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be43d942-05b6-4495-9a19-1bea1436f300",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b6e411-1665-450f-935e-54804f7c31e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "216708e4-803c-4475-835b-c3ab7e96df00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38667a7-70dc-4bd7-b0c1-24c17da9f845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2451345-5d37-4af9-a76c-5adefc911fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d4dfbf-684e-415f-8b91-a959e0b0544c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c985427b-ef8a-4fe0-9de1-68a549ea22e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48cb9881-3f2a-4847-92c6-482a2636b8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a383939-fff6-483c-8fbd-765efc6499c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fb2f2b-da5c-42f3-ae93-448f7ad7351c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1616168-a4c6-4433-a98b-ab343fade19b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75357f1b-26de-4c64-8946-1c5d85d8a5b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a120968d-91aa-48f9-9279-f64e9aab6cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4109307a-73cb-48b4-adb2-59317ab07d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc242bff-bb98-4d73-8f58-741efef354a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4378d38-902c-4b74-b11e-6b76c7a13a69",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769fbf5d-d0bb-4b71-ad0e-059b8c9cae7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b6742b4-13b5-4dd7-8668-018602f9cdc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8bf842-b02a-4b7d-abac-bd0137cde11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4850ba-fa17-490f-921a-0ac70a9a6a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a272a1ad-3837-4db3-9e2c-06de80ef98b9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094aac69-cf7a-4200-8c4e-40a9134fe147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68ad3ca-416f-44bc-a2d3-016f8780807a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be3d689-b94b-4454-9a08-f91e6b64e67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4462e6b-4b2b-4251-8de8-2cdce1ba71f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6ea24f-6dc5-4c01-b270-41b42af18df8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1d99fc-10b6-46d1-a9d8-691d8d305aa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b85de0c2-537e-472d-a7b2-4a3eaa273e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e9977a-6f74-48c9-850c-441cfdad25d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fa4e2e-693d-4848-b0a6-7be36d3b84ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1e29b7-6a92-4936-8f1f-68f02dceba67",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09e6922-18ba-4698-912d-221472fbc0e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f357013c-1e4b-4428-96a2-6ae4efebfb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cb5781-ad40-468a-9c7f-2675bcbb3946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acce6d1e-4c12-4f17-adac-3c4db473fbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebfcd3a-eda7-4a48-83a3-d075a92e2398",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b6c2b3-b1a4-4fdc-ad00-f2b6ad108924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1cc6056-d8e1-4be0-acdd-3c8f6deba936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a037dd-5671-451a-b351-ab114e83ed76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44be2c8-1a8c-4f40-ac99-81960dd2c9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5c137c-e706-4381-8d5d-841c818c3c48",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d76d32-0e9f-403b-a0cd-7fb9d9e869e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "781805d2-6330-4884-8b14-834badf84b5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881ebcf1-de06-478f-9cee-8fce615dc217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d691a3-2175-4ab4-a8e2-3e8c49f84c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da159a7-c1af-47cb-8455-4278693ebc4c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33069260-cee1-4f58-95c0-9c44738171e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc6154cb-c3b3-4ca0-9b08-8c53562bf60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ad9cd6-e06b-43c5-a044-dabc42ef35fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399c5ef3-6fe5-4c42-a3a3-37e23d57e73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55798031-fcf1-4a66-8bf7-d70658ae86d9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3d0e1d-a4a5-4574-b0ae-7a90748454b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e666104-a2fe-4d9b-92d5-4c44edc6ee2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c52de4-eaa7-48e9-a052-1da5ea5189f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef02239-e864-4204-b854-d1525eaad0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73ca712-a616-4e43-b69c-2c308a027d7a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20f6b02-7dae-441b-bb9b-e3af7dbd6837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59680c11-7fef-41da-a805-ac247c85b381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e65f9a1-65ef-4102-b641-e6500f56e979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1b67b0-f015-4fec-9ad0-ee8331d4d486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28b9a40-37e3-4bac-9be6-4517672ea378",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22caa8e-e49f-4cda-95ee-88760ffcac11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a7b4cc-d0d1-4fac-8d64-b009b5f223ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4311926-98ee-478b-b633-d14c966e4e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476a21c1-1357-4856-a8b6-fb37abb56453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4811dd0d-4adc-4624-88a8-cf5ee709ffba",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8ecfa4-2325-4667-abec-b66f61b3187f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64cbe6d-573e-4e8d-ba01-b727fbe3d598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9eef5a-c81a-40b6-8dac-13da91999793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bea1b84-ac19-43ab-90c9-e212cba75db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467e8409-ed1d-4db9-a518-73a08029e4e3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7abc8e8-d045-469e-aa50-a51a57734c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631ab250-d759-4bea-81b2-597ea69704d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4c223c-409f-4af0-9c09-06759c347750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c5c287-2448-40f1-aa95-38fe5e5ed4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48908e70-45b2-4ad9-9d2b-67d0cf1e3928",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2785ff2-b90c-433d-a5f2-eda88be3d19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d4a6f4-8b15-4636-982f-1efe4b048d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b9cd70-f164-4b7d-9b88-fb0bf6f03b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4888a9a-222d-4c0f-a397-2b0305b50df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1c4fc5-bf9c-4887-8529-e964e3fcd3ad",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355d950f-2a1a-4813-8688-c1df572e29e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43deb4d8-516a-4058-8bd4-e81c69845f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72a4ff5-8818-4e68-92e4-d0012b48970b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca89b3f-6ff0-41e6-9952-a447a650b774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b351c50e-5c05-47f1-9ae0-5532ed37d649",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3dc539-373b-47ed-8176-c2719fc51248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab58c85-e4d2-4c5a-a194-7c20bfaeec2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e723fbb7-9a5a-4211-ad08-3dce00dac0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf56595-780d-4ae7-aaef-277f7ef6d15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bbd7c7-4ad0-4002-bd1b-9c1145937cb2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41947226-3674-4749-a11f-322d25581cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495f5dd4-1d3c-4615-b87b-334d718ef7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5859bdbe-bc53-42d9-a63f-10ade692e258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e3a3c3-ca5e-469f-8c6a-39a7b0f679ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0043bf83-9996-43c4-807a-0ad871c255aa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc13f883-4ded-4e95-82ec-d08f73a17c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b260fb73-1d5b-4ea1-b50a-c7b0c56c42d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e95a1e1-97a1-4c4a-a216-622c964dd52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d50e89-2bbe-4557-b1e8-7b5ee73c2f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328869b9-91bb-4d4a-a0a1-febd6ff5741b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4feb3263-13e0-4ed5-89bc-adccb1bd8fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14bffd4-325d-4394-ba02-5ee349685c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3afd41-ae3d-48fb-804a-6a8abdbe079a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02e97f7-b529-40a3-aa41-8cd568ebdc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6906fa14-05ef-46c9-96bf-ede82eead605",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786419ef-2fb3-44b7-9959-8fb2b5016b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e61024c-cc8d-438d-93a2-7e7d60f0c4a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c133d825-6403-4819-94da-7cafc4f0c485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7803ac-4410-46a2-95d0-1bacaf65b2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61971dc2-0121-4e57-9c32-ba73f7582dc5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6434881-d3ec-4b64-a809-c3a2b246aaf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26992041-5f9a-4fbf-a936-dee63358bd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ae87e4-0207-4a95-8be4-a7b88ccaf10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec1e3f6-d41b-4c81-a731-89c387d16b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48e4307-3d2f-457d-a594-529d9fc11428",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035c1bb4-202a-46fd-b778-7fcabf08a96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e483e4-5a56-42f5-944c-5ce4abae68e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd33ed5e-23f0-449a-9088-32cdbbe65835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ad917f-3b0b-4182-8ee9-e9bde5b05eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8423669f-4eac-49ae-adcf-43f4c8242fb5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdbeec5-c2b1-4723-a193-df6c1d84a0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8713a844-4d16-4d4a-a5aa-5b69eef5c4fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4071e6ec-d933-4132-a6c6-667dfe43811c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb83d9f-77ad-4b04-b0c0-8368932f5d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb465114-5560-4b4f-be83-f29c51c7e888",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51db52f-e3c3-4d4f-a4fe-19d618b49f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef06e3c-0bc9-44c5-9bb2-0ebf06432801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3663f6-d711-415f-8cca-9bca38dd901e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121b0866-e710-466c-b2b4-c66235423061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f874e2-6a0d-4ce0-b339-ee86ca2b8dd4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5908ee78-09b2-47ce-a2be-9c213feb3987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6739ef75-9673-4eee-99d9-074676a92c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65ea86e-b15e-45fc-aff2-5625214144c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e988b6f-1030-4b41-814e-1a9c58b761d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c2bea0-3c54-455e-8651-edb4e4fcf375",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424a5ce6-8cfb-481a-a2a6-416c28ccce74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c5888f-c894-4e97-b13f-2f7c631f6325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56876c4e-3c74-4241-8ec6-5020dda52b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf88aae4-db28-4a27-ab71-7be09b1f5b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7652bd-8f79-4c77-b74d-1622676b5b11",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73450198-912e-4a19-b51e-1e2f7bb0429b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b87956c-0699-4424-a5c2-8d951122d899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4931cb4c-e3ba-4f75-a6b4-f8895e39a07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625f8847-e8d8-436e-8f2d-496f57421de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eb5c7f-bb57-4e14-aa93-74b0d899339d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41f98b5-d806-4b2d-8af6-c29a8b960676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed1ef75-333e-42c7-b3ac-1a43f2a0997f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897b224a-ac8c-4f02-9ea3-2c81b2d96f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745aa8d8-4d65-4170-8c39-9f3b14983d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5691ef7-ff94-4704-8427-be74a46775f5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17759236-b206-45ae-b10f-56d8a388d3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b0b107-2518-48e3-ae72-30eb784c6f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147d7545-1b0e-4f45-932e-04af97416fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041047a5-76cb-48d3-be22-1b10101ac6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d248c8-ee2a-439b-9b93-ae0169cc8bb9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d1a83d-82fa-4cb2-8b5d-f4cfd362f6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20287f4-feaf-4ad3-a6c8-32c1bc1be9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bd47c7-5a42-4ba5-b616-f24251f4ed6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebff0a6a-2b5a-4f3c-b972-65ba05359147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5deebc-09c0-4230-ba55-44517d46a895",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d508a15d-c4f5-44c1-b05a-bbfc310a6ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a5a964-b600-47f0-b855-9ad507fa3642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fc27e4-dda9-4506-8f4e-3bb6629ac91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cebf7d-2045-4906-abbb-5b0809ad5690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfe8c71-f9bb-40f1-9c2d-6be2cb81160d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492354f6-a977-466c-ac7e-cb4212875a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79a47d9-0a86-4349-ba31-a991a65586bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69fc1b5-cebf-4cf4-a1cb-528037c8586a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9ca7ab-cb30-4354-8694-d351b350e864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8bf454-9ff7-45ec-a7d1-fcc1c62b181b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d3f921-7ec9-4261-8486-6aad133fac53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0673bb10-823b-4065-a2d6-55549c4bfd60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a915c4-0f44-4a41-a9e6-87a043596256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6836a331-110b-45b7-869f-fc6577e53488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f431a90-cff2-4306-905f-cea80b4b1e16",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667a518f-f682-430c-bf06-70d68541a0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582f544f-d73a-43c3-b37c-22faa08c1642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54785154-0971-4cf5-8eaf-0f0a94b3dfd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a31730-fa48-4be0-9ed3-19a908a4ac27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5f3dcf-30fd-4a75-880e-80d4c60a5c83",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608bde40-fd1a-4944-aed0-968d5ba68429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcad5b0c-6390-4fe8-9a9e-1acbdd392339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ee2850-dd72-4128-a259-0720e1649cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a2eeb7-01e0-430a-aba1-3771f4d99f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7055a29-51a4-450e-9e6d-dc2f748abf8d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761b963a-96fd-432c-be0e-38c15c55fed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c75ce1b-aa7a-486c-8bf2-958ad686ba83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdbe0ae-5923-4e22-963e-b646cbf5b6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935828d8-c150-4d1d-a104-19b1d835d96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112fc843-61d4-4044-b44d-0d5331465001",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18618a97-996f-4b94-9dff-958ee4485053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9db8905-6e8f-4a6d-9ad7-3149e9b4069f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6050960a-6ed0-4bdf-81c9-0bef33479c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b30264-0953-4fdb-9d7a-6cb8b4a0d55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282024e3-aee2-4f0e-81db-6266bf5e4824",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6b78e2-c1ee-4571-bba2-f9bbf5306dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a9c468-2c1b-4a2e-9724-7d9f56419556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e216b27-38fa-41e6-b1b1-5f807643e9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b42858d-5720-42de-a9ce-1f3f00d1f5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a735ad83-8d0c-41dd-aabd-916bf575793d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d707e55b-90b2-4d7f-924f-8728755fb879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c05d355d-ef4f-447c-91ac-088bf4dd686a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd2a67b-69ff-4c9c-8892-cc43c791081c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19564c29-1c01-407a-a9ee-01a5aab36b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeccf90e-aef6-44ec-b063-f2ee0aa58b4c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a50221-b865-4939-90cf-8dcc5c28856f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7864ec9-eebc-4939-8188-203f2748893a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afb6b4e-3199-4317-8dd5-b0b8fd7e1ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82211259-8298-444f-acc7-21ad889a7052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad51300-78a2-4621-bbab-0a8c200661c5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6c6a30-ea4f-4fd9-bef1-df9c3fef177c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf89900d-e462-4d98-b0f5-7ecb30d01499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c4aeb8-062e-4f15-ac5c-710947b6ce43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4a4716-8741-4bf7-a5c7-55f16a72b40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ce5cdb-e825-477f-b60a-c92be73c2481",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d903f2d0-160e-4145-b27e-a202124efbf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd9d61e-1b08-4a07-a1a6-2da54d42579a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb9a410-3324-4380-8edd-ead977b3e273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5923c3f-58ea-4bd4-a97d-c4640c866159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49134e84-981e-4568-bfa5-31ee00859142",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b63e4f-8435-42d4-abd9-fdcc4a683baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aeab9c9-6e4e-4c65-a80a-727a47aad3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a852d759-5b16-457b-8450-6e229bac48aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f4c787-b1be-4b4b-aa89-7f63d05a1873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704cffc2-f8cf-4993-b03f-f6ffa0258cf8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944e58c9-f698-4b8f-9c7f-27817d8fef5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e72c723d-c53f-4c76-b74f-9fcd59cf593b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b223e2e3-2d7b-4de1-bd7d-438e86521bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0542e6d-9aba-41a2-b408-2abffa03c106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ecb60c-d138-4e43-99e2-344feaa32f92",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584a7e52-a977-41b1-81d1-c1fa50cb1bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "352490eb-0d1b-492c-9813-45cb4b8d0982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cc59c1-93d8-4e7f-9130-b1fa3db649fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d640ebb-79fa-4827-88e4-1f079e611e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553fe323-8b4d-47fa-a777-97e2939ad3ec",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45824303-a6af-41e1-96cb-753991bc1fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d406f0b-2a93-4a0f-aacb-d6b509bbae19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269a3495-9db2-44a0-9a45-a70010fab1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1857b9d-2b0a-4eb6-a5e2-68e02b7220ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f74abf-2fee-4dd6-8fba-747de9ae3f64",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730a550a-0b48-4de7-841d-402e728575ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1462b5ed-42f4-40e1-82e1-3eb11e56da56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8377440-7274-4b96-b580-d0da6a8d4b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c69fb43-5d50-4af6-a4d9-4dc689641c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cce81a-af5b-4276-a150-a2862d9a25e9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a8b037-34f1-4bd8-9810-1a489a069e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5edebaec-f322-4716-b102-b65f0247f2fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb5f5c2-a8f2-403f-89e3-3f77595b5e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b486aa89-dbe1-473a-b322-083e562b861e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3253cb6-302c-4e36-a4ca-90bc81beedfc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f038c4-5db2-429a-bfe4-5539cdcac2a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31f01b5c-120c-495e-844d-bac5bd2655f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c546ad-4671-4520-8bd2-cb60a5f76552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ace0eb-aad6-43b7-a33d-ff13b990ef04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af81a486-a121-41d7-9ab1-09debc116358",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabc0d80-e21d-4c58-8e9f-982602268948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "574f457b-83b7-4492-93fc-baef0e7f7db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f829f953-bae7-436e-9c16-c2863df259ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bd9daa-b12e-4d5d-a72c-a6e063d70f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deda4fc-c6a8-493e-a08c-5590bd90ff96",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0bfbc7-fa1f-4f0b-bfd0-8fddd1cc9196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21ea47f9-f6fb-4910-8d6c-1fe91714eb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad55a04-f90a-42d3-96ca-a0d10ddeb14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59b78cb-7987-4dbd-9c28-0bcb35ddc450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de84afca-452e-49f3-89a8-82a400774f60",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5464e013-2c6b-47df-8c46-bfc46b7ca89f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1351ba8-2bc1-4abd-98a5-ff8ea72eecc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aca5f74-2fda-469b-8d14-43ceacacd222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fcf409-4cab-4c4f-99ce-3389ff9316cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d0ee79-ec5d-4def-9689-8c447186c1e2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b210c3c-9e3f-4508-8f8c-477eab9f7011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95d5bdef-5570-4490-a3eb-d4dbee1d7169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f5b726-0886-4b27-a107-a7c81d62cf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2bd505-7e47-4bd7-8c55-e45d26505495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67abc60d-0f8c-4a7f-9fea-7cd250e0c7ad",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673ba8d5-28de-48d4-bfb9-748ae9a8dc5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c72529d9-7f4c-4bed-a536-3431ade63ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaac8e72-613f-4d8e-9417-abe1546597cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f24e164-0eb3-4712-8c7d-02f9706e9311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2e872b-b821-4d8d-b0b1-ce7a2cf7960d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569e36a2-5b04-49f3-8fcb-5bad9e763c8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8265f9fd-4786-46c3-8e07-f183712235b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0d7e69-ac54-43d8-a0b4-4967a94e3bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52d68b9-4ad5-448d-ba1a-725f5550d662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01470d0f-71db-474e-bd0a-09829631321c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f3e87c-cb8b-4b8d-8c11-f19d436487c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8548135-b6a6-4b44-b354-9a7929abc270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425ed45f-e896-4f5f-93e4-46d7fcbd47e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424ffcb9-420d-408e-8630-ac223593ba3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaed2bcc-75f0-4ea2-a3c7-69701d0fb5bb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce6c3e4-e233-44d4-bd8a-aa0f77ce8810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89a827ce-0950-44f3-a9dd-daa0529c4c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ed33a8-c5fc-418d-b0b4-28b5056eaa92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97ae709-8dc2-4fe5-a6d8-7246c9b77d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95271895-ac04-4bef-b2ff-66757b3a1453",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246625bf-d495-407d-9d8e-009a92ede5dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d19faa-b835-448a-b6cf-5aafef659234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2edb42-af70-42dc-9edf-15d81a47221f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed34ae4-fc19-4809-93f9-2e90e09b86b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31f82ec-0831-4934-93b3-5c968f3f0154",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bc24fe-60e8-448c-b6d6-7e674efbedcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5085bbf4-694a-4a83-b496-c21df9393186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc804ba2-0013-4dd5-9a23-48fc5562f02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dd0d12-723d-493d-b8bf-a1991a32fa10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d2b309-9678-45ad-b0b1-510c9177dc43",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de22f9a2-fa11-4d3c-a768-86506d93e68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeac20ca-c189-44ac-b181-76b1c64fd28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e55fab-9407-46df-aea5-80d78bda4e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cab787-f495-4e3b-b77e-515fabd3266e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9487b0-b306-412f-ab16-1cff3fdbc889",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3615757-fd55-49e3-9f41-23684f16a777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d359f411-bbd6-4e7c-9cb9-7223736d375d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb00555-c43e-4d54-96a6-8151b2e9fe9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a328b0-4587-4a7c-a1d0-d047d98f69e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f61566-3ba8-4bc3-add7-5d3622c64ce1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7643d90f-06b9-47b5-b464-014261d75865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4695abf9-2d5a-495d-9a06-e1ca5b719356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daec1cd-4edd-47c4-a1ba-a30585aeeda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087a5fa6-b895-4c78-835a-484ae4c200ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f70f5b8-671a-4f60-9070-7b800e086c84",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02a5568-5561-49e3-93be-5f8ae41387aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "764b3859-461a-4f97-98c0-4f1e7575a316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833f6234-a996-4eec-b495-91c646325095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e828e4b-0c87-4515-8dad-b03abc9ee93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c599da97-78d6-4bfe-9c1a-9d6622aeb4c3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0e48d4-64f3-4c94-9966-edb558f9dd1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d033ffd-fd86-49d0-8c6d-5db7bbc3f807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1696db-f0c2-4478-b08f-5ffcb9397005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba28788f-c783-4f42-b2ef-141d3a76272d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9a7d31-bc9c-4059-a20f-d0d5ddb906de",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58a46ae-b9de-4e85-8213-cfd691e3259b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd369987-be00-4c93-9fec-cde7920810ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c615edee-6e78-442a-89b1-3b779235d8ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d238ab0f-0016-4a5d-b0ff-3f95dd9e81ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2481ada-86b4-4ece-a8fe-98eee8ec19f3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fc249e-2bec-4b88-82a5-7a9f62595e31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b09d0389-ab07-46ca-bc2e-92940d0c53ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ffd26e-2318-4cd2-8358-e6c47e9a23ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67edb666-15cf-4462-b3d4-dc4863dbcd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ce1849-e08a-4f2a-a4ae-373e27477709",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6de000-5ac6-4cd2-bdc6-8d6f18b2b1f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd22f2fb-a576-4420-859e-e2dd4593ddee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb29a244-3eb8-48fa-b456-a5f1a55ee537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd1759c-976d-4354-9fc2-597830844064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03677973-cdb7-49f7-8aea-f56a78c76c10",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc9565f-1388-45a2-a7d3-49ec9a3658ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e10aafc-ff59-4b40-a70d-11dc36dbeb55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652c1c26-b1f7-490a-b60b-7866089c6965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea1814e-27e5-4e03-858f-480e11c579a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3e4473-2ae0-4a28-a7cb-fb068502912b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38524340-9063-49d8-b16f-2311306a9c8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db2a705b-65de-4f8e-9e9d-8d1e18bc7aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e544743b-5205-4a99-a91f-9a9ff87aca8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34dd6c57-79f7-45e8-9aed-d0074353a971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22e7846-3b72-403f-a707-f533139d54fe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525cd2a9-6fe3-4e2a-84ea-88a7656e2ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f6932c-eeb1-491b-b096-141015e5b445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ba9753-5b9f-4ec1-b00e-732363039839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f0b69a-d05f-4f57-a74b-817113cc6a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c3bb57-cc32-4fda-b815-a80822a0b0e0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38beef00-d248-4ac2-b35c-1222b3e8432b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca976932-2996-4abd-b159-a2545753c617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ead43d0-00a1-4d60-9f51-375f4cb4a55f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6468cf-6a5e-425e-adde-d397cee7d021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dff7cfc-bfc8-4f64-805f-4f31d3a9a502",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ace58b1-50fa-49d9-845b-6e62ff40c76c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "408ebd32-d39c-443a-9633-54c1aab16d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0008c2c4-c1f3-4d87-8caf-d06460105c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a97375b-1525-4904-8646-aa1184e208e2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c7167dc-2223-4a7f-aa22-4fe1b583e41b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aff62879-733a-4f79-8d32-e735217d7e65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce6207de-5dd2-44b1-962f-d2f92fe4ebf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57379901-80a0-480a-970a-b9d072014784"
                    }
                  }
                ]
              },
              {
                "id": "739b35e1-b0e7-460e-afc0-7a412912b5cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a53dd372-85d6-4869-86b8-07cdc7d1ed37",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ed8f14-b087-4f8d-8d1b-b786f547cc48",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9763d229-3525-4ad2-b446-4885225d9dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacf4d76-c341-424a-a0df-a17a7b27d1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6163f159-459b-4245-8a8a-1ca1c371b0f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5a4743e-1a42-4050-a836-f890c61b965d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60d4633e-c558-4320-949a-26f6ae20e55d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1882ec22-8647-43d5-9bfe-dfb7449ed245",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52410da4-46d2-43c2-9a39-28e072fefd59"
                    }
                  }
                ]
              },
              {
                "id": "727e35a1-8426-4584-be18-efd8aa6335c1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "324dfc9d-96e4-4fae-85c7-eb890e170a6c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a07d3e4-5edf-45de-a0f0-7a464d3e71da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3557b95b-5540-4d14-ab96-fbb9158f8722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf42935-ba77-4967-aaaf-a4ba806851c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebecd914-86a7-437e-b196-883148482e09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "44ce4dd5-f088-446a-b9d4-2350b842d085",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2ed3c49-ed5d-48a2-b369-be6e1a0728aa",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89c9104e-30ef-4338-9b49-75ff9abc665e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "834bf4d0-f430-407e-9b12-f792e364a737"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cad0b95d-8757-4c2e-ad1d-a076703cf511",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67c2a931-478e-42a3-aa99-04274532ef5b"
                    }
                  }
                ]
              },
              {
                "id": "d96aa2a9-5f26-4a48-a4a0-cfc6f226d163",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4bfd8ae-d6ea-4b51-b321-cf116fde65b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "84200dae-5b00-4cef-b303-1c4b8de3746b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5856a2c-5bb3-4e2a-a8e7-7920978e89d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b66e9870-c51f-4edd-9589-1fe249c5c23d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba5492d5-d4c5-480f-8e30-1882f007b0d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fafe40c5-c00b-472a-9942-87d8a0e1f127"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b37d93cd-3a26-459c-9f7e-572138a2c559",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85678bfe-d243-4dd4-8601-4d893413aa23"
            }
          }
        ]
      },
      {
        "id": "50e5b88c-8c80-490f-ac26-700339597a08",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "af8aefac-2487-4d73-8a79-e6e1c0f48be7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2f7dc50-12f0-4725-b6e9-b59d74ed6c12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c7d7ef6-ebab-49f8-b081-8d1e2fa9328e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43ba3d5-92ca-43d5-a55b-47cc01b83dc5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28b6f551-3f19-4a9c-a312-c977e1b38f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37889db9-7a20-4b45-b0aa-54bf60b75816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90168f56-8cfe-4ae6-8380-898086a2b83d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04d1cf3d-d44b-42d7-ab9d-95da02767b3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "478d38e0-d0d1-46e4-a5b6-96dad2544a46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2082fc68-22d8-495e-aa80-ea329f3013a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84cb4786-1d1c-4e25-b934-57362361ffcb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "038f99a7-6b19-4c4b-a774-5178486045a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "38701498-346f-4c74-9431-3a66c6781b2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4b716f4-dc7e-4878-bb5d-5ff0c1edf8c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "812e2182-2ba9-4c96-9fd7-01576f41cba9"
            }
          }
        ]
      },
      {
        "id": "f82035fb-34a7-4233-80a0-3ea75a3adf2c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2fe1b626-c039-4091-85a9-b4102572d319",
            "name": "Negative Testing",
            "item": [
              {
                "id": "223e589e-5ba3-43de-9bb4-6ddeb2ec8821",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60f1ef2f-d105-4174-aadf-c68188ea6443",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a09189c-c589-4bfc-95d3-ba61a111ffb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1551c474-0e3e-421d-9234-42c9bccbcbc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d845fc57-78f7-4908-a9f9-c94cffbfbf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a2bc60a-8cb3-4179-87b8-fe4fd1795b11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "003779d1-0f20-418e-bc02-c935b8b89b51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fe7bd18-8670-4ed1-bb02-781fcda065e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0526c5f-f6b6-48c6-a04c-acf7f17f3061",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2c48f79-ef74-4c1e-8496-9d361343aaad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15e6a804-8302-446f-bb11-0de6ca22622f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "15a586ec-d79e-4609-8a93-6da9f3d06cfa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89f1b638-c18f-4931-baa1-586addb9763a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6aa3cf6c-cd16-45b0-8399-b5ddd5b03a43"
            }
          }
        ]
      },
      {
        "id": "d2253c3b-834d-45ae-bd0f-0f07db3be00e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7211c076-795f-4c21-a058-97365f9c7465",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bd8815c-4e14-420d-b95d-2aa55be0803d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "945adc28-6250-4555-875d-075ba6098226",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f47f4a8-db26-44bd-bd2a-7e81861a85f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d297758f-f493-4585-b73d-8633138442ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ef4986-0ccb-4dfd-825e-5f8e12ab9321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de4bd90f-fdda-4879-b783-fb2b9fb958a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01fb2594-3695-47de-b3be-d4070bbadf9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbb8a8e8-6a08-47cb-b0f4-c86322477638"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "406ac92b-0701-4395-b885-973303165614",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0d3025d-603f-4096-86ff-5e289067529c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c1653c6-7001-46a5-9944-8b177297bdea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8bb678ec-0016-4337-81e7-9c95efe79d66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0028de5d-834b-46fe-8bfe-39e100f18538",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f604d69c-9510-405b-bf07-f9f7889a5a4f"
            }
          }
        ]
      },
      {
        "id": "2ba6dc85-3bda-4ba2-9510-4073a343cf6c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfa73fd5-b3f2-4c9b-8ff7-e92afcf47395",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef174976-5a70-4613-a825-9f02ffc62a89",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4698d836-a831-40c1-995a-6dfce7e1532f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75557548-2097-4740-8088-756f22e991ab",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1b834a6-d697-4494-be1b-2ba5c952656d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.15789473684211,
      "responseMin": 6,
      "responseMax": 235,
      "responseSd": 23.025226039376005,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708302916128,
      "completed": 1708302928708
    },
    "executions": [
      {
        "id": "d128b4ac-3133-409f-83d2-b4f8842c6194",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2a332585-bdcf-4b49-ba06-527e8b91a176",
          "httpRequestId": "56cbb230-aba6-4274-93a3-3f038ceefecc"
        },
        "item": {
          "id": "d128b4ac-3133-409f-83d2-b4f8842c6194",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "244a204c-f48c-47ac-a67d-7b45bca65b08",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "cdc92fc2-9881-4ca4-9064-9c2b55f3040c",
        "cursor": {
          "ref": "aeb5680e-dfa3-478e-bfa7-6c1f9ab33ec9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c3b4e8b3-5f24-4a78-a672-b41f3c971fc8"
        },
        "item": {
          "id": "cdc92fc2-9881-4ca4-9064-9c2b55f3040c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "27a67f71-a32b-4307-9de8-f2d3135075a0",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "b20f61ff-e357-4140-ae5b-b8d88751ba45",
        "cursor": {
          "ref": "966cff76-c82a-4ed0-a4ae-31e3c4f58b34",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "851646c7-22e0-42a3-ab45-b0c29efcff8d"
        },
        "item": {
          "id": "b20f61ff-e357-4140-ae5b-b8d88751ba45",
          "name": "did_json"
        },
        "response": {
          "id": "42bec6d7-fa7e-48d9-8709-84d8aba1e97b",
          "status": "OK",
          "code": 200,
          "responseTime": 173,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb54d19-a567-42d7-81ab-70fb3c86850c",
        "cursor": {
          "ref": "4a7bafee-8e13-41f3-86bf-53d9a0273827",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f2f4c38-dc9b-4ff0-9c43-c1777635d731"
        },
        "item": {
          "id": "5bb54d19-a567-42d7-81ab-70fb3c86850c",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bc3a032-d515-4cc9-90a5-b8efbdaac1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb54d19-a567-42d7-81ab-70fb3c86850c",
        "cursor": {
          "ref": "4a7bafee-8e13-41f3-86bf-53d9a0273827",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f2f4c38-dc9b-4ff0-9c43-c1777635d731"
        },
        "item": {
          "id": "5bb54d19-a567-42d7-81ab-70fb3c86850c",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bc3a032-d515-4cc9-90a5-b8efbdaac1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01c2bf0-9312-482e-84d5-5cd001cfdf54",
        "cursor": {
          "ref": "e2ec9357-30c4-4ff0-8dee-2b3ec546211a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "75613198-5054-48fd-8d68-6815f7817652"
        },
        "item": {
          "id": "b01c2bf0-9312-482e-84d5-5cd001cfdf54",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "37b76eb8-b8bf-49a1-8b27-e1c60658397a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f568ebb1-0afa-472c-9ea9-44aa60e2fd48",
        "cursor": {
          "ref": "f587d723-d9c2-4922-b849-5adce77394e2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "207f7a4e-1051-4a96-bad9-a75349987d3e"
        },
        "item": {
          "id": "f568ebb1-0afa-472c-9ea9-44aa60e2fd48",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "daad740d-5328-4729-92f7-a5eca434878c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4c00cb-9fae-421d-8e72-82e8ef37bae0",
        "cursor": {
          "ref": "8c1f806b-dcbb-4c7f-89af-675c126865ad",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "edd65b59-5f4a-4cd2-bc76-8a7d0efe664b"
        },
        "item": {
          "id": "5f4c00cb-9fae-421d-8e72-82e8ef37bae0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7a8ea8d4-f637-4aee-a47e-009af3b1f719",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57670985-ca6b-4bc4-aeb2-1844c6e9c6e2",
        "cursor": {
          "ref": "2394978a-1da8-46d0-a9ee-851fb5b00adf",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d45028d9-bb81-4b27-940e-b5e6610481c7"
        },
        "item": {
          "id": "57670985-ca6b-4bc4-aeb2-1844c6e9c6e2",
          "name": "identifiers"
        },
        "response": {
          "id": "0e3a560d-4b3b-4e6f-90ac-196dd3b55a4d",
          "status": "OK",
          "code": 200,
          "responseTime": 233,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91f2e76-6826-48b1-b02a-b319f7cbe0ea",
        "cursor": {
          "ref": "f1d702e0-f55c-43d1-b41c-07bb0d661302",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ea669094-038d-48d2-bc87-042c68b625ac"
        },
        "item": {
          "id": "e91f2e76-6826-48b1-b02a-b319f7cbe0ea",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cdfeeaf1-6651-4fb8-bd3c-8bd44bc89c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef463f85-9d87-4967-b32f-e98dfc273b95",
        "cursor": {
          "ref": "9b3ada5e-fd76-4885-9aff-ab9fe930ecc3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7f0701ae-ef3b-4633-b683-d695425c5a3c"
        },
        "item": {
          "id": "ef463f85-9d87-4967-b32f-e98dfc273b95",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e1827756-8334-488d-b98d-0bbd9a8c4342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b710a667-01e8-4849-89d8-5d7897543be1",
        "cursor": {
          "ref": "260c2672-492a-450c-b4ef-c3762a0240d2",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4161cb25-321d-407f-b81d-86c2762988ee"
        },
        "item": {
          "id": "b710a667-01e8-4849-89d8-5d7897543be1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f5389430-0a7f-4e20-8f07-48a4631fba01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96b800f-0107-45dd-9b0b-ece674dbf447",
        "cursor": {
          "ref": "c4bfe5a3-e6fe-4670-a283-b34cb53fe6b2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1849e116-7438-4181-954d-e8296d447c2c"
        },
        "item": {
          "id": "d96b800f-0107-45dd-9b0b-ece674dbf447",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a2f82061-c277-4c9e-93cf-357600c55694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2581230-ee49-4f61-9e10-931f62946c4b",
        "cursor": {
          "ref": "ec155fc4-1b30-4ebe-a595-9192646bd10f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7b8eb769-7fad-4773-9bd9-b9f16f27ec84"
        },
        "item": {
          "id": "a2581230-ee49-4f61-9e10-931f62946c4b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5ba417e2-ffca-4eb4-94c8-ad0cfe7e2b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bec93c-3b6a-4049-8843-a22f27f36d0e",
        "cursor": {
          "ref": "cc3a91bc-457f-4ea4-af89-ca827dc16732",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a9e148d5-0b98-47f4-9fd5-7fa0783e6833"
        },
        "item": {
          "id": "58bec93c-3b6a-4049-8843-a22f27f36d0e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "94ee16a1-1df3-4a02-af98-9c8f4f17c2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a884974-1715-42bb-9063-a399af5bd612",
        "cursor": {
          "ref": "05e70c6f-8857-4fe2-b3fe-8536a787e87c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "604a410d-406c-4f20-ab0c-8a99bc89106e"
        },
        "item": {
          "id": "4a884974-1715-42bb-9063-a399af5bd612",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ca498504-9957-42d0-980d-173c9e8fc715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d84f6a5-c4ab-4fe9-9c69-a31b03b1ea35",
        "cursor": {
          "ref": "6f894193-8b66-4bbb-839b-e40e3654d35b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c8c9480a-5d29-4c1d-9dab-e14b830c2909"
        },
        "item": {
          "id": "3d84f6a5-c4ab-4fe9-9c69-a31b03b1ea35",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5c1c64ea-9bba-4489-ac1b-36d19405dfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdf911d-d8d4-4594-bc50-9d60949fbad1",
        "cursor": {
          "ref": "36fd0888-e40d-4ae6-8a71-2366add33587",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "55112015-1c5e-4a4e-8e61-6c7e3ef747d0"
        },
        "item": {
          "id": "0bdf911d-d8d4-4594-bc50-9d60949fbad1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2417c41c-be63-44f2-be1d-156e7916a8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff4aec8-9dc6-42bd-b001-63873e7f2167",
        "cursor": {
          "ref": "6117a4f2-a5dd-4b14-99d6-cb9694d64e19",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0bbf2750-c842-4096-b4ce-b943b689fbe2"
        },
        "item": {
          "id": "dff4aec8-9dc6-42bd-b001-63873e7f2167",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7f872783-274a-4e28-bb0d-37423254aa91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a01afed-b1a2-4add-8549-86ddffd79884",
        "cursor": {
          "ref": "c6ec6575-61b9-4c06-b971-893eeb549f60",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3d93ba98-8c09-4cef-b89a-56dbda416e68"
        },
        "item": {
          "id": "5a01afed-b1a2-4add-8549-86ddffd79884",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bf7154e1-e203-4310-b69c-13c3d09ecf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82128e16-7c18-4a26-897d-821ed32d10cf",
        "cursor": {
          "ref": "79821a5e-3170-4909-a2e4-36dfd4dc389c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e1e5cab6-82e0-4fce-aae0-802787add4b2"
        },
        "item": {
          "id": "82128e16-7c18-4a26-897d-821ed32d10cf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cbe39bbd-6fc9-4142-820c-6d27610d585a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6a6fd2-5169-44fe-b333-f5c79d8d902c",
        "cursor": {
          "ref": "cd034413-8723-4b22-8798-b6dc83345215",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "420a0326-ed4b-41e2-9f04-d0f2cae9d202"
        },
        "item": {
          "id": "0d6a6fd2-5169-44fe-b333-f5c79d8d902c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "eb20b372-7114-4ced-889a-8f4ce8631722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e2c620-b77e-4b5c-8dec-dbe21826f454",
        "cursor": {
          "ref": "1d2be4d4-baec-4799-98eb-fff6bd27baf1",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "015f0efe-8603-4eb6-8e8e-b9c8e069db03"
        },
        "item": {
          "id": "26e2c620-b77e-4b5c-8dec-dbe21826f454",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8e677209-8ff0-4b90-a9a3-e1cbd7979287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afa9a41-782b-4db4-8a69-2de7f62c2bbc",
        "cursor": {
          "ref": "002550db-8027-4b4b-ac6b-4530c3ae4198",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0ef02cb5-5918-4e11-9235-70046b38addc"
        },
        "item": {
          "id": "0afa9a41-782b-4db4-8a69-2de7f62c2bbc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3c575e91-cd48-4791-ac3e-ac1f90a864c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da470b4-46a1-4fb8-a443-b620c21a55f7",
        "cursor": {
          "ref": "bc751cc2-23a7-409a-bd5e-60cd06227500",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3d8edb6e-e13b-459d-899b-2fde9e8c2428"
        },
        "item": {
          "id": "1da470b4-46a1-4fb8-a443-b620c21a55f7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dd69631c-6339-4745-bd4b-575b00ed3e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eab9ff3-f3f2-4ceb-930a-cfac0933e5cf",
        "cursor": {
          "ref": "bca106b4-aa93-4f95-a322-56e05bd5a794",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "09b04025-74a9-4363-8763-f963c07a1e28"
        },
        "item": {
          "id": "7eab9ff3-f3f2-4ceb-930a-cfac0933e5cf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e0f6e8b3-502b-438c-be5d-e8977721bf03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9734baaa-0c19-466e-ace7-da6e72c50f15",
        "cursor": {
          "ref": "1835e9b2-9377-47ae-9650-df7f3ea2f308",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2c8d44b5-344b-4153-b16d-0552d533259d"
        },
        "item": {
          "id": "9734baaa-0c19-466e-ace7-da6e72c50f15",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d4f159f6-480d-41fe-abc9-cf6c63829b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bce479-53c4-4d11-87ed-85193b554e13",
        "cursor": {
          "ref": "ed249dcf-3e4a-4501-b3f5-16078ed89f7b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "804b79a4-808b-4c6d-95eb-c3b9819fb7d5"
        },
        "item": {
          "id": "a1bce479-53c4-4d11-87ed-85193b554e13",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bffdfa3e-c67f-402f-9269-b37e4b34f888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e80bfc-2efb-4c35-9d09-dcb8675f3ec9",
        "cursor": {
          "ref": "abd60d85-0a6f-43b4-9b13-3bc2766350a7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "520ee569-7286-4242-8d8c-b8d7c9ea24dc"
        },
        "item": {
          "id": "59e80bfc-2efb-4c35-9d09-dcb8675f3ec9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "671a25eb-657e-4deb-bc2b-94c7277ed583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a6fb82-9dcf-434d-a603-b88eb9fcf913",
        "cursor": {
          "ref": "91d66472-a8f1-4100-8fba-8d812312fc68",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0a2b6502-5143-40d2-a499-a89f1fa6a892"
        },
        "item": {
          "id": "19a6fb82-9dcf-434d-a603-b88eb9fcf913",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "37a3cecc-1016-43b0-b8d2-afbb0f4a6d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f420a7-2bba-4d25-9422-962e7b0534b1",
        "cursor": {
          "ref": "4e432f89-338c-4265-aa8d-6956ac90a1dc",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bf132d31-bfc7-4697-a7d5-23cf82120307"
        },
        "item": {
          "id": "99f420a7-2bba-4d25-9422-962e7b0534b1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c36ae387-6677-4831-9da6-e85551a1776e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dd801d-acb9-417c-8725-0b43ff017302",
        "cursor": {
          "ref": "fdd5c854-b2dc-4be7-876e-9103f03aa845",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "93febb8c-167a-4604-9a5a-e8704b859701"
        },
        "item": {
          "id": "b6dd801d-acb9-417c-8725-0b43ff017302",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "56db8fe4-7a5f-4fb7-9715-fb57659aa492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c54d27-f58d-49d7-bfcb-f5696554f839",
        "cursor": {
          "ref": "3a8e408c-a788-4c02-bfe6-0687cff1e381",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "eecefa23-e603-4e3d-8eda-bef09149b2db"
        },
        "item": {
          "id": "a7c54d27-f58d-49d7-bfcb-f5696554f839",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6badcf92-c7af-47f4-a29b-cbd90c035a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acae5e5-daaf-4c14-9735-3bcd7578900c",
        "cursor": {
          "ref": "0284e585-4ce0-48b2-8ed4-7e36c635fd63",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0f42122c-df1f-49b8-aea3-6a4d805daaff"
        },
        "item": {
          "id": "5acae5e5-daaf-4c14-9735-3bcd7578900c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "11f3de68-77bc-4bcf-a814-77594689ecb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0937ca-2578-4fb2-8016-4a9ea3c5b1cc",
        "cursor": {
          "ref": "58c64348-c8ae-4b7b-9be1-0675ea53781e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2f983002-ef31-4e50-b41c-1a7c4e8effe7"
        },
        "item": {
          "id": "0c0937ca-2578-4fb2-8016-4a9ea3c5b1cc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bb4205a0-4c9e-44cf-b9ea-be99f6633143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc266e6-f195-417d-a358-e21e50005610",
        "cursor": {
          "ref": "015d6724-f256-4a8e-9a69-89ff7297d146",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fdcbb0ce-1ba5-49e3-af92-444357bf4b33"
        },
        "item": {
          "id": "bfc266e6-f195-417d-a358-e21e50005610",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6d2bb78a-d9c3-473b-8eb5-8e6e4d8e4c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec809c22-fccc-45d2-83a5-906a679d102d",
        "cursor": {
          "ref": "6a53d83b-472c-417e-a2d0-739c3d193093",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c9fbb6bc-eddf-416c-b9af-b9e328402559"
        },
        "item": {
          "id": "ec809c22-fccc-45d2-83a5-906a679d102d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a56d9908-00cd-4a2a-abc5-a045c88ce137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3743a610-895a-4ff8-a336-6e31e3892f48",
        "cursor": {
          "ref": "0c66c654-b1f9-4d29-8709-cf6507fa0e2d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "556476d4-846e-40b9-be56-eb4591a719ec"
        },
        "item": {
          "id": "3743a610-895a-4ff8-a336-6e31e3892f48",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1f7ab0f0-f74b-41b3-aef1-46c1c7bf8442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dd1bde-f6b2-4f73-a916-a829ba022a69",
        "cursor": {
          "ref": "dfe4ccaa-a8e9-4296-bfc8-86147ebb63c7",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4ecb79c8-2cfa-4407-be28-93658b6a4df0"
        },
        "item": {
          "id": "80dd1bde-f6b2-4f73-a916-a829ba022a69",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f032a800-896c-49b4-91ec-0774db70677f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7349cd2-b5c0-480d-bbce-2daaf0ec45b9",
        "cursor": {
          "ref": "ba5ca960-eb2c-40e3-a250-4464c220a279",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "98130568-5c7a-4c15-811c-872026744c45"
        },
        "item": {
          "id": "f7349cd2-b5c0-480d-bbce-2daaf0ec45b9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4cf64781-36f5-4ab4-93fc-1bcaf2c97440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733527d9-e9a3-4850-99d9-e568f1d3f351",
        "cursor": {
          "ref": "2d4acc5e-0dd0-4aa8-a7dc-f0d54375e15e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1651fa3c-b101-492a-8b8d-cbb719f7959c"
        },
        "item": {
          "id": "733527d9-e9a3-4850-99d9-e568f1d3f351",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9f80eef6-2736-4587-bbba-40c0ead895e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f0f5b6-a8a0-49e4-a4d8-450160cee3de",
        "cursor": {
          "ref": "655e093d-402d-4e4f-8e07-7edff88386a0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d4aaf4db-08bf-494e-b9b3-9ed067dabbc3"
        },
        "item": {
          "id": "f7f0f5b6-a8a0-49e4-a4d8-450160cee3de",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f9d11ec1-cb5c-4233-a2c0-43be3fa03285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e681352-b52a-45d3-b90d-6d890a538e2e",
        "cursor": {
          "ref": "d9cfd2e0-e751-440f-ac2e-f6f31aea1318",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "90747762-582d-4e82-91b5-5ca3230c9363"
        },
        "item": {
          "id": "0e681352-b52a-45d3-b90d-6d890a538e2e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8ce78970-99b5-4f10-8391-1997561f27fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b525953-7f2c-42b3-8934-850a2b52feb1",
        "cursor": {
          "ref": "32f5079e-d1a0-4508-a274-8bd0ad7386b4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3fbf5ed0-003e-4c08-ad71-e36121dc64bc"
        },
        "item": {
          "id": "4b525953-7f2c-42b3-8934-850a2b52feb1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "200acaf9-83e6-4541-9e31-ece41fd0b27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b09e43-04d4-495c-92ea-e190839fd843",
        "cursor": {
          "ref": "0cd05840-21d0-4b2b-91eb-52bb918f9fc5",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "82866f28-f3a0-457b-8bc6-6f339c90b9bd"
        },
        "item": {
          "id": "76b09e43-04d4-495c-92ea-e190839fd843",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c6e5a50e-fd64-465a-a78b-47f0457dc5cc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 31,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450f6979-7d12-48b4-9949-0438081ce8fb",
        "cursor": {
          "ref": "f7b63fab-cd7d-4210-a46c-f8052e08558e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6bbc8a08-3b83-413a-950e-7525f12dc78a"
        },
        "item": {
          "id": "450f6979-7d12-48b4-9949-0438081ce8fb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "24de2dcb-2f3c-4649-9898-5df1b7818469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270f608a-075c-4571-bb9c-14cae67e07af",
        "cursor": {
          "ref": "8cd0001b-f2be-44b9-a2b1-fd861c053b22",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "77d5903d-61c8-4a1c-8e86-786a6e2fd76f"
        },
        "item": {
          "id": "270f608a-075c-4571-bb9c-14cae67e07af",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "aec7585c-6751-4fdf-ab0d-0fe96ee19079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a66acaa-8b61-474e-880d-9e547a9fee92",
        "cursor": {
          "ref": "dc2e6526-fe65-4982-9cb1-2c0db0efa34f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ce94e396-76ce-4b98-90c3-e285b3d24d6e"
        },
        "item": {
          "id": "2a66acaa-8b61-474e-880d-9e547a9fee92",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c7eb72d8-171b-4232-a1c5-3a251a500495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f06202d-d515-4b27-a89f-51a2eadc1cbf",
        "cursor": {
          "ref": "e551ce02-814f-442e-b6e6-ade3416c4898",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0312f0a9-38ee-44ac-b680-e6411b41a217"
        },
        "item": {
          "id": "5f06202d-d515-4b27-a89f-51a2eadc1cbf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "45517dd9-122b-4cd6-9111-a712875ee270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332c2790-96e1-49cb-b611-933c6761d026",
        "cursor": {
          "ref": "2ba90aa9-b238-4cc4-a27f-8262a81e813a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "10c2d0e6-fee2-4952-8870-79e61b100406"
        },
        "item": {
          "id": "332c2790-96e1-49cb-b611-933c6761d026",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "565a3820-3a08-49c8-a436-48c0a9987082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa01d0b3-6511-44a9-9257-ae733417b9f0",
        "cursor": {
          "ref": "0bb559be-b3be-4bf2-82de-6727c9d980d7",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c9946412-aa45-47f7-9382-4e4bbaa77ace"
        },
        "item": {
          "id": "aa01d0b3-6511-44a9-9257-ae733417b9f0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "517251b6-7081-4094-895c-a79b90243b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04368c3-2241-488b-bcda-4f3fc0ca4b64",
        "cursor": {
          "ref": "d5275f70-faac-48cb-af84-d49dbe4b4b2c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7de7c128-7ffe-4cde-8a5a-cf8f256b6b6f"
        },
        "item": {
          "id": "a04368c3-2241-488b-bcda-4f3fc0ca4b64",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1fa4a64f-1677-43cb-8dfc-0453e2e95a41",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fa1d88-433c-4552-9bc5-198743da41a3",
        "cursor": {
          "ref": "e44a2581-9ead-4b89-be43-02ed5b62ebee",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6ce9748b-aec8-47dc-bb15-358e61526d16"
        },
        "item": {
          "id": "10fa1d88-433c-4552-9bc5-198743da41a3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d17f9073-ac37-45e0-a62c-62ab8d8841b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adead15a-7f97-46b7-917e-1a981dfbc739",
        "cursor": {
          "ref": "be2e793a-c855-4925-a216-9fbb90e03e77",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8792c9e5-0e8f-4f1d-8e7c-89bc93bd57cf"
        },
        "item": {
          "id": "adead15a-7f97-46b7-917e-1a981dfbc739",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9431de53-76fd-4944-a533-37bfe467a03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ccb002-cbdf-46ab-b3ee-f3cde995b157",
        "cursor": {
          "ref": "760b4164-806c-463e-9c56-2218ea0428ba",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4748692f-92a5-4652-a5be-29a44163443c"
        },
        "item": {
          "id": "f7ccb002-cbdf-46ab-b3ee-f3cde995b157",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "51b4e897-a408-4ce7-a499-f5bd64ca468f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f73a1e-163f-4a76-8368-3e00885d86cd",
        "cursor": {
          "ref": "a33f184e-cbfb-41d6-9da9-d070605ebbef",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f08e0b5e-c88e-4e25-84e1-752ac5631ce1"
        },
        "item": {
          "id": "f9f73a1e-163f-4a76-8368-3e00885d86cd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8a7f0069-10c7-49c8-80f7-28fd3c45da4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fb7da6-2958-4965-b68b-60e64b2343d3",
        "cursor": {
          "ref": "116b1969-ca71-4cf0-9a3c-3c1a6dee9e1f",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a51e66bd-9452-4250-a85f-b67ff6df8072"
        },
        "item": {
          "id": "d1fb7da6-2958-4965-b68b-60e64b2343d3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "30b7c941-6f2e-4399-9da1-524b39e23eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd2d97f-fc14-4d76-bb96-243ce7172b53",
        "cursor": {
          "ref": "4181a2c5-cb06-4d8f-bbe4-bd2568406f15",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3598c04f-f019-48e9-977f-252019606d3c"
        },
        "item": {
          "id": "ecd2d97f-fc14-4d76-bb96-243ce7172b53",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "02693e4b-1715-4eaa-811a-7e71a192f3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eb9e14-24f3-43a3-8aa7-1ad7e18d5d97",
        "cursor": {
          "ref": "19994009-6348-48a9-8da6-00854dc66ca3",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6cbdec21-6720-4607-902e-fbb6d972abad"
        },
        "item": {
          "id": "12eb9e14-24f3-43a3-8aa7-1ad7e18d5d97",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e83da15b-d215-4a42-9366-8e0ca04559bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110c4f8d-2ee1-4500-a71a-843e36ed0522",
        "cursor": {
          "ref": "9a6546e3-4c4c-48bd-96f5-f289ac4693aa",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a09400c4-38c0-4bd6-8ff1-4d421cc2c91c"
        },
        "item": {
          "id": "110c4f8d-2ee1-4500-a71a-843e36ed0522",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9dbb9b57-7c00-47a6-9bbd-e0493e7ad78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cff7dc5-a6ac-431c-b992-9090c77c9c65",
        "cursor": {
          "ref": "42b94b52-e14f-4245-b030-3665387db7a9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c8554263-db35-43dc-a5c6-b9160b73582f"
        },
        "item": {
          "id": "6cff7dc5-a6ac-431c-b992-9090c77c9c65",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7c1f34ee-a7f8-480d-ae39-66482a198875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2236042-3849-45f0-ad53-7aa095aed54b",
        "cursor": {
          "ref": "e9a0a24f-5f58-4026-92f4-cf38e980619e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "422f59fa-2c8c-40f3-a27c-e0f34358a608"
        },
        "item": {
          "id": "a2236042-3849-45f0-ad53-7aa095aed54b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "aaf292eb-c4da-48d3-ac13-aa22a6a87a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163ee53d-820f-4ab7-a7df-b079491f778c",
        "cursor": {
          "ref": "0c14f00f-5400-4a02-9aab-e7aac017a50f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "084e2f46-f087-419e-b0cc-5665e072d16e"
        },
        "item": {
          "id": "163ee53d-820f-4ab7-a7df-b079491f778c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "38e603fe-3a4b-4188-a754-2378796c85ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5023761f-54cb-4a92-b570-e0356b0af2e7",
        "cursor": {
          "ref": "98182465-215d-47ee-a0b3-8b487d391681",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "28aedd91-d32c-418f-80b4-61693e695978"
        },
        "item": {
          "id": "5023761f-54cb-4a92-b570-e0356b0af2e7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c4afb656-a8df-4279-aa5d-213819a86256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a722bbd-3a37-4a10-816a-a7ef84db936e",
        "cursor": {
          "ref": "26905674-286a-4bb1-8012-edc28560ea89",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "48244104-1a3e-4ae7-af87-67f09c6e1d88"
        },
        "item": {
          "id": "6a722bbd-3a37-4a10-816a-a7ef84db936e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "937675c3-08b9-4c9b-828a-29b5873640dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87c5591-dfc1-46d4-8653-beae5e9f2ed9",
        "cursor": {
          "ref": "c9d8ee4c-db59-4d39-8232-a6d1cd87921d",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "da29e599-5557-4525-8e34-42fde172a6c2"
        },
        "item": {
          "id": "b87c5591-dfc1-46d4-8653-beae5e9f2ed9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "73600941-d136-4443-9ea6-dc233ed36265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974006ff-f227-4dc6-bb34-7de8adbf1741",
        "cursor": {
          "ref": "fbf45245-cfac-4bf7-8bbd-a6fbdab6c378",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7cf82ed4-c9b4-40ac-9919-3d9782eec638"
        },
        "item": {
          "id": "974006ff-f227-4dc6-bb34-7de8adbf1741",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "35cb0e64-96f5-49b3-9ddc-4a55b2fde920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6da0df-18e1-4649-a0c6-22c722cff81d",
        "cursor": {
          "ref": "b3106d20-bd01-4ddf-a966-35189ff0d661",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a30c050f-3c9a-4610-b499-ae39c677210c"
        },
        "item": {
          "id": "1e6da0df-18e1-4649-a0c6-22c722cff81d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c9d72ad9-2236-4cc4-850b-97f008fa5793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b55d3b-4c9f-42ff-831c-9512cdc6c1f9",
        "cursor": {
          "ref": "f9fc09c5-a3a7-445c-b5cf-a501b95d9327",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7b1a21ff-5ffb-4528-a9ce-5bd4217e8e29"
        },
        "item": {
          "id": "e9b55d3b-4c9f-42ff-831c-9512cdc6c1f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ce92bef3-6424-4456-939a-4e728dc2c6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c009a089-ed8d-432e-b29d-fb5ba21435c6",
        "cursor": {
          "ref": "7179dcbd-c84d-4cb1-9c50-4ab385e59972",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cd0be00a-4656-4b7b-a943-2c6c116c9620"
        },
        "item": {
          "id": "c009a089-ed8d-432e-b29d-fb5ba21435c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "63fb1f20-283b-4841-969d-fe2b7574d705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330448a4-e87c-4a5c-9782-c680a14a45ab",
        "cursor": {
          "ref": "73a8179a-a2c3-406b-a425-f7e36afc407a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eaeeb74e-d9ff-4d0d-8eb3-9435a17f6dae"
        },
        "item": {
          "id": "330448a4-e87c-4a5c-9782-c680a14a45ab",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "51f0c339-4a02-4f30-aef2-672c4d879d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d27d93-41d9-480d-b7db-d4b165cbc159",
        "cursor": {
          "ref": "5ccf017b-3fbe-40b5-91b5-79934be574ec",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d66f621f-95fd-49e1-ac47-12502ee6d767"
        },
        "item": {
          "id": "c3d27d93-41d9-480d-b7db-d4b165cbc159",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "675ee350-8695-4eaa-a0c2-91182dc537fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6df755-fc92-4f78-832f-7548ca539f18",
        "cursor": {
          "ref": "b77ad6f8-a7d3-4370-b0ea-713a4a91f9c5",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d201ce95-7814-4d6f-a44a-545c9305d2db"
        },
        "item": {
          "id": "4d6df755-fc92-4f78-832f-7548ca539f18",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "69e65dcf-c02d-4bbe-8f54-9b3918fed21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf5565c-5286-4ba7-9032-5b47498b11f7",
        "cursor": {
          "ref": "ee788a07-b1d8-48c7-9335-ace9cb924316",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "810702aa-3836-4e33-9e50-f3d245b73ace"
        },
        "item": {
          "id": "2bf5565c-5286-4ba7-9032-5b47498b11f7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5514ed2f-6f61-48ef-b4fc-5d5cf87204af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d36d43d-2c2a-426f-82eb-8e46bac3ba24",
        "cursor": {
          "ref": "6ff4f44e-4ecb-471f-89fa-466f0842c69e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2a9c08d7-c0c9-4f5c-951a-2bb67be0fdbe"
        },
        "item": {
          "id": "5d36d43d-2c2a-426f-82eb-8e46bac3ba24",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2f49d8c0-a28f-43e1-a3af-25c638aac3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9dd33c-c2a5-4216-9037-8a660ae4557b",
        "cursor": {
          "ref": "79d56ce6-c659-427a-815e-4d21a9c995d9",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "df9d7b9d-be18-4ebe-91c3-a980e0991e80"
        },
        "item": {
          "id": "2d9dd33c-c2a5-4216-9037-8a660ae4557b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e3d7fa36-42f8-42c3-b5f5-3e7e3290ae0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b48301e-4f7d-472c-b9b3-a0dc22c2a569",
        "cursor": {
          "ref": "99d1c09c-185b-42d3-a7e2-e22d98922edc",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8b80540b-d4c2-496c-850a-13f2d381fca1"
        },
        "item": {
          "id": "9b48301e-4f7d-472c-b9b3-a0dc22c2a569",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "41a54495-b16e-4a54-b488-d8cf500155ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7992f7-be9b-4440-91c9-0c5e5f355ea0",
        "cursor": {
          "ref": "20406cda-a949-4a4d-ab6f-15ce8368affd",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "562fbbac-a364-43e3-8b94-4a5434e67e31"
        },
        "item": {
          "id": "ce7992f7-be9b-4440-91c9-0c5e5f355ea0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d2ef30aa-e1b3-461d-8191-72f49f8593ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5242f057-8517-427f-a627-e302f04f59eb",
        "cursor": {
          "ref": "d032586a-166c-4d52-9be4-18ca390c2cb2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2e69703b-7093-4e04-b9cc-e270f60dbd07"
        },
        "item": {
          "id": "5242f057-8517-427f-a627-e302f04f59eb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ce9bc59c-a665-4613-a4b7-30a6d675f70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9882080-84ec-492f-83da-056e26c69fef",
        "cursor": {
          "ref": "b6227a54-0072-4528-b5cc-d07c6ede77e8",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "95883c69-34c3-44fb-a3f5-9d12d971683f"
        },
        "item": {
          "id": "c9882080-84ec-492f-83da-056e26c69fef",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "69d1d83d-bcd7-4556-840a-7008caa33c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e778b1-4ec7-4865-a159-593e79326b51",
        "cursor": {
          "ref": "e9196b01-9427-410e-ae1c-ff66b0ca769c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3a59c19b-eddc-4309-9e0a-557cacb68b54"
        },
        "item": {
          "id": "e9e778b1-4ec7-4865-a159-593e79326b51",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a23823eb-06d4-4b55-ace6-8a2ac379ed79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e9ab00-eb6d-42c0-8232-6814867fcabb",
        "cursor": {
          "ref": "836836b5-fe6a-45ea-b788-64ea47e9eb83",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0902378a-faa2-413f-bfa5-15081aa8dc87"
        },
        "item": {
          "id": "67e9ab00-eb6d-42c0-8232-6814867fcabb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aaa45fb9-be3c-49a9-8935-2e7e8f178d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c68ae7f-fcf5-4e51-b26a-8a598bb8040e",
        "cursor": {
          "ref": "4171953e-fa30-47de-b161-f0a83a148447",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8bc1ba86-7110-4a81-83f6-f8151d1ace31"
        },
        "item": {
          "id": "9c68ae7f-fcf5-4e51-b26a-8a598bb8040e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c9d6a3af-e619-4cec-a632-cca9ae5dd3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d7660b-91a8-4720-9b9f-958ceac68c39",
        "cursor": {
          "ref": "534821ac-2912-4e3f-b5c5-6638c6fc4e30",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8cc87c76-097a-44bf-9d9d-43fa6c191831"
        },
        "item": {
          "id": "d3d7660b-91a8-4720-9b9f-958ceac68c39",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "669b54b7-381e-4238-8a08-e5f8019a713f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9d1285-2c1e-4480-8347-63f1a23d9c5a",
        "cursor": {
          "ref": "848d258e-42b6-4656-8229-8e93e19bda3c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d5faec56-a26c-4515-b515-b00d3d4e2252"
        },
        "item": {
          "id": "8c9d1285-2c1e-4480-8347-63f1a23d9c5a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2fcfff1b-d477-438c-96d4-cd5feaa75482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d33562-46bc-4ec1-ac82-f9e00e4b2526",
        "cursor": {
          "ref": "0d9c0f42-815c-4a69-a579-60acc615149b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f22cb970-875a-44ec-8906-df5d123b11d1"
        },
        "item": {
          "id": "41d33562-46bc-4ec1-ac82-f9e00e4b2526",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e31b0644-569c-490a-803e-ff5d726a950b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e48ce20-3be1-449d-b374-184740d1ee3d",
        "cursor": {
          "ref": "57e9dc7d-6583-4f07-be7e-2a2a5da74edc",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3f33df4a-8f2c-4676-a081-013e51a9ee03"
        },
        "item": {
          "id": "3e48ce20-3be1-449d-b374-184740d1ee3d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "75084d3c-a493-46c8-99b7-6c8ff0273881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1d38d0-52f6-4041-a25f-03af34b2f9cf",
        "cursor": {
          "ref": "178a8086-5d07-4455-a040-3f69ad804ce8",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cf14e676-843a-4c95-9d44-8c0acf276430"
        },
        "item": {
          "id": "8d1d38d0-52f6-4041-a25f-03af34b2f9cf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c3906645-fe59-431f-8db2-4ad780072857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c100f0f-bcf7-4491-a44e-1857f73fc760",
        "cursor": {
          "ref": "715bf418-2c05-4fa2-a15a-c42cd8ac2a25",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "15342b9f-7ebc-4adc-bfbd-3086b6bd39bd"
        },
        "item": {
          "id": "6c100f0f-bcf7-4491-a44e-1857f73fc760",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "db205d27-deb6-43b0-a607-5c023cde811d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0e5857-47c6-4876-9ea6-96ac37d2edd4",
        "cursor": {
          "ref": "204a9d5c-63b8-46c3-a485-d0a3bea430bf",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7bc8eef2-313f-43d2-b7f3-e2e94abc3136"
        },
        "item": {
          "id": "8f0e5857-47c6-4876-9ea6-96ac37d2edd4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a9f0d076-7451-456e-bf8b-33e93974f332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a396fc-68cf-4054-8a63-49fd223eb0bb",
        "cursor": {
          "ref": "17b9e9bd-1951-4df8-817d-602e07973821",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1c5fa924-4a5f-4757-83a3-6856e78e1794"
        },
        "item": {
          "id": "01a396fc-68cf-4054-8a63-49fd223eb0bb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b238c754-15ec-4424-a65d-dca9e0a97b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f749445b-be2e-43bd-8f46-f2dedf007a09",
        "cursor": {
          "ref": "8279d710-3acf-4937-a27d-de7a904c2f99",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "04338299-666b-45cd-8254-0e2f6fded997"
        },
        "item": {
          "id": "f749445b-be2e-43bd-8f46-f2dedf007a09",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "833e9808-c463-4ea8-9912-b90860ac208c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786a948b-d5a3-42b6-a9b2-f5582d77cd24",
        "cursor": {
          "ref": "cb9c7f7b-e36c-4749-9b35-c1bc99aeee47",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "32289ab1-6dbf-406d-ba8c-568a8a649ebb"
        },
        "item": {
          "id": "786a948b-d5a3-42b6-a9b2-f5582d77cd24",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7ea404a0-294f-40c7-b20b-29a543dc998b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a099b6bb-2782-4aea-9258-550e171998c6",
        "cursor": {
          "ref": "33715f7e-f965-41e8-af1c-98ea08f2c4b7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "845cc155-5f68-4c48-8eed-b8d937311d8f"
        },
        "item": {
          "id": "a099b6bb-2782-4aea-9258-550e171998c6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a9aa9d88-ad9c-4183-a7a8-9b2381c28435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fa89f2-2259-46d4-a68c-ac26fdfeaa02",
        "cursor": {
          "ref": "469bad6a-0350-4820-a0e2-d16c1e71a935",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5c7325c7-8305-4045-849f-e3356fe79da8"
        },
        "item": {
          "id": "03fa89f2-2259-46d4-a68c-ac26fdfeaa02",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8f29660b-7da7-4596-9371-04d0f4b8031f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b22d6da-e350-4107-90bf-b8920978d1f1",
        "cursor": {
          "ref": "3a8f77c0-01c7-41c2-8af1-bada8aad4aed",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "20ff4981-4c5d-442c-9c19-ac7234b18062"
        },
        "item": {
          "id": "5b22d6da-e350-4107-90bf-b8920978d1f1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dc9ebaa9-d724-45db-a127-921be720accf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a07509-32c4-4b17-8da3-70fc17dd6dee",
        "cursor": {
          "ref": "e29ed284-170b-45e3-be45-42e5b30fa344",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d4142eee-cce1-4009-84cf-fe4b1c961579"
        },
        "item": {
          "id": "05a07509-32c4-4b17-8da3-70fc17dd6dee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "577ceab7-3aca-448b-9552-6d8588ba024e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723715f2-3ca1-4de0-b8c2-3faf1ebad12e",
        "cursor": {
          "ref": "61227373-5de7-4806-9137-1e8f4018dde2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fbefb623-f376-4d2e-8d5d-06b1183189ae"
        },
        "item": {
          "id": "723715f2-3ca1-4de0-b8c2-3faf1ebad12e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a6fd7cb1-b3dd-4e43-8ebe-dd7955e4dc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21607a1-cfe1-4a34-bab4-27a083ec8c9d",
        "cursor": {
          "ref": "15410ebd-ebf1-4eea-a942-30583573d7d5",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2117fd06-9eeb-42f7-b579-1c8c3226c893"
        },
        "item": {
          "id": "f21607a1-cfe1-4a34-bab4-27a083ec8c9d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1e62b3e8-ffec-4fb5-8c93-bc1c73cb8704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855ad778-70c9-4a63-86e8-1eeba2bc523e",
        "cursor": {
          "ref": "287c0ed0-b606-4e28-a855-97659e8f1e5d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "654a38c1-5a9e-401b-9e3b-70bc7ef8541e"
        },
        "item": {
          "id": "855ad778-70c9-4a63-86e8-1eeba2bc523e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2e7d0f15-f81b-498b-9261-647831b9dc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6ccb18-3be2-458f-9003-347502a7f307",
        "cursor": {
          "ref": "e5ec8534-3e1a-43fe-8aa6-ab035f58c851",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7c473a50-86d1-494f-9c22-1e4edf3d8fd7"
        },
        "item": {
          "id": "be6ccb18-3be2-458f-9003-347502a7f307",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cb346652-7f17-442e-93b1-c86012423155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b63f21f-8c25-44d2-acca-93846ac59abe",
        "cursor": {
          "ref": "96dc633e-965e-42d9-8913-4ff88d43dc4b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7acbff6b-0066-4adb-a2dc-73e193d07676"
        },
        "item": {
          "id": "3b63f21f-8c25-44d2-acca-93846ac59abe",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a218c070-f08e-4321-88f4-5889d6b58acd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f426e262-d412-4183-a6ba-baafe6cc6e09",
        "cursor": {
          "ref": "5d6fea3e-9669-4415-a425-060cf08e21c1",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c8a41fe4-d8b8-4301-8712-9067cf6d27e0"
        },
        "item": {
          "id": "f426e262-d412-4183-a6ba-baafe6cc6e09",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d8c9e2be-0336-466c-827b-0102214cde8f",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd20720-b61e-424d-b971-2e0b9fc5b4c4",
        "cursor": {
          "ref": "90504c3b-1adc-49b0-8c60-8c0c34d3de66",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4f360ef1-f4bf-446f-b9fe-c6233b3ec03e"
        },
        "item": {
          "id": "0dd20720-b61e-424d-b971-2e0b9fc5b4c4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cac82eb7-dbb9-4201-9b5b-2590e6cb2d9a",
          "status": "Created",
          "code": 201,
          "responseTime": 125,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8eebf4d-ea9e-439b-ad0e-ab31ab0392bb",
        "cursor": {
          "ref": "c84d4e4c-9be0-49cc-8710-d3c9831a218f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bf435608-4c36-4664-8f8c-588018c6e458"
        },
        "item": {
          "id": "d8eebf4d-ea9e-439b-ad0e-ab31ab0392bb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a43c1812-e166-4299-8cf8-c77823df3b48",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d839923-35f2-4f1d-a4ec-179935ac6cf3",
        "cursor": {
          "ref": "d29bee1f-1085-4710-881b-a4f5bc30e685",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "84d802de-4516-47b1-bfbc-5400fb0d0fdd"
        },
        "item": {
          "id": "9d839923-35f2-4f1d-a4ec-179935ac6cf3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7d6fd172-120b-4572-a88f-de38a226c1a9",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47b9163-106b-4637-8a81-f5d1607431c6",
        "cursor": {
          "ref": "4714a3a6-fd3b-4e51-a498-8194bf48daa6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c4c0803c-e5e3-4ece-91db-8d50135f4576"
        },
        "item": {
          "id": "a47b9163-106b-4637-8a81-f5d1607431c6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2d270dc7-be5e-43ef-9652-6b4d53c841a2",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8149b3-44b9-439e-bb4a-6be7d5672d3f",
        "cursor": {
          "ref": "67fc1629-407d-476b-a434-3921e5440192",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7de6b4a0-166b-4cde-b360-4e1eacd0c11f"
        },
        "item": {
          "id": "ca8149b3-44b9-439e-bb4a-6be7d5672d3f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6fc96a69-6eea-406e-85ca-67f8305c28a1",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4741a7-6999-483a-80e6-b6f72175bbcd",
        "cursor": {
          "ref": "6102576d-2198-44d6-8708-d55cec53e13e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8e43bb45-c8f0-4bed-8c38-b25ba08eb03e"
        },
        "item": {
          "id": "7e4741a7-6999-483a-80e6-b6f72175bbcd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "308d2779-e75c-43cc-ae9e-96af96673f6e",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0d28c1-54d5-4704-9ce2-9b680338a2ad",
        "cursor": {
          "ref": "0a761357-6552-4669-a5c7-322362c5e514",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8da45932-d9a4-45a9-a1d0-304e16a9ea18"
        },
        "item": {
          "id": "4d0d28c1-54d5-4704-9ce2-9b680338a2ad",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dad8061d-f10d-4e13-9df2-ffb201ad0ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a75c12f-93b8-4691-98b4-e29ba787af5b",
        "cursor": {
          "ref": "41f31b95-5fb1-4a57-b413-5785fe3b0a01",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "27e76d7a-395e-4f0d-ad6a-88daab885ee3"
        },
        "item": {
          "id": "2a75c12f-93b8-4691-98b4-e29ba787af5b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e2a33fee-96ee-4bc2-b054-67723c886723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1c021c-b144-426a-aba5-50e84b9d8518",
        "cursor": {
          "ref": "d013413c-ea62-494e-8bab-9d7d349ce068",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "252d3bea-5980-480b-93c1-231866869389"
        },
        "item": {
          "id": "fc1c021c-b144-426a-aba5-50e84b9d8518",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "009fdfe8-7d15-4551-9c66-8b006d7abb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7fa773-194b-44d0-b651-cfbcc3126248",
        "cursor": {
          "ref": "8cd1379a-fb4e-40ab-bc36-272d18bf01d5",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5b928da2-bac3-4d13-823b-520ba0d3f910"
        },
        "item": {
          "id": "ef7fa773-194b-44d0-b651-cfbcc3126248",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fb24c624-85e4-4066-ad0f-50baf6a469cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee08af6-a071-4b13-a8b2-3d8767360df9",
        "cursor": {
          "ref": "01afa219-2623-4a93-ac7c-c69100dd59f3",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "36261f7f-51a0-4541-ad1d-2b52f3b7d220"
        },
        "item": {
          "id": "2ee08af6-a071-4b13-a8b2-3d8767360df9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "15e79bfd-c908-4424-b911-3164f4790a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51009706-77b5-4f4b-873f-2d277a39126e",
        "cursor": {
          "ref": "08388974-1661-4795-8d83-c7f9d7b32be8",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dc4b6b2d-bfdb-4e29-b68d-52791cba21f5"
        },
        "item": {
          "id": "51009706-77b5-4f4b-873f-2d277a39126e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8bd5c4e0-a38e-4fe2-ad73-c63a7caf85f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcff195-c0ef-47b5-9950-5b6a427a9323",
        "cursor": {
          "ref": "67c1a9e6-0d6b-472b-ae8f-aabd5b1eed4f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "91ef70a2-a30e-4005-8c3f-c4c129c0b372"
        },
        "item": {
          "id": "8fcff195-c0ef-47b5-9950-5b6a427a9323",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e2088017-b38c-401f-b2e6-6d12402f37f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84679f4a-481a-4a3e-8fea-4f73487cbe51",
        "cursor": {
          "ref": "86317b30-ba45-4b2f-82b5-87dbb350e67d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4d823e41-8c4d-427a-aa83-1013224820c3"
        },
        "item": {
          "id": "84679f4a-481a-4a3e-8fea-4f73487cbe51",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b8e3a88e-6ebc-425f-b718-84702fa6de0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39159428-4f68-417c-9302-89f0acac6523",
        "cursor": {
          "ref": "7b6deb70-c159-4e8b-9fec-eafe8d4ac87e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8e037118-5aa0-4bba-9472-7c9bae5e1342"
        },
        "item": {
          "id": "39159428-4f68-417c-9302-89f0acac6523",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "13c6de5a-295c-4f67-8cb9-a536aa62abe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f90303-32c2-4acf-96da-025164d515f1",
        "cursor": {
          "ref": "be6c5d53-a14d-4122-ab6a-cd5d4c489e8c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "43321b4e-d454-4602-b960-3c4d059d1240"
        },
        "item": {
          "id": "c5f90303-32c2-4acf-96da-025164d515f1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7b03a50d-c404-4b99-82f6-a04765ef865c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280e4f87-a304-40d4-ad69-ec0924a5c541",
        "cursor": {
          "ref": "1a84334e-b348-4854-955f-3c2950c75f29",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f98a12ba-3cd6-4778-af44-38e85268807f"
        },
        "item": {
          "id": "280e4f87-a304-40d4-ad69-ec0924a5c541",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f4c3fbb6-fde6-4698-a7c9-a6b587cc6b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda3c637-d500-4d8e-b189-0af238bcbfe7",
        "cursor": {
          "ref": "11bae99d-9273-4a49-86de-a3534c03ca5d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cbe727f0-34d7-4141-bbc6-a31f84b6a6f7"
        },
        "item": {
          "id": "bda3c637-d500-4d8e-b189-0af238bcbfe7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "846f9340-2e91-4440-b307-b452a085600d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa60f3f6-e32c-43dc-8608-4c9d9aef5b20",
        "cursor": {
          "ref": "9581ad4e-742a-46d1-b58a-a711dafbce63",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "944b29c9-26a1-4e18-83cb-dfa254aacf3a"
        },
        "item": {
          "id": "aa60f3f6-e32c-43dc-8608-4c9d9aef5b20",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f472d7e5-c42a-4659-bc98-269cae805640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aeb8ae-d6c6-4c5f-ac3f-b98a272ee4e5",
        "cursor": {
          "ref": "1ea8a48c-5518-42c3-a9df-ae8567cb8831",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7839c138-2d11-4e27-a023-e8456ac8a340"
        },
        "item": {
          "id": "89aeb8ae-d6c6-4c5f-ac3f-b98a272ee4e5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9e05a7f0-5763-42e2-9832-1325952b0363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18777c7f-2548-4548-b463-4063042a2a2e",
        "cursor": {
          "ref": "98b21ca5-f993-49a5-8ebd-3adb783d198b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1802d886-1c3c-40ff-a3f9-9e7f3c4dd4b2"
        },
        "item": {
          "id": "18777c7f-2548-4548-b463-4063042a2a2e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ceb15efb-0113-47a7-b329-ca5205a0713e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded856f6-dda3-4ed5-8021-d6ffdc8fadad",
        "cursor": {
          "ref": "a41b3694-720f-44d4-aaec-95ec1c8b7afd",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8acd9bb4-8df8-4039-90dd-7c6df186f82e"
        },
        "item": {
          "id": "ded856f6-dda3-4ed5-8021-d6ffdc8fadad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bfb687b2-da6e-49ad-acc3-8328bcfaa543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b019572c-f573-4729-9574-b88ded937b13",
        "cursor": {
          "ref": "e3acd7cc-5bc7-43e2-9a9d-63e9d182c61a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0ce78623-fcdb-4b0b-b678-b9a6bb37e0d1"
        },
        "item": {
          "id": "b019572c-f573-4729-9574-b88ded937b13",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "39299c91-a6b7-4bd0-9256-8d2e896a3f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5220d447-ad56-420d-90f6-6fc6eb6a11d1",
        "cursor": {
          "ref": "50742f1d-be7f-481e-bd75-35f0ae2914ea",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1f0812a6-b4f2-477d-ab6e-397cf774975c"
        },
        "item": {
          "id": "5220d447-ad56-420d-90f6-6fc6eb6a11d1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "af690a1f-a7de-4739-8ab5-5dc15c3fb325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb587028-a2ac-487b-bcbc-a50ef4729172",
        "cursor": {
          "ref": "29a5d14d-ead7-4257-ac6d-34506ff1a6c5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4776ebaf-30a1-4e36-bfd5-3555867c7a4e"
        },
        "item": {
          "id": "eb587028-a2ac-487b-bcbc-a50ef4729172",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4760a910-0052-4df6-8873-d475e1c8af05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99351765-ea6e-494b-8e3b-b6df0ffda6e6",
        "cursor": {
          "ref": "583d283c-8224-4fc4-aafb-617bb1234701",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "45dbdd53-cdeb-4d15-9251-1b3645f57a84"
        },
        "item": {
          "id": "99351765-ea6e-494b-8e3b-b6df0ffda6e6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "da2d5b85-775a-4f02-8398-49ecbb16aa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b937ab00-df9e-4d50-9959-89293f3cd9ae",
        "cursor": {
          "ref": "84d27985-c63f-4155-a80e-ba93aed3bc27",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c6d0815e-f79f-4296-864c-1cb655387fa1"
        },
        "item": {
          "id": "b937ab00-df9e-4d50-9959-89293f3cd9ae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "70ec94c2-7e3a-4be3-a2f5-c9bfbdd833e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be979ba-416f-4024-aae2-2855531c251f",
        "cursor": {
          "ref": "c7e6cd48-ec7e-47b9-84df-27a83060dcd1",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fad25065-2e93-4b9d-9e1d-032f287b217e"
        },
        "item": {
          "id": "8be979ba-416f-4024-aae2-2855531c251f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5adff72f-3809-4504-87da-15f7f839cb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4002ac1b-e587-44df-9076-e6657cd78e7d",
        "cursor": {
          "ref": "9c837146-65fa-44e3-acbf-82c4fb0c1976",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9097dee5-068e-42a7-b375-eb18771f65d4"
        },
        "item": {
          "id": "4002ac1b-e587-44df-9076-e6657cd78e7d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7b57a593-453d-4c6e-80b4-fbceeaa25f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55dd3bd-0dcf-405c-a0aa-5743580320f4",
        "cursor": {
          "ref": "b4a5f91b-3bdb-4c5e-aa5e-f98649d880f5",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c0b09c69-b722-4f39-bf50-27ab4a934d8f"
        },
        "item": {
          "id": "a55dd3bd-0dcf-405c-a0aa-5743580320f4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "228478ba-800f-4ded-82ab-4576cb712a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd795353-3289-4b3f-bc85-a9380d5e3023",
        "cursor": {
          "ref": "55529938-d7ef-4fa8-80fb-3a935062d934",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b9a6bf51-4304-4923-b8b2-2f4561acebf4"
        },
        "item": {
          "id": "fd795353-3289-4b3f-bc85-a9380d5e3023",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9f82d2dd-e786-4344-923d-c06bee514744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f7f21f-b36f-43c8-a3ea-31cc7bbb41fe",
        "cursor": {
          "ref": "d5bdcace-44a5-4a8d-a9dd-e8fdb45d2b98",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "060b5279-769c-45c0-9492-1f34c0da4560"
        },
        "item": {
          "id": "54f7f21f-b36f-43c8-a3ea-31cc7bbb41fe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "348e1ccd-8c02-49a9-9b37-9cd31998a91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fae297-b893-4957-9064-d57ce92d0ecb",
        "cursor": {
          "ref": "5be08613-9478-4475-96ed-a01807affbff",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "badc0772-13a4-4f27-8c49-8074c6f7b4ee"
        },
        "item": {
          "id": "f1fae297-b893-4957-9064-d57ce92d0ecb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7449c424-54fa-4cf7-8693-517de8ca153f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d13a63-90b3-49f3-9f30-501d6a39ee33",
        "cursor": {
          "ref": "e0a64d0f-5343-40fa-b58b-21075efbfb4d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4c11b8fd-aa5a-4503-a1ad-861a653892f2"
        },
        "item": {
          "id": "46d13a63-90b3-49f3-9f30-501d6a39ee33",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b1417eb1-68ca-4bba-89ad-757ea449c34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5783ce30-3af3-4d8c-914f-6869fa18aaf0",
        "cursor": {
          "ref": "f6295777-2fc5-4fa3-9917-e17fb431a6fe",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d220ba21-f3c1-477b-93a8-716a867ccdf5"
        },
        "item": {
          "id": "5783ce30-3af3-4d8c-914f-6869fa18aaf0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f97ab416-ea03-4ee8-ae5f-6b66e4d92af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf0a44b-740d-4590-9132-0df01958b29f",
        "cursor": {
          "ref": "fb2ee80a-9396-4fec-b24b-8ac4a538a4f6",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "defb7fdd-1edb-40fd-b9cb-9d5be3eb4539"
        },
        "item": {
          "id": "0bf0a44b-740d-4590-9132-0df01958b29f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "14b665d8-e9b9-4685-96e6-0a781a366a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90819c4d-6728-4d9c-9fec-07f139e80bfb",
        "cursor": {
          "ref": "1b531492-0b6e-422f-b445-ed4149ccd3bb",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "60f3f299-9fde-4169-b51f-0baba3758c9e"
        },
        "item": {
          "id": "90819c4d-6728-4d9c-9fec-07f139e80bfb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "183511b2-49a4-4f13-ba23-144b0d8a6a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be308c98-c4f6-4f09-8673-5f7c469ce622",
        "cursor": {
          "ref": "66768865-08bc-4d73-9430-56a4b27f98e9",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8968d5c9-66b2-43f1-a87d-cf60ea3b3837"
        },
        "item": {
          "id": "be308c98-c4f6-4f09-8673-5f7c469ce622",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "35068dbd-b7cf-47d6-bc01-40b90c1e8785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7fb791-a776-4216-bd63-24d6767e83c5",
        "cursor": {
          "ref": "640cf670-276a-48e3-917d-709b0962412d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ad287322-e933-4439-833d-d34a92d8da85"
        },
        "item": {
          "id": "ed7fb791-a776-4216-bd63-24d6767e83c5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "29ed3ac2-d463-4a49-9b1a-bf8f9e629fc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e04112-5e60-4e5a-bdcd-d65f0883a6fb",
        "cursor": {
          "ref": "ccd5e3bc-6176-4739-98d1-d403bc205578",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "49b0deb8-5295-453e-96d8-7f5cbdea6212"
        },
        "item": {
          "id": "17e04112-5e60-4e5a-bdcd-d65f0883a6fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "56899d5c-d7cc-4048-98e7-46bb5aee9498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff04cc7-4825-4f6c-9b4a-5b04b8402f45",
        "cursor": {
          "ref": "d4a43b8f-0dcd-41a0-9370-3627b776b682",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "932eb9a1-85ea-4dff-85de-0e28f6627c65"
        },
        "item": {
          "id": "cff04cc7-4825-4f6c-9b4a-5b04b8402f45",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "50237ff5-cd84-4364-a759-f55c6fbaab28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34f0513-44ed-4b1a-a786-d9e0ce4c37dc",
        "cursor": {
          "ref": "c15562d5-2745-470f-9b70-3649901ea219",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f2c17d8b-8a07-414c-8bcc-d61fd6ed48f0"
        },
        "item": {
          "id": "f34f0513-44ed-4b1a-a786-d9e0ce4c37dc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e7e2b729-f02e-4fa6-929f-c434580a6d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fa7669-9865-4d9f-94f1-e080dd741a6f",
        "cursor": {
          "ref": "077ec482-7b85-40d3-b465-df021d1d56d8",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c82d8f12-1f74-416d-9339-77d44c6455e6"
        },
        "item": {
          "id": "c8fa7669-9865-4d9f-94f1-e080dd741a6f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b1aa9d25-e829-4326-802e-65df49d97d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a67ddd4-9265-4ae6-968c-080ccebefc6a",
        "cursor": {
          "ref": "a0e9695d-e343-4151-9b9a-8f8d612115cf",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d0fbffa5-96a3-4e1c-a0f5-3509014d0bec"
        },
        "item": {
          "id": "1a67ddd4-9265-4ae6-968c-080ccebefc6a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0043c815-b2a8-4e21-b2b7-9b4472a53b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0034ce-bdf9-49bc-8381-828407720f88",
        "cursor": {
          "ref": "cbefd13d-57d2-4f62-bb5b-af3a1580d586",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a34a6548-fe1b-46ac-9229-6e09eb07c514"
        },
        "item": {
          "id": "8f0034ce-bdf9-49bc-8381-828407720f88",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6ec3df1b-c93c-4e0b-a4c4-998833cb1852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ab0189-db54-4784-b13d-5c8c10b01658",
        "cursor": {
          "ref": "01cc0165-3648-45d0-b02a-c04216a2fe78",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "65088d9d-2fdb-4e69-99a8-a19d4b2400b3"
        },
        "item": {
          "id": "81ab0189-db54-4784-b13d-5c8c10b01658",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "df291672-69de-480d-83c3-66003212d521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a1ad4b-4cd8-4be1-9e30-06077b271450",
        "cursor": {
          "ref": "93f7040c-fc73-4632-aabd-958df1fc0258",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d6309ef6-4045-4ba0-85d7-067530975bd6"
        },
        "item": {
          "id": "79a1ad4b-4cd8-4be1-9e30-06077b271450",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8c162022-f461-43b9-84fe-9bdf0a22775d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccd5ac8-1901-4608-bc86-292f80eba331",
        "cursor": {
          "ref": "cf33d80b-34ec-4cd5-9d30-2043c03866b5",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "302df07a-c30b-4377-87f4-4e994b908b14"
        },
        "item": {
          "id": "2ccd5ac8-1901-4608-bc86-292f80eba331",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3eea4605-6cb3-4698-a2de-8490dfef4dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c3a9fa-0fc0-4947-bef1-fe7d536cd53f",
        "cursor": {
          "ref": "6f6f46f1-ff85-4f7f-94a5-e1c6dff979af",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "79095014-4f5b-49c2-8cfe-8a472b790ed7"
        },
        "item": {
          "id": "b4c3a9fa-0fc0-4947-bef1-fe7d536cd53f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9451a4c2-670d-40ef-aa7f-e972973db5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f03313-8eec-43bb-bb12-72347f2d4df7",
        "cursor": {
          "ref": "0e141eec-2861-4fb5-a800-11e710aceaf0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4d03a6fa-0957-43fa-95c1-460929fc89e4"
        },
        "item": {
          "id": "e0f03313-8eec-43bb-bb12-72347f2d4df7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dd3d10db-10ed-4fd3-acdf-92b344accaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f925c9-884e-48e1-9604-4a5fab26738e",
        "cursor": {
          "ref": "f62cc212-c34c-4e8e-af45-07cfb6ec197c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9c0cafec-a225-4044-ae2d-5bdc887739bd"
        },
        "item": {
          "id": "50f925c9-884e-48e1-9604-4a5fab26738e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ed657be5-aeb8-4e0e-b112-5889bf702aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417720ab-7dbd-4f40-b9f0-d255423a4a66",
        "cursor": {
          "ref": "b22ffa7f-5675-4f3d-86d9-01b380ae6a53",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b14e83ab-157c-4fe2-b8a3-e05b5bc8e4a5"
        },
        "item": {
          "id": "417720ab-7dbd-4f40-b9f0-d255423a4a66",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "209cf067-81b9-4fb0-a54c-4ebdd9ec1dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15585d5e-361b-42d6-9a87-ffe08f55eea6",
        "cursor": {
          "ref": "ee86b0a1-70b9-4b3a-8c2d-3b7ba5d2360b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "32787fa0-f699-4b87-a702-2a6d863fd1dd"
        },
        "item": {
          "id": "15585d5e-361b-42d6-9a87-ffe08f55eea6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c0ed6ea1-3edf-4f38-8fe0-600c5890ae84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aaabf68-963f-4d6e-b16b-b107576304ee",
        "cursor": {
          "ref": "7c1ab678-3f0f-4171-bf33-cc936a0c417a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "071c15d9-fbd5-4040-bdbb-dfab5cb42ffc"
        },
        "item": {
          "id": "1aaabf68-963f-4d6e-b16b-b107576304ee",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2f7035d9-e18d-4c85-8bd5-8f0b2c432fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cd0c53-3804-43fa-b7cd-1b281935eee2",
        "cursor": {
          "ref": "89a79769-c118-4b94-8c43-893628b900b3",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "384155b7-d49d-49d4-89d1-46a855c6be33"
        },
        "item": {
          "id": "78cd0c53-3804-43fa-b7cd-1b281935eee2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "27f26671-8fb8-4163-8715-9f8f70bd0678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e557ea10-7e63-4da8-9f8b-d4dfedf5437c",
        "cursor": {
          "ref": "53751bf6-66ca-4157-a5e6-aa1d118f231c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1d7887b4-16f5-4344-93d5-74f2109a20a0"
        },
        "item": {
          "id": "e557ea10-7e63-4da8-9f8b-d4dfedf5437c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e4a59135-709b-497b-97db-dac1bf472dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab81342e-4d75-4475-ade6-15e2d3743ec1",
        "cursor": {
          "ref": "74415ab8-b122-4097-a8cf-80d0becfa936",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0e04f821-861a-44e3-bc77-9d1018a9f4cf"
        },
        "item": {
          "id": "ab81342e-4d75-4475-ade6-15e2d3743ec1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2f180344-703e-426f-bb38-a57dcd3eeceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de4a0f0-5dd3-472c-8db9-4c1486b08c89",
        "cursor": {
          "ref": "bac9b70d-79eb-4db4-93a0-42cf428b7232",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3d2fb4fc-e6b4-4266-9429-1cb0256fd4f2"
        },
        "item": {
          "id": "7de4a0f0-5dd3-472c-8db9-4c1486b08c89",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8f33445b-759e-4ada-bc45-60aa152d5844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bdf0c0-8de9-4b08-bd97-09ec6b89548b",
        "cursor": {
          "ref": "07e9285c-14a7-4d67-8a5b-f377be2283b8",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e805813f-6a18-4d4f-8325-4e574395113a"
        },
        "item": {
          "id": "82bdf0c0-8de9-4b08-bd97-09ec6b89548b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0c892e21-f7f0-4c0d-99ac-eb326a351e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba942c9-3b7b-481d-95bb-d841013abd2d",
        "cursor": {
          "ref": "bb7dbe71-989e-45db-9aa9-c383b539faff",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "15c1c6c0-f785-4f14-a3a7-5548ef61073e"
        },
        "item": {
          "id": "7ba942c9-3b7b-481d-95bb-d841013abd2d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4c445022-1302-4dc5-b769-d482c5c16f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e141117-9e0f-46df-8a84-bd8137727618",
        "cursor": {
          "ref": "3e371fb7-94af-4ddb-912c-7cbd34731d5a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f4c984f3-6432-4d0b-a872-9346683d508a"
        },
        "item": {
          "id": "4e141117-9e0f-46df-8a84-bd8137727618",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4d696cc0-f824-4e85-9568-4164f7bc3ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3551df-4d25-4357-8db9-ce5a69d06d76",
        "cursor": {
          "ref": "fb0a246d-7ae1-436e-a12f-7ab229312726",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a13442b2-b4c7-49cf-a2dd-220821b447d7"
        },
        "item": {
          "id": "fd3551df-4d25-4357-8db9-ce5a69d06d76",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "54175311-105e-4d1b-ac57-305ef42c1d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea13a79-6cb6-4d72-bd96-116c9e67090f",
        "cursor": {
          "ref": "bd45447f-863b-4549-820c-0cc5be7ed46e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "62099215-d050-4e2f-a504-67c73f16755b"
        },
        "item": {
          "id": "8ea13a79-6cb6-4d72-bd96-116c9e67090f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5f3a4522-ce3c-4922-b2e3-6dbd4855e564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a696ab11-c48e-43fa-b75d-aa09948cda7b",
        "cursor": {
          "ref": "c465a605-f514-4570-aac1-e84f16895ff3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b0dca333-3bd1-4863-851c-eddd017c7ab9"
        },
        "item": {
          "id": "a696ab11-c48e-43fa-b75d-aa09948cda7b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "182c77e1-7703-45a4-8ba8-b575adb3392d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0a8fac-f19a-4bdd-b7a9-8485168757ca",
        "cursor": {
          "ref": "41ff5809-dc30-4b98-aad7-438b288170f3",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "18a9b3c4-68da-4b44-9795-8069e816953e"
        },
        "item": {
          "id": "9e0a8fac-f19a-4bdd-b7a9-8485168757ca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1cd09df0-0057-4c42-9baa-ca3f63d71f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168f8fad-eabf-47b5-8dbc-cf9051b3c806",
        "cursor": {
          "ref": "93ba1708-59f5-47b9-a650-3874f148e1ab",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f48bed4d-9c38-4d8c-ba4f-90ba79d121b6"
        },
        "item": {
          "id": "168f8fad-eabf-47b5-8dbc-cf9051b3c806",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ffd401ab-8121-437e-b8bc-560e0fe75126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb45531-090f-44fa-b918-b5169fdb990f",
        "cursor": {
          "ref": "2748567e-ad69-4eee-b33b-d0342b208a9a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5eb7fac7-6019-4b0d-81e0-598e8d689c66"
        },
        "item": {
          "id": "0fb45531-090f-44fa-b918-b5169fdb990f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "72e83b74-1b9f-4c5a-aa8a-0a8be715c1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9083f432-4a88-45fa-b13f-c2ea94be5399",
        "cursor": {
          "ref": "29e36e3b-07c7-4ff8-8a70-c42b2b799c86",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d1cab9a5-6c01-4c70-81d7-370ef165049b"
        },
        "item": {
          "id": "9083f432-4a88-45fa-b13f-c2ea94be5399",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "092ba901-5838-4ad8-961e-28267ba91c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fe8084-5047-4bd7-9311-cc5f68480ee7",
        "cursor": {
          "ref": "bda71d96-0f25-4bd3-b590-ecb700550b64",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "06c9c9da-1e0f-4029-89af-0d889489f568"
        },
        "item": {
          "id": "b2fe8084-5047-4bd7-9311-cc5f68480ee7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fbcd2798-1334-44d9-b67b-3f714cf3b36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165f8878-833b-4edb-9b2c-0a31a1f90e60",
        "cursor": {
          "ref": "e8cb033e-7dc5-464e-98d5-3802a6b53eac",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9a74c989-6252-4f86-a39b-3cc6cf07e918"
        },
        "item": {
          "id": "165f8878-833b-4edb-9b2c-0a31a1f90e60",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e1a8fafd-d093-4317-9419-8cf91a9b97fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cf0377-e809-415c-9459-a191a32580db",
        "cursor": {
          "ref": "7f431eb0-53be-4c5f-849e-d61496de1880",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1dc1c586-7a7c-499e-8814-d615311b1e68"
        },
        "item": {
          "id": "17cf0377-e809-415c-9459-a191a32580db",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3e8551c5-13e5-4c97-9c74-75b7bee9ae39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b7e395-4eba-4fb2-a543-a1c760351e87",
        "cursor": {
          "ref": "33e8e1e7-2e8d-4002-837c-9658d31ee635",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ac1e292d-26c7-416a-bbab-17a0032f8f16"
        },
        "item": {
          "id": "d7b7e395-4eba-4fb2-a543-a1c760351e87",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a17d93eb-5497-4c9b-8983-aa8e24c465db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b46e70-20ef-4909-becd-3429fe591b72",
        "cursor": {
          "ref": "8c517b82-f986-473a-83d8-7a8f6a6fbcf5",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5ad2d515-bfc3-42ae-a659-9b8e627b4b28"
        },
        "item": {
          "id": "f6b46e70-20ef-4909-becd-3429fe591b72",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "13970d5d-8d2b-4d84-b92e-94d8aedeb662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e6ca1c-86a5-43f2-81d5-1af28aad9778",
        "cursor": {
          "ref": "0f7fbdee-f360-44d6-a9a9-d59aba9b441e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0c927b2f-2964-4664-a571-0d35eb2fcdf1"
        },
        "item": {
          "id": "d8e6ca1c-86a5-43f2-81d5-1af28aad9778",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2e18314a-67bc-4248-b566-d281a1c68fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326277f4-b7f5-482c-85c7-97ff70ed40a6",
        "cursor": {
          "ref": "4823b158-8f24-431a-a66a-bde0247b65e0",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "863b1361-c970-4c4e-8a4f-c56d1272c39c"
        },
        "item": {
          "id": "326277f4-b7f5-482c-85c7-97ff70ed40a6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a9525efb-825d-4cb8-9038-5f5ae86c8586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3962cfe-7ce2-436c-b8f2-080c78ab50bf",
        "cursor": {
          "ref": "7d7d63d6-7a45-4f08-844d-1d23384a0d17",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6daf3870-54fa-4196-8fd3-fe86fe84aa24"
        },
        "item": {
          "id": "b3962cfe-7ce2-436c-b8f2-080c78ab50bf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "eeb40f92-786b-4323-b6b3-a997554e1f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20efda46-3de0-46c7-88c5-7ba90255b6bc",
        "cursor": {
          "ref": "47611cad-8cf8-441a-988b-84cfe5ef3198",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "41d59299-b71d-48f2-b606-9a060e17daf5"
        },
        "item": {
          "id": "20efda46-3de0-46c7-88c5-7ba90255b6bc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1b39c922-2510-4754-9242-f78647477d65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832b6481-9873-4b4b-a6d5-d1a9bb3bbbbd",
        "cursor": {
          "ref": "732054a5-45c4-42aa-8090-cadb2b426105",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "16f7afb5-d293-4dab-b1f5-2541f365c859"
        },
        "item": {
          "id": "832b6481-9873-4b4b-a6d5-d1a9bb3bbbbd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c6b97ee8-5dfd-4929-a003-b0dc53162547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0f57f5-ca4b-4f82-aae1-ca5b2935da1c",
        "cursor": {
          "ref": "82456a1b-b2dd-489a-91b8-be83b6c66cf3",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5d941b02-6bee-4d05-ad6b-15a5bad3c391"
        },
        "item": {
          "id": "cd0f57f5-ca4b-4f82-aae1-ca5b2935da1c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1736878a-3f39-4cc6-8850-0466e6923944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7545472-44fc-4781-a77e-f930a76716cf",
        "cursor": {
          "ref": "1d4f0c91-b073-49ee-beb3-ee56e56aed4c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ef4a6fa8-1294-4a24-9f42-10a1326f4866"
        },
        "item": {
          "id": "f7545472-44fc-4781-a77e-f930a76716cf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0a065c74-c15a-4bf0-91e3-e9b6d28bc63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d51fcd-24fc-418e-8eed-dbe7a283cc0e",
        "cursor": {
          "ref": "9f9fb80c-1e5e-4806-a734-81253819f8ca",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "136bb5f0-cbce-439b-ab54-0a029776279d"
        },
        "item": {
          "id": "d8d51fcd-24fc-418e-8eed-dbe7a283cc0e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "29723eda-cc7c-4f80-8b11-838fd75383a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e52abf-b9ef-4f95-8fbb-028473de0fb6",
        "cursor": {
          "ref": "3fb016b2-16f7-4e10-808e-7e59b02cbfc6",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5cce1223-5f2b-4398-8e88-dd57ac78535a"
        },
        "item": {
          "id": "49e52abf-b9ef-4f95-8fbb-028473de0fb6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "311e77de-c180-4dba-93fd-bb322babd0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b819cd-5a40-4d81-b276-ec377d7f8817",
        "cursor": {
          "ref": "3a070403-d540-4d40-a2a9-afae0d190d01",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a6522ee4-a232-4724-bf4e-b26d00f099bb"
        },
        "item": {
          "id": "62b819cd-5a40-4d81-b276-ec377d7f8817",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "be9e2f6c-bad6-44c7-856b-d26933f4573f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ae6fbd-41cd-494a-8094-bd801b5bf6f9",
        "cursor": {
          "ref": "f8501f4e-fd32-4960-a305-cac842068788",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2bcb5af1-850a-4557-a3de-a297bac8755d"
        },
        "item": {
          "id": "f7ae6fbd-41cd-494a-8094-bd801b5bf6f9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d847ed3a-a216-415f-ad33-6e6cf6b1cf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c62cd7-e8fb-4f5b-8c0e-59c0ae37a83c",
        "cursor": {
          "ref": "7f917a32-b057-40b7-9a67-3c205fa0dc2a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cfa4d525-598d-4032-b2ce-2bb1942fd186"
        },
        "item": {
          "id": "a6c62cd7-e8fb-4f5b-8c0e-59c0ae37a83c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "97c94b27-fedb-4c36-aecd-2011bf1553dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea0629e-ee49-427c-af09-b1dee3fa7a9c",
        "cursor": {
          "ref": "169d2b05-4c32-4d22-96b2-6c56fe4dc780",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "26e6896c-fa53-4c53-8b50-5abf4b591833"
        },
        "item": {
          "id": "1ea0629e-ee49-427c-af09-b1dee3fa7a9c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5c46329e-9f9b-4dee-93ca-fe8751591110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb97cf83-71b8-4a6b-ac6c-845b3f572a35",
        "cursor": {
          "ref": "2275ed0e-9ff4-4b74-a1d3-1b11d6c07cdf",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2d70335e-e9ab-4025-8c91-074b2a867105"
        },
        "item": {
          "id": "eb97cf83-71b8-4a6b-ac6c-845b3f572a35",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "efd1b9cc-a608-456d-b7de-c09397ad58a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7208ce00-b4d7-409b-ab22-679cbde235dc",
        "cursor": {
          "ref": "c5d5b6f9-e704-4db3-88e4-32e7dd5ba1e6",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "21bc4ea6-80cf-4bf1-9061-e37aaa02bc57"
        },
        "item": {
          "id": "7208ce00-b4d7-409b-ab22-679cbde235dc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "79c26736-1b3c-43d1-8424-354e29bdc69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b2f09f-63fd-454a-a591-473fea8d7f10",
        "cursor": {
          "ref": "d3c6bc4a-7732-4df8-8a84-d76a7c744257",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "49992e5a-ca64-4643-9a41-ff2fa2446c9e"
        },
        "item": {
          "id": "a0b2f09f-63fd-454a-a591-473fea8d7f10",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "44186c17-aa08-48f3-900d-cfb4a756e739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9c7b1b-2214-4f4b-8b96-c5fc2c2272d6",
        "cursor": {
          "ref": "320bc08c-d992-4fa0-bdfc-c6fc7b7006ef",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "63d3aa59-6aa6-4198-b9ce-34b7c4940c03"
        },
        "item": {
          "id": "5c9c7b1b-2214-4f4b-8b96-c5fc2c2272d6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3f094c20-5234-42d6-afcb-79980026309e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb38c19-7dcd-4e48-ac4d-1ca815926a35",
        "cursor": {
          "ref": "8491703b-69c2-4ae1-adac-ef0ed1c1593e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ce8efacd-b2ae-4bcd-97ac-9048ba196844"
        },
        "item": {
          "id": "5bb38c19-7dcd-4e48-ac4d-1ca815926a35",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "57d2dc4e-3013-4244-a9a9-37bae06dcf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba5c2e9-0964-4d52-bd1f-a3581eec2917",
        "cursor": {
          "ref": "f72b10e4-54bf-4f96-bbab-40dc17fbc27e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b3948863-2011-4e44-a8b1-e51d131c3e92"
        },
        "item": {
          "id": "8ba5c2e9-0964-4d52-bd1f-a3581eec2917",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "35a44a40-5d5a-4942-ad2c-242cb651f922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cb1087-c858-4d1b-8625-a017ba49ec45",
        "cursor": {
          "ref": "0ea58e7d-254c-4f18-9818-ba8576f5fc90",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0318caa5-ac1b-4c6e-b879-7aca27096009"
        },
        "item": {
          "id": "c4cb1087-c858-4d1b-8625-a017ba49ec45",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e7a44f9f-6a50-46be-a731-973e5c466477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a182e8-8704-4dc7-9a18-b9cdf1e8b555",
        "cursor": {
          "ref": "d59c6a95-c237-49ac-ae83-ab29156018a3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dad717dd-ca0f-4905-8375-b20f28b52290"
        },
        "item": {
          "id": "94a182e8-8704-4dc7-9a18-b9cdf1e8b555",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0885ea1c-6f3e-465a-9f50-d1a9c3b50223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ef8234-b4cc-4705-aaa8-e56d3c17bae3",
        "cursor": {
          "ref": "14bc16e3-d266-4943-a8b3-8cf0627632d7",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ca7302af-7e1d-4a33-aa92-658a6b0e0c18"
        },
        "item": {
          "id": "04ef8234-b4cc-4705-aaa8-e56d3c17bae3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d43a75e9-1fe6-4336-9fe2-1a59b3e66abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66825b67-c56e-4ea9-a5b6-abf8be059245",
        "cursor": {
          "ref": "c53a3304-3270-41d3-93de-2c049058fb2e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e0ea5ced-519c-4fdb-87e0-f055d7b1cd37"
        },
        "item": {
          "id": "66825b67-c56e-4ea9-a5b6-abf8be059245",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b8904452-83a0-4ee1-81e7-2cee838390ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81defa95-b418-479b-9da7-acae2ae94fc9",
        "cursor": {
          "ref": "1f613c45-5c2a-433f-b310-b5f1a30b8d02",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "37b9b6fc-0b66-41d0-a4a1-00cc99abe5aa"
        },
        "item": {
          "id": "81defa95-b418-479b-9da7-acae2ae94fc9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1f5a4e79-013d-4d0f-8f6e-9ed0a9ddd37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac9eb13-6a89-48c3-96ba-ec5449453ad1",
        "cursor": {
          "ref": "c9e56b14-e51a-4e97-a4f9-5e7f22cabbaa",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b2046214-ece3-4e3f-883f-0461165a1f30"
        },
        "item": {
          "id": "fac9eb13-6a89-48c3-96ba-ec5449453ad1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1ae7c1fb-05b3-4534-bd27-46a3fa190ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb732c2-da2d-4f5e-8eb3-4829d8634870",
        "cursor": {
          "ref": "0a584e6c-10a1-491a-a3ef-b1bce78bb2ab",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0330574f-dec7-4553-8a25-28d7d3186fc1"
        },
        "item": {
          "id": "8bb732c2-da2d-4f5e-8eb3-4829d8634870",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "84cd5be8-9cfd-4f52-a089-9dce0ad3a202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55d3a8d-9e8e-4d37-a3de-4e2a389c097d",
        "cursor": {
          "ref": "b5a00128-2502-4166-8470-4ffe907f8795",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "20505183-a07d-4c17-b36d-c1c7324c0dc5"
        },
        "item": {
          "id": "b55d3a8d-9e8e-4d37-a3de-4e2a389c097d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9843899c-4406-4383-a645-ce82200e64b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be43d942-05b6-4495-9a19-1bea1436f300",
        "cursor": {
          "ref": "19a000d2-d1ab-48c3-a0ec-cfead4bd4199",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9244b074-edc7-4878-ac69-36a7a2113a69"
        },
        "item": {
          "id": "be43d942-05b6-4495-9a19-1bea1436f300",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a0089d11-e4ca-4028-8025-450400a7bb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d4dfbf-684e-415f-8b91-a959e0b0544c",
        "cursor": {
          "ref": "ebf2ccbf-2455-435f-bf75-33108f3d0f19",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "48553eae-81bd-441a-b2cd-7268fef0d945"
        },
        "item": {
          "id": "19d4dfbf-684e-415f-8b91-a959e0b0544c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2568e7a3-a617-4fca-999a-8e7a6f333c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1616168-a4c6-4433-a98b-ab343fade19b",
        "cursor": {
          "ref": "c44831ce-bf8c-496b-b18a-e70988aecc27",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "98f10b6c-6340-44e5-88d5-3e373c485229"
        },
        "item": {
          "id": "d1616168-a4c6-4433-a98b-ab343fade19b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6a686355-f0df-43f6-9c17-1130d85599f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4378d38-902c-4b74-b11e-6b76c7a13a69",
        "cursor": {
          "ref": "a427db24-1815-4711-8e6b-6254e8228148",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "093d435d-45d2-417f-bbf1-81fa4f825942"
        },
        "item": {
          "id": "f4378d38-902c-4b74-b11e-6b76c7a13a69",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c88e72f0-8757-4727-bb0e-390d75e3dde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a272a1ad-3837-4db3-9e2c-06de80ef98b9",
        "cursor": {
          "ref": "0c3c6de9-3648-44ba-8d8e-14763fd6c89e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6104c7f9-a688-4f37-99d7-98a992f81e29"
        },
        "item": {
          "id": "a272a1ad-3837-4db3-9e2c-06de80ef98b9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0c24fccf-bb01-43e8-ac99-0d7153457fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6ea24f-6dc5-4c01-b270-41b42af18df8",
        "cursor": {
          "ref": "e3eab86a-c367-44fa-8146-957d90c6787f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "68ad3ce3-029e-438a-bcd5-3464911cd2d9"
        },
        "item": {
          "id": "da6ea24f-6dc5-4c01-b270-41b42af18df8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9a2e7e34-7142-41a2-9638-de9cdc329d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1e29b7-6a92-4936-8f1f-68f02dceba67",
        "cursor": {
          "ref": "7b6a4432-e63e-43d3-92ce-a799cac81d8b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0b662599-01bf-4f53-b0c2-17432af15cd8"
        },
        "item": {
          "id": "bd1e29b7-6a92-4936-8f1f-68f02dceba67",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a559bfa1-12f7-48c8-9eb0-107acc2b977b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebfcd3a-eda7-4a48-83a3-d075a92e2398",
        "cursor": {
          "ref": "4485c64b-9548-4c42-8b7e-b896735b4f2f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e7571501-41d6-4e12-aaf6-01d17f123373"
        },
        "item": {
          "id": "1ebfcd3a-eda7-4a48-83a3-d075a92e2398",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9e0d9272-9f9c-4013-9619-2a7061f7c4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5c137c-e706-4381-8d5d-841c818c3c48",
        "cursor": {
          "ref": "0d41dd7a-d46a-4be8-be5c-4801afe3c130",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b9aacd67-c333-4f4b-8397-79b44b1cf4e8"
        },
        "item": {
          "id": "4c5c137c-e706-4381-8d5d-841c818c3c48",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ba705679-fe0c-4f37-8597-58471f0dcf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da159a7-c1af-47cb-8455-4278693ebc4c",
        "cursor": {
          "ref": "0ee4d310-3efe-4a4c-b6a7-76384a3a9cc2",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fc732413-b310-436f-8e2e-b07f9da2fd1a"
        },
        "item": {
          "id": "2da159a7-c1af-47cb-8455-4278693ebc4c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "aa984886-2645-48e0-b520-0d629ddfe798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55798031-fcf1-4a66-8bf7-d70658ae86d9",
        "cursor": {
          "ref": "e330a7f1-0c37-4894-926e-8d37b7442a35",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ed507056-ca9c-46c5-b9ee-94606e283f75"
        },
        "item": {
          "id": "55798031-fcf1-4a66-8bf7-d70658ae86d9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "94fce835-e7ce-48a8-b92e-23df2a2b6fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73ca712-a616-4e43-b69c-2c308a027d7a",
        "cursor": {
          "ref": "25d24aa0-fe0e-43a2-98c4-c5597f4362ad",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "95f30e66-5eef-4445-b00f-b6284563cf6f"
        },
        "item": {
          "id": "e73ca712-a616-4e43-b69c-2c308a027d7a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dc16727d-5e93-4352-8642-75d9b1b94b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28b9a40-37e3-4bac-9be6-4517672ea378",
        "cursor": {
          "ref": "77ce6c43-6ab8-40dd-acb2-6895e368651e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8a1b5da1-5104-4de8-8246-b03ae4dbb751"
        },
        "item": {
          "id": "a28b9a40-37e3-4bac-9be6-4517672ea378",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cb9bb9e3-5051-43f4-9270-dca48ce094d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4811dd0d-4adc-4624-88a8-cf5ee709ffba",
        "cursor": {
          "ref": "095eaa36-4ad1-473e-9b56-dbe4d284ae2a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7960123d-f6c0-44d9-b4f5-42a0374d4651"
        },
        "item": {
          "id": "4811dd0d-4adc-4624-88a8-cf5ee709ffba",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cd2051a6-2f31-4bfb-875d-e18630632706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467e8409-ed1d-4db9-a518-73a08029e4e3",
        "cursor": {
          "ref": "e46905a3-a78f-4fd9-9429-0bf4dd1e9eea",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0e665327-c35d-4932-851f-291884ba13d3"
        },
        "item": {
          "id": "467e8409-ed1d-4db9-a518-73a08029e4e3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "987cfb96-bab3-4267-8c78-333dddd1c1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48908e70-45b2-4ad9-9d2b-67d0cf1e3928",
        "cursor": {
          "ref": "2645de15-e310-4fa7-bead-df7592486a6c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cac5b1b8-28be-42b5-9d8d-9541ef9611d5"
        },
        "item": {
          "id": "48908e70-45b2-4ad9-9d2b-67d0cf1e3928",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "47ab8439-3d0b-46a2-b0d3-e211cdb9d529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1c4fc5-bf9c-4887-8529-e964e3fcd3ad",
        "cursor": {
          "ref": "ca51532e-24d4-4365-b2ce-9503da9a2a80",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2ad3ac31-6084-4288-87f0-140592958d85"
        },
        "item": {
          "id": "7f1c4fc5-bf9c-4887-8529-e964e3fcd3ad",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6b4a7e24-e361-48b0-a8af-77f95c983264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b351c50e-5c05-47f1-9ae0-5532ed37d649",
        "cursor": {
          "ref": "b5519300-f6b3-4277-b830-e02e8e533a63",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e9cdbdd5-2244-4424-a8a0-82b86c6630e0"
        },
        "item": {
          "id": "b351c50e-5c05-47f1-9ae0-5532ed37d649",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b2a0b61d-4aa2-4e7a-b5b8-2be4db7bc235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bbd7c7-4ad0-4002-bd1b-9c1145937cb2",
        "cursor": {
          "ref": "ff48e0c6-37ca-4def-ab6b-22a08d95dae9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "94e24138-208c-4198-b858-3dee56d9e767"
        },
        "item": {
          "id": "a2bbd7c7-4ad0-4002-bd1b-9c1145937cb2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ebdf7d3c-2454-46d0-a2ae-48daaeb72488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0043bf83-9996-43c4-807a-0ad871c255aa",
        "cursor": {
          "ref": "247fcd3e-1552-4d77-b15a-1c3c142d0144",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "377e19a2-c9df-4fe4-bdd9-e77fa711b5b4"
        },
        "item": {
          "id": "0043bf83-9996-43c4-807a-0ad871c255aa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a9123d6c-15c8-4cf0-930a-0131cd8bde8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328869b9-91bb-4d4a-a0a1-febd6ff5741b",
        "cursor": {
          "ref": "93a47c5f-b19a-4e75-9021-1c4259a04377",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6b8434c9-5cc2-4433-9538-78ab017c9fdc"
        },
        "item": {
          "id": "328869b9-91bb-4d4a-a0a1-febd6ff5741b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bfb20de6-8085-4799-895c-87debfbf284e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6906fa14-05ef-46c9-96bf-ede82eead605",
        "cursor": {
          "ref": "8e504a75-88c7-4a4d-9a6a-b6101d6c3bf3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4ecae89b-558f-48c6-92e7-1b8e884c02db"
        },
        "item": {
          "id": "6906fa14-05ef-46c9-96bf-ede82eead605",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b244ffc0-b0da-4438-9de0-179b4f66ef4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61971dc2-0121-4e57-9c32-ba73f7582dc5",
        "cursor": {
          "ref": "8425fc4d-6519-4bfd-8827-c17eee81ceaf",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "29e872a3-041e-4d59-af90-a330d9292712"
        },
        "item": {
          "id": "61971dc2-0121-4e57-9c32-ba73f7582dc5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a76531b6-8d5d-4369-9a98-9f4beb3ccb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48e4307-3d2f-457d-a594-529d9fc11428",
        "cursor": {
          "ref": "6f2fb22c-6dd7-44bc-99e2-bcb78bc6fdc2",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "29e50537-9e93-434a-bd83-5282e2851ab6"
        },
        "item": {
          "id": "f48e4307-3d2f-457d-a594-529d9fc11428",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7932ec55-89b2-4e31-a6ef-8e9a29065437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8423669f-4eac-49ae-adcf-43f4c8242fb5",
        "cursor": {
          "ref": "12c8ec75-cbcd-4561-93df-d96717ffa5e6",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8fcd0369-18eb-4d6a-bbe4-84a01a782dc3"
        },
        "item": {
          "id": "8423669f-4eac-49ae-adcf-43f4c8242fb5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "55bd5df3-7c6a-439c-8bd7-6afeea57bee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb465114-5560-4b4f-be83-f29c51c7e888",
        "cursor": {
          "ref": "59ba0e97-5d24-4559-be46-a9ef55ed1dc2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "babd020d-c06a-4fb3-ad04-be60de782c84"
        },
        "item": {
          "id": "bb465114-5560-4b4f-be83-f29c51c7e888",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8df0a80d-66ce-41dc-ae26-6a2cf6092408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f874e2-6a0d-4ce0-b339-ee86ca2b8dd4",
        "cursor": {
          "ref": "ffc6eaf1-1d47-4493-ae84-4ad1752243ae",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b7b40677-6538-4460-bada-69ff1e1ddb46"
        },
        "item": {
          "id": "f7f874e2-6a0d-4ce0-b339-ee86ca2b8dd4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b64bd4e3-533e-4db6-bc58-dca47a357308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c2bea0-3c54-455e-8651-edb4e4fcf375",
        "cursor": {
          "ref": "eb3b5d0e-5120-4cca-877c-81b61c9b0392",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ec3837de-9976-4151-8d0f-37a066e5f803"
        },
        "item": {
          "id": "84c2bea0-3c54-455e-8651-edb4e4fcf375",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "22f79372-7da6-4098-b778-f46fcfd1dc78",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "ca7652bd-8f79-4c77-b74d-1622676b5b11",
        "cursor": {
          "ref": "65b12631-b6fd-4002-92d2-01e8a417e976",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4c904553-d5d0-4bbe-8820-82d3cd30e351"
        },
        "item": {
          "id": "ca7652bd-8f79-4c77-b74d-1622676b5b11",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1c4d8d87-dcb0-421a-bf5c-79f3af32a9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61eb5c7f-bb57-4e14-aa93-74b0d899339d",
        "cursor": {
          "ref": "6cb53682-a99b-4294-8203-8e96a13d93f1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e16183be-52ac-4a38-b167-f48ee7597163"
        },
        "item": {
          "id": "61eb5c7f-bb57-4e14-aa93-74b0d899339d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c76ed73c-ba66-4ec5-be7f-bf8d392b3a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5691ef7-ff94-4704-8427-be74a46775f5",
        "cursor": {
          "ref": "a880d9a9-ad33-4468-a9d7-b9cbd407f42a",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2ed2aee3-6c7b-4eb2-9f14-8443220547c6"
        },
        "item": {
          "id": "b5691ef7-ff94-4704-8427-be74a46775f5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c973d1fa-82a7-4391-a16c-b5a4fcbd8e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d248c8-ee2a-439b-9b93-ae0169cc8bb9",
        "cursor": {
          "ref": "acc02b93-328a-4eec-9858-467496407391",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6a69ab09-848d-4b3c-9c18-ee90f0fe5278"
        },
        "item": {
          "id": "98d248c8-ee2a-439b-9b93-ae0169cc8bb9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "151f8670-09b8-4a94-add8-60a3a30a4a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5deebc-09c0-4230-ba55-44517d46a895",
        "cursor": {
          "ref": "0de8f3b5-937a-4625-a3eb-a7862322e1b6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "53e5c6da-2a19-48c2-a87f-8b44f93c9cb7"
        },
        "item": {
          "id": "3e5deebc-09c0-4230-ba55-44517d46a895",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5f9f864d-4d6b-4277-b833-7e00296144b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfe8c71-f9bb-40f1-9c2d-6be2cb81160d",
        "cursor": {
          "ref": "c2523494-316c-4198-b7d8-e04eb37fbd68",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c40461fa-cecd-4910-9ad4-1616ffc88f6d"
        },
        "item": {
          "id": "cdfe8c71-f9bb-40f1-9c2d-6be2cb81160d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c0cd9327-86d2-42e3-a18c-46a53f6ce5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8bf454-9ff7-45ec-a7d1-fcc1c62b181b",
        "cursor": {
          "ref": "d722f3e2-c632-4196-b911-2a4872d18d6f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "09fee8a5-e03d-4c77-8389-171656b74bee"
        },
        "item": {
          "id": "aa8bf454-9ff7-45ec-a7d1-fcc1c62b181b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1fd851fe-365f-4c10-b111-262f5101168f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f431a90-cff2-4306-905f-cea80b4b1e16",
        "cursor": {
          "ref": "df077937-24bb-4b6d-80bf-41547d03a086",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7a62ad3e-dc3c-4775-80dd-7959c64a7f74"
        },
        "item": {
          "id": "0f431a90-cff2-4306-905f-cea80b4b1e16",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2cc88385-33e1-4e4e-a747-fb2d38f58d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5f3dcf-30fd-4a75-880e-80d4c60a5c83",
        "cursor": {
          "ref": "38504184-37e4-4d0b-913c-ef6b72520ce1",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8964832b-f1da-4d85-818a-b55063aba2e9"
        },
        "item": {
          "id": "ce5f3dcf-30fd-4a75-880e-80d4c60a5c83",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "35d95183-fa8f-47e1-b9f2-86abcd7ef96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7055a29-51a4-450e-9e6d-dc2f748abf8d",
        "cursor": {
          "ref": "e215cd02-bd67-47ef-9614-c2e400fb1b88",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5e44ca1d-e511-4c03-a5b3-0d0184551617"
        },
        "item": {
          "id": "d7055a29-51a4-450e-9e6d-dc2f748abf8d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aeca7e91-0bc7-423f-8658-5f810b136dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112fc843-61d4-4044-b44d-0d5331465001",
        "cursor": {
          "ref": "5b4a25a0-06b8-4cb2-82a1-ea3e93a8c6f3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9dc39aa9-aeaa-4421-9992-fe8634e7a5c6"
        },
        "item": {
          "id": "112fc843-61d4-4044-b44d-0d5331465001",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d21bba72-0dd6-4fdb-9616-f62324298432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282024e3-aee2-4f0e-81db-6266bf5e4824",
        "cursor": {
          "ref": "f9f8bf19-4aa6-40f0-a50f-eac199a1f114",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eea47a13-f707-46ba-bae4-35cc113ff774"
        },
        "item": {
          "id": "282024e3-aee2-4f0e-81db-6266bf5e4824",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "473d2d39-e8a5-4493-ad30-ee92bfd4055b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a735ad83-8d0c-41dd-aabd-916bf575793d",
        "cursor": {
          "ref": "c7a449b7-1651-4131-87c9-d31a86cf877d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "35cf10f1-e9aa-424b-bd7e-d2a17434d45d"
        },
        "item": {
          "id": "a735ad83-8d0c-41dd-aabd-916bf575793d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a226432e-5c28-4b25-a2ef-01bfd104f9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeccf90e-aef6-44ec-b063-f2ee0aa58b4c",
        "cursor": {
          "ref": "a393c7a9-4c53-4a1e-bd3e-789dc20d272f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d4c38760-aa9c-4ee9-9330-53516349cb1f"
        },
        "item": {
          "id": "eeccf90e-aef6-44ec-b063-f2ee0aa58b4c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b3a1f944-55af-4ada-9ed3-c7e1c480d69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad51300-78a2-4621-bbab-0a8c200661c5",
        "cursor": {
          "ref": "31303fbf-ee42-4606-99ba-fa0f7dbf6b7a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f125cd71-1211-440c-821f-6daa3c247793"
        },
        "item": {
          "id": "7ad51300-78a2-4621-bbab-0a8c200661c5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "199e39f6-da30-4db4-b100-052c278df534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ce5cdb-e825-477f-b60a-c92be73c2481",
        "cursor": {
          "ref": "f2d51de7-bd03-4a6b-8f1f-9f485d886b35",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "688e6cc3-234a-4d82-96bc-36a06fee04a9"
        },
        "item": {
          "id": "60ce5cdb-e825-477f-b60a-c92be73c2481",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f220630e-d447-4a2c-b59d-2ceae58cf191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49134e84-981e-4568-bfa5-31ee00859142",
        "cursor": {
          "ref": "8d83025a-de0d-4f9e-804b-a4973c748348",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d0aa771a-90c0-4260-a596-2cc41a4fbfea"
        },
        "item": {
          "id": "49134e84-981e-4568-bfa5-31ee00859142",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b09612eb-b811-4cfb-bac6-bf3faa64a470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704cffc2-f8cf-4993-b03f-f6ffa0258cf8",
        "cursor": {
          "ref": "abbb7f18-e444-4483-b298-40807a36b53a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b2bd18a8-0d7a-4a3d-93ca-2ac224642e62"
        },
        "item": {
          "id": "704cffc2-f8cf-4993-b03f-f6ffa0258cf8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d104fdad-a53f-4d70-aee6-a88b72129e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ecb60c-d138-4e43-99e2-344feaa32f92",
        "cursor": {
          "ref": "245e7d36-e853-482d-a41e-1446c1be2cfe",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d8977bf4-d5df-494f-acb7-135eb79f2104"
        },
        "item": {
          "id": "06ecb60c-d138-4e43-99e2-344feaa32f92",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6bc27880-fd8a-4bb1-a761-9468900cb4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553fe323-8b4d-47fa-a777-97e2939ad3ec",
        "cursor": {
          "ref": "cf73492d-292d-4159-93d2-2f7393e755f5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "596ad6dd-78d4-491e-a45b-7689e58b8336"
        },
        "item": {
          "id": "553fe323-8b4d-47fa-a777-97e2939ad3ec",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e7ee56f0-5286-43b8-b77a-76bb5d1a1e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f74abf-2fee-4dd6-8fba-747de9ae3f64",
        "cursor": {
          "ref": "7f477310-f807-4bb4-8337-60363ff809bb",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3f59091a-2b9a-4f2d-a052-4ab6a0e75017"
        },
        "item": {
          "id": "91f74abf-2fee-4dd6-8fba-747de9ae3f64",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e33b680f-2a9c-4581-a623-9a046e5f3550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cce81a-af5b-4276-a150-a2862d9a25e9",
        "cursor": {
          "ref": "953f756b-bcc6-44ed-b085-d4a27e83bbb5",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cc6ca54c-cd51-4096-9bce-fa1fb194890b"
        },
        "item": {
          "id": "10cce81a-af5b-4276-a150-a2862d9a25e9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "05d3a0c9-340e-49f8-8789-9de2c2e84fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3253cb6-302c-4e36-a4ca-90bc81beedfc",
        "cursor": {
          "ref": "fe983c6f-aa76-42eb-96ff-77754c56a050",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3fe1cb9d-99ce-4188-912d-98e6527f376f"
        },
        "item": {
          "id": "e3253cb6-302c-4e36-a4ca-90bc81beedfc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8bd6af30-2c9f-4f20-b8d3-7d763980c461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af81a486-a121-41d7-9ab1-09debc116358",
        "cursor": {
          "ref": "368a8b2d-b89a-4b1f-b4dd-0588cc5bba64",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "90acb9b2-a53f-416d-af63-3ce7ae17670c"
        },
        "item": {
          "id": "af81a486-a121-41d7-9ab1-09debc116358",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "74ba6572-0589-4b2d-8cd3-6b95eb355cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deda4fc-c6a8-493e-a08c-5590bd90ff96",
        "cursor": {
          "ref": "a22ce758-35cd-4362-a9b7-17f17c332dcf",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3713da9c-d035-4357-a197-0026c7351575"
        },
        "item": {
          "id": "4deda4fc-c6a8-493e-a08c-5590bd90ff96",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "29c9b808-b3c1-44ca-9ecb-e11300e6dfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de84afca-452e-49f3-89a8-82a400774f60",
        "cursor": {
          "ref": "6e33a55e-2069-4c68-88c1-0bc48dbeda63",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "05194d1a-a0dc-4363-ac0b-673e7fd4bd88"
        },
        "item": {
          "id": "de84afca-452e-49f3-89a8-82a400774f60",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b3aefd65-8bce-4bdd-bb6f-a18a98747210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d0ee79-ec5d-4def-9689-8c447186c1e2",
        "cursor": {
          "ref": "f276a7fd-0254-4800-add3-01847c0e0421",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "35595b3f-8aca-4811-9467-87dbd5457e18"
        },
        "item": {
          "id": "e0d0ee79-ec5d-4def-9689-8c447186c1e2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "227c85ad-1829-4b88-9eb7-7a4a56421aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67abc60d-0f8c-4a7f-9fea-7cd250e0c7ad",
        "cursor": {
          "ref": "17927466-879f-4238-9ab4-23bf92073ebf",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1f76e2b1-c5ff-4578-9870-65220da25fd8"
        },
        "item": {
          "id": "67abc60d-0f8c-4a7f-9fea-7cd250e0c7ad",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "08796339-ac04-44ac-a636-853ab872d844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2e872b-b821-4d8d-b0b1-ce7a2cf7960d",
        "cursor": {
          "ref": "0c4d7211-67e8-453e-8be2-7497f7946a88",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d6d476b1-4009-4d94-95c3-d3316df67e94"
        },
        "item": {
          "id": "3c2e872b-b821-4d8d-b0b1-ce7a2cf7960d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "039693b4-01fd-410c-b9ac-57ab4a701e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01470d0f-71db-474e-bd0a-09829631321c",
        "cursor": {
          "ref": "e5b4c01a-7299-4e81-ad17-39b853656348",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "72fce29a-ba7c-4bea-9e2e-fa921f2bc9aa"
        },
        "item": {
          "id": "01470d0f-71db-474e-bd0a-09829631321c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f674f70a-604b-4631-9694-f020b5cc0568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaed2bcc-75f0-4ea2-a3c7-69701d0fb5bb",
        "cursor": {
          "ref": "9241e4fb-5fdc-41a2-8ebc-431f71077e68",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bb4ea30e-83b8-409f-8d1b-f7c9e90e4e16"
        },
        "item": {
          "id": "aaed2bcc-75f0-4ea2-a3c7-69701d0fb5bb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "776c918f-5603-47f4-aab6-6bd1fd9d398e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95271895-ac04-4bef-b2ff-66757b3a1453",
        "cursor": {
          "ref": "5382902d-b3ad-4f5c-ba31-dbafe6ebe60e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7827a882-0612-4262-85fb-40dd4715acfa"
        },
        "item": {
          "id": "95271895-ac04-4bef-b2ff-66757b3a1453",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "444bc282-bac5-482d-a4c8-0db1dcac4d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31f82ec-0831-4934-93b3-5c968f3f0154",
        "cursor": {
          "ref": "abc35068-6681-4c24-b8a9-95c746453aa0",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7ed93ad4-6122-47d4-a712-5da0935d8b13"
        },
        "item": {
          "id": "c31f82ec-0831-4934-93b3-5c968f3f0154",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "46239ee6-3e85-4f57-8b05-f994e3b1a9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d2b309-9678-45ad-b0b1-510c9177dc43",
        "cursor": {
          "ref": "9d2b4915-c47c-4307-b871-6578303f1afd",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "058b8387-4600-44b6-a77d-1eba6d6229bc"
        },
        "item": {
          "id": "77d2b309-9678-45ad-b0b1-510c9177dc43",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6d0232a8-c22f-4472-8e7f-3bee9463aed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9487b0-b306-412f-ab16-1cff3fdbc889",
        "cursor": {
          "ref": "0964509c-2210-45af-bd7a-8d447bd862a6",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ea5c2ae2-e8ec-497f-a3fb-ef18d8c5e9cf"
        },
        "item": {
          "id": "af9487b0-b306-412f-ab16-1cff3fdbc889",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "865984b2-3b71-4810-a045-234891757454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f61566-3ba8-4bc3-add7-5d3622c64ce1",
        "cursor": {
          "ref": "915c8534-b4b4-4e70-8824-772b66d759ed",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6944a678-b1af-406e-922e-c005ef5df637"
        },
        "item": {
          "id": "67f61566-3ba8-4bc3-add7-5d3622c64ce1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c3ba5e6d-eb62-40c4-aa32-2be5c73028da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f70f5b8-671a-4f60-9070-7b800e086c84",
        "cursor": {
          "ref": "04141ada-206d-4f53-bcdd-3a1abf4ba710",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9fe87002-6220-4121-9240-3a74fabc2e73"
        },
        "item": {
          "id": "6f70f5b8-671a-4f60-9070-7b800e086c84",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b7bb4bbc-a8cb-4eee-8c52-198e1074943d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c599da97-78d6-4bfe-9c1a-9d6622aeb4c3",
        "cursor": {
          "ref": "896350b4-d17b-4dc1-acea-f7ae87be683d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c8ada1ab-6e12-493a-82dd-8ff04e5b6dc9"
        },
        "item": {
          "id": "c599da97-78d6-4bfe-9c1a-9d6622aeb4c3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1ad7c1ae-2f52-4650-b0cd-230c272863b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9a7d31-bc9c-4059-a20f-d0d5ddb906de",
        "cursor": {
          "ref": "77b485ed-18ea-4ca8-b83e-29b1fd18095b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e336021c-7c14-4569-bc42-590be8a667f8"
        },
        "item": {
          "id": "1d9a7d31-bc9c-4059-a20f-d0d5ddb906de",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0966df29-9651-4438-939d-a4556ceb07e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2481ada-86b4-4ece-a8fe-98eee8ec19f3",
        "cursor": {
          "ref": "be7c4f99-99d3-49fb-be77-f1d6c98bcc1f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "545de9bc-72a4-4d9f-96e5-684e78f81a0e"
        },
        "item": {
          "id": "a2481ada-86b4-4ece-a8fe-98eee8ec19f3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5e3810e3-df07-4dc2-aed6-f664de75096a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ce1849-e08a-4f2a-a4ae-373e27477709",
        "cursor": {
          "ref": "20108ade-0364-42b7-832a-c45abd2728b8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "faf2c704-0e0c-4732-9f06-bc6b622559e2"
        },
        "item": {
          "id": "d0ce1849-e08a-4f2a-a4ae-373e27477709",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bd95e217-67f8-4968-8324-57d2e79e41ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03677973-cdb7-49f7-8aea-f56a78c76c10",
        "cursor": {
          "ref": "8dc20ddc-4f24-4feb-b909-e08d545e8d0f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "88211b42-4731-4610-89ce-c9a3b03e4841"
        },
        "item": {
          "id": "03677973-cdb7-49f7-8aea-f56a78c76c10",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0d707799-21ca-4ac7-88ce-bfb22c59b532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3e4473-2ae0-4a28-a7cb-fb068502912b",
        "cursor": {
          "ref": "7618f383-68cc-4fe9-8558-58499a0e2b75",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ea5627d6-a226-405f-81a1-417ed38d356a"
        },
        "item": {
          "id": "9c3e4473-2ae0-4a28-a7cb-fb068502912b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "68e21086-0037-402b-8398-77b8579ac371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22e7846-3b72-403f-a707-f533139d54fe",
        "cursor": {
          "ref": "6677b9c0-fab4-4453-b5d3-3346595b8f80",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4e90dbc3-0e27-48e1-a5df-918f189cc1e3"
        },
        "item": {
          "id": "d22e7846-3b72-403f-a707-f533139d54fe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "945623c6-c85a-4396-bb41-7678ef5b9ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c3bb57-cc32-4fda-b815-a80822a0b0e0",
        "cursor": {
          "ref": "319dee5f-11e6-4052-88a0-89d61c5010b1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d404b66c-7600-40fb-8b71-9381df9a02cb"
        },
        "item": {
          "id": "10c3bb57-cc32-4fda-b815-a80822a0b0e0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cc7ee109-b45f-46af-94a4-01a72ddb3e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dff7cfc-bfc8-4f64-805f-4f31d3a9a502",
        "cursor": {
          "ref": "3695fecc-2cb6-40e2-bd43-cb11219f5676",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "57c69619-ea2f-43a2-8b6a-81b13d5f54c5"
        },
        "item": {
          "id": "4dff7cfc-bfc8-4f64-805f-4f31d3a9a502",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ea084d49-2092-4df5-a936-9d62d7a51197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53dd372-85d6-4869-86b8-07cdc7d1ed37",
        "cursor": {
          "ref": "06191482-e582-4aee-b96f-694489dbf7c0",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9264b6d8-1392-4210-9f6d-aa9a5e014cc8"
        },
        "item": {
          "id": "a53dd372-85d6-4869-86b8-07cdc7d1ed37",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "65b99a78-e997-41ee-a7ce-02cf88e5ced8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324dfc9d-96e4-4fae-85c7-eb890e170a6c",
        "cursor": {
          "ref": "5b40b68b-0acf-4b1c-8276-b1ca44b68ba6",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f9cd989f-3a74-410a-97b2-356f6f4be67f"
        },
        "item": {
          "id": "324dfc9d-96e4-4fae-85c7-eb890e170a6c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ac7fdf73-d364-41d1-b3a8-02a08af22669",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ed3c49-ed5d-48a2-b369-be6e1a0728aa",
        "cursor": {
          "ref": "89e38657-aaf7-4c31-8fe1-def70a6e0959",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1a17f496-6e60-4ff0-a064-a2da51d658a7"
        },
        "item": {
          "id": "b2ed3c49-ed5d-48a2-b369-be6e1a0728aa",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ca0b2645-0273-4c7d-8efb-320fe654e8fe",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96aa2a9-5f26-4a48-a4a0-cfc6f226d163",
        "cursor": {
          "ref": "a504954a-74b9-4bb8-bfda-38db4d68a2f7",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9f9ced2a-d1eb-4d5b-abb8-0cd2e96d4486"
        },
        "item": {
          "id": "d96aa2a9-5f26-4a48-a4a0-cfc6f226d163",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "35712900-52be-4271-98dd-aa3c940613ad",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7d7ef6-ebab-49f8-b081-8d1e2fa9328e",
        "cursor": {
          "ref": "ae608e65-3456-4edc-b017-7f896f8830ef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "47852f66-2e3a-4f89-9138-6105a61f740d"
        },
        "item": {
          "id": "9c7d7ef6-ebab-49f8-b081-8d1e2fa9328e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7cabe140-e7f1-4871-a50f-b40238d1da93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7d7ef6-ebab-49f8-b081-8d1e2fa9328e",
        "cursor": {
          "ref": "ae608e65-3456-4edc-b017-7f896f8830ef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "47852f66-2e3a-4f89-9138-6105a61f740d"
        },
        "item": {
          "id": "9c7d7ef6-ebab-49f8-b081-8d1e2fa9328e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7cabe140-e7f1-4871-a50f-b40238d1da93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f1ef2f-d105-4174-aadf-c68188ea6443",
        "cursor": {
          "ref": "3532af59-2a3a-4531-9a3f-77e17e76973d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "765a6f09-88b3-4b89-ace0-ff8a1a353469"
        },
        "item": {
          "id": "60f1ef2f-d105-4174-aadf-c68188ea6443",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1e96cdcf-ec33-4ec7-8d75-3334ba4808dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945adc28-6250-4555-875d-075ba6098226",
        "cursor": {
          "ref": "af744310-4ee6-4d7f-b3eb-a0ddb77e189f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "1e52503e-6908-499c-a200-08b62831ca29"
        },
        "item": {
          "id": "945adc28-6250-4555-875d-075ba6098226",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1b82b484-c413-4672-874c-3f9d86cd06ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}