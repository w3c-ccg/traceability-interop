{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "05d70721-a648-4128-92ea-55172d92d180",
        "name": "Clear Cache",
        "item": [
          {
            "id": "14bf7d81-a3d9-4b38-87e3-731dae9ee47c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7061f19-5296-4ee9-bad8-0cc3e9ad7516",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "de15b068-6a59-436e-8600-0b7209bde222"
                }
              }
            ]
          },
          {
            "id": "de2046c0-fde8-4b79-9578-ceb206080972",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6617343b-5b69-4a31-9a7b-62673e443391",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "378d836e-82bb-4cd0-b616-b52c23add9fb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8f3e630f-1dd4-4283-8f8e-dd0714877bc7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ad47067e-e788-4be8-bd28-a8286b9d3e87",
            "name": "Positive Testing",
            "item": [
              {
                "id": "129e22f6-dcb0-4dfd-ad43-646dc9761974",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10fe99a3-0c23-4aa9-b3e5-b492a1c1444b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6f4af62-77ad-4888-a5c4-7520a16cf5ee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d0af8bd-da8a-42eb-b9af-c99ec8e0608d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c39aa482-9e61-482b-b9f2-ce3d613de23b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dc47ab3c-a61f-4fef-b984-2800bb8531d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18dd4afe-dc8f-4932-a079-12489b512660"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6413347e-1713-4686-b224-a6b92424ba66",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bac9329b-873c-42db-bcd6-41cbe7dcd119"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c68f61bc-16ff-4100-b6c3-5f63864dfba9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11d9973d-9849-4b01-a577-2561d24b7e74"
            }
          }
        ]
      },
      {
        "id": "a3381351-7769-4a8b-a14b-c675c351961b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7a11b7a8-c56b-449a-b7b7-629f7e736f55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e20fee11-92b7-4ce0-92c5-83e2d59ed9db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d576281-fe47-4c3c-90d0-00d4ffc0bf05",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0397c21f-f0f1-44f9-a36a-b25a9485fa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8994cefe-25c0-414f-9866-f517b043f6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3062a6-8d41-4971-8a48-c48b9e8ad2c8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98bbe48-4cf1-4da9-9f38-dd9a9274d98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56ecac32-f9bf-443c-bfee-ae9ce7284374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c00d720-fa0d-4839-9a73-469f5e55ff3d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a048917c-c932-4e24-8f94-f3cded051381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd0273bb-4ce4-45e5-9f22-b3ca21b94587"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35fbc14c-ed7e-4914-bad8-e59371a6a47d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb3a0095-574e-4811-bd53-6974b1ba8d54",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d460ae4-7357-40df-9dcb-0db752fd948b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b31a2915-ff70-40ea-ac1d-954aa108e095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a63600e-e98f-47e0-a0b4-9080bcd4ecc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70f0d1d-cebf-41af-b612-443447aa7bc2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "15430015-2a76-47f0-86aa-aabe02144121",
            "name": "Positive Testing",
            "item": [
              {
                "id": "316dd325-5f33-4338-922a-1b13d0c3d723",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "715027c5-94ac-430c-bea1-ed7030bf397e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a7ab8804-af2b-4e0e-94f8-40013f912171"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b114364-d629-45dc-aad0-62bd913329e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5088f0a9-ef74-45df-8273-938aca8fd6a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a00836a-c774-4849-8757-f89529ae3b6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd466c75-462e-4cad-b57c-3889acdcf874"
            }
          }
        ]
      },
      {
        "id": "68e798ba-e54d-4948-8677-1dcdb0e2ef5c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d1a544d6-4d36-4e24-9dfe-66c5e0f3f2c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d78f572-faa0-4cd3-a46f-6ab0a91ee91a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ae137cce-89cf-4ad0-871c-a876ffe252ab",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaf91ad-a99b-48f0-a5e6-5c31fa711ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452e9cbc-abbe-4807-9e1a-1b8193898313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf14069d-e69c-4ccc-b921-07acbad4a1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a636ef15-a1b3-4d21-9bf5-c65c39ef477a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d30e454-31b6-4a7b-b56d-824587158bfe",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f25265-d54b-4f44-8677-79882a6d8f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d989a7-ee64-4bf3-89e2-4507d095ab2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a4f525-fa8d-457c-a8b7-188b623a92d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94685cfa-da17-4ac6-b2d5-9679c96abd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf074a6e-2ba1-406d-afa4-3b1e04db3aa5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c343e6-639c-4724-9ea7-9bfe52985575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab4085d-37bb-4e5a-a3a5-f1b99bd6a063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64675ff4-cd2a-43df-9d92-fc10229d8925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55bbb1b8-3414-449b-9ff2-3740569cab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d56fc7e-2e11-4d2a-a6cd-5ef843dfa1c8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af45f17-f18f-49d2-8301-1aef6fe284f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5af348b-6a67-45ff-8956-8a4d7c7ffe8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3eca76-a7a4-47b1-9713-3b70613bf46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e78a25c8-f68e-49dd-80b3-f8553d54a223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74c282b-fd7f-4624-a805-c72a09808cee",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eab91cb-121c-4777-9530-d64537721d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96d7752-ca82-4299-bb05-258bd7009be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac73147-a5a2-4424-8e53-acb87cfdae3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deceb286-a73e-43f5-a175-83219fa56a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05fd374-c86c-4f20-b78e-da3e6a8e2b09",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7684c5-6a19-48a3-b265-32426d696821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b1d06e-a12d-4c32-ac1f-e245d5730995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c7312e-ed59-466c-b995-add0c35095f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abd64dc5-0345-454d-a0e9-8939539b3c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0361bed-59f9-482d-9b75-5bec91a56b1d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a31c47-e7f7-4e5c-8259-16414f110c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3637a93-1c17-4a36-9296-8976b253fac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbd76b6-3d85-4d76-bdb0-03abfedd187b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2f99e6d-8a24-4ef7-a7b8-4e681740777f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1c9f0b-e549-4a9a-a7de-29a66bfc8893",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d3925a-6b4e-4e04-ab70-4e1d51e3e9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70450846-1274-4e81-b17f-f598243f0f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90f54d0-c0f4-49d9-8d37-94e003d4bac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c84d42e2-5a91-4d57-a14a-10f5371587aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c740498-9894-4473-842c-525ae4c07ebc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05895ba7-1742-48c7-b2b0-68616e3fe6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae0ad46-37b9-47a7-affe-4aec087f0d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972ec1a3-c5b7-43cb-9428-b33fd2d99493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "905227a6-b796-4566-acb4-c36a8facbaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb64343-ee8d-465f-a2ea-54ba6ec53928",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d009d3ff-b3be-4502-9604-692d9dcd4b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc876b2e-4304-4c33-ab01-5e626c578c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40f7965-f5bd-45b3-9301-85884ceadbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4e13131-fa0d-4db9-aec3-6534a6ce64c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388c2de2-c5c7-490e-adf0-9bf3d1ebd947",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97e5e87-fa0f-4024-98db-967e1fc8b1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51660681-4a28-4fa5-b841-2a5052c130c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c3fb45-5782-4f7a-bbcf-23320235cdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20558d11-a311-4ac4-8d0f-f927cd2b496b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd59abf-bf25-4d7a-a30c-1830d876ade1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab1d9db-345f-4472-b0dc-f02a1eceacaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e6a425-c54b-4024-a392-a4cce9026448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda28629-7a00-467a-aed4-3951d8a83a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45cf3d6d-7878-4e96-b2a3-d3a42f789c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638a8441-a409-4dc0-8904-8f4767b0f39c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1af6a9-bb7b-4888-9dbd-130bae9eab94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76b5f16-75aa-4b1f-810e-82a224e22694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ae372c-ffc5-4174-98ce-197fa0993277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7049a324-58d8-454d-b409-55fa5cfff5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4284e14f-d066-4e35-8c86-5a5297d9f439",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b597aea-511c-498c-b60c-228c6f4e66d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a495f1d-7f5f-4893-ae3e-c2a121eaff54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cace718d-f162-4686-ac1d-ce6cc952fd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd8854ab-7ae7-4383-b1aa-3848be6ceb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a6ecc8-eeb0-4dbf-8d17-02c623bda918",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d0287f-04ab-4aca-8243-128da5a06af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919e571b-65fa-4d8e-8dd3-0b837cd4a356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762182fe-bc78-4df2-a5ba-b3401548adf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41175c2a-5d0e-4a89-ab76-f3d484edc004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a4076e-723b-4bfe-af09-d33875fa90ae",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bff325-c768-4e4f-9777-051071edf455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4341eb8e-a854-4f15-b223-e5ec610761d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af510072-d0f8-45bd-a1fa-3ccf599b8fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc21a984-9e8b-4bbf-bfc1-d7e167221e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a3d967-95e6-40fb-b411-2f0cf8c9d078",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303f833e-f852-4fa5-a100-bb1a9c47ac52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74df814e-9649-406f-86d1-8dd5012501f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22930d30-bcf8-4fd8-9e38-da25a03ae785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aeec03e-942b-4b81-a486-fba4ae51f83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef868e4-e964-48e8-961d-863483698496",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a5f6df-fce2-432c-8e32-24d223a4ecc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4489d5-8f08-40dd-a7dd-9c539020ead3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135dfa1b-806e-491f-b281-bb34383fd301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "92140320-acea-4333-8fbe-aafc78a44b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f1bfd6-4b51-49a6-8acc-e6444be5be8c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e9cd2c-f7bf-4c56-803d-bceb34013c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9512c06-be78-478a-9d51-559a9d8070d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5075f87d-bded-4db4-b5be-cfd0084e8ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a180b899-8cea-4506-af7a-0d06270ded2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f048034d-5caa-4186-afcb-95c06ea4c0d0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f3cbac-882b-4975-9222-fdd8652c32a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc92634-999e-4e7d-a112-36ff5866c7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2b0a36-d70d-4251-a064-023095681b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99f87f30-5c4a-4cee-9596-89cc8068fb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d45800-ec38-433a-98a8-e788b9b9ff3e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9478a5-7e19-4c5a-83d7-861aa8a4e1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd522eb-bb40-441e-9d4c-373ec4d44cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7726c6-bdbb-4f94-ae98-4fa0a3aa5250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "506b4bd0-a107-4362-aceb-c5f504cb1284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509aeb2f-4855-416f-8799-23fac18d01d2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c877960f-be34-49a4-98b8-296d3a618ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2208c09a-36bb-4344-9f61-2d0ccd4a378b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da458710-325d-4119-bf86-b311a6aeaf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "728ca0b4-9aa8-41da-aaf2-dd94b4bada60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88ed111-0905-42de-9682-26ac08fa8eab",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00115aea-1994-4622-999d-7771d5cbf104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9c7aec-701c-48c6-a9e3-70e57e42938e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cecccd-b53c-40e6-a969-2ac83600df56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cfb00f9-c67c-4d64-aa0c-e28eb3dafaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c7cd48-f510-49f0-b41c-6c7962d96d4e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a214d05-519c-497d-b7dc-3342782f03a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f7383c-a2c1-46e1-9907-1da243e70718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbc40cb-e630-4e6f-acff-1a4c27d0515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2978db9-e56c-4b85-9c2e-f70a28cc9ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f8b35b-c35e-4d2d-92a5-6a6f22b3ea2c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a27a123-9ef7-44b6-b445-906696429b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c974b77-2acc-4353-9a1d-3781443de685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0320f2-ef18-4fac-ae2f-c5d982d8020a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "508cc428-7e3d-4cf7-a673-6d38170ec8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9322dbb5-4f21-4b83-bf57-0f5ae5832bb6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a908278-e1b2-4a11-a71f-7348fd32abe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9d9f12-8bf5-451e-9181-fec8d7e84267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b240c874-7b45-478c-a48d-f0560d4cd899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec43d1c-cd07-4423-bfb5-2ce9ad06a345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9fe7b6-9540-4c7f-b661-424d55f78602",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875ad5d2-0fde-4776-8c5f-bbf6b5e8bc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59be39a-92da-471b-83b4-4b6d79e88f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8730dd-066e-4fd5-9304-36cf143db9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43b25a46-7c9d-43e0-919f-c761b1a8417a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33aa09ff-9b9b-45b9-9f37-45c354dc6836",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8c38e5-73ac-4f06-b2aa-f93f1ea98a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a84093-c055-4f23-9ead-dd89b08b5687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9119908b-31eb-486a-a430-d95e41bb4950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09c35025-0126-4a9a-b1fe-d450f027ffa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16348a35-ddd4-49cf-855a-64e891286586",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06b34ef-4f52-442f-836e-4f0fb60bdb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb4c80c-f3d0-457d-844f-f037817a993c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2549255f-3d50-491a-9ce4-994553e39670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e26d6fc7-6e71-4783-a153-d38c3d7e9917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1d8629-424b-48b2-a70c-f71710fc9b95",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e54ca7-9a8a-4e87-b116-5d365996afe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9db17a5-ad7e-44ba-9434-8b850b134d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfe1b6d-de3c-4cea-b36e-18d300a4e470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0a17d6-f81c-4ecf-8c92-75753e3ab057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6769b9b0-a646-4e04-a769-e08b32d7a991",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20be37d6-3a58-48a9-bb47-f848d867e27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b932e73-21dd-4904-81d4-e45311b5c180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699afdb1-8587-4b72-9806-40aabadc7c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a55f31d-0491-4e3e-8d43-7bdbe9b8bccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614c485e-a38c-4879-8485-6b69a7198468",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c7107d-459a-46ea-8928-8dc53634c55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7aaf2fa-f4d2-42ef-8824-995b03a417c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af819989-bbcd-4117-bb2c-a4c7de3c8b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46c3a51e-5b7f-459f-9b2c-55a78fe68d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec7b69a-44ea-47cf-80d0-430d99c631e5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43b35f5-0681-424e-8d74-4e53d0323c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fe08c8-ceef-4f24-ab18-3841fddefa80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0085b752-9b82-4fd3-979f-88248a887ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33495358-8e11-4e14-a16c-c64c9c61eb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ddfaf6-2da1-4395-803e-95a0c1ab054a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f85399-7b9b-47de-acf4-8cabfbbd6ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c127b1c5-cfd0-4fac-a325-9472b67873f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1671c9-618c-4b70-8dcc-4c133901ece3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0beeb5a0-3e21-4fec-afc4-883449022f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450d059a-3b8f-4514-aef9-d2f71a3f3855",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc6e366-7d85-45d9-b0b5-23f9ea06fa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728083a3-8c65-47f4-9601-9a419e661cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ef17a8-d108-43a1-984c-16b5a1728e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "690a7929-9e6d-40d5-b504-1dc0cbc3a35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83e70b4-0668-43b6-a642-b49114a7c726",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec37a7f9-b98d-436a-a010-d0c84e83a4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d30637e-e0ed-43db-b6e9-8b044d705a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8093401-72b8-401b-9a36-5fbb0734eae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "776d3620-c2a0-4073-855c-5d0905cb688c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47812951-102f-49b3-97fa-791d1681b083",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb5a981-0933-4e6e-ae1c-a783a1966107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6374f36a-dccc-481f-85a1-61832141211a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a20a4ed-8657-476e-bc57-4256a5132826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68a149d6-230f-48dd-8a32-777aa168d8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdb56ec-1ac2-4f50-9792-79eb8a9dff92",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9036e9-9047-49a5-b7ee-6bb69732d422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3321865-1f7c-4740-a59f-ae01f5e03182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b60321-4319-4edf-b0cc-e798edb3a652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0fbbe6-e927-4a39-a75c-93227f619cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad76b6d7-d5cd-41cf-96cf-a5eaaa0453fb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95b4440-9cb9-472d-9637-b5ccb7d68aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1142f258-09d7-4d32-b999-a31032abdc36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a1e5b9-b0db-452a-8418-4a3eff198732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "59366b82-d667-4809-9c48-2d36f3497af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c41a96-bfd7-4a8c-85bf-46efbf687bbd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e11319d-a0f4-48ec-9a73-175ec46fee7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b05e47-f41e-4b35-b66f-ffa8d8676ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa40fa8c-efb9-4feb-9b0f-5e2a108ab2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5a7bd9-bc68-43f5-9df0-5631b7638337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40285d85-5977-43b8-a722-3bbae1f844cf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28354f92-0705-4e97-98aa-d2bb735ce4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652513aa-1a28-4746-b24f-b91c751d3ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44bf3b3-01d4-4c66-af46-a82424fe26f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be3997eb-ba75-4947-8885-d93ce5916233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169530ee-2bfe-4812-98bc-a5db2303b76b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0551cc2f-bb74-4ed7-b1b7-0fa19f330b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4e7b0e-3007-4c02-bec9-66a8e2264c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26895c36-3757-41ce-a552-18f16f000936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa6c698-f727-4f11-a71f-b5e9f9e0b7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c59159-806d-46c8-8c40-ad1f2dc9aed6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a02e22-2160-4da8-8c77-aa4368ff0a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c92b23-20d1-4bee-ab2b-2cebb56752f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9771b7e0-992b-4d7b-b878-26d8896dbdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4de2e556-e5ea-41ae-a0df-97f45453bdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12521e73-bbfb-4349-8866-c13c48605a9c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6d17d4-c74f-450d-b99b-6b52c50595c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed56315-29bf-4df5-b6b5-80a1f107997b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509ecb33-7e12-4e6d-beb7-07557b33f7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a02c4b7e-ee92-443f-a5c5-8279c61e8f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc09227-3ba5-4eea-9c57-eec2b4e001fa",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be21679d-8c9d-4a9b-8b07-52b05b358832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b30aa3-61b1-4671-b0af-00c4bf989406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b767d2-9313-40ba-8849-d4fd615171cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06e7bd21-3a80-4688-adfb-7251b8192a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046d42dc-b0e9-458e-ba3f-2270d7c8e9f6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35cf3d5-9dad-46e2-80a0-82a8f9f97a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0715893-2fd6-4989-853c-aa0ff80163b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd407858-cd94-40e0-a97b-ce0149089bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efdf77fd-5439-4646-b007-99bbe893858a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bd39ef-edef-42f3-b2c0-c9e83d3cb0e5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76f5d64-849f-4bf4-809d-cffd589329e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4e070e-5648-4c53-b7b6-01f2a1cf5665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b3c940-da75-4b3c-a1a5-59aca5910d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adfbf611-d2b7-46bd-9ec7-4f7bb62c4b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2b86d6-6140-42c6-93ae-fd4cf926bb7b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1593958a-1f83-4d7d-a47c-c60ed93d08b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71975a8-5561-4b0e-9360-f19c0c7c1cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c11d24-2ac0-4323-8eea-1c92c5dcdb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fcd4dc1-cff4-470b-b47f-373f0e2d1493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f7fb8f-95b6-4add-8c99-ed45a275811d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba97566-dc3e-4327-bc20-87fb58c91211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010968cd-cfe3-4486-9ba5-8b53f52a0cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69b355b-1aa1-4c34-8f9f-f0175f3f7a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c57e2d3-3d48-4003-9032-acd72ca6eeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379088f5-6284-4ed3-84ad-198d57313b56",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31674c6b-b3ff-4cd8-9473-c6f2e3e7d85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df177f80-a471-419b-889e-3d4e0b991f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c49a33-62bb-43fe-8a7c-2a85fdad3bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb21e50-66db-413d-afed-0b847c8ccc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c4875d-4606-4b81-a49d-0af271df6481",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17d1406-356f-40bf-bf7b-082c4b4fcd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c048a5f6-1c84-4fe3-b3e3-5e96d8eab61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c441c2e-4eb5-4a47-bd25-09a1f1f7152d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f89938cf-f05e-4189-844c-68817ac7cf5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19ac1db-063c-4d54-82c8-254026de6641",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e3526e-25e4-4eed-8a22-473ccff4639e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7a0813-4430-4a9e-b0fb-878e56942046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b157d5f4-7b35-4beb-a2a3-bf1861f1a82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c07434-4737-4ed3-a92d-1f319ad8b00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658cc96c-0760-44ff-9aff-8d5d2b254161",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2e00f2-891d-4326-b78d-d0584c03a978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204dbbe0-d071-4ec6-98f2-79fbac8a2546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107fea21-9ac5-42d5-bf39-fc17bc557337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de0f8d04-26f9-4a16-8d29-415716f3c98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cae6242-695e-475e-aab9-6bd9d613710f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dfa9ee-ee9f-4c41-9ae8-4f90aa7d1638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61883d59-2e4c-4601-8cd1-1a27b14e9e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85d761e-0788-4074-9a47-0cec981bbd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4770b65-b1ed-4e81-9056-ca7719b562bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9601562-6a30-4982-83cb-9dfc69020d5a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e5fca0-537d-443f-85ad-a9db819117c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9072c47a-18d2-49e4-9d24-b13c020f0482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3c9e24-441a-4bfd-b9ca-a2ece75d9b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "910f0d88-e18d-40f4-b430-2c5e7dded989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01281f7-3190-491f-96f3-ae4908199b0f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d9f660-5964-4d02-854f-25478625bca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ae6cc3-65d2-433c-9fcf-59532fee3eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bb3055-6759-4181-bdf5-41bfaa502b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a42f946b-fecb-47cb-b5b4-e34e44df92ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690df028-a60f-4b0e-92b8-8c57efee2c49",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13832f6-8daa-44f0-a522-110f230a2e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a96309-d683-4104-be7f-7e1ea7ec5644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8014c305-cd42-41ed-a3ce-9bc69c29c5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0c065d-de02-4690-9ed1-503b9741f01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f45dcb-dbdf-4523-8f85-5ba2216193bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450fc628-2837-4b0c-9b48-907da576e5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c2deb7-18b5-408c-8ee2-278bd35d834a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143191ab-4557-40ac-bed3-4706079d0556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99c22270-ffac-402c-ad34-7d36af134279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2eae28e-2ff3-456c-ad87-ff281260ef86",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ada41a-9b94-4922-8b48-8498b2853ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afaffc58-6620-4154-b059-025a5894e0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5feb6b4-8a7b-4fe8-b888-2d91158fd9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "03c379d5-915f-4631-ae6e-80525b1105d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a00815c-abf3-4648-833c-a1574834cab6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f851fed-2f59-41ba-a91a-cb2615e2e279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0d5a08-08e4-4042-9509-106bf7898912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0ea10b-1800-45bc-8bd5-1b84adb95cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcc4e83-dcf4-4cf2-836a-55fa35b593cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1577e32-5822-4ae9-a4e7-da4ae313db91",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377900b2-3930-493e-b306-461c1bd70d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c87665-6530-4e78-a26a-527f11ace093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23de262-87aa-4624-aadf-dbc83643439b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b14e32e4-fe46-4a28-be8e-d089f430c01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe024d97-a9ff-4993-a64c-e6ae2a8875e5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364a3eb3-b122-4966-b2b7-4c3536eedc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2af362-7bb6-4eb4-a0bd-064cca6e2249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4acae7-070a-45c8-a234-4f448ea64429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1952d8-49e0-49e8-95a1-893df399d78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eefafc-800c-49d3-959b-5558814c1f8a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f890a0-1370-41a6-9f7d-b9056c175872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf45c0b7-ece8-4ee8-95bc-eb10ecefea3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c997052-8086-421e-9901-7d81b791704c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "799d6987-bca8-4d7b-9060-13c41b4c87c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30171d79-30d6-479f-924f-c98fa7108078",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7b3824-39f4-4738-9ef8-0aa6cb3365dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654583c2-467d-4b3d-95c5-79d797451e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f067db-e98d-4358-8bcb-35c79aef4ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e095cf72-3da2-47af-b6f0-07d734da603d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4d9cd5-e290-45ea-91fb-623377fa9291",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53094d8-cf84-4cca-b13a-213f6f4632dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fbd4df-21fc-418d-8c3b-facc97e58830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d99dc8-db77-4869-b4df-d749dbf98fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f49736e2-5422-4339-87d1-f147f202b13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2257609-310a-4d8d-a127-526e229af779",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a1eb84-7c07-48cc-8923-c7c3e3a19b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36b81ac-6603-4073-a00b-90dc266b4070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fc64bf-7588-44d2-a875-ada5b3b4168e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4deab6e1-07bc-45bf-871e-ce767c30e99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20fcfa7-271d-4f4c-8baf-ad7bffdaf9bd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef3054a-cfd6-4150-bd6c-22a0e5dbdd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f825277-4984-49c6-a8a6-bb7fe9b53bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ad1018-face-44d8-95eb-61d31cc9c9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6181c430-42b3-48e2-bbdb-e9f35547f8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e97ecef-e9a9-4c5c-ae9e-49fb8467c4e8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6017916e-a2f1-4298-98cd-ea4afef3eb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8318847a-e530-455d-95d7-f87bea0ee86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98ea542-174a-4094-84a6-1a7aeb278389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f4c8f0-4e97-42ec-ae13-246f5188a7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0eff67-a408-4d12-800a-6bce9662d848",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d635ef-c6cd-49a7-8e3a-83556a1058ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f4bf70-b07d-48d1-b5c0-3342af76d21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385b56fc-0556-4847-a530-a0836decab6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "49e7c0fc-7858-42e4-baba-5d85b150ba72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cf7225-e0fe-460e-a38f-a8ab0d4ac099",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b4a001-3a7d-4a77-a1b1-c4a81f716a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636b7689-abb7-4b84-bb4c-c242e40d0b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b614e28-5a88-453d-9b01-6576dde597a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0dd5b8-07df-40f5-bb2d-8d5d4c76acf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000f95da-1ff9-4471-b086-5424889b0071",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ebba33-8c86-4b3c-bd76-82839f9abb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fccc25-aeca-40b4-8fb0-10631ea6b7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c48fcf-dc9f-4ca9-b861-d6422c0a74c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e77973-cf2d-4ebb-88be-cbdce5ac5c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b635024-1c97-470e-b289-38dbdc5d6ce5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab00a50a-4869-4b7f-a7ac-b257d791cdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a78d6d6-973a-471d-9f60-900405bf69e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726e5cab-6120-4e61-946b-ee0d413a26a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5acc08ec-0824-4059-8b58-a71d148d702e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2cca59-3375-4d75-959d-cb95ff790985",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfc57b3-2673-4159-a654-9ea0b98e4766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307ba632-e7ed-4cb7-990c-2e9764e70439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3958ee-db60-4dcb-8423-a702fd0851f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e99f2ff0-0cc4-4343-92d2-856c462a0d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9862c5-bbc1-4b59-ad5f-7e135b32aa98",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427a95ba-cdff-4534-87c6-e7d535033f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05505b4f-c3fd-4dd7-b50e-98551474404c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b96f926-7d72-45d5-b266-33d04679ba72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c52a033e-77be-4c49-95f9-2539c54d7752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f38733-86f4-4f2c-a91a-1aa3af3dba2a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1a7a05-d5ee-4a35-a369-33ea01fcab08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e59b26d-2726-4c23-ad64-118855843d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949d908e-b91b-477d-af76-bb2c3bc889ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a02fddc3-0c93-42dd-966b-fb8709960c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb47bd33-f986-4b43-a400-bd8d75e19d17",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae9d1ca-d6b5-496e-a026-08610f163ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cbe5fe-8170-4021-b5e3-74e8aad7cd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db383e6-254a-465b-aadd-ca6ebeac10fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdb0409-41c8-4659-9edc-6f1697683f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009cd40a-b583-40e4-a3bc-4ed8402a29cb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b57adb-2fba-473f-b899-915b25e36c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec6d5ae-c89c-4e10-a741-8b45a986eeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0d7bee-0434-402c-8bf2-7a2360992eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0f60d2-c429-4f72-a3ab-b14feb189976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f144a9-50de-47df-892b-08e61f8c26f4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd6d442-42a2-485d-ab48-59d2c8b16107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858a573f-8c11-4713-a771-147bfeeb16bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dca6497-3035-4ac6-a441-44d0f93dc2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c74681-2e47-46bb-bd6f-7ad03633a6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b744124-da20-4f12-8a45-ae5003706c60",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aa465e-f273-4de4-aa9e-9e2ac03380be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b70f123-2240-4210-a740-50cd10286725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ceaa74-1617-458c-874d-07317cfb996a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0234c2e2-85a0-480b-990c-bd162840187f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c6f6b5-ccf6-4b5a-afec-ed4eba054ddd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd8c0f9-ca1d-4ae6-b42c-44504375738b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a071d0a5-2bfe-46ad-8069-cbccc7bcb74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83191c22-0a22-4a76-a7d9-fc25224748c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04cc5641-5a34-4d73-b235-f4934501d5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d47ad6-1971-41df-b9e4-14d5b72d387a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33592449-1104-4b2a-bd29-24392257ddd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa67cc7-b105-46c0-bc73-23379d1b5b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7962cf-00ec-4133-911c-f209bae37e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d049b388-40d5-4b6d-9757-ce7267539e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e583e1d-5774-429d-be78-ada1e043ce1e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7bc447-a30c-4b79-a3e5-f1155fbe60c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11df2b96-7945-4a7c-bd54-dc160235e5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f483afe6-a61e-4768-b8d3-fce9b7e64194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a3d6757-8bfe-4f00-add6-c428a32fb98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2155f320-1c9d-40ea-97fd-34b3549cd64b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24909144-b608-45d0-96ff-705486405bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91aaadd-671d-4dfd-b563-e80b76d2a45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd07b1db-a44f-4d90-9694-8da5ef139c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c08cceff-8ccc-47b6-8c8d-80ff7912ea3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af292be-7ef7-4bce-9026-d1a61eb1b542",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0f5a9e-e94e-4475-b1c3-54ab1ac5d4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74499046-c027-4ae6-8fc8-0782a03d3de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d062f50-0987-4fca-8e2a-897be0d2ebe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cff83ca-4c48-42f9-a6a5-9429bae80b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbc58d7-f0f9-4b48-af63-58524015ba29",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89a4e21-821e-4356-b4a3-19be560cf051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67a6bc7-f8ca-4835-a5ce-8a42566b1f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba1ece1-e6ee-4bcd-900b-45019427a427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "968e7d14-db75-4f92-8568-193ecf06c3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec0ad15-e468-4e19-a0fe-9f245f5a2f8c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddcef11-0728-4f3d-8169-e380af4e24c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5985fd39-fb10-4021-9a7e-ef39e6817380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da241a8-3a8b-49d8-b0b4-741b6481fe85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78fcc176-da63-44ab-b640-ad05355e0efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf009fe-829b-4d73-b99b-d6233d370647",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b07c9f5-8338-45ba-be8c-8450c492842d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349e3de3-a159-4406-aa15-06580d76fd8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a04873-afe0-40ca-bfac-d2df8a9a4234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "86d4a002-21dc-48c7-9f6e-6ddaacc7fd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3757737b-5480-4b9b-b433-4c20fef30fa0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c200a6-f48a-49b3-8120-a8bb8084883e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448141c5-e7d6-4a52-b33d-ceab40b14c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf581e2-434d-4928-8215-c3c6d4fc0569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "483bf488-b24c-4b84-9934-5d601f0f57f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbac6cfb-32a2-4655-8c70-7412ff51fbf3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6231e532-5c01-4d1d-acb7-04211cd971a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411d0323-b22a-41df-aa79-230c33073896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e27f305-2682-40f1-a37c-9a3823f28a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "595ca060-a249-479e-ace1-b8e6a9ccc82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910993b0-4088-4b22-89f5-0b1ea03c9bb6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d596785-bcef-4ecd-9861-eff2f46a2657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbcf0a8-6d25-4f0b-b75e-15ec25e41c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f67062f-a9cf-4399-aab9-ae5733e07cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "56cab521-4e51-4680-a98e-5e59514135ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4f79ed-726e-4e96-a80f-87e741ba4a0e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43ae112-eff9-4db6-a1f3-809824557537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014335fc-4ba7-45c5-92ba-58cd00edd209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d94a2f-5d6a-435a-9a90-05a04bff9b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f809dfe-4ab0-44cc-ab76-80384d9142d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98839c32-0c21-45d2-872b-3e77c8df4487",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f351e39-c4ad-4757-82fa-57a3431ef9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "aa384107-cf94-43e9-bb8f-cd2f2bc41b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94550991-5200-458b-8d1a-9f21294a848c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9be87d0c-efe7-4e62-b65b-f8fa47a7441c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29d09e59-b10b-4dcd-8935-4d765743a2cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f57f00c-3047-4ed1-bb7c-2e26b5584d79",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3662bafe-04a4-4fdc-a61a-84630727bcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41987221-308e-4a84-863e-2d37c40883ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195fdc61-0881-44ed-a25c-75fa32c025d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad0f6f32-6bcc-462c-a5c5-9f7c09f46180"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9ae85ff-7ed3-417b-9907-ee7d42aa19d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "351d54b0-c398-4deb-ba78-2b0667597e27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c42a5c33-c238-4e11-b96e-b3b2c2cf2b87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27c5e20e-e8f3-4a98-a092-76f61a089115"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6340cf5-ea29-4cd8-8c1d-c16dee01880f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "653ec1f6-725c-4ed8-9784-f1ad88c97854"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b2c50206-a5be-4066-a0ca-09da202dea0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2821d199-2493-4ef6-93ba-1a6c801236cd"
                }
              }
            ]
          },
          {
            "id": "ae149270-f01e-422c-847e-02695b1dd4ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0ab144f0-8c95-48cd-abde-7a1636cb00fb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ff8613a8-8704-435a-8a3a-380f553cf996",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b822af92-d781-459c-b06b-ad90ec771788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "97e92ef0-3d5e-4624-be06-0e02596c7f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa3a9a5-4e56-4117-a06a-57fd8cc9d7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b1cacc-9bb6-4ced-8942-0c7cedc206fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c7fa1d37-539f-4e76-ab5b-62e671c43ccb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4978b918-fb54-4736-9e13-16d2b2b1a0bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52dd848a-5fa2-440c-ba06-07c005a9104d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2888dcb1-ebf2-489b-9ad3-f9f446758e2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3727f69f-6331-482b-905f-d5e7124c1a99"
                    }
                  }
                ]
              },
              {
                "id": "25a76a1b-16a3-4be4-b2ec-7535763cf0b7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31ba773a-5ad2-4dfa-99f5-31b7998694cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a93634e-df5d-47a8-87d7-6c7c647c1c7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27e36230-6452-4f9c-a5d3-af225c585627",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "926e8e8e-6260-4a05-9b38-79b0c427a40b"
                    }
                  }
                ]
              },
              {
                "id": "8acaabdb-71d0-4271-8821-8d6a29532f9b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94185be1-d166-4a3a-9588-5a2dc38d7dc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e3cf737-2163-4f06-8f3a-92c964f80148"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d84232e3-14f4-4615-b882-e5bb43d68c2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e2657285-3623-431f-8165-e7c69e3d879f"
                    }
                  }
                ]
              },
              {
                "id": "667e6757-c890-4d2f-b303-0c4de04687ae",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f26ba8c6-519b-4a55-b740-c225508c633a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "680de6c8-2089-4438-9036-ba60ad4d1141"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "698dee33-516f-48ba-808c-bc2bc2942cd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5fc472c1-6e76-41e6-8a72-0872e0f3a408"
                    }
                  }
                ]
              },
              {
                "id": "dfbcb32b-b786-4fae-92d7-24d2d9c14ab9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45a20bb7-0d0e-43e1-9385-e98d7b5ea1d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb78c13b-d8d8-4d81-a869-36929e4f7280"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d63411e-cf4b-44aa-b151-aa880472821c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "aeee2bce-cbb1-4e8b-a162-dfb32c2ea68a"
                    }
                  }
                ]
              },
              {
                "id": "c559c50d-5fa7-4dda-826b-960e388dbb8d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3a44054-2eee-432b-9237-5139781b4755",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ae0409a-dc6e-43ee-8809-f10bf12118b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "457afbc7-00c5-4a5c-9a08-2505378a3c94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "652a4713-de47-4ceb-8999-4e944657ff65"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "407e38fb-5897-47bf-b94c-6461f27cb2e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85c16a4f-1f23-4659-b151-0af5a69e0e5c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9bfa0296-63f1-4461-bad2-6114f7d8a276",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0eb42099-1706-4990-9e5e-8114659ab6a3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b56a88a3-4755-4594-a798-4f980c91a383",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a63605f8-dcaf-440a-b075-f5928b00f50c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b4e2011-07ce-42be-8aaf-b3b306a7c0d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7c6a233-93fd-4966-9a36-0e000680e23e"
            }
          }
        ]
      },
      {
        "id": "eb3c1681-0fd7-404e-8024-196aed5beba3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6630d380-c86e-459e-9bc0-adcdbcfc1c68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c37fe6f4-5c01-45c3-84da-4d2c972ada97",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e349c6a2-d669-40f6-b13d-8f66d0fb8241",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d38f6d1-92db-4f08-9828-8e98ac647b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccf9d99-ff46-4de6-8994-fda07b871968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a93a8f0-f053-4cf9-a166-4720386f1b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aed9cd2-44a3-4771-b179-c9b08133b802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b1e438-eff1-4470-ae7e-23461947f272",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d5cb8-2282-48c3-a39b-6e6df0cbeb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c242ae-575e-4a86-89fc-7c5535812adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee95e2db-3ed0-4b0c-8115-4af285bec9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1595f87d-06e0-4e90-b94e-ab2244a46950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b60f56d-e236-464e-b54a-bd2ea51c03e1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b717c0aa-5f03-4e89-839b-f574f85658ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb146e6-b202-412b-8c81-5305de29b98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e419da3-73fd-4af2-8f5b-257706f81d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86fb860-75e4-48a0-ad6f-dab4251be070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3105fff-7f1b-4341-bdf1-7b46276987bb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827f1b2c-fed8-4265-9bf2-a1310d416445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f04d170-2141-46b0-b3b9-75c19c31a086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0ea4a1-bc6f-4373-af56-44e1b71db321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02f54abb-4521-4f22-bd6e-6fe2197c398a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e891305b-4d23-4d25-97e2-ff97ac72da01",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6084cc-c539-4884-b2d6-5f05a6cc1666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b7f660-fa3e-4dd6-b1c8-2da14edc9f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de0cce9-07c1-4c87-8224-484b42c7eda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c734ece-92e6-4714-8dc3-985474e3068c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0472056-a1de-4b64-977c-16944fa7b73e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c2c818-f4f9-4054-be1b-7afbd098b2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f847573-afa0-4285-81bf-774b1af3fb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac78f864-89f9-4966-8935-10f14357a18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9b7dbb-b25d-437a-8dac-d900a219280e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b805f6-59ad-4dfa-8146-aaa5bb551ad9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504697e0-11c5-4098-baa7-8279e4dc1a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458eab3c-f7eb-42df-96ea-2c1194baed9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e6428f-7836-4ba0-b81f-4acb62ab6541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "51463e69-bafe-4cfd-95e9-9e5f18c3a563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef4722b-dca6-4dd8-a386-28fcf1828a10",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8b1b6e-73bb-4d33-80f1-4c0cb6e55dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7f61fc-d71b-44b1-9b0a-977201c5d826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ea3f27-31b3-48f9-bab8-8eaec1a9d00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "069cde36-f176-4de3-8b80-fc6f6e036053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddd80f8-d22c-4802-85e6-97bee6d35a26",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb46337-4f07-4f9c-b880-23aaac296d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f29685-c058-422e-9b25-6ab579cb73fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41b4687-e4df-4199-a67b-83c02340ad1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d770f8-3c42-4540-8fbe-744a0352a137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ee4b96-f70e-46fe-929b-b65b2a06c7e1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbefb463-096b-42f3-a8cc-afc3473f8d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110d8a6f-fd09-4169-8969-424ad7367cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061d60ce-deff-475f-b5ed-6c8458730c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20b3650d-d22a-41ca-9a67-70aeccf744ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af657469-c298-43be-8333-f81838483625",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172a7aa0-c173-4430-a191-15d9a9507e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc824287-68d6-40fa-be2d-af8c6cbd5581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f54329-f0de-422f-9205-e61d099d5bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ce9aa4-b74a-4180-bf3a-d76fecd73982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0335e4-07e2-4698-abf7-ea3cbd7848a4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e31513b-b53a-4d91-82fd-8d43febb702e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e4d1f2-076e-4d6e-96d7-8ce2844db4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adeb0356-e9dd-444b-a98c-ce33f7e115a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1b1189-989b-4a39-a071-642c6722b28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e26a498-3035-40b4-905f-fa45e431c33e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851843ab-2b16-40d5-827d-af2c33fb391a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adced43e-2ea6-4c7f-8be0-96c654484a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d425f6a4-2a9b-4c33-a71b-20b15e73b4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ecfdc8-ec43-4bd8-95b9-7bafef62fa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c150b602-cf55-4e83-840c-ef5f573ce43f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31baa7af-33b2-46b1-b645-99fb58c15643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f2335c-2024-4c37-9c6a-7c8a2a15909d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2cde9f-64d0-4871-a6ca-e0a9da4415de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9833e97d-ab86-429a-aadf-a0984eb9b6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5cefd7-07b1-41d4-9cb9-9fb992616831",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813bb5c6-e532-4a84-aef0-7c151aa36625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e4db91-1b11-42a9-a570-ced367126e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe0718e-9c51-4e60-9f47-c9cc73158d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "849cf10b-e92e-41f7-8a32-8191becab29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575bd0c3-3938-4d2c-975b-ff14c385c7b6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e388db-698a-4cb9-bc9d-c21c3226c849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbce230-0408-4340-a3af-6e64e0b48b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d36fad-bc82-4cf0-95df-59a1fa2e466b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc46f05-1428-4df7-b5c2-413302322676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e50956-3d0d-45ba-b90b-c7cd7e52319d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6502a8-22ef-4b17-943f-af0d78decdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67564533-21cf-42ee-b9b1-cc39e024b215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98a55c7-357f-4509-98f5-6e71b83c6176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a387e5b-0116-4997-ab2a-fa2cfa39bc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444344aa-c3f1-4bbd-8c32-25598d5ade04",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c701e105-13dc-48ba-a65e-a07974bf032a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e2412f-5336-4d73-9a53-65b33a87874e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090a9c04-33d1-4332-8ef8-f24d36d5f0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe33b73-99ab-45cc-ae34-c886ff13e3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6521517d-d8c9-42ff-ab9d-82e93e7c578d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba80a63-4887-4aba-8a84-179bc79ff5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd01cda-6eb7-4ac2-b9d1-b2931f4cc7a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eedec6b-6b1c-487b-a095-05d6fca2b74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef641ca1-ac51-4c69-94f3-f8bea6e5d1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8558e87-b3e5-4111-930c-6055a0b7125a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef8726d-f78d-4fd5-beb1-c882a6a20e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f63c56-1912-4f39-9828-37d91adcb477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6ef593-7fb0-4329-b8af-b2014a30c00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5dcfc2-5084-4f41-aa69-09dded859c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebece12-befd-4ea4-b1e0-57b48001483c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b7ead4-d2b3-4f4e-b425-6fff6d7c087f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5d5827-fc09-41b5-90b0-e6d35eed313e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd675add-884f-4913-a292-65823ccd0388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7112f22-e7d5-43d7-bf62-bf19d82c65ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b2c54a-d1d3-4c84-a62e-0443ccc07052",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4f9cd6-0b3d-472f-a9b7-ee50cb4bb319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c8fc8b-e1b0-43d9-bc8f-1e31d9888851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbc9953-a680-4d07-bc74-2d9175f55ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c48f528-f743-4ab8-be3c-62c3cc04b533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b27a9f-807d-4419-aa6d-ec8bb9a2c358",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf1ea56-3952-4f17-a959-ccca0d9fe850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae11e6d0-9e07-4bcd-91be-b0177721a1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5741f08-dc2a-44cc-bcb7-45087b2a9849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30cd481a-40a1-4f02-b159-178e634a4618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58b456f-9a64-43f5-95b5-2037fde657a9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cde86a-e4eb-4fdc-9881-a3a2f68cac1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9cc8dc2-05e0-4e68-89df-fb4e5d9542bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c4eebf-1c29-4cb0-9314-51958fe0c048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28bb4f0a-7db5-4e1f-a23c-6ef1149d5e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c028167-f286-495d-8ea0-d243a03ca34f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a6a2a4-ab34-4a35-b2ed-5d453e6a1b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5906911d-c6b8-49ae-9fbd-1083179ff747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d363e149-24aa-49dc-8df4-56c91b9a5b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f94e6ad-d541-4fa1-91b0-1de124972d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d930277e-d438-4596-af06-88db509a5a1b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f39e305-6703-42b3-a39e-62be140d4fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d275f4c-dab6-4ea6-a474-c8ea692afb2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d94a8b-c795-40bd-99ff-00a56ee04776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "750635ea-b532-426b-8308-474f30e6aef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19fa5c9-e3fe-47bc-8705-9090f43b9736",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a0a330-14dc-4697-9622-389ce21c6e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3081018d-96e5-4093-94ae-f43d37791cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbed25e1-99c6-4330-bb77-b5e884e92b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6baccfa3-4fc2-43ba-a64e-8ba5cd8c3d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687e83f1-48c0-414f-a4a2-e83d8597b821",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7019fe7b-4250-41bc-a01b-38bf6a410358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852fd7f9-b7ee-4d51-9c78-d788baf5c9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a05dbb3-f14b-4e86-9fd6-38e15f8f435f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48dd1704-e6e0-440f-879d-52c0d304c8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d0e096-1472-4637-ae3b-cfd35d7a8112",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5505d2c3-3c0f-474f-9382-212f958d1dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd20876b-2853-41be-af37-b636fb12f1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc5f6f9-916c-4e50-a29e-423729b73191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71681e7e-92b6-44c9-9a59-3686841fa876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d141793-5b30-4ad5-bf9b-03ccfbeac088",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b343f2-4303-4bbb-b6d9-b2cb9b9b3e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04ed319-2b90-4498-835b-7048858477a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf5e5c0-ba3c-4324-bb28-507c5e39bdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3f35b7-bec5-4fcf-9227-79c21171da86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0dfbc1-eb2b-41d5-afeb-e5e8c6f18f74",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b636838-38d6-4369-ae5e-127b361ce634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4dda2f-4336-4c82-bb79-dbf77efe0dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7634960-c0a1-486b-aede-27b230ec5ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d597b72-3047-41dd-9156-7ee5455c2c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aad73e9-03c8-4152-9d70-efc7389c210b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13fb636-155f-4ebd-bda6-9664f1f16abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fb3a0f-ba33-41ee-a9b2-f0e56d2763c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690e3e61-6af2-45b5-b064-6196e1978f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e25ccdf-3369-44a6-85e5-b59a4d517181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11656b33-5a37-4dba-9eee-239f55771ecc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6393bbe-8faf-4342-b8ac-2c0cf93614f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef04627-c998-42ac-bc7b-6d1c1037497c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab34657e-b26b-458d-81e6-f248444a9483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f16094e-c75b-4d22-82c4-bdae342e4700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7630e19-75b8-4287-9db0-95c8e85cb5c6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbec4946-0d33-4865-960e-18a9fc358c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d1f267-481f-415f-8367-997469433ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ae999b-2ecb-4997-88d6-3c51cb82c078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b9a764-e37a-422b-bb0b-8b300fded134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71163eec-e903-4919-919b-eb30b188a644",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188fc4df-263e-4729-b9fa-38670f534ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8083096-19ee-4ab8-8e68-dc78e02c673d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e81ac0d-5b48-43d2-a02c-f6ebc14c5b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bf9b40-abf4-4e2a-afde-e97513ae644f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07192a5f-5ec9-467f-9de6-65a383dec0b5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800c5484-6fbd-4a14-a0c2-13d3be918443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4ff3df-2b62-4757-abdd-c756097a0e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ff62d4-4024-49cc-a20f-883523389dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b63a5e8f-a2b4-4a57-acf1-982e1193dab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da35cbf7-e5c7-4682-a87e-ad09b34554b6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da096142-8d68-4aca-86b9-6dd01ebd5e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba1f2e2-0263-4c4d-b38a-490af0ea5900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4518c9c-69df-4359-8b43-7d53447581df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97920217-1664-4a50-9804-1166aae5685c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1363ca66-ff6d-4537-8ed6-39de34d28d47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b99317b8-c0e4-486a-a877-c661fa92afd1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9a933f-b122-4b17-8b90-19184ba3e709",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8a197274-775f-4a7e-a0c7-c70ea66b0b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e90ed0-ff30-45c0-a44c-a5c79487d82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59b245d2-7014-4114-8cf0-e70427e68e7b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfabf4e9-992a-44fd-b2bc-74ec47618eb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc4bedea-452d-4e5e-8a52-a7283c6d3920"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c507078e-e0ad-4bce-b3d7-eb2308479a9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fec86579-8621-43ab-a233-5a2638a08729"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2f6f457-359f-4fe9-b8d8-78fb5d9ecd04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "17cb498b-4a5d-4800-ac5f-0d07aba58c1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f5658ce-dc62-4878-8d00-02051916701d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1b68814-ac10-415a-8ed2-5087ed861f0a"
            }
          }
        ]
      },
      {
        "id": "ab250ef0-c6c6-4733-a059-05095914f09e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "888627e9-98d3-4b8c-9030-185e3addb327",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3698898-8d76-42b3-bf0e-c574fc4e3112",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c2fa057-4d27-48d3-94ed-4d35013b00c4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d695a2-a21d-4209-a0a7-3b8c85cd98e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed811af-9600-45ef-9791-574c185bc9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282ee9db-dfc2-48fd-bb24-7aa2b8bfe165",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6332f09b-75b3-45b8-bfb1-4a76e2a06086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08da3b5f-11ab-425d-9025-ab4d6a4483bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da95da6-b95e-47a2-8a4a-a07d082ea791",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8538283-9d8d-458c-8010-f6040ddcd32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac5a800-114f-4afa-af68-e131f4f2f5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b021bab-274f-4334-9ac0-b509356ae0ed",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a0e775-74e3-4bef-ad13-ecf5f4507b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e13074d-c24e-41ae-b0cd-9bbb51f249b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5265c6bd-b15e-48e3-af20-afe49d1f1e11",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cdfe77-bca9-43ab-b436-d90d3a2a1ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9702f667-e982-4dd4-aef6-87b0552399ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60cf0be-0d94-45e2-aeca-7bb369aff5af",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f12c9e-10af-4fcc-9703-7d88acb00cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537d7909-f36f-443f-80f3-57935d52cce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3596a5-0adb-416d-a5c8-40ce8d27158f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36d08e1-417f-48d1-a8dd-78409ba83a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197b349d-b761-4d92-8676-3a0bf60c53ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30b2d0d-9f3d-42de-928a-42bf3aedb0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58957136-40b9-481c-b8d7-fe627bcd62bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068e76e6-6782-46e1-a35e-25b3ad85f842",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e4fb8f-cd50-49a9-8daf-e4030ba8d6da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d966732-72b7-4818-96e2-f66c13453bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2129eb-3f1a-4a9e-a524-f75a9d508eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32b736d-503a-4307-b4dd-37c785d58bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd04a5b-863a-4d0c-baf9-ff0a9230ec13",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bd938b-d681-4697-8660-ab819184c5e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "727a1b59-de8f-401e-87d9-0a7cfcd756fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d2aa7f-375d-48a6-a860-10eb1aac59ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2418f64d-c890-4f77-aa25-924f6af909e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07834642-034d-49f6-a69a-a31d97ed3c51",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3bef05-c9f3-4edc-a082-8a25d2eed713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7eda554-e718-4010-a3b7-ad8f75a98f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbc1745-48ef-45ed-972f-34bd58795097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9088ae-ce35-426f-a090-e05e1301433c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94668a1-bc37-4861-a6f0-1b2d3b2da7c7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1aa9c3-8432-432f-b298-4cbd8b2b929f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad712494-5042-4e83-96c3-7aa07f726e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82427ff1-76d2-4c63-bdf5-30dc40314de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e4b101-43b0-40fc-949e-ec097f07fbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a062a5dc-e048-4eed-8edf-e2f64b6886c3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157aa6d3-07e4-4dc2-90ed-35aa4cad06a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1e4e16-7a6b-43aa-8325-1a6f3bb69c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca3d194-17bb-4db8-8043-244132a7e26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7058748-2a89-4f87-b6c2-f9aada0dc30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b276738a-a2f8-45aa-aa3a-1ff4453ac8f6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595718e9-6f0b-4a35-ad99-79df6daf5dda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2e1c0b6-2934-4b2f-80ee-f25229837e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a018c022-6a29-4486-b91e-c90a4714870e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18705b14-714a-4634-9654-63a5343686a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f393fc9-18d2-4e0b-b3db-e6e82bc77e37",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80784fd-73d3-494d-95ac-e82786fed1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a44b80-9fe3-4172-b4e1-18b03caa81f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f94baa8-3927-4e86-9738-e5841e4fcbca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647032d0-1ab3-48a1-8b3a-0ad33e37baa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dda794-1f99-4831-b38c-340e7c408e79",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df07c084-e405-49d1-adf3-1112d4f195c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7170d9ce-0f21-4c7f-ba51-79cf6cd97122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7050238b-9626-4ac9-ba7b-f9700e45c288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc679e8-4955-4d9c-a028-c4a50d146d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75be1526-dfda-472c-b939-0ecc2051824e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220df3ee-6229-430f-b1b1-e1fbb67ddf91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e6ffbd-96a4-4d39-9084-ea7b86f10792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbdc48d-e296-44fc-a372-473e09fed8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63da1381-931e-4ad6-b748-96ed52fffa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e0e2e4-2a24-4464-ae8b-52895f77da7d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc66e764-1719-4049-ae09-51bf52504124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f31e945-bc21-41a6-bf2c-1db68b40bef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6029360-54c3-464d-a1b6-1c6c596ac338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb93ec87-5653-4a8e-9240-60afbea7103f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac394544-dc01-4207-919b-1f73b2a5e9ff",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e7aea5-b98f-4b78-a4bd-7698aad68607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f798360b-8609-4ec3-ba41-759457b98b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f18b2b0-28d2-4604-93bd-a1a416c4aafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d28c46-9329-4ceb-9f48-482eaed8f5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1def54-32b7-40b7-b16a-749d7b8d9f3c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7f0d37-04ee-429f-85ae-b53786c0c7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b187712a-1fc9-4e7c-9b46-00527aaaf4de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9902eeea-9502-4b21-8133-1ffbd24cb3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592e8b67-d4fa-4c8c-8860-c3666812b0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fbb349-1d1a-4f82-911f-0e5ad6eda078",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071ffa1f-f3fb-4452-843e-5fd79c14994c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac93b27-5ccb-4c4b-b634-3f7b72286277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07bcc38-a4cf-450e-a8b8-797b550a7164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b1dcd1-bd42-40d1-902a-1be697536c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04398cb3-2889-4804-ace7-3f34a0c41a7a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd70566-4b1c-49cc-a4b3-dd51b1298628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0916e9ea-3670-46df-a5f1-df32709c312f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90a491d-6426-4449-af1b-7e46ecb4f2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccef20f-036f-462b-833e-2130cb631de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab29e34-6938-4020-a54a-5bb4bedede14",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9324ace-5599-4112-983d-3f48757e589a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaba41fa-c3b7-4e6a-9034-254d3366f091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b5f606-fac6-40e3-9dde-c709413e581e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf640dfa-cf3b-42ef-abcb-527d1b3b942c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6e48c9-eba0-4035-b5fc-4daacd0e238f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d70c63-0a5e-4669-902a-72d240a405d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc7952d-36ad-4372-b4b0-8cb3e4ff64df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe94564-c505-4d86-b656-06fe2c3c64af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a165d73f-47c4-4942-ae51-b47c1ac07bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220c0037-8511-4bfd-bef2-2cc594738434",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84926f2-bc7a-41d0-a2a4-ca44069a3cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdd75c5b-9f58-4598-a2da-c68b862ea18b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c7a46d-e419-484a-abc1-f8c17add2bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ea64bc-a1a3-4258-89a9-4bd0587587ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f90161-1e85-43d6-8bf5-0486027d98ab",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95847a9-673f-45f5-be82-a11437c9ea2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "237e3fa7-b1ec-45d1-a316-84bad324d954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73f76a9-a9e4-470e-9162-4ba551fe26fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a45d984-64d8-4bc0-839a-024e5e007614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ce1fdd-8186-4846-b20f-11f5d2e5fbe1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a962b33-3df2-4b1c-97c0-ee97c29ac7cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5475f383-4f58-4991-9d95-e625e11fc558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b5a3cb-aca8-44fe-83fa-8e21e4eb7bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acac8e15-7443-4cca-994b-bffaab5265b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3227c7-596f-4acd-ae0a-785e56f69eac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea8bc7c-b3c2-4846-b7d9-3b74cd13da14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c1407c3-6603-4688-94f6-ffdf33635703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1dd498-17b7-4507-a09b-4c882bd1ee20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46385ff5-e38d-4315-b3df-51a73c9086cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82523046-8b13-4847-af7a-4053caa52257",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e1ebc7-ff73-4bc4-8d9d-ef2205978cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0053708e-afdd-4cc2-a049-216c65eb8f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee27117-6bef-4722-9226-56220617a2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70453284-6ea5-4eb9-a922-dd9cb8c08728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2322372-6fd2-404a-80d3-69f7ce1e05da",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688baf77-e1fa-405b-bd1f-15b98a8b787f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7965e224-eac2-47df-b663-8305166a6433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49554253-3447-4cb4-886a-ac9fde58b6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c43234-aa86-4dc1-87fd-059e2db9ee8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45d8046-f3b4-462b-ba66-f605c4c0603d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fcc1ff-f832-43e3-8df1-3592fe582c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6096467-f96b-4aee-afc7-2b6efe5dbfd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c2898a-727b-44dc-983a-75cb279b6fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2545aa09-d373-4cbf-a6cc-4480c6ca6cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482f24f8-05d0-4884-a8d7-ab34098c61ee",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc88e63-9612-4fce-905f-a4826f6647ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f116c9-7872-4548-a33b-dc51e377f15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2714473e-7004-4686-b644-6a024da521aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8b5b03-d1b9-4b36-8889-79e60a550cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f4fe15-c256-43a3-8f8d-bc3b699cc9dd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bf8033-937e-4a4e-a27c-546966885d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de25f90-a6d9-439c-9e00-1b8a53184e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a8f93c-e4fb-4fdf-b32a-74de76270242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267f6b3f-8331-4d96-89bb-4a13330e86f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f781c035-ac3f-4984-8f99-194223764ea2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32d1ca0-81e7-43ec-a088-54218d55dc7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df5db18-ec08-406d-bcae-198d2d37321c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42246301-2592-4f3c-9194-b71d0a238f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61b8b96-7893-4b49-bc94-a8efcf834b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87ba254-b3ef-4586-b230-40ed8f013e81",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2b6cea-4f21-4835-a97a-5f3c9588c63d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d21a003b-abc2-47a7-a19d-ed2d413aa5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c0a505-143f-4006-8749-09a519d1545d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a22f906-f062-434a-be6b-1558363281f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c6cb64-4b46-4f2d-959e-a2104ec86dcc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8213a68f-6359-4e2c-8bf8-42c9faa5410a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8929ec-c3e1-4368-96bc-9fcfb3ba9849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbcf580-1299-4325-88b2-70a4355a9eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cdcf75-facb-4f42-9a29-dee580dc24a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e8de4c-59f6-4f8a-87d0-c08a634faab0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaeed92-e8dc-4e17-8b1e-478a4f651a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7647c0f-fcb9-4887-8303-ef9286230059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a55880-e289-4ccb-b6c3-c881a34117c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ca69c3-75e4-4c4d-85de-860546f9241f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c73cca-dfbf-4e12-8513-5a6916656d10",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9516105-bd07-4a9a-9dbd-e20c166e0e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352a12e4-cf45-41ac-b0c3-5157ac8f292f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab9c682-c0e7-449f-947d-a9d0ec819595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7996be-9190-4bef-b843-b36665450381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314ff779-2b4b-47d6-8924-47cae8cad879",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde36dc9-c397-4192-8b7c-b8c2a6fd3b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b6ba2c-db08-4a32-8484-9cdb4c1a4dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d62bfb-614d-4198-bdf7-aac72678e2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530b01f2-6382-4c9d-b20c-3959874ae0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639189ac-da12-4ea1-b155-5d555c63fe4a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1382ad3b-080f-42ff-b60b-c1c12461f513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e581f1-1867-4027-a1f7-981ab61eec5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda57892-17d4-4f71-8c04-00d457005f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e126e6-89d4-4687-a8ea-5216c26a4d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27bbb95-d031-4fc4-9b51-2880dc2a1d93",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35baa58-3f9a-4604-bf20-c205424f070f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d100361-98fb-48d6-8861-c40f3c6aa04f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf11394-2750-44f6-9369-2e336f94bdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ada9a4-7e17-404d-a8b0-1ed78770a782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b445d47-d18e-41ac-8ad3-52744a028210",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b37192-3180-4e78-9dea-dcf8bb26ac30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249434cf-a2f1-48d2-a91b-15ad314f00b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc172f6-bd69-41c3-a96b-4bcbbad5c763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac280da3-376a-4987-8d94-673f3b37650c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b21ec1e-8d84-409e-894b-7d6e2364c5a6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b885d3b-3e06-423e-b974-d0849502b627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5990e237-44c7-4d3d-a7b8-38d2f6f83db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c950692-09c4-4dd2-9e7d-1129b32b0eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2509603f-1e74-49b0-916c-7f0d746c8fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e833aa-8433-40b5-ab2d-049e024f3ab4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba22e59-7270-41c0-8c29-b78e82c9d69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659062bc-cebc-460f-a5cf-33f4311f5886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f71c1d-0fbd-4403-8dd1-3cdb6d8b8cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60301a3f-02ac-4ff9-9d02-6dcfddfb6f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac5847e-7778-493d-ba5e-581d53fc65e4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb0a335-82bd-4677-afe6-2686f3759193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10aa52c7-3ed4-4303-af0a-22e5a6914bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fbe52a-6e4f-4afc-8244-8d727a0ea0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97827684-cf18-4adc-bc91-684dd86150e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9fc99e-666a-479f-8aa6-ca8c9326f6d3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c0a396-464a-424e-81ca-a167a314055a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ed7d57-50ed-4765-9125-e0f38969912d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0288c45-381e-4119-af18-0e780a252743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdd6dd3-4b03-425a-ae32-04b6c85314c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b86689-e035-4b9c-993c-bb45636d36c7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58af4b9a-85fb-47d0-82b2-9a762668bfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ea71d1-6e27-4787-a0b9-b5d0acdf94b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f90537f-9b27-4d07-ab47-242b69c51001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813a9e2c-a2de-4dc4-adaf-b3ead86003bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f929f9f-e755-48c7-819d-b500440d5917",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8524de0d-6aab-42e1-b456-926e34bb8a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0deb70cc-0198-4b72-ab17-4c16b630c442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d352c03-b4b5-4fb7-887a-09d32120a012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec51db69-ee1b-4430-8697-4dee6ce10427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4d543b-cdd3-4317-9cb8-a6ccd22603b3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fd1443-b6ed-400b-8914-1f96af44bd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205aba5d-1e90-4a65-8efc-13de27de2c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3b7049-6799-4654-9f71-9b53d296520c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63676d6-1dc1-4efb-a329-82f51ade23d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e1c761-53bc-4f1b-a2e4-846d89f28256",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ed658e-13c4-4243-a00d-06c71b2239bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1aff326-7ad0-4422-8cda-1431f385e56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11f2213-4c7f-4d04-a90f-07a151722944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99154d00-77a2-4841-9771-4544061fedbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b09edb0-3206-4925-a505-f7fdefe43432",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb95e290-369c-46a8-9d4d-4b2bdf4e4d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6affcabb-4e43-4200-a135-cf511c64dd8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f94560-79b4-4fa0-b791-74a0c11f624d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b32d242-7b0a-42c3-8c7d-b47f0cf90ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377c0d21-e3d3-4fa2-acdd-4d9d138f0d78",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e895c3e0-1904-4e96-9cd9-c03bc262adf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0d71e2-0752-49a7-ac65-9e50973d9039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281804d1-30e3-468e-a465-7bd35cff26a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db16f8b-4170-4982-9893-04a8f4b7e106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cebe2f-ab03-4fb3-b52f-bcb90ac4ab64",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e4964b-c167-4ef1-9db6-6fd5edb8e845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4b3481-b684-4d0e-bb56-10d818f7e6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9183fb0-500d-4b8b-a644-0d9dfa24ec94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1172fb-5437-4112-a814-b7dd9e45a905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d75276-d421-4829-8a5a-5acaf751d5df",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe30f81-fe8e-49cd-964d-8830bf53de57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2ce84f-64ac-4d8e-a901-23df4fa65ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5248ac1-6c76-4595-9689-c9cd078424b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919a0d19-f780-4477-8a1b-77d7e8eb1746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c6f819-87ad-4171-86a1-c81066d0d8f4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3f3941-ee5f-4fea-ba26-2c325b6af7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb05689-e5d3-4c98-86e5-69e91daa40eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558bd65a-60de-46c2-aef2-eec73e845ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36eafa7d-63df-4d09-9864-04e142479f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a40cf6-6a46-4dad-b83d-a2c8851497a6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e9ad21-cd6e-4f41-a690-6d069310c486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00a6706-cb70-4fda-b330-3ac685ae69b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6d1b56-aa4b-49ed-b817-11753d009861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f929c08-f744-4f9c-9792-1b20c6af86a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbdf1d9-1211-49cd-82c6-d09a88f2e79a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3499e70-1fc9-498b-92c8-91adb44823cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9845e0e2-e404-47e4-bdf8-3876f8726312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9898d6e0-2107-48a6-93c7-5c7618e2f470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01409f79-0c74-4072-9919-f7f640f7c519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcd3b0c-4fd2-4395-ba0a-9ea5a45e219e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31d00a9-8929-4316-99eb-80040942a28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887f4b87-0127-4f87-a0bd-f3f066f3aee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804a09a8-b50d-482f-9ba3-33a2c72dfec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d78adec-2a24-40ee-9110-6d0624d2e51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0178ed-9473-4a74-a004-5251f8255c2b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d6eafa-b701-4dd1-b3b2-ca4d638d9b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16454ac2-ed3e-4139-82de-4e4961f8f5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59365d97-96f9-49f1-be30-6d6a8dc53d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5893e327-6dcf-48c0-b527-3758cc036d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cb0971-e17e-481c-881b-30d99bc7b4df",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9f840f-1e4e-4af3-9648-f1bd56bb1fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de812dd-9344-484f-8496-9d549cc38d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8853c23-725a-417a-8394-f3fa0e908100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471c2807-8200-4c13-871c-1d618458b42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3f82f0-7f9b-437b-bb3b-921a504c60ee",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a548aa8-2b90-4f64-8c66-42ccdd5baebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209b33b8-fe9f-4bff-bc6f-174079e504d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd3c1a9-e877-45fa-b3b0-de421df65a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28eee60-b20b-4014-95cf-89c7b2972a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7712905b-958e-4739-828b-085dcc98ba0e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351e5526-4e58-4244-bd47-4f70ef0fd810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f26d12-ba3a-4af0-8b3a-9de3e33882b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922deacc-a9d7-487e-8482-d8c424f02ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb534bd7-9598-4f9c-bee8-6d003d81fb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfc0731-2888-40ea-8cdc-fbbc3247520e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd63f82-c2a2-40ed-b39a-a0dfd4b4df53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eef23ad-55b7-4e52-ada7-3ce4df79b2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7613c0de-b9c3-4a86-bcd0-5431c296eada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4858a94-b3bc-4d2c-a725-8140acb40034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38de9674-1943-431f-8561-b5b3be2242ea",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d115ae91-956f-4605-8db0-51bddec67367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e280bf58-f32f-4bb3-b16f-701b6798c695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cc17c5-3b21-4528-940a-d7b5dbc71973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a234052-8105-418c-84af-c46266c13ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be856e72-312d-48cd-aa59-be619cb5f68e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae6ac2c-4aeb-4442-8926-9e5a6b3193dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fa343c7-6366-4c8c-8597-b5ba90857a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a19d39b-5adf-4092-9222-864a0c9db939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2ca000-1386-44a2-8cc1-5250e64ca420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2ef501-49c7-4027-9a22-21ef72c66e5d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3498e5d0-e89f-4ffb-9a30-4c3bd2f0bfac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0fff58e-4d87-4a8f-99aa-2ca549265d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d33272-a905-4b17-ba46-0fbccd463719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bad5e55-fe83-4b54-8649-b0f6e2a0d7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30855f0d-cd4f-4d68-b7c5-29b3e96077ce",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bd47c5-6946-4107-8cab-ffa85bb40953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a20312-01e0-48ca-91db-f739f52fb895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094a32d4-e75c-442d-830c-4ba34cab8f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983045b5-36b0-410b-a6ec-e2c545c1d11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfcbd9a-4aaa-41ba-a80f-2d5cb3e642a4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36cf7d9-612a-4814-95e3-8523d84d2800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ad102b-3c36-4df6-87c0-088f93cf472c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d5d46c-58ed-4f9f-859a-c907dfe25142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e0c301-29a4-4c8c-b750-fe1f01da366f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f993c2-329e-47c2-addf-1012316d1a8c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac61e9c1-4ae1-4f98-b26b-c20eea40b2a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca7208eb-85d1-45cf-a99a-c7cca79788a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a72fabd-d6d2-4ea8-ba24-bc060ccc232d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bc2ac6-d091-43c5-a783-598cb2121844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1ff20b-a900-484f-93b9-17bc9e945013",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c5878c-b368-4e2a-8d64-2bda38333b8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78625596-e937-4aac-9716-2795a4b893ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42967b2-7d31-48bd-a04c-8d5d31192ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f53104a-41ed-4dba-a483-31ae75014aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1384572c-a640-46f4-859e-8876a8dfb39d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3518206e-a6ac-41d9-ab46-0c1d0e2ef986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9faa59a-ab83-4bed-9d8a-eb797276bf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a7d574-1827-4fb0-97c2-b8da5a050c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ee69c3-7bab-4ef7-8f31-9cb103369bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87de453-b25f-4843-a365-f666fcb5b37f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7503b88d-6966-48a2-9b25-b896c7fba8eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb8c2fd-3132-41bb-bdd3-942d42c9318a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2509db89-0153-46b4-a732-e5147c374920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfb447c-548c-48eb-84a0-b2258f2323c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ffb4a6-1c31-4c62-b7bf-3bb5b73749e4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d4c6ac-abcc-4b22-9bfa-84e0ae4ad768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "350f546e-fd19-4d00-943b-f8e760974785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f2b5ff-a4fa-4c25-9a81-4ac21e185967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bb0a52-4243-4f52-8064-75330a6a199b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1373fd6-54c4-433d-bdfc-693c7ee1de89",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9015243-f7f6-49bc-a025-53919d670b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f79b7986-ec58-4ccb-87b4-fd16cb5d6469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd430a4-90bc-4f22-b1b0-ded74cd612fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250f6dbf-2392-41d8-a4ed-779b387c48fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c35c46a-2327-43bb-a0a0-0d6aa875ac3f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e09b6bc-de4d-4781-8b89-521ba8c7d140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe614fc8-a9af-4e60-b374-df985cd45535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238089d2-39c2-4cad-8110-cbb32f5b76dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0f616f-9365-4e40-b655-28b63678dd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fabde6-cc47-48a9-822b-234ad6145074",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4a2fac-f1e8-4ee6-a080-76c2f2e775db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b726128-09c8-4a92-a716-4b03bc5e7a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea2c291-91d2-446d-90c4-3a81dbe13bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6220d2b9-bf89-49da-8683-ac1d0bf7c644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d2b1a1-c9b7-4644-ac72-3d6828abb56d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781f1fc4-7884-41e6-920a-ed178aa5d654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c60c1e3a-ca76-4cee-8d20-0f4f0b1b4a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1f1c10-3dd4-4317-b00a-999f573c81c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc0a357-2c1b-434c-a4f8-3dfb7d8f2860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4d52e9-565c-4c23-86ce-a1028e51abb0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e82b81f-721e-4a5f-82c8-736bc2538c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "727c474b-9165-442b-a10a-ed3913666824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b3dc28-3029-4c26-8ea5-6b8ce7195aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8253f70-483a-4247-beb8-ae2d176dab05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22af04e7-c846-4750-b714-d15a96a828ca",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a4d891-dba3-4c6d-882a-b23dd677b18d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a8d84b2-d608-4dee-9aeb-9dcca94bea1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a82ee64-e14c-4fcf-b49b-73ffbf30a7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb9f920-1a5c-456c-abe0-ba40e34be755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80fd590-94a8-4d31-80b7-10a80372fd0c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eccf5d1-9801-469a-b237-11bf95e0971f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02ea00ee-a353-4020-bc0a-ce5d92e4084b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895d3684-6830-4d0a-a110-641343700932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f60576-9502-46ec-aa26-133cee68032c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543d2365-392f-4d59-819f-573ef41db54e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a3e612-242b-4315-a450-8cf31e50712d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf7a824-099e-4c07-9f6b-b94638dc921e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc66d6f-a2d3-4816-a96b-163a7df4a8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768533ba-1b57-4e24-bdc9-c7ad39dcae73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0046eb9a-54c0-4465-b583-a9bc8d527906",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952d4750-b264-4dbc-99af-373977a86795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6148c94a-91c4-459f-b7fc-a7a572ffb71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbb7063-52f8-491e-bcbe-2f80b7372364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3c4eff-e144-418c-984f-5bf501ea4907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559cdc8a-467b-4f11-b512-6fa070da4454",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f3191d-22c9-4238-94be-12e7e1628b10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7d8d4f-294b-405d-8480-8d72a92918ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473a9012-85ba-4bd2-a3bb-ba59e1e98b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a965e7-9364-4cf1-a01f-5336fd37ec12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c79f7f7-7807-4cf9-af2f-543ac69b3888",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b288142-6164-4685-81fc-452ac7e9224c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "090a1f02-ad74-40eb-9bff-d0b5f5056897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d4b4ed-8f05-4519-9a7e-b38f8df3a182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b71d66e-117c-494f-9c7c-ef35ba26aac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be509f7a-bd60-47db-b202-79975e33c5db",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98892035-d15d-45c6-8121-efde7fd05a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbf3ee1-7cf9-45bc-8e2b-8f8387a4c195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4733e0b1-eafc-48ee-b3ab-9021b09c6323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2641a7b6-6cc7-414b-bd44-f5b670a0f6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c598176a-a147-4e92-9dca-8acdf3880e67",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74967a4-0a3c-4733-9c99-09210db10003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6340b49b-aef5-421a-8561-33f2607625b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10965b1-d357-4101-afa3-f7c9761d1b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7bd75f-5ada-4639-8987-0738d86915f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9d3370-e1de-4edb-adb7-b615c87891d8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ce227d-532f-477b-801d-9fc293b76375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e66c3e2-dcc7-453c-8787-712680d376c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5ecba6-6b96-4431-b35f-ff63152fc69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05adcfa-b571-4079-bdba-da9cccf8e199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4eb1a55-e2dd-4e4d-9b12-079317f7140c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6118b954-3d75-442b-b701-2f353e253a6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6257df-69b5-4ce9-b622-85b5d7f0cfe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915faed3-5b42-42ed-a89d-61dad6c77355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e365f4-5a9a-42db-9076-bf31871daa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ddc8c4-9f7f-4cf4-9adc-26a89537b4fc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863a15d4-fb83-4400-9a1a-06764cb3ffa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "874a2967-1416-41a3-be44-06467b6b36e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bfa4ae-680c-473b-9f70-999f7d9a98b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555589e7-ca81-474d-a2a4-158adac8221e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286ed27e-d91c-4a00-bb48-6ced3d221431",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19aa5d0-e97f-429d-9cbb-d9a29ee38d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b72963-8dbf-440b-b79a-ec1f4d4b889a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b439ba9-1441-41f3-87a4-c8e1c53fcf6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9956aab8-1f12-4324-96aa-6f876e76685f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21666b3e-1407-4b0c-a936-d2adb0bc4737",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a47e4f-57ac-4abb-8c69-322d9b462c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4870c65d-d5fe-4cfb-9c43-bd4631976374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a228e5-0a55-470e-bc2d-d0105a520c01",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19ae12b-d967-45e2-b927-48449b698d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a346b8-0416-4c13-a122-330f6ed1258c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511888d2-dce0-4799-b956-0b2eb9266b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "229375fd-389e-49ec-b94d-6ae825c4c63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5cca95-c4d1-41e7-9082-93430d5392e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf40d627-3a5d-46c8-ab19-8b582d2b9c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e795fcb5-f5a6-4749-bc49-03173d98c807",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc77bcf2-f529-46ba-b0db-63de4a7dee34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15cd6074-b1f1-40e8-85bf-d451b5750631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29b388b-5e50-41fc-80f6-1a876f77fd29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dae842-77a6-4323-8b05-c7bc004ef466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f124c43-89a5-415a-b355-8ba80ab02586",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0836b697-a186-40e3-803b-fb54d93cfc31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "921a6a0d-84ac-48f0-bf1c-8a2452e775e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72bdce7-5c89-4b38-bcfe-c4324e809f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b65cb2-df62-4525-b0f0-835db1b136ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914bcdbd-3f80-4c99-9c81-650e1e091579",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b687659-73db-462e-a5c2-e0fe8967dfa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f00f583-f646-4a5b-b7f3-b92dcb7359ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccd4a85-eaee-49c7-a03e-b49545f97242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68f5206-b341-41cc-97df-d6361cc104d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37d476d-0d74-447f-a5f0-3f833e9cdb2a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c062d403-928b-4d11-a1b9-b128ea18afee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "797c6835-06cc-42c4-973b-2330a607f07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa43b69-6c0a-47c8-8c4b-4cb2e5ca7678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedd6c58-6152-4d39-b9b7-d1a14f8582e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd29a52c-19d6-4ae1-8b41-d1603024d08d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4876b174-084a-4e19-b413-fbf6e66a6963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a268e5bc-956a-4070-a79f-7d04cfccb39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c20e8d-0bdf-4a5e-a72f-810ca8abfcb5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50022263-a120-4154-90d3-b22e54ff7dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9180f6-ef9c-4d4c-b2ab-5cf7a749489a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ed242c-e394-48a6-a65a-adca9d306a4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b93905-85c3-4386-926c-97c91fcffa8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd22aa85-fe41-42e2-9314-ec39fc6124d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167a2890-8952-4047-9a60-8bdf52f0cd51"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "081b72d4-1442-438e-a195-59bfeb759f76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0562921c-79a0-432e-ba89-da2947918150"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c5571b5-f0ba-43a6-a1ed-1502bea6d0ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "757bcefd-ada8-4beb-8be9-57c80cb7602e"
                    }
                  }
                ]
              },
              {
                "id": "62ef4f9b-22b5-4887-9f0e-9e9e07cd9ff2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adc49b0f-08e8-4520-bce2-d9f666995e19",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841fd25f-b281-4b4e-9fa4-6c99c78b5f00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ae334a6c-e0fe-449c-999b-1a738a6b63d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e6d131-b2bd-4cd4-8dd8-3779b5eefe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acfb7526-3054-4eda-bde3-4a750dac3b16"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "434730f2-bc4c-44c7-bdbb-36c00d8031bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79a54862-56a1-4cb7-8583-6374ab6c2e50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2acaa7db-128d-453c-95a2-dd0eb934ca9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "127ee720-f232-45ee-9f54-1866379d6171"
                    }
                  }
                ]
              },
              {
                "id": "b3f48cc9-9561-4299-8ad6-76b7b3b9cfa8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "583ec26a-f810-440c-ad8d-23bfb4761a19",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22082eb6-3112-494c-aeb8-42c33f480e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ef828a1a-c694-4658-b048-2b7f38ff8d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104ee670-d453-4dc4-9b79-dfe9e81a73dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad6108f-8206-4341-8f03-ecbf0d8296a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "955892b9-634a-48e2-ab95-3e4b51d83e21",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11f4226c-d563-4e4f-b425-71fdc1ab14d4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2866ae97-5530-4bfe-ad05-9be486c108a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bf2b9c10-9eff-4d2b-a79e-0a14e7782238"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8be2d721-d4fd-40ba-823a-1eb85ef48e3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25de0614-bb9d-4c30-b415-d31e6c6eddce"
                    }
                  }
                ]
              },
              {
                "id": "75583328-21c3-4820-98f4-1369830aeb79",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30f90b8e-e901-4a16-a97f-52f768088f98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2735529a-24a9-4a7b-bbe8-482288ded29c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9eedab1-9173-4987-896d-5aa348631593",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f470dff-b9ca-4433-9b5c-e32a18a9e35a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81e66f23-1b63-4989-8685-b7427a63ec45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a1b47bd7-fb2d-4d39-b252-8df855c5c4d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4565b43e-97a3-4df7-b987-29fddcf1690f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fbd849b-2d8f-4180-9592-6a5afe973dc0"
            }
          }
        ]
      },
      {
        "id": "095645d0-680b-48a1-99a8-510ef1cc9c93",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b0966e95-0a42-4678-abc8-19f40fb505e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d01edf1e-e9f8-4a50-b54c-771bbac5305a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "623ba4bf-fedd-4e5c-a371-0a438e1b4438",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0693bf6c-492e-4002-a17c-c723d8485b1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bea1263d-b955-4492-87df-a6fe07c0ac92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50899dbc-1d85-4ede-9bab-d97db19de838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fb03926-d2eb-4f43-aa39-c8dff976c363"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43731552-18d8-4840-84b7-5ab3405819b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76d79c92-1360-4f69-99ae-d9be9366b02a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0d8339d-dec1-4d80-99c5-a58d845cbe32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a262cab-2d7b-4f1f-bc3e-7b940d58e1eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c367dedb-5399-41f3-beb1-8d43e183c658",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "acdd3919-b834-4062-91ae-555b10064020"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c4a4fea-5891-4424-95e9-7469b3d2604e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7586472f-2997-405e-93e6-50cdf6af21b3"
            }
          }
        ]
      },
      {
        "id": "5359787b-9500-4d7d-9ed4-c24f74a5ce48",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7edcc09d-adfe-493d-9c2c-3ade1cc3daff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "454d3684-1f72-4411-a2e1-6cdc451b03aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17af8d68-1e3d-4cb1-8668-bd738acf5734",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1923f64f-3427-41bd-a6ba-8d0f98ffb079",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a725719-c0dc-41ef-9266-28c05d154da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f26a8dd-12b3-47b6-b1ae-ef46d402bc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01d24c4e-0b02-4d83-9e27-a9a52309ca10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09f1a315-a502-4930-b7c1-110d240facdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27ce4054-be1a-43d9-ae19-38182cee8167"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d92495f7-4ae8-43a7-85e1-f7b7dd5cdcc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac539607-f73d-48df-8502-8ce4623bde58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cf60f22-591f-4d58-8ecf-76a829bed635",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ae03b8a-e30a-4f25-b007-d32e945ee1ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9e41b76-bcba-44fd-85b9-0a2211290934",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6efcf85-fedc-4be9-ab08-0f7e369ab19c"
            }
          }
        ]
      },
      {
        "id": "6ccfeb2d-dc59-4616-a491-70bceb9696da",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0dd2f40a-9731-493a-b8bb-b948093a8463",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca421e1b-0649-4330-9b44-9b8812c873c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93b7554f-7b58-4ad2-ad60-2e16cf57d1e4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e780db1b-421f-45e1-8d2a-24628c9e5c59",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3959139a-ae24-408b-8125-3d05f1cee520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8553053d-7cc0-4c48-b741-f5f4400052d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "010301ad-0603-45c5-b57c-bbff8cfe7e8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d81da7c-b466-41c4-a072-7453783d23fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faf8b6df-6858-4385-b5e3-5771a60aef27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faace848-9db2-4147-9d78-0bf7bbe200a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af645cd7-094a-46a3-81f6-c2a8cce41231"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fc7d4ab-d478-45e1-ba15-6519940282e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3e6e17bd-39c8-48e8-a03e-7176a9416a75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a06764ea-ccbe-4e0d-bb98-69f0b82b832d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "932bf1a1-cc90-4b47-9169-1b5c6b6b1711"
            }
          }
        ]
      },
      {
        "id": "33c5a0be-18cd-47c4-8624-9bc3e8c97eb0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54bab27c-8da7-4cc9-8753-94e052e33f4d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4c4d09c-ff8b-4faa-805b-4214fcb11479",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3df9b330-102c-4714-a465-407845d85d89",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2a76a6f-883b-4e0f-afa7-f757116686db",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb6df313-f9f5-4428-8704-fc03439866fc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 98.57936507936506,
      "responseMin": 4,
      "responseMax": 9716,
      "responseSd": 654.4557881337884,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721867985703,
      "completed": 1721868018592
    },
    "executions": [
      {
        "id": "14bf7d81-a3d9-4b38-87e3-731dae9ee47c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fc5dc8d0-c768-44c6-a3b2-4533d50afb56",
          "httpRequestId": "e044733c-9b12-4b16-b4dd-b690a183d727"
        },
        "item": {
          "id": "14bf7d81-a3d9-4b38-87e3-731dae9ee47c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1306b458-bc30-49e2-bee7-05ea796cf12e",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "de2046c0-fde8-4b79-9578-ceb206080972",
        "cursor": {
          "ref": "014c256a-7113-4a13-be51-558284540875",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e79ebc1b-2293-48bb-a776-81b4236789ca"
        },
        "item": {
          "id": "de2046c0-fde8-4b79-9578-ceb206080972",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ef3c129b-4f3b-4af2-8699-8c9a1708bc10",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "129e22f6-dcb0-4dfd-ad43-646dc9761974",
        "cursor": {
          "ref": "e18dcf59-ed82-40eb-b781-e9f43535cb04",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4b00337b-24f6-4344-9f68-b6e07ed68e8e"
        },
        "item": {
          "id": "129e22f6-dcb0-4dfd-ad43-646dc9761974",
          "name": "did_json"
        },
        "response": {
          "id": "c7e193fe-9322-4d73-9aac-d4533d46a130",
          "status": "OK",
          "code": 200,
          "responseTime": 193,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d576281-fe47-4c3c-90d0-00d4ffc0bf05",
        "cursor": {
          "ref": "525be483-59db-4263-8034-dc3e56198737",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1a5fcefa-d5c5-4e65-b271-969d6e80bab4"
        },
        "item": {
          "id": "9d576281-fe47-4c3c-90d0-00d4ffc0bf05",
          "name": "did:invalid"
        },
        "response": {
          "id": "69d9da10-be23-4246-b870-6199583a177e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 405,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d576281-fe47-4c3c-90d0-00d4ffc0bf05",
        "cursor": {
          "ref": "525be483-59db-4263-8034-dc3e56198737",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1a5fcefa-d5c5-4e65-b271-969d6e80bab4"
        },
        "item": {
          "id": "9d576281-fe47-4c3c-90d0-00d4ffc0bf05",
          "name": "did:invalid"
        },
        "response": {
          "id": "69d9da10-be23-4246-b870-6199583a177e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 405,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3062a6-8d41-4971-8a48-c48b9e8ad2c8",
        "cursor": {
          "ref": "cb909056-a5cc-4f6c-a730-83bc5443b604",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d8bcc666-6d37-444f-a8cf-e7dbe9fcdd42"
        },
        "item": {
          "id": "ae3062a6-8d41-4971-8a48-c48b9e8ad2c8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "64bf67be-f485-4bd1-9e10-8cdd4248033a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c00d720-fa0d-4839-9a73-469f5e55ff3d",
        "cursor": {
          "ref": "88426b5c-e9c0-4f50-b9db-611a9b4033f4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "914a4173-a9d0-464b-9e57-af85cde957e9"
        },
        "item": {
          "id": "9c00d720-fa0d-4839-9a73-469f5e55ff3d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1696f56c-7eba-4805-aa21-6caed3bad6b4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3a0095-574e-4811-bd53-6974b1ba8d54",
        "cursor": {
          "ref": "19cdbda5-7777-4e4e-8dbe-8ce286d31f17",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d1926977-a07c-4572-b049-e3cf243430b6"
        },
        "item": {
          "id": "eb3a0095-574e-4811-bd53-6974b1ba8d54",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "82855727-8d0d-4c77-813b-90c365faaab0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316dd325-5f33-4338-922a-1b13d0c3d723",
        "cursor": {
          "ref": "3d828c4a-7cf2-4d8d-98ed-3dbe9ec79a06",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bbc3e7a0-4bcb-4af2-8f82-55d6a77b4e24"
        },
        "item": {
          "id": "316dd325-5f33-4338-922a-1b13d0c3d723",
          "name": "identifiers"
        },
        "response": {
          "id": "c3fb7c49-57e8-4efd-9e39-2797e8239086",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae137cce-89cf-4ad0-871c-a876ffe252ab",
        "cursor": {
          "ref": "d61fc3f8-396c-42b2-a9ad-9309849bdcad",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f9f6c3f0-8497-42b2-87b8-4ca2a813db19"
        },
        "item": {
          "id": "ae137cce-89cf-4ad0-871c-a876ffe252ab",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "545a4db5-30d8-4532-9e77-f40ba5be25c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d30e454-31b6-4a7b-b56d-824587158bfe",
        "cursor": {
          "ref": "38375d77-284a-4599-ba7a-b2a827de4e93",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b0dba44e-9af4-48d5-a874-6a00bf04ca09"
        },
        "item": {
          "id": "2d30e454-31b6-4a7b-b56d-824587158bfe",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "83d945bd-88e4-41c3-aedb-320c0f54e1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf074a6e-2ba1-406d-afa4-3b1e04db3aa5",
        "cursor": {
          "ref": "bbc83f8e-6779-4508-b438-4099c176d486",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d386e3d5-6a3c-462b-bdb1-c5f4243abb49"
        },
        "item": {
          "id": "bf074a6e-2ba1-406d-afa4-3b1e04db3aa5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "03afd8fb-63a1-4446-bbbc-07539226d75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d56fc7e-2e11-4d2a-a6cd-5ef843dfa1c8",
        "cursor": {
          "ref": "cd37c804-f46e-44db-8d05-dcb082abd325",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7ac5c15e-542a-47e4-a0d1-15694f9dd419"
        },
        "item": {
          "id": "1d56fc7e-2e11-4d2a-a6cd-5ef843dfa1c8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "993b010b-a043-4dd3-8304-402deaf74dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74c282b-fd7f-4624-a805-c72a09808cee",
        "cursor": {
          "ref": "d44ac441-ae20-43a6-afa4-b2b33530e932",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5ec90959-294e-4188-8dc7-c2cc0f0940be"
        },
        "item": {
          "id": "f74c282b-fd7f-4624-a805-c72a09808cee",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7f67a2a6-9535-4632-9061-4ef610ee4ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05fd374-c86c-4f20-b78e-da3e6a8e2b09",
        "cursor": {
          "ref": "1a2b0c79-5d9a-49b4-bc66-14bae7db7e71",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b9f46e7f-ab3d-4738-acd7-e72a2247880b"
        },
        "item": {
          "id": "c05fd374-c86c-4f20-b78e-da3e6a8e2b09",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "caf670f4-439b-4e10-ab5e-e08f7294695d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0361bed-59f9-482d-9b75-5bec91a56b1d",
        "cursor": {
          "ref": "4c2b081a-3678-4bb6-9c03-3e972f3e77ae",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eabda106-30f4-4af2-869b-99000a42d6e3"
        },
        "item": {
          "id": "a0361bed-59f9-482d-9b75-5bec91a56b1d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "214b4845-10e6-4772-99a6-ad51bb999062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1c9f0b-e549-4a9a-a7de-29a66bfc8893",
        "cursor": {
          "ref": "50c8d0b7-8ed0-495c-b55a-43383fd6c140",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2b74a343-a923-41c8-909b-2c891692b32a"
        },
        "item": {
          "id": "cd1c9f0b-e549-4a9a-a7de-29a66bfc8893",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ad1cc749-8ad9-471a-8614-c52e9ec5d695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c740498-9894-4473-842c-525ae4c07ebc",
        "cursor": {
          "ref": "1c60a5a5-91d2-4220-8bab-cd02e6663255",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eadf4f9b-84bd-4f5c-b619-0eb9d5fd730d"
        },
        "item": {
          "id": "6c740498-9894-4473-842c-525ae4c07ebc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b08f052a-763f-43b1-9a3d-94b79fca7d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb64343-ee8d-465f-a2ea-54ba6ec53928",
        "cursor": {
          "ref": "12beac26-5f3c-4a14-a04b-d55c5f445e29",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "894f6efa-b20f-4868-a948-20a47a33fd77"
        },
        "item": {
          "id": "ccb64343-ee8d-465f-a2ea-54ba6ec53928",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fd403052-5dbb-4994-ac68-91561d586c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388c2de2-c5c7-490e-adf0-9bf3d1ebd947",
        "cursor": {
          "ref": "9ae46c73-d4d6-4e63-b73e-0e82b5ac89fd",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4b2c199b-2372-4be8-9898-a0c36d9368c2"
        },
        "item": {
          "id": "388c2de2-c5c7-490e-adf0-9bf3d1ebd947",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d0f2b17e-7119-4edf-949b-77b5bb1f10cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd59abf-bf25-4d7a-a30c-1830d876ade1",
        "cursor": {
          "ref": "bce4fd5c-c485-493e-9099-9c2d7a90a802",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ce09e6e7-08c6-4f08-8e0d-fe20042feae3"
        },
        "item": {
          "id": "4fd59abf-bf25-4d7a-a30c-1830d876ade1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9f08f7be-af00-4cea-9ce3-3076dc424469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638a8441-a409-4dc0-8904-8f4767b0f39c",
        "cursor": {
          "ref": "201cd774-94b9-42c5-8e51-8b5b4ecab0e6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4d1cab96-8b86-4268-9755-82cf9f081b1d"
        },
        "item": {
          "id": "638a8441-a409-4dc0-8904-8f4767b0f39c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5488c13e-dc95-40a5-9a9f-11cb5b871173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4284e14f-d066-4e35-8c86-5a5297d9f439",
        "cursor": {
          "ref": "d2dffe88-5917-4e5a-a9c2-18e081c1bf06",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4dbcb7f4-61b0-4b79-8eb8-33a40beb7f1e"
        },
        "item": {
          "id": "4284e14f-d066-4e35-8c86-5a5297d9f439",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "029ca82b-41d8-486a-a880-892b5e0724a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a6ecc8-eeb0-4dbf-8d17-02c623bda918",
        "cursor": {
          "ref": "a3512961-30f3-440f-a9da-4d8baecad763",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "35648aa6-574c-4b06-9271-87f6c9d1bb71"
        },
        "item": {
          "id": "03a6ecc8-eeb0-4dbf-8d17-02c623bda918",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8a9a3c84-2171-4f7b-8111-b3f5c75ab9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a4076e-723b-4bfe-af09-d33875fa90ae",
        "cursor": {
          "ref": "f13c78be-a1ce-4132-a2b3-bbc3f15839fe",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e2fba8a1-2913-4adf-8400-44a9068db58e"
        },
        "item": {
          "id": "b7a4076e-723b-4bfe-af09-d33875fa90ae",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5cbbd60a-af26-41e6-bcc7-d504ad57bf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a3d967-95e6-40fb-b411-2f0cf8c9d078",
        "cursor": {
          "ref": "fa62a071-bf94-478b-a125-6204aa2633d3",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7ecc56b0-4838-4910-a3e3-f03b9745d71a"
        },
        "item": {
          "id": "a7a3d967-95e6-40fb-b411-2f0cf8c9d078",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6aeb7ac8-355e-4e3b-ba11-9624f01a0a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef868e4-e964-48e8-961d-863483698496",
        "cursor": {
          "ref": "1dda9040-c08e-4bf2-8ee3-ede62e29d7a4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bc4a5b4d-ccb3-493f-a4d5-1449c580bb42"
        },
        "item": {
          "id": "2ef868e4-e964-48e8-961d-863483698496",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "db7c5182-f354-49b5-ba69-fb96d97b1f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f1bfd6-4b51-49a6-8acc-e6444be5be8c",
        "cursor": {
          "ref": "7ac78768-ef70-4aa8-ab8a-628a36a797ff",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5ec2caec-d6f2-4979-a02c-814e3d458d2a"
        },
        "item": {
          "id": "41f1bfd6-4b51-49a6-8acc-e6444be5be8c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c7f07e43-c3e9-43cb-a00e-77f87bf4cf05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f048034d-5caa-4186-afcb-95c06ea4c0d0",
        "cursor": {
          "ref": "912d0c5c-bfe1-42c2-b8c7-8c3e75e1d931",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "eaec69bb-c5e4-421f-b993-0db90ea3c440"
        },
        "item": {
          "id": "f048034d-5caa-4186-afcb-95c06ea4c0d0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3a0dd4e3-c937-41c5-b01b-126c12918562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d45800-ec38-433a-98a8-e788b9b9ff3e",
        "cursor": {
          "ref": "30c7a2d9-ffcd-4bcb-92db-d992d84cbaa8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "926534f6-529e-4618-bf29-e191169369e5"
        },
        "item": {
          "id": "b3d45800-ec38-433a-98a8-e788b9b9ff3e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e8d7439e-c342-47fd-8e47-a93e48b4aab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509aeb2f-4855-416f-8799-23fac18d01d2",
        "cursor": {
          "ref": "818a1499-3d5e-4584-9276-33a286044694",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6bc199aa-a061-4494-b281-55d6a26a0186"
        },
        "item": {
          "id": "509aeb2f-4855-416f-8799-23fac18d01d2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "beccb6e8-d134-402e-8745-04d2cf588d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88ed111-0905-42de-9682-26ac08fa8eab",
        "cursor": {
          "ref": "fc080c8a-3e54-433c-99ab-39f4be21cf5d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "44a431b5-8ba8-41b3-bbc7-ecc76e6ea3fe"
        },
        "item": {
          "id": "b88ed111-0905-42de-9682-26ac08fa8eab",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8406ac64-8c68-440b-87a8-5d65232eee99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c7cd48-f510-49f0-b41c-6c7962d96d4e",
        "cursor": {
          "ref": "e5a81a56-2329-48bb-b7a2-ffa3475092f8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f1442b6e-c9e0-40cf-8727-00db8ef024f5"
        },
        "item": {
          "id": "d8c7cd48-f510-49f0-b41c-6c7962d96d4e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "93bbcf83-6978-40b0-9258-0d23897c875c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f8b35b-c35e-4d2d-92a5-6a6f22b3ea2c",
        "cursor": {
          "ref": "e2c22e05-9dd1-46d0-b2b5-8571d40d73fd",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b8887fb1-2bd7-4d70-82d2-41e028fd63bb"
        },
        "item": {
          "id": "c9f8b35b-c35e-4d2d-92a5-6a6f22b3ea2c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b2ba877a-98e9-49b3-92b7-e56932c6ae86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9322dbb5-4f21-4b83-bf57-0f5ae5832bb6",
        "cursor": {
          "ref": "f5c9bad0-a8c0-4841-8a3e-771f25a1ba7e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9c02bec2-89c4-4f34-9b24-f9dfa784cc44"
        },
        "item": {
          "id": "9322dbb5-4f21-4b83-bf57-0f5ae5832bb6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b75a1015-4b0e-4704-8ff9-c8ca255520d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9fe7b6-9540-4c7f-b661-424d55f78602",
        "cursor": {
          "ref": "b17b78c6-d627-4ea2-a955-caf9339f3dc3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d5b68c20-58a9-479d-b0e2-767f1ca497e2"
        },
        "item": {
          "id": "dd9fe7b6-9540-4c7f-b661-424d55f78602",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "332a8407-777d-49db-8d79-b10a235db927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33aa09ff-9b9b-45b9-9f37-45c354dc6836",
        "cursor": {
          "ref": "b01c9efa-be07-4b78-bde8-520892a93443",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2cd9e5aa-5a15-4d2f-a520-6f21fbc529db"
        },
        "item": {
          "id": "33aa09ff-9b9b-45b9-9f37-45c354dc6836",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "244c0827-b5c8-48a9-b758-873d3c06d41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16348a35-ddd4-49cf-855a-64e891286586",
        "cursor": {
          "ref": "36b565f3-7b00-4d25-b1e5-fd8a604da238",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "79112dc9-e82c-48eb-ac61-3cd1a48af0c4"
        },
        "item": {
          "id": "16348a35-ddd4-49cf-855a-64e891286586",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "daf4e19b-2074-4de6-83b5-a4eb01022978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1d8629-424b-48b2-a70c-f71710fc9b95",
        "cursor": {
          "ref": "a8f8951f-0607-4c39-bf7b-c47d95fb01e7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "eca3cf38-14b2-4d3c-8d37-8fbc4789ec78"
        },
        "item": {
          "id": "8c1d8629-424b-48b2-a70c-f71710fc9b95",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d114c11c-6631-48f3-a6f3-1951bf553170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6769b9b0-a646-4e04-a769-e08b32d7a991",
        "cursor": {
          "ref": "a17b411f-609d-40b0-963c-9821956e53ad",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "142d98ca-3060-4bd8-9939-820e26ad0cae"
        },
        "item": {
          "id": "6769b9b0-a646-4e04-a769-e08b32d7a991",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3d1f54f2-d1d0-467a-bd0a-e02dfd4978cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614c485e-a38c-4879-8485-6b69a7198468",
        "cursor": {
          "ref": "16f81cff-f703-4291-bf79-d3ff8a11a863",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e48c1bd5-c7e8-4332-b463-e57306cf6c95"
        },
        "item": {
          "id": "614c485e-a38c-4879-8485-6b69a7198468",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d7587fce-1c44-47b5-9b85-abf8c6492d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec7b69a-44ea-47cf-80d0-430d99c631e5",
        "cursor": {
          "ref": "c1f0cdd4-d5db-492e-944d-fa00bcd9c367",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "99db783d-80c7-4875-99a6-9b14f24e6d30"
        },
        "item": {
          "id": "2ec7b69a-44ea-47cf-80d0-430d99c631e5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2555deda-8bc7-4d7b-baa2-9a1f2e2d028a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ddfaf6-2da1-4395-803e-95a0c1ab054a",
        "cursor": {
          "ref": "c5f06e83-8d8e-407c-9cbe-edcadf58cf72",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3a06bce8-7aa8-4d26-abca-f353124e2888"
        },
        "item": {
          "id": "45ddfaf6-2da1-4395-803e-95a0c1ab054a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "de0d1928-45e3-40d2-a3a1-5bcffc6dd16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450d059a-3b8f-4514-aef9-d2f71a3f3855",
        "cursor": {
          "ref": "e49aaf67-a949-4e91-93de-ef81c62cfa65",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c5c5432c-11d2-4498-9698-07fdb854aebb"
        },
        "item": {
          "id": "450d059a-3b8f-4514-aef9-d2f71a3f3855",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9dedb238-0db5-42ae-9608-962bc84e24e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83e70b4-0668-43b6-a642-b49114a7c726",
        "cursor": {
          "ref": "5d72b7b5-e920-4f22-be45-14d139b51daf",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3164d15f-7cea-41a9-ab54-065b80309931"
        },
        "item": {
          "id": "d83e70b4-0668-43b6-a642-b49114a7c726",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "06b25d8d-78db-4bf0-81f1-7f5d7b9dacc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47812951-102f-49b3-97fa-791d1681b083",
        "cursor": {
          "ref": "f598d1a3-460a-4e80-8908-931f17a391d0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "77fdd323-74b1-4424-9099-0ddffdeed4aa"
        },
        "item": {
          "id": "47812951-102f-49b3-97fa-791d1681b083",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b3c9a728-ba15-4bec-8ec3-5a5498fc74e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdb56ec-1ac2-4f50-9792-79eb8a9dff92",
        "cursor": {
          "ref": "b0994bdc-fabc-4d2b-9dab-f0628afb59c0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9a5c8190-9269-45df-8abc-ddc8217b8332"
        },
        "item": {
          "id": "bcdb56ec-1ac2-4f50-9792-79eb8a9dff92",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f001a9db-51a7-4137-800f-ebcdc8fcd02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad76b6d7-d5cd-41cf-96cf-a5eaaa0453fb",
        "cursor": {
          "ref": "a73fe691-7a95-4dca-b560-28d7103dbaa2",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "57e17cb3-30e2-405b-a513-746d0dd43d7f"
        },
        "item": {
          "id": "ad76b6d7-d5cd-41cf-96cf-a5eaaa0453fb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "aaf9d50f-4b0b-4461-8121-c188a9ff2f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c41a96-bfd7-4a8c-85bf-46efbf687bbd",
        "cursor": {
          "ref": "5c3c8cc6-e673-4db8-8bc3-b33b10742965",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cbb8064b-cdd3-46aa-a08f-1c0bbc01bbab"
        },
        "item": {
          "id": "69c41a96-bfd7-4a8c-85bf-46efbf687bbd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a687c633-1a83-4440-83e8-8331fd2409a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40285d85-5977-43b8-a722-3bbae1f844cf",
        "cursor": {
          "ref": "6a9c0a89-5654-4628-afc3-587226cf616f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "037e2873-f7f2-43b3-b794-7bf0f9b6ba5c"
        },
        "item": {
          "id": "40285d85-5977-43b8-a722-3bbae1f844cf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "da360c2c-3015-4370-802b-ce70e72691bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169530ee-2bfe-4812-98bc-a5db2303b76b",
        "cursor": {
          "ref": "63a977ca-6512-4877-bd24-94c32a35f26a",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "03845687-7d22-412c-811a-c0e0be9ad983"
        },
        "item": {
          "id": "169530ee-2bfe-4812-98bc-a5db2303b76b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b17c870c-9238-40d6-93f4-b2a20aa1bbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c59159-806d-46c8-8c40-ad1f2dc9aed6",
        "cursor": {
          "ref": "40744d1c-f367-4d4b-916f-8ddd3462dc09",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5e1b0618-79c0-41aa-a20d-4108ed464870"
        },
        "item": {
          "id": "23c59159-806d-46c8-8c40-ad1f2dc9aed6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ab75c52f-a704-4f83-9ebb-a19d75be1693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12521e73-bbfb-4349-8866-c13c48605a9c",
        "cursor": {
          "ref": "636c9018-3373-4b1b-b9bf-1338dd3f022c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "98f14c92-8877-425c-bc48-7db138504913"
        },
        "item": {
          "id": "12521e73-bbfb-4349-8866-c13c48605a9c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "23f62f81-5e0b-48cd-be93-97ab37126d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc09227-3ba5-4eea-9c57-eec2b4e001fa",
        "cursor": {
          "ref": "b7a198a2-04d2-4c98-a0b1-93ffda9f1464",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "53a54e33-5e59-406e-8f16-fe37c981c4c0"
        },
        "item": {
          "id": "1cc09227-3ba5-4eea-9c57-eec2b4e001fa",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8a60d1ca-58db-409b-bb6e-05a61dc24fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046d42dc-b0e9-458e-ba3f-2270d7c8e9f6",
        "cursor": {
          "ref": "28764b32-7b89-4523-8fed-6cc25d07a822",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bb7a5d08-d3c0-4b5e-a657-b26dd3f6a3bf"
        },
        "item": {
          "id": "046d42dc-b0e9-458e-ba3f-2270d7c8e9f6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1af454d3-1909-410c-9071-13af82e500f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bd39ef-edef-42f3-b2c0-c9e83d3cb0e5",
        "cursor": {
          "ref": "d3ff087e-b73c-46b7-a4f7-6613a3fa7f75",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7c9eec56-6444-44da-a54f-00da7405527d"
        },
        "item": {
          "id": "43bd39ef-edef-42f3-b2c0-c9e83d3cb0e5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4ac741eb-52d2-4c7f-98b0-5db6bbf99b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2b86d6-6140-42c6-93ae-fd4cf926bb7b",
        "cursor": {
          "ref": "866117ba-0ef2-4f4a-b962-2668c0c063b8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "13ad4e7e-f9eb-4e28-81ff-78bb90e7fb92"
        },
        "item": {
          "id": "ba2b86d6-6140-42c6-93ae-fd4cf926bb7b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7c0701d2-36c4-40ff-aad7-6234cc8030c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f7fb8f-95b6-4add-8c99-ed45a275811d",
        "cursor": {
          "ref": "e60cadd9-0f89-48ce-adb0-4065deb4ea6e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "89bf16ba-2271-4410-aa70-5ab5c517fef2"
        },
        "item": {
          "id": "49f7fb8f-95b6-4add-8c99-ed45a275811d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cf08221e-0ac9-4987-8d89-17c5c65a4559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379088f5-6284-4ed3-84ad-198d57313b56",
        "cursor": {
          "ref": "18eab8aa-da69-4abe-bb34-a05613b4485b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "160b5a11-0a4e-4a73-9898-a44fa9b3ca1a"
        },
        "item": {
          "id": "379088f5-6284-4ed3-84ad-198d57313b56",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a559b70b-d03c-44a0-9fe9-7493e357fbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c4875d-4606-4b81-a49d-0af271df6481",
        "cursor": {
          "ref": "b14686d3-91aa-48d4-8870-c6edc566a086",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d2a9ff2e-4fbb-4678-9656-f0c38691199b"
        },
        "item": {
          "id": "24c4875d-4606-4b81-a49d-0af271df6481",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "19a48924-af20-4546-a306-9e1eaf5a190d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19ac1db-063c-4d54-82c8-254026de6641",
        "cursor": {
          "ref": "9105f683-2b8f-4631-ae99-2eba12110560",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0beb3f8e-6bac-4820-a50b-08b75169a83c"
        },
        "item": {
          "id": "f19ac1db-063c-4d54-82c8-254026de6641",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "16145e9b-ea7b-4725-beda-15f5f7a554c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658cc96c-0760-44ff-9aff-8d5d2b254161",
        "cursor": {
          "ref": "67f76450-6ca4-4113-8691-73e8081f42be",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1f77f7f9-70e8-4be8-8d18-6367c8276432"
        },
        "item": {
          "id": "658cc96c-0760-44ff-9aff-8d5d2b254161",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "78993093-3339-4f78-b7c6-e5029c748fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cae6242-695e-475e-aab9-6bd9d613710f",
        "cursor": {
          "ref": "3c244c22-5933-4614-a4fe-f258ea0b77fa",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2bad8220-71ae-486e-a2c6-5874792687a8"
        },
        "item": {
          "id": "8cae6242-695e-475e-aab9-6bd9d613710f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3534ef61-353d-4cc4-964f-2dfff61a75d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9601562-6a30-4982-83cb-9dfc69020d5a",
        "cursor": {
          "ref": "f3ab9825-0fb2-4ee8-8475-4cc3b91b4f43",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "09bd84b5-403d-4b9a-9bda-bd0c450ec000"
        },
        "item": {
          "id": "b9601562-6a30-4982-83cb-9dfc69020d5a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "69809843-1ebb-484c-a38a-b3b6c29f019d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01281f7-3190-491f-96f3-ae4908199b0f",
        "cursor": {
          "ref": "8f473f3e-13fb-4e16-922b-fda018857d00",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c60a675a-3ca6-4e3d-8b3c-eb3d816ddef4"
        },
        "item": {
          "id": "d01281f7-3190-491f-96f3-ae4908199b0f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "88cb55e2-d309-4c90-8978-9edc4fb59285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690df028-a60f-4b0e-92b8-8c57efee2c49",
        "cursor": {
          "ref": "9f6bd6c2-f279-45c5-a26d-8c3c99a0c7b3",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6b2f4123-f8ff-4c6a-90a5-dd4524bc467b"
        },
        "item": {
          "id": "690df028-a60f-4b0e-92b8-8c57efee2c49",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "505c79fd-a449-43d0-afc9-af5a550a784f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f45dcb-dbdf-4523-8f85-5ba2216193bb",
        "cursor": {
          "ref": "b7febba8-6e0c-4b4c-9a8f-92bee03b31fb",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "35e00b1d-4fc5-44cc-a885-5af60b4e6ea0"
        },
        "item": {
          "id": "16f45dcb-dbdf-4523-8f85-5ba2216193bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f2e81cb8-1270-4530-bed3-48498a159761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2eae28e-2ff3-456c-ad87-ff281260ef86",
        "cursor": {
          "ref": "f72612f2-dd70-426d-9dfe-b0d981a683fa",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5399f61f-a89b-4d17-aeb2-c8d7a95e5b01"
        },
        "item": {
          "id": "f2eae28e-2ff3-456c-ad87-ff281260ef86",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bb05c257-ddee-4791-a7ef-860ee8d52b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a00815c-abf3-4648-833c-a1574834cab6",
        "cursor": {
          "ref": "7adacac5-8027-4ed0-9471-bbd3eec1a047",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "841d6b2c-2c6d-493f-8c26-6ba531b922f2"
        },
        "item": {
          "id": "6a00815c-abf3-4648-833c-a1574834cab6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d904bbe6-9736-4a4b-aa39-6e8d669e6c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1577e32-5822-4ae9-a4e7-da4ae313db91",
        "cursor": {
          "ref": "2972f711-e9a2-4f55-aa9c-34d60857fbb3",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "122496c8-c72d-418e-9091-866f6b6ebc54"
        },
        "item": {
          "id": "a1577e32-5822-4ae9-a4e7-da4ae313db91",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6e9b11bd-ed4c-435b-8fb7-d5ab0a1347a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe024d97-a9ff-4993-a64c-e6ae2a8875e5",
        "cursor": {
          "ref": "1e857e81-e0cf-4abd-9cb9-f39115933ab0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bfdda7d8-ff7a-4fdf-8542-6f06de9bd953"
        },
        "item": {
          "id": "fe024d97-a9ff-4993-a64c-e6ae2a8875e5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "80bb5f29-e032-4c34-ac8b-cafdf48edab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eefafc-800c-49d3-959b-5558814c1f8a",
        "cursor": {
          "ref": "68fcf390-5fed-44a6-9d42-1a47e62df6d1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "19ec323f-99b4-48aa-81a7-ec65a904fbae"
        },
        "item": {
          "id": "d6eefafc-800c-49d3-959b-5558814c1f8a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "71220f69-e767-46e2-bfbb-88041cc68a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30171d79-30d6-479f-924f-c98fa7108078",
        "cursor": {
          "ref": "0c4b8389-1a77-40a3-beff-57540d640ba4",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f7486aae-2a81-47cd-bd4c-83286238c864"
        },
        "item": {
          "id": "30171d79-30d6-479f-924f-c98fa7108078",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "641dfbf2-0509-457f-9ee5-a52a0d955aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4d9cd5-e290-45ea-91fb-623377fa9291",
        "cursor": {
          "ref": "3ceeeb16-d514-4203-a528-fd41cf12a70a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d5edd911-d342-4f7f-a0da-e756064fecfa"
        },
        "item": {
          "id": "4e4d9cd5-e290-45ea-91fb-623377fa9291",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cd6dbd30-6cd5-413c-b885-88f4d8c716b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2257609-310a-4d8d-a127-526e229af779",
        "cursor": {
          "ref": "a23bd6ab-e380-4f84-a837-91e9dd2f6ff5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e7b894d8-d633-47cb-8a05-ec90101f88ff"
        },
        "item": {
          "id": "a2257609-310a-4d8d-a127-526e229af779",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a0933276-20a4-42c0-a373-a33bf51d9463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20fcfa7-271d-4f4c-8baf-ad7bffdaf9bd",
        "cursor": {
          "ref": "7b52fd6b-491c-4e85-89de-796c4e8fee31",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8f5886b4-1a4b-455a-891d-d5ee7ef05d36"
        },
        "item": {
          "id": "f20fcfa7-271d-4f4c-8baf-ad7bffdaf9bd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1aa1a4ea-2d6e-41c1-9a11-b1e9c8c0efd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e97ecef-e9a9-4c5c-ae9e-49fb8467c4e8",
        "cursor": {
          "ref": "e29488c0-105f-4697-9aea-3f458de55f87",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e95f0647-f90b-4eff-a716-d537abaca88b"
        },
        "item": {
          "id": "6e97ecef-e9a9-4c5c-ae9e-49fb8467c4e8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ca8d1d0c-b436-43b0-af5d-97a55de72e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0eff67-a408-4d12-800a-6bce9662d848",
        "cursor": {
          "ref": "60fc647c-445f-4892-be46-e9d577ce90c1",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0861f62f-9da9-42fb-98c6-1db61d9ae26e"
        },
        "item": {
          "id": "6e0eff67-a408-4d12-800a-6bce9662d848",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ea15ba6c-0bdc-4591-ba45-afc51f10c768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cf7225-e0fe-460e-a38f-a8ab0d4ac099",
        "cursor": {
          "ref": "4ecc7799-4b36-4efe-aa38-5922cc30d2aa",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "20873b8f-271e-4b7f-b3d1-b79f05609ac3"
        },
        "item": {
          "id": "26cf7225-e0fe-460e-a38f-a8ab0d4ac099",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "84a455a7-eae9-464a-9660-3917962aec49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000f95da-1ff9-4471-b086-5424889b0071",
        "cursor": {
          "ref": "2f22bffa-bff1-4c3f-9575-5983d3a84dae",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "830c0f58-8a68-44a2-bb84-7a7cc030cf86"
        },
        "item": {
          "id": "000f95da-1ff9-4471-b086-5424889b0071",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3565c31a-7e9a-4ade-8e10-ed59ef53ecf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b635024-1c97-470e-b289-38dbdc5d6ce5",
        "cursor": {
          "ref": "39245f9b-68b0-40b0-92e3-be71e7b44f50",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d87e3107-60ee-4496-966d-6f845a2315d2"
        },
        "item": {
          "id": "8b635024-1c97-470e-b289-38dbdc5d6ce5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "185e37a9-2614-480c-9ad2-c6ae8ddcec10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2cca59-3375-4d75-959d-cb95ff790985",
        "cursor": {
          "ref": "7b1eadd5-07c6-4eb6-8fb0-bcc3d9740cfc",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bcbb8161-143b-4da7-8e97-354a975ed6ba"
        },
        "item": {
          "id": "5d2cca59-3375-4d75-959d-cb95ff790985",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c9f5e0c9-8571-4b70-81e5-340dc2fcc58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9862c5-bbc1-4b59-ad5f-7e135b32aa98",
        "cursor": {
          "ref": "bcf18bce-ad8a-4fc4-a0ae-ca4627d3ed73",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9a40fd46-e753-4470-9420-94c6a2f4b674"
        },
        "item": {
          "id": "3c9862c5-bbc1-4b59-ad5f-7e135b32aa98",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5d48c47c-a86d-4239-98b0-c9d996124239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f38733-86f4-4f2c-a91a-1aa3af3dba2a",
        "cursor": {
          "ref": "389b41ec-eeed-450a-be50-a1b276858769",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7bbc1692-99fb-4742-8815-b9a2a19260f5"
        },
        "item": {
          "id": "14f38733-86f4-4f2c-a91a-1aa3af3dba2a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2b5fb1f1-8f47-41b6-b087-4ff877b4bf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb47bd33-f986-4b43-a400-bd8d75e19d17",
        "cursor": {
          "ref": "c515f494-af88-4d86-9aa7-cada5bd98cb1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7b7c4323-975a-48de-ad33-485aff24bb59"
        },
        "item": {
          "id": "bb47bd33-f986-4b43-a400-bd8d75e19d17",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "236b17b4-dc24-4ea9-9351-8992cd918d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009cd40a-b583-40e4-a3bc-4ed8402a29cb",
        "cursor": {
          "ref": "3c54ea7b-b7df-49a2-ad62-9cdf8e7d5fb4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c5780339-53ec-4f61-bd7a-ba98f627ab52"
        },
        "item": {
          "id": "009cd40a-b583-40e4-a3bc-4ed8402a29cb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5540e3ed-2fe1-444f-aaa6-924ede2d9d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f144a9-50de-47df-892b-08e61f8c26f4",
        "cursor": {
          "ref": "381490c3-7301-4f45-ac43-30460b70c3c4",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2d45684d-9415-495b-bf93-7f337907a534"
        },
        "item": {
          "id": "80f144a9-50de-47df-892b-08e61f8c26f4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b314237b-2b30-45f5-b135-bbe07b28524d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b744124-da20-4f12-8a45-ae5003706c60",
        "cursor": {
          "ref": "dfb72798-ee26-4b63-b75c-6a1c632ef6cf",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "52272cb3-2649-4c66-b58d-87edffbd4dc4"
        },
        "item": {
          "id": "5b744124-da20-4f12-8a45-ae5003706c60",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3cb244b9-586e-4b96-beeb-399d252b0f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c6f6b5-ccf6-4b5a-afec-ed4eba054ddd",
        "cursor": {
          "ref": "e266ad2d-afb4-4cd1-9b9c-19259aa625db",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1f1b3e5e-3359-4958-bed1-8e4e1f048794"
        },
        "item": {
          "id": "d2c6f6b5-ccf6-4b5a-afec-ed4eba054ddd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "28fed2a6-9b5f-41d0-97c6-5e6cc99ec119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d47ad6-1971-41df-b9e4-14d5b72d387a",
        "cursor": {
          "ref": "b26ee834-3114-4c82-8a25-9e5e97bdd006",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "20c0f16f-bb23-437c-8538-07ee0fc30048"
        },
        "item": {
          "id": "09d47ad6-1971-41df-b9e4-14d5b72d387a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bfb59a1a-5eb1-4a77-bd94-5392677938e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e583e1d-5774-429d-be78-ada1e043ce1e",
        "cursor": {
          "ref": "c8e4056d-6d32-4547-8340-ae6142030241",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6fde3356-8d47-4725-8417-1e2feffe5975"
        },
        "item": {
          "id": "0e583e1d-5774-429d-be78-ada1e043ce1e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "14a7b703-e43b-4579-a559-5e8aec945c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2155f320-1c9d-40ea-97fd-34b3549cd64b",
        "cursor": {
          "ref": "8c4d1e9d-9100-439f-91fa-3189b3660c67",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8e07efd3-77a4-4fd5-b56e-5c6e8c22029f"
        },
        "item": {
          "id": "2155f320-1c9d-40ea-97fd-34b3549cd64b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6bb29211-d94b-4149-b2fe-674e9d5b12cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af292be-7ef7-4bce-9026-d1a61eb1b542",
        "cursor": {
          "ref": "11ebb1d3-058c-425f-ad8a-ae85e43a0618",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3a90386c-47b8-47e9-a1ce-d20b8c057d89"
        },
        "item": {
          "id": "3af292be-7ef7-4bce-9026-d1a61eb1b542",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1fdffb97-a909-4475-a665-5efbd703a11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbc58d7-f0f9-4b48-af63-58524015ba29",
        "cursor": {
          "ref": "4f4668dc-a86b-4078-b7c3-3a5eea7ea41c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2416cbdb-0886-4773-aa7d-0ebc9a60560b"
        },
        "item": {
          "id": "bbbc58d7-f0f9-4b48-af63-58524015ba29",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2bea91fe-8f8e-4342-afc2-a350e21e7193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec0ad15-e468-4e19-a0fe-9f245f5a2f8c",
        "cursor": {
          "ref": "25e60ab1-595b-4e71-82b5-cc02531c2789",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0ce3ca0a-a3d6-4b8a-9f09-38a95492fddb"
        },
        "item": {
          "id": "0ec0ad15-e468-4e19-a0fe-9f245f5a2f8c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1a7d0ed3-6199-4e5e-9110-35b729ca5394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf009fe-829b-4d73-b99b-d6233d370647",
        "cursor": {
          "ref": "2512f181-4ad0-488b-bb55-baad06d2aba4",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dcbd2a99-af9d-4e73-b6fe-91381b310f7c"
        },
        "item": {
          "id": "acf009fe-829b-4d73-b99b-d6233d370647",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "37e39e56-a09b-41a6-83fd-772c83d73439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3757737b-5480-4b9b-b433-4c20fef30fa0",
        "cursor": {
          "ref": "efbe0f40-ab1b-4871-a2a5-45962e000371",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3e94057e-18f4-4bec-b7d2-18ac5f3d934f"
        },
        "item": {
          "id": "3757737b-5480-4b9b-b433-4c20fef30fa0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f085e145-ae28-4aad-8cf5-349e08b4f02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbac6cfb-32a2-4655-8c70-7412ff51fbf3",
        "cursor": {
          "ref": "c910911d-0c3f-459f-aca3-7ffc757eaee2",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1ffa6c0a-78be-4f71-874c-2756403a0de3"
        },
        "item": {
          "id": "cbac6cfb-32a2-4655-8c70-7412ff51fbf3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1cc996d4-4e24-4ef4-b651-afabd7cbbfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910993b0-4088-4b22-89f5-0b1ea03c9bb6",
        "cursor": {
          "ref": "59c343a8-2d44-4d55-a618-a57afcc64a06",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3b03c880-160d-4daf-ab3e-be7591fbaba9"
        },
        "item": {
          "id": "910993b0-4088-4b22-89f5-0b1ea03c9bb6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5112ac04-8f8e-4fea-8eec-612e633264fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4f79ed-726e-4e96-a80f-87e741ba4a0e",
        "cursor": {
          "ref": "4991c5d3-09b8-4b13-8934-234315c6aaaa",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "20ff1b4e-1624-4bc8-93ae-c0b03b1a13ac"
        },
        "item": {
          "id": "cf4f79ed-726e-4e96-a80f-87e741ba4a0e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f1e4e51a-853f-48ed-a5ad-a2f752e255e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98839c32-0c21-45d2-872b-3e77c8df4487",
        "cursor": {
          "ref": "28a45604-9c38-4ac8-9792-ed8158b9cff0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2a139e79-3b7e-4161-a807-50c94506cf8d"
        },
        "item": {
          "id": "98839c32-0c21-45d2-872b-3e77c8df4487",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d78163c5-3793-43c5-86f3-1917aad0c45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f57f00c-3047-4ed1-bb7c-2e26b5584d79",
        "cursor": {
          "ref": "d1a924d9-8af0-4d75-bf10-6e86c86e7c99",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2f4a053b-01e1-4d7f-b260-ed65ba872653"
        },
        "item": {
          "id": "1f57f00c-3047-4ed1-bb7c-2e26b5584d79",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "848104a9-df5b-425e-b149-da37e3b14ce5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 103,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8613a8-8704-435a-8a3a-380f553cf996",
        "cursor": {
          "ref": "e818c178-b703-431e-b7b1-a73b82d26551",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3c506268-c221-4b9d-a9e8-46c95ca5dce0"
        },
        "item": {
          "id": "ff8613a8-8704-435a-8a3a-380f553cf996",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "309b6acd-6b6c-41d6-8463-e2619cd03952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c7fa1d37-539f-4e76-ab5b-62e671c43ccb",
        "cursor": {
          "ref": "6b5f1b78-43e2-4821-8c43-cfc725988146",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "06c5aedd-5ddd-4703-b273-9eb3354f8ff3"
        },
        "item": {
          "id": "c7fa1d37-539f-4e76-ab5b-62e671c43ccb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9f8960ec-d69a-44ac-9844-5fdd95ab7fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "25a76a1b-16a3-4be4-b2ec-7535763cf0b7",
        "cursor": {
          "ref": "021de514-f582-4be5-a299-2e3a14db08ff",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "250bd6db-95ad-4596-800c-a6d874239e54"
        },
        "item": {
          "id": "25a76a1b-16a3-4be4-b2ec-7535763cf0b7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a7048e86-caac-421f-b5f5-2d854b6245a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8acaabdb-71d0-4271-8821-8d6a29532f9b",
        "cursor": {
          "ref": "bcac1202-9168-457a-ac99-1d248625c3cc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aaa7dcc5-01fa-4c10-991f-49528f6ab39f"
        },
        "item": {
          "id": "8acaabdb-71d0-4271-8821-8d6a29532f9b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "85b9dafa-28bf-4ee3-b29d-46a5aca1f8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "667e6757-c890-4d2f-b303-0c4de04687ae",
        "cursor": {
          "ref": "05c62855-37cd-4409-beb1-fe63f239a633",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f950164d-727c-4d14-b339-a0ae0aad60af"
        },
        "item": {
          "id": "667e6757-c890-4d2f-b303-0c4de04687ae",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cd285487-56b5-4911-99c0-3d9be6109ded",
          "status": "Created",
          "code": 201,
          "responseTime": 9716,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbcb32b-b786-4fae-92d7-24d2d9c14ab9",
        "cursor": {
          "ref": "d4b399f6-2d7a-4af7-85b0-5c011b65734e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "488c7642-b0ad-4d8e-a6fb-75c396a9cf61"
        },
        "item": {
          "id": "dfbcb32b-b786-4fae-92d7-24d2d9c14ab9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1316dece-2fe1-4374-b899-8938c37f24ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c559c50d-5fa7-4dda-826b-960e388dbb8d",
        "cursor": {
          "ref": "c7cc604d-5355-46d7-b421-4d936f2f3229",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c179099c-aa5d-481b-bae7-ca4e3791d659"
        },
        "item": {
          "id": "c559c50d-5fa7-4dda-826b-960e388dbb8d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8adc50e8-4a99-4892-a3b4-6ec422093a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e349c6a2-d669-40f6-b13d-8f66d0fb8241",
        "cursor": {
          "ref": "af531266-61b8-409e-8aea-5c90ef8acd02",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7b4d3865-3b64-497a-9423-0bed895f3a4e"
        },
        "item": {
          "id": "e349c6a2-d669-40f6-b13d-8f66d0fb8241",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "641c70f7-3595-4da1-a65d-e6b6180c81ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b1e438-eff1-4470-ae7e-23461947f272",
        "cursor": {
          "ref": "652892ed-f292-4448-834e-4fb7428f9cd9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a3296c30-4744-4dca-99bd-e568ddb9feb0"
        },
        "item": {
          "id": "f5b1e438-eff1-4470-ae7e-23461947f272",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ccedf597-64a3-4b93-a346-797865160057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b60f56d-e236-464e-b54a-bd2ea51c03e1",
        "cursor": {
          "ref": "93cd63b3-7af9-4916-85ec-8093191e9913",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c9d473d8-5aef-4db1-be73-234d38e3830b"
        },
        "item": {
          "id": "3b60f56d-e236-464e-b54a-bd2ea51c03e1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f38c47c3-1bb8-43d0-9da3-49f6920f7e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3105fff-7f1b-4341-bdf1-7b46276987bb",
        "cursor": {
          "ref": "5b9ff4d9-28c3-410b-a997-6a8ffb6ec039",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4d3a8543-9bc7-4f55-b726-1dc49683fffb"
        },
        "item": {
          "id": "f3105fff-7f1b-4341-bdf1-7b46276987bb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ff841db2-ae0a-4980-a4f0-a94da7da2131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e891305b-4d23-4d25-97e2-ff97ac72da01",
        "cursor": {
          "ref": "ac3980d3-6c28-46ea-b080-627f8ea0a9de",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bca0994d-0825-4e3d-aea5-6b1547cd9277"
        },
        "item": {
          "id": "e891305b-4d23-4d25-97e2-ff97ac72da01",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dd9ea49c-fef2-4923-8010-c3aa51cac145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0472056-a1de-4b64-977c-16944fa7b73e",
        "cursor": {
          "ref": "e8f387a6-5dab-4091-8163-7730a7682b42",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6abbdd4f-f203-41d1-910f-fcd036c232fe"
        },
        "item": {
          "id": "a0472056-a1de-4b64-977c-16944fa7b73e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "02a90781-d5e3-4b5b-a3f2-ff2fc2744dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b805f6-59ad-4dfa-8146-aaa5bb551ad9",
        "cursor": {
          "ref": "3efdec8a-8418-4a0b-ba22-d08370075cea",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "58fae7d6-7d2f-4012-8d1e-3086a30b4c88"
        },
        "item": {
          "id": "17b805f6-59ad-4dfa-8146-aaa5bb551ad9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d58e614c-d1a9-4a2a-b97e-0471a88c13ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef4722b-dca6-4dd8-a386-28fcf1828a10",
        "cursor": {
          "ref": "366daab4-2655-4961-ad57-bfcf5e8a3601",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "21364e9e-e566-49d4-b732-0f5ce6a08cd5"
        },
        "item": {
          "id": "8ef4722b-dca6-4dd8-a386-28fcf1828a10",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "174a2efc-adaa-40ee-97b5-470327ce038d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddd80f8-d22c-4802-85e6-97bee6d35a26",
        "cursor": {
          "ref": "8b5ac24d-ed08-43ab-a1f9-1bcdde05fc13",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8dca7777-03d2-468e-bf19-e1a235eaa4f3"
        },
        "item": {
          "id": "1ddd80f8-d22c-4802-85e6-97bee6d35a26",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "98388f96-9c83-4e5f-b152-877982ad0092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ee4b96-f70e-46fe-929b-b65b2a06c7e1",
        "cursor": {
          "ref": "4be77638-8405-47d9-a235-e49bbfe3988a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e36ec685-c533-4c04-b812-cfbd29dac357"
        },
        "item": {
          "id": "23ee4b96-f70e-46fe-929b-b65b2a06c7e1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f439ac03-4b0f-47ec-84ed-b7c8adb55fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af657469-c298-43be-8333-f81838483625",
        "cursor": {
          "ref": "d70750b5-6834-46dc-9469-e70faf6958b0",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "73c2c963-f36a-4626-b56f-003df4327c22"
        },
        "item": {
          "id": "af657469-c298-43be-8333-f81838483625",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f14fbab7-4819-48e9-8a83-3eab59f6e955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0335e4-07e2-4698-abf7-ea3cbd7848a4",
        "cursor": {
          "ref": "f9a6c99f-99dc-45a0-bb2f-41010fb7681c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fd113621-48d9-4c48-98fd-d3b2472b50fb"
        },
        "item": {
          "id": "9c0335e4-07e2-4698-abf7-ea3cbd7848a4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "96fe91cd-9019-4ae9-97ce-7898b9815419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e26a498-3035-40b4-905f-fa45e431c33e",
        "cursor": {
          "ref": "6180761c-38e0-4f58-bb13-46614f774784",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fc0b0484-ea8c-4ad6-80c8-48ff59e79f1f"
        },
        "item": {
          "id": "4e26a498-3035-40b4-905f-fa45e431c33e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0e792f19-07e4-46c6-a763-47ac5dbec834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c150b602-cf55-4e83-840c-ef5f573ce43f",
        "cursor": {
          "ref": "01342117-8d3a-4f55-bda7-ce0fdb573cf5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8a067d76-53b5-4d99-a66c-422f892ed7d5"
        },
        "item": {
          "id": "c150b602-cf55-4e83-840c-ef5f573ce43f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "59a20c03-09b7-490a-85be-11c07d70d695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5cefd7-07b1-41d4-9cb9-9fb992616831",
        "cursor": {
          "ref": "0d8da289-ecb7-4cd9-aa9c-b76b362b9cd3",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f1d400a9-bb1a-4beb-9c81-e0a85f436c1b"
        },
        "item": {
          "id": "5d5cefd7-07b1-41d4-9cb9-9fb992616831",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c4c00887-5aed-4c9c-a128-ddb44f946ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575bd0c3-3938-4d2c-975b-ff14c385c7b6",
        "cursor": {
          "ref": "6f231b66-cf2d-4ae2-8c3f-8e517f02ed08",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e14a4a31-0254-4a6c-bc89-48e9be681f96"
        },
        "item": {
          "id": "575bd0c3-3938-4d2c-975b-ff14c385c7b6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "61a6949c-b31e-43dc-9041-317cabc05537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e50956-3d0d-45ba-b90b-c7cd7e52319d",
        "cursor": {
          "ref": "29dd6d66-d268-4146-be43-11b1d67ae15f",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "059e836a-2aab-4d80-9fc5-3da25fa903ac"
        },
        "item": {
          "id": "d8e50956-3d0d-45ba-b90b-c7cd7e52319d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "04d14066-b69c-4736-a1ec-50a127650168",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "444344aa-c3f1-4bbd-8c32-25598d5ade04",
        "cursor": {
          "ref": "cd3901a5-d389-4cde-b08d-342023d559c6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9d942b34-d4b1-40f0-8af7-0e3eb94c7697"
        },
        "item": {
          "id": "444344aa-c3f1-4bbd-8c32-25598d5ade04",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f99b9725-9e77-4c75-845c-9eb39366dab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6521517d-d8c9-42ff-ab9d-82e93e7c578d",
        "cursor": {
          "ref": "46c9822d-b0a2-4307-965a-bebb7f08a49a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aedc8f27-5965-4f91-aac2-b4a5551683e4"
        },
        "item": {
          "id": "6521517d-d8c9-42ff-ab9d-82e93e7c578d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "85998956-4d92-466b-910f-e729a495397a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8558e87-b3e5-4111-930c-6055a0b7125a",
        "cursor": {
          "ref": "59439965-6ff6-40ee-992f-90fd4810717c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6b01f3c2-591e-42f4-bf7e-fb1e8dac2f40"
        },
        "item": {
          "id": "a8558e87-b3e5-4111-930c-6055a0b7125a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7d40687c-951d-49c8-879c-2ce9823be99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebece12-befd-4ea4-b1e0-57b48001483c",
        "cursor": {
          "ref": "1c9968ee-00b2-4602-9b76-f9d82c04b96f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1ffac169-bcc2-4950-8763-68f7be5908db"
        },
        "item": {
          "id": "aebece12-befd-4ea4-b1e0-57b48001483c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b76c34a1-6364-4353-a998-43e10a5f18f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b2c54a-d1d3-4c84-a62e-0443ccc07052",
        "cursor": {
          "ref": "2b3b6447-b0e6-44bf-964b-915d7ba0a2df",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f915ca8d-cd14-40c7-92b8-0fda8291d454"
        },
        "item": {
          "id": "86b2c54a-d1d3-4c84-a62e-0443ccc07052",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "571acf6c-0865-46d6-b0ad-fda47942c0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b27a9f-807d-4419-aa6d-ec8bb9a2c358",
        "cursor": {
          "ref": "13cd959c-7809-481c-974f-1ac631c6f6c5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "98190aa0-1e5a-47ef-ac62-0c39c09a015c"
        },
        "item": {
          "id": "f0b27a9f-807d-4419-aa6d-ec8bb9a2c358",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "061a9558-e9f9-41df-bbe6-41bb47c06a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58b456f-9a64-43f5-95b5-2037fde657a9",
        "cursor": {
          "ref": "065e6ddc-4b68-41dc-a148-eec00390e86e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d5c17b82-4201-482e-86ba-e77851a8738a"
        },
        "item": {
          "id": "f58b456f-9a64-43f5-95b5-2037fde657a9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8b4b612a-3e72-4a6c-a231-edd76f292f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c028167-f286-495d-8ea0-d243a03ca34f",
        "cursor": {
          "ref": "6868a438-09a3-4dd1-b84c-b1a8e3fa9e92",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b257040d-f158-4cfc-ba34-3866efeba4c5"
        },
        "item": {
          "id": "7c028167-f286-495d-8ea0-d243a03ca34f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f159e55b-9d7a-4c51-9c46-a0293f08ccf0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "d930277e-d438-4596-af06-88db509a5a1b",
        "cursor": {
          "ref": "27d3d851-eaf4-46f4-ad21-059c01bc7dfb",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6f227444-b153-4996-be07-ec91019c701d"
        },
        "item": {
          "id": "d930277e-d438-4596-af06-88db509a5a1b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "531e1306-60ef-448a-acb9-2a29aa9989f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19fa5c9-e3fe-47bc-8705-9090f43b9736",
        "cursor": {
          "ref": "dae22195-8ea1-4633-a4ed-062ee0aa96f3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6f1f9cea-e1a0-42f3-baa2-6d6ceebeaa44"
        },
        "item": {
          "id": "d19fa5c9-e3fe-47bc-8705-9090f43b9736",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "73550a4e-b226-4c34-8782-1ceef07d2a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687e83f1-48c0-414f-a4a2-e83d8597b821",
        "cursor": {
          "ref": "ebd4e689-dd4d-4a79-b74e-e7f46de8165d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "83606ec2-610f-4265-bc01-1183987edde5"
        },
        "item": {
          "id": "687e83f1-48c0-414f-a4a2-e83d8597b821",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "023874cb-64f7-41f5-8de9-24ba52a8be0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d0e096-1472-4637-ae3b-cfd35d7a8112",
        "cursor": {
          "ref": "42cd81e4-1fe7-4b57-ae27-14c50e35b445",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "73edad7e-c693-4437-8b82-fa36ba896e74"
        },
        "item": {
          "id": "c9d0e096-1472-4637-ae3b-cfd35d7a8112",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "76aaa9e6-2a9b-457d-81e3-a47b3ed154fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d141793-5b30-4ad5-bf9b-03ccfbeac088",
        "cursor": {
          "ref": "37a8dea9-cb10-4f0a-b906-514993d7dfc8",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "782c6295-35d0-46a1-885a-76ec172f06fa"
        },
        "item": {
          "id": "7d141793-5b30-4ad5-bf9b-03ccfbeac088",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a9bb808e-3fc9-4a25-b538-1f6e7d8d33d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0dfbc1-eb2b-41d5-afeb-e5e8c6f18f74",
        "cursor": {
          "ref": "dbccc608-8384-4fbc-b065-7865c02bf3eb",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f8321546-73f1-4d21-b825-a01eb685e401"
        },
        "item": {
          "id": "7f0dfbc1-eb2b-41d5-afeb-e5e8c6f18f74",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2cb6ae56-54f7-4e5b-81fe-6ff5fd4214af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aad73e9-03c8-4152-9d70-efc7389c210b",
        "cursor": {
          "ref": "4af13214-a2bb-4b17-bec6-4d97bb7107c0",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "280073bf-a84c-407d-89d0-7a809e3e5617"
        },
        "item": {
          "id": "7aad73e9-03c8-4152-9d70-efc7389c210b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9e99c705-2e84-4296-9425-56885a3d1458",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "11656b33-5a37-4dba-9eee-239f55771ecc",
        "cursor": {
          "ref": "6cc67d52-fa91-4c93-9955-b37dca19c939",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "54c5e37d-f6e5-4a1e-b475-6058d16fac7f"
        },
        "item": {
          "id": "11656b33-5a37-4dba-9eee-239f55771ecc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "23490600-6ced-4ecf-a35b-ffa39edf2e34",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "b7630e19-75b8-4287-9db0-95c8e85cb5c6",
        "cursor": {
          "ref": "2420721b-c8e1-433f-b0af-8f5f71688d8e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "317ca729-614e-4acd-b051-792237125e78"
        },
        "item": {
          "id": "b7630e19-75b8-4287-9db0-95c8e85cb5c6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5c71c7c5-e1ac-4911-9f91-f4aa74c95630",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 25,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "71163eec-e903-4919-919b-eb30b188a644",
        "cursor": {
          "ref": "5c200207-bd72-470c-9587-2df602b5e433",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "07e85e5a-254e-4bce-88ad-a8a9f3c5b39d"
        },
        "item": {
          "id": "71163eec-e903-4919-919b-eb30b188a644",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b7b8ce80-d7cc-4de2-88ed-7ed9918b21dd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "07192a5f-5ec9-467f-9de6-65a383dec0b5",
        "cursor": {
          "ref": "2f97e4ea-8304-4eb8-8267-67737807bf44",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "03737026-7a8c-4f5c-b3ed-a17cc1af06d2"
        },
        "item": {
          "id": "07192a5f-5ec9-467f-9de6-65a383dec0b5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "05f472a7-0f02-4549-a863-7bd5e9f8f7d2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "da35cbf7-e5c7-4682-a87e-ad09b34554b6",
        "cursor": {
          "ref": "326dcaa4-013e-4d90-8dc8-9bf0ab4634d1",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "af0bc620-8029-412c-99e2-32f1b202fab4"
        },
        "item": {
          "id": "da35cbf7-e5c7-4682-a87e-ad09b34554b6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0235576d-eeed-4554-b25b-84627a3e899b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "b99317b8-c0e4-486a-a877-c661fa92afd1",
        "cursor": {
          "ref": "63e8e89b-f1e0-42f7-a390-3947311f93fb",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c80f644c-9240-482b-87b3-e398184e0482"
        },
        "item": {
          "id": "b99317b8-c0e4-486a-a877-c661fa92afd1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bbff8cf4-517f-4995-aab5-e1ecb8d756ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2fa057-4d27-48d3-94ed-4d35013b00c4",
        "cursor": {
          "ref": "d378161a-42fd-4148-bcd9-52cda7854b74",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b53cdcc3-aebf-4b87-93e9-578cf1547edc"
        },
        "item": {
          "id": "9c2fa057-4d27-48d3-94ed-4d35013b00c4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "16c741b5-8dea-43e5-a27e-261346e5bc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282ee9db-dfc2-48fd-bb24-7aa2b8bfe165",
        "cursor": {
          "ref": "19a642b8-941c-4332-9dbb-fea3fa7707ca",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8ef7dae0-19f3-4c68-95b3-fa9d5587f91d"
        },
        "item": {
          "id": "282ee9db-dfc2-48fd-bb24-7aa2b8bfe165",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3c62ffc7-52e5-4895-b900-5590bdd614b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da95da6-b95e-47a2-8a4a-a07d082ea791",
        "cursor": {
          "ref": "f047e34b-4d5b-4442-a461-ff4ae19efd85",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9d4f512f-e57b-49ce-a8c0-cd70c1a0e34b"
        },
        "item": {
          "id": "9da95da6-b95e-47a2-8a4a-a07d082ea791",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e2a607e4-ffdd-4b5d-bb90-7f64000a28c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b021bab-274f-4334-9ac0-b509356ae0ed",
        "cursor": {
          "ref": "ee8d28eb-0147-48e4-a300-0d29debbc827",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "423b5c21-2c7e-49f8-a128-17daafd44a61"
        },
        "item": {
          "id": "7b021bab-274f-4334-9ac0-b509356ae0ed",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "274143fe-949e-4e93-bf3d-cbcda527d8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5265c6bd-b15e-48e3-af20-afe49d1f1e11",
        "cursor": {
          "ref": "f40f5789-9270-421e-a2de-26a329b22c6c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d6dc517c-4285-443d-a739-d09e57d4903b"
        },
        "item": {
          "id": "5265c6bd-b15e-48e3-af20-afe49d1f1e11",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d4daedd4-a549-4cb8-9a9b-1b10721e4b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60cf0be-0d94-45e2-aeca-7bb369aff5af",
        "cursor": {
          "ref": "2667ec9d-13fa-40ff-8731-65ca01f99cde",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c8f023f6-546f-4b6c-a950-c7974c10f536"
        },
        "item": {
          "id": "e60cf0be-0d94-45e2-aeca-7bb369aff5af",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "70537519-dd22-4b8e-9e70-c8c91b7c432b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3596a5-0adb-416d-a5c8-40ce8d27158f",
        "cursor": {
          "ref": "0a4dcba7-48d4-4a6a-ba75-9ac798daaa94",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a8584f4d-6edd-44bb-b4bb-19de26750ee2"
        },
        "item": {
          "id": "ae3596a5-0adb-416d-a5c8-40ce8d27158f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "88ddb223-f525-4007-b98d-b95e2201ef06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068e76e6-6782-46e1-a35e-25b3ad85f842",
        "cursor": {
          "ref": "5c990340-4891-4b91-a6d2-1bbaec804a74",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6445d13a-c7f8-41ff-90b2-ce4d6b9af32d"
        },
        "item": {
          "id": "068e76e6-6782-46e1-a35e-25b3ad85f842",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "007c8a13-aeb6-4378-abb8-2ccad284043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd04a5b-863a-4d0c-baf9-ff0a9230ec13",
        "cursor": {
          "ref": "77fc8483-c9da-4e72-9b6a-1c225df2f004",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f108e6a0-e3b7-4d81-b885-70f39891a093"
        },
        "item": {
          "id": "0cd04a5b-863a-4d0c-baf9-ff0a9230ec13",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "665c6046-7ae2-49f4-934f-3a31b4b04198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07834642-034d-49f6-a69a-a31d97ed3c51",
        "cursor": {
          "ref": "eb4f09e1-2f29-41f0-aa3b-93b783481216",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9b616c23-5fa2-46ef-aa6f-adb7a9b79175"
        },
        "item": {
          "id": "07834642-034d-49f6-a69a-a31d97ed3c51",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ead3ae0a-4692-4a2a-a2c5-3379f10b8242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94668a1-bc37-4861-a6f0-1b2d3b2da7c7",
        "cursor": {
          "ref": "3ae74ff5-c2f3-4365-8fb2-0f89cf42d594",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "57414364-a549-45ac-9c49-662162505972"
        },
        "item": {
          "id": "e94668a1-bc37-4861-a6f0-1b2d3b2da7c7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c1c880b4-0335-42e4-946b-7d837a7ff0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a062a5dc-e048-4eed-8edf-e2f64b6886c3",
        "cursor": {
          "ref": "b7b8bdc0-06fe-408b-a365-733d62820ddf",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b3f29fad-13cc-4fed-9dd2-f715e2341dff"
        },
        "item": {
          "id": "a062a5dc-e048-4eed-8edf-e2f64b6886c3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e5060e5f-8ec4-4379-979f-e1416700323f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b276738a-a2f8-45aa-aa3a-1ff4453ac8f6",
        "cursor": {
          "ref": "2e05aa00-a27c-4e57-90b9-0eeddd05d50c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "98eb25bf-62b9-4ea7-a271-efb2ed00216a"
        },
        "item": {
          "id": "b276738a-a2f8-45aa-aa3a-1ff4453ac8f6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1594ccca-0b9f-4cc7-b3bc-79a88c0ec85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f393fc9-18d2-4e0b-b3db-e6e82bc77e37",
        "cursor": {
          "ref": "5f2ba8b8-ee95-4fab-b26d-cd997e598134",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3a7d1822-b919-462a-a973-980638c82493"
        },
        "item": {
          "id": "9f393fc9-18d2-4e0b-b3db-e6e82bc77e37",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0c5e64e7-2133-4671-86de-436db702095d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dda794-1f99-4831-b38c-340e7c408e79",
        "cursor": {
          "ref": "ef09e0c3-dba7-499b-a105-a05e4944042b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a14fa420-84f1-48a8-a83b-80e567c8dec2"
        },
        "item": {
          "id": "e0dda794-1f99-4831-b38c-340e7c408e79",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b2df65d8-3228-4c09-93e4-587e2661d2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75be1526-dfda-472c-b939-0ecc2051824e",
        "cursor": {
          "ref": "425d1b41-9054-4e50-a85e-fec2a1603e46",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cca18675-b7a8-4a24-9024-ff70d031ebe6"
        },
        "item": {
          "id": "75be1526-dfda-472c-b939-0ecc2051824e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1c7d729c-c3cc-4eca-9b4d-eb7e25be19d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e0e2e4-2a24-4464-ae8b-52895f77da7d",
        "cursor": {
          "ref": "ced92254-3413-496d-b048-45a3703454af",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8cb2dbb8-ebdd-4cb5-862a-a93373c38d3b"
        },
        "item": {
          "id": "a8e0e2e4-2a24-4464-ae8b-52895f77da7d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0409db53-2e7e-47e9-8ad2-2665ea321426",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "ac394544-dc01-4207-919b-1f73b2a5e9ff",
        "cursor": {
          "ref": "d0c721b4-ce9e-4db7-9d7d-27a596dd7324",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3e0ac29f-a900-4582-8ba8-4072f9dd4ade"
        },
        "item": {
          "id": "ac394544-dc01-4207-919b-1f73b2a5e9ff",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bb1d6753-9f35-4844-addd-21245b558176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1def54-32b7-40b7-b16a-749d7b8d9f3c",
        "cursor": {
          "ref": "f88cb1ce-83d0-4eb5-b73a-17c15a845f89",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "014c9ea7-cf46-4f6c-9c1a-a3173c514910"
        },
        "item": {
          "id": "0d1def54-32b7-40b7-b16a-749d7b8d9f3c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b2e51bbc-ba39-4e4d-a2ef-023d1cac0cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fbb349-1d1a-4f82-911f-0e5ad6eda078",
        "cursor": {
          "ref": "4e2a4539-23dd-4c3d-a389-37fcadbf0731",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f870b88f-4c88-4f93-a312-237903b4c2cf"
        },
        "item": {
          "id": "90fbb349-1d1a-4f82-911f-0e5ad6eda078",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "777027da-b186-4fb8-98db-4c3add42cb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04398cb3-2889-4804-ace7-3f34a0c41a7a",
        "cursor": {
          "ref": "b17cfffd-4fca-48a1-932e-cf0b1394ecc9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b8a8b034-02a5-48c5-b5f0-be2c8868f942"
        },
        "item": {
          "id": "04398cb3-2889-4804-ace7-3f34a0c41a7a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "518dae2c-048d-4b42-b981-f156efe078d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab29e34-6938-4020-a54a-5bb4bedede14",
        "cursor": {
          "ref": "d48bce9c-14ea-4d6c-9a21-26b7d5481f52",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8f8ec261-b235-4a77-befa-9df74a8b4300"
        },
        "item": {
          "id": "dab29e34-6938-4020-a54a-5bb4bedede14",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "95efd4a5-a916-4599-90fd-aaedeb69263c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6e48c9-eba0-4035-b5fc-4daacd0e238f",
        "cursor": {
          "ref": "4d8fed54-a8fb-4318-a3c8-cf6e5c3bc13b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "86b529d5-205d-42e7-9ef6-de4b41acfcfd"
        },
        "item": {
          "id": "ac6e48c9-eba0-4035-b5fc-4daacd0e238f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "35d4e941-688e-421d-8054-8a117dea2adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220c0037-8511-4bfd-bef2-2cc594738434",
        "cursor": {
          "ref": "8c4859bc-4398-43d7-aa65-a2da6b69daf9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "96272d68-37e9-480f-b3de-eb08da73f3bd"
        },
        "item": {
          "id": "220c0037-8511-4bfd-bef2-2cc594738434",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9c02586b-ab88-4f6d-82da-ebaeb9a36b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f90161-1e85-43d6-8bf5-0486027d98ab",
        "cursor": {
          "ref": "868d97c6-5901-4693-ab02-c72be46dc05f",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "48c3d9ad-8ff1-4467-888d-ca95a7de6397"
        },
        "item": {
          "id": "b9f90161-1e85-43d6-8bf5-0486027d98ab",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9e02afc5-bc32-4303-a5ba-6054bd8c161f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ce1fdd-8186-4846-b20f-11f5d2e5fbe1",
        "cursor": {
          "ref": "109419bf-33cf-4f77-b99b-d23d72e10d0e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "69788b9f-c6e7-471e-8f15-5dc92334c84b"
        },
        "item": {
          "id": "d4ce1fdd-8186-4846-b20f-11f5d2e5fbe1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0bfb01ae-b152-439d-a041-4f613c105de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3227c7-596f-4acd-ae0a-785e56f69eac",
        "cursor": {
          "ref": "82be9306-e366-4ef4-85fe-ff16af84f2eb",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bfccbeaa-9a65-499d-8cc4-d2efa3a375e5"
        },
        "item": {
          "id": "db3227c7-596f-4acd-ae0a-785e56f69eac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2f5d6dff-101e-489e-bfb8-1d0ac75ff201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82523046-8b13-4847-af7a-4053caa52257",
        "cursor": {
          "ref": "125c1a30-fae4-453f-99ed-c348b46822a3",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f8bd1c45-e36d-4640-8c99-2d5e3bc0d390"
        },
        "item": {
          "id": "82523046-8b13-4847-af7a-4053caa52257",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ed9e1aa4-35d2-49a3-956c-3a1fac3e23d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2322372-6fd2-404a-80d3-69f7ce1e05da",
        "cursor": {
          "ref": "a19d110e-b6dc-49d3-9997-41eec4fcb9e2",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a16cdf2b-f491-4608-b9a2-02d9bd87a076"
        },
        "item": {
          "id": "e2322372-6fd2-404a-80d3-69f7ce1e05da",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bf670474-4d19-4cc5-a131-497c80897e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45d8046-f3b4-462b-ba66-f605c4c0603d",
        "cursor": {
          "ref": "5c788f78-9cd6-4e66-80d9-8cf66f2670d7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1819b2dc-b6e4-4d31-b853-89732eb62247"
        },
        "item": {
          "id": "f45d8046-f3b4-462b-ba66-f605c4c0603d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6fdb000a-c9db-425b-9752-0b90904b978a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482f24f8-05d0-4884-a8d7-ab34098c61ee",
        "cursor": {
          "ref": "e6106ee2-60b4-4fb5-803c-5f4a1b4fe5c2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d8038294-1fd6-4bc6-b9fd-931948e90951"
        },
        "item": {
          "id": "482f24f8-05d0-4884-a8d7-ab34098c61ee",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "85ff8d99-b34f-4eb9-b137-5efd17415bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f4fe15-c256-43a3-8f8d-bc3b699cc9dd",
        "cursor": {
          "ref": "d7b6629c-8cca-4717-9bd4-7bf30f0c5f50",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "39f02e0f-d287-412a-a013-9017881037ba"
        },
        "item": {
          "id": "20f4fe15-c256-43a3-8f8d-bc3b699cc9dd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ea2e5a18-096b-40d4-946c-0aa44fe9ce10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f781c035-ac3f-4984-8f99-194223764ea2",
        "cursor": {
          "ref": "ca964116-09fc-49df-b7ee-f8aa18d068c0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f4f0d5f6-a7d9-43b1-bee9-9adf2b4ffdc1"
        },
        "item": {
          "id": "f781c035-ac3f-4984-8f99-194223764ea2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f4dbde78-9eba-40aa-9512-098f200d0dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87ba254-b3ef-4586-b230-40ed8f013e81",
        "cursor": {
          "ref": "34a91af1-ef22-484d-9f95-175bccedb1a2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4ac16315-d784-448e-af8b-1b2cc4230f84"
        },
        "item": {
          "id": "b87ba254-b3ef-4586-b230-40ed8f013e81",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f9b73a00-31f7-427f-b90e-b307670cc233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c6cb64-4b46-4f2d-959e-a2104ec86dcc",
        "cursor": {
          "ref": "6b815138-98f0-4efa-8f2b-b2f6aeea88d3",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3cdc17ef-f111-4743-beee-d573da1054dd"
        },
        "item": {
          "id": "83c6cb64-4b46-4f2d-959e-a2104ec86dcc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3f309711-ac79-474c-8f93-6fca59be73ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e8de4c-59f6-4f8a-87d0-c08a634faab0",
        "cursor": {
          "ref": "64111781-d4cd-46b2-850f-726191c278f0",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9ab9881f-155a-471e-b5c7-22526dd8b666"
        },
        "item": {
          "id": "78e8de4c-59f6-4f8a-87d0-c08a634faab0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e5069151-89ee-431d-85e6-8ed3ef03b641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c73cca-dfbf-4e12-8513-5a6916656d10",
        "cursor": {
          "ref": "3ed6310d-03a0-437a-b361-8dbcf4b3019c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c14a8a69-cada-4477-ae27-f29459ef0222"
        },
        "item": {
          "id": "94c73cca-dfbf-4e12-8513-5a6916656d10",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "553a9146-172d-41e1-bb17-7bd992cbd409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314ff779-2b4b-47d6-8924-47cae8cad879",
        "cursor": {
          "ref": "4838fdce-d98e-44ff-a2f9-4c1c4e8e3b54",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3bef8d35-689d-498c-a066-a592b89c4543"
        },
        "item": {
          "id": "314ff779-2b4b-47d6-8924-47cae8cad879",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a8072dfc-41d0-469a-9cc4-b8ea8c6c7a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639189ac-da12-4ea1-b155-5d555c63fe4a",
        "cursor": {
          "ref": "47208c6b-4fc0-4e9a-875d-c18ada0efb8c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "47622288-9eee-4428-89d5-01ca24c1f905"
        },
        "item": {
          "id": "639189ac-da12-4ea1-b155-5d555c63fe4a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "36c43353-53b1-4826-9218-4ed01d24ca00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27bbb95-d031-4fc4-9b51-2880dc2a1d93",
        "cursor": {
          "ref": "96d1fcba-c160-49df-9070-365ec70ee0f9",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0fcaafd1-cb13-442a-9035-a60cc81ec7a7"
        },
        "item": {
          "id": "e27bbb95-d031-4fc4-9b51-2880dc2a1d93",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c11f3ede-0f8a-49fe-ad1c-ae7fd51512f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b445d47-d18e-41ac-8ad3-52744a028210",
        "cursor": {
          "ref": "adfb1d71-a95f-4ccc-b61a-6fe85c83875e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c10ea0ff-4bca-40b9-87c2-9c238e0b0394"
        },
        "item": {
          "id": "5b445d47-d18e-41ac-8ad3-52744a028210",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5d3a33f6-a9ec-4ada-8d91-0a37828515dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b21ec1e-8d84-409e-894b-7d6e2364c5a6",
        "cursor": {
          "ref": "2f40dd27-6b0f-4b89-b001-d556470ae4b7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "78663d91-1b61-4bc4-a602-4a212a21ef5d"
        },
        "item": {
          "id": "2b21ec1e-8d84-409e-894b-7d6e2364c5a6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "81a5a198-6063-46c0-84b1-37589ed4a294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e833aa-8433-40b5-ab2d-049e024f3ab4",
        "cursor": {
          "ref": "35c263fa-f363-45ee-bd46-8aef24d62956",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "db808f97-fa48-4cb5-b8a9-b3d240f84e74"
        },
        "item": {
          "id": "c7e833aa-8433-40b5-ab2d-049e024f3ab4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "eab2cfa8-3357-4b60-99f0-9b0b877ff73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac5847e-7778-493d-ba5e-581d53fc65e4",
        "cursor": {
          "ref": "bf9bf055-d145-4223-9794-10ece8d25423",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9ded93c9-d97f-45a9-a409-684f7959abf8"
        },
        "item": {
          "id": "eac5847e-7778-493d-ba5e-581d53fc65e4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a5c5e450-7c01-40bd-b88a-4cc024891176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9fc99e-666a-479f-8aa6-ca8c9326f6d3",
        "cursor": {
          "ref": "0b99f56e-4556-4bec-a44b-18bc599c1781",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "983468ca-3243-43fd-8da0-32c4856d46fb"
        },
        "item": {
          "id": "6f9fc99e-666a-479f-8aa6-ca8c9326f6d3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e2152349-3f8d-4344-963c-f78b7cb6ffc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b86689-e035-4b9c-993c-bb45636d36c7",
        "cursor": {
          "ref": "d2c92b7c-e434-4f20-8d7d-6806a6d4915e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f26dccf7-6ceb-4480-8dc6-837c91d8fd54"
        },
        "item": {
          "id": "b5b86689-e035-4b9c-993c-bb45636d36c7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "47d294ea-7bad-42af-b853-13bd51bac662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f929f9f-e755-48c7-819d-b500440d5917",
        "cursor": {
          "ref": "840e6466-88ed-45ce-984e-35c31e2edd18",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a753928c-ccc9-4652-8530-c79767505341"
        },
        "item": {
          "id": "6f929f9f-e755-48c7-819d-b500440d5917",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "18170059-14d3-4cd5-a8dc-e96cfb75403e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4d543b-cdd3-4317-9cb8-a6ccd22603b3",
        "cursor": {
          "ref": "33c74227-afaf-430c-a3cc-ecc21d5e903b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "37802774-b77b-41dc-b7d0-25a6a9e0ba5a"
        },
        "item": {
          "id": "fb4d543b-cdd3-4317-9cb8-a6ccd22603b3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "05f15d12-4a59-42d9-b8bb-db9544ec0b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e1c761-53bc-4f1b-a2e4-846d89f28256",
        "cursor": {
          "ref": "3e962654-2aea-4542-ae59-009447891a6b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1b401f0c-9920-4f05-99a6-8977284022ea"
        },
        "item": {
          "id": "73e1c761-53bc-4f1b-a2e4-846d89f28256",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bf0faaa8-69fe-4e92-a9ba-bd0c15b4bfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b09edb0-3206-4925-a505-f7fdefe43432",
        "cursor": {
          "ref": "6f05cd43-fd65-46ca-9ce4-06ed09208dcb",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8c0b5cd9-545b-458d-a87c-a8e12347bb42"
        },
        "item": {
          "id": "4b09edb0-3206-4925-a505-f7fdefe43432",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d1d9c665-c218-4c41-9ef8-64c25f48c59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377c0d21-e3d3-4fa2-acdd-4d9d138f0d78",
        "cursor": {
          "ref": "b7226a62-a7a6-48bd-85e9-5a61803acddb",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fcb63b4b-e3c3-4e14-a731-baceb223b03a"
        },
        "item": {
          "id": "377c0d21-e3d3-4fa2-acdd-4d9d138f0d78",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "04eb16de-2ddf-44e8-99b6-1901197d646b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cebe2f-ab03-4fb3-b52f-bcb90ac4ab64",
        "cursor": {
          "ref": "eaea2ddf-7a9f-4b20-b522-6c1a9f02002c",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c21c032e-3b04-4bba-8016-ea48d9b78430"
        },
        "item": {
          "id": "82cebe2f-ab03-4fb3-b52f-bcb90ac4ab64",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5a7f92a0-cb0d-4892-acb6-6ceabe4bfd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d75276-d421-4829-8a5a-5acaf751d5df",
        "cursor": {
          "ref": "43ec10aa-6bc7-48d8-809b-04ab75e0d7ea",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "41ce6f2b-38b1-46c2-add1-6f21fef0a5e6"
        },
        "item": {
          "id": "13d75276-d421-4829-8a5a-5acaf751d5df",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "09f3af66-c5e3-4ab7-be50-e62e26cebd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c6f819-87ad-4171-86a1-c81066d0d8f4",
        "cursor": {
          "ref": "6bc26485-e714-4742-bf71-4d910a8c59cb",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7ced40e4-df8d-41ec-a23d-0dc0e5583620"
        },
        "item": {
          "id": "e4c6f819-87ad-4171-86a1-c81066d0d8f4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "854160d6-10f0-433e-b251-4d27a661aaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a40cf6-6a46-4dad-b83d-a2c8851497a6",
        "cursor": {
          "ref": "a5b281db-9083-493e-92a1-6227a410b0f3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "51aa01bb-cf6d-49a8-80c3-04315c8c1b7f"
        },
        "item": {
          "id": "e5a40cf6-6a46-4dad-b83d-a2c8851497a6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "471d87b5-79ae-420c-9c0b-fa5f00e96b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbdf1d9-1211-49cd-82c6-d09a88f2e79a",
        "cursor": {
          "ref": "34d4dd7b-383d-4b29-8850-61bf7393b834",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9437b205-ce63-484c-940a-2a899ee0d134"
        },
        "item": {
          "id": "ffbdf1d9-1211-49cd-82c6-d09a88f2e79a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a25651dc-3074-4235-b523-9ab24a708947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcd3b0c-4fd2-4395-ba0a-9ea5a45e219e",
        "cursor": {
          "ref": "2042d112-960c-491e-ad33-3522f58ff9a9",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "106848ba-a41d-4a6b-b447-897c80fd8fa1"
        },
        "item": {
          "id": "3bcd3b0c-4fd2-4395-ba0a-9ea5a45e219e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "96b9e262-6d5d-43b4-8e3a-99cfd313ff1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0178ed-9473-4a74-a004-5251f8255c2b",
        "cursor": {
          "ref": "7fb23f53-c1d6-413b-9de3-3299ecf450e3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "eb28459b-2d07-4776-80d3-a25e9f8b9709"
        },
        "item": {
          "id": "ec0178ed-9473-4a74-a004-5251f8255c2b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1177b179-9e1c-465f-98e9-8c813170d430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cb0971-e17e-481c-881b-30d99bc7b4df",
        "cursor": {
          "ref": "b6a49e6a-3dfe-4527-bdec-d1a3bbd7c415",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "adef1ea2-c767-43fa-9777-8dc7e4444506"
        },
        "item": {
          "id": "d6cb0971-e17e-481c-881b-30d99bc7b4df",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e7f07717-e405-4d2b-bb55-f01ff70ff9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3f82f0-7f9b-437b-bb3b-921a504c60ee",
        "cursor": {
          "ref": "663f3ccb-8163-4828-9cd1-a71166e06ae0",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "df8fd683-1a1b-4a17-b57e-0396f026b22c"
        },
        "item": {
          "id": "6e3f82f0-7f9b-437b-bb3b-921a504c60ee",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "10077c04-3fba-4337-9034-4dca90f2b841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7712905b-958e-4739-828b-085dcc98ba0e",
        "cursor": {
          "ref": "d9770cce-5424-42a4-b16d-5fe6e905c22a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fbf2f5ba-6e8b-4553-999b-884e1cc61a3e"
        },
        "item": {
          "id": "7712905b-958e-4739-828b-085dcc98ba0e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ebea1f9c-69dc-4fa6-86d8-0209127f60d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfc0731-2888-40ea-8cdc-fbbc3247520e",
        "cursor": {
          "ref": "faf1fefc-1f6f-4543-9324-c38af631159c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0cfd9aa1-5f27-4da1-9e48-532a4b3ccf20"
        },
        "item": {
          "id": "edfc0731-2888-40ea-8cdc-fbbc3247520e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cfe61d20-8eb7-4fa7-9d63-27b3194c1d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38de9674-1943-431f-8561-b5b3be2242ea",
        "cursor": {
          "ref": "7014072d-6ee0-4d87-a267-4a5cbb1b666b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fd63d489-5360-4f10-9b9f-3f3321c35b7c"
        },
        "item": {
          "id": "38de9674-1943-431f-8561-b5b3be2242ea",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e2aaed6b-cdad-4a43-a88c-f9e7625ae7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be856e72-312d-48cd-aa59-be619cb5f68e",
        "cursor": {
          "ref": "65695e4c-4551-4758-bd0c-120aba0bc2f8",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "78e2ac3e-48e3-4778-a993-6b926ddc07ea"
        },
        "item": {
          "id": "be856e72-312d-48cd-aa59-be619cb5f68e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "be8c58bb-d99e-4683-92d6-492b592826f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2ef501-49c7-4027-9a22-21ef72c66e5d",
        "cursor": {
          "ref": "5ac4f0b7-3662-418a-a182-3c1efd8cc076",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7c780517-a6d7-4268-b6d1-fe180fad68c6"
        },
        "item": {
          "id": "ee2ef501-49c7-4027-9a22-21ef72c66e5d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "aede9c85-d5cf-41ca-8a68-54c5c6ade05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30855f0d-cd4f-4d68-b7c5-29b3e96077ce",
        "cursor": {
          "ref": "68f015ff-8dab-4d5e-804f-c5bd7121ff47",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4924f72b-0f64-4f47-b104-1234b3fbc11e"
        },
        "item": {
          "id": "30855f0d-cd4f-4d68-b7c5-29b3e96077ce",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e3ab8c62-710d-4cad-832c-16c4113a6946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfcbd9a-4aaa-41ba-a80f-2d5cb3e642a4",
        "cursor": {
          "ref": "f680c4d2-eb58-4854-b3b9-bbd8dc77669c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "407f37a3-cffe-4714-b730-4a481f3a4c56"
        },
        "item": {
          "id": "2bfcbd9a-4aaa-41ba-a80f-2d5cb3e642a4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "51b5825f-828e-4172-8749-3b6928a17374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f993c2-329e-47c2-addf-1012316d1a8c",
        "cursor": {
          "ref": "81eb7c4d-377c-4858-8018-a6d0e54c7145",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "363aed0b-4984-4244-b424-f080861f83d2"
        },
        "item": {
          "id": "13f993c2-329e-47c2-addf-1012316d1a8c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0e9fc145-5fd5-41a0-a350-d169f756a8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1ff20b-a900-484f-93b9-17bc9e945013",
        "cursor": {
          "ref": "ed1ff22d-c6f9-487b-bfad-effc13ecd55a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a2460f1a-09c2-4337-aca2-1e3588391e4f"
        },
        "item": {
          "id": "fd1ff20b-a900-484f-93b9-17bc9e945013",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "29cb8dba-87d5-474f-890e-580d44e4fdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1384572c-a640-46f4-859e-8876a8dfb39d",
        "cursor": {
          "ref": "a6185f76-7576-4b42-82a4-11da82c5d744",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2213a35b-71c2-4789-b7af-9d4765b39095"
        },
        "item": {
          "id": "1384572c-a640-46f4-859e-8876a8dfb39d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "20edaa7f-10dd-4623-8663-760e8837df59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87de453-b25f-4843-a365-f666fcb5b37f",
        "cursor": {
          "ref": "438a6e5d-7fc3-4959-8fcb-94884b6bf18f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4bc9492e-3fe2-4254-a357-87c327b3e860"
        },
        "item": {
          "id": "e87de453-b25f-4843-a365-f666fcb5b37f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bc73b94b-7149-4329-9ea1-9aaddaacaa1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ffb4a6-1c31-4c62-b7bf-3bb5b73749e4",
        "cursor": {
          "ref": "f060c7b1-4d81-4bac-a09e-400638281f73",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0964b013-4dca-4195-8e86-85c532f2b275"
        },
        "item": {
          "id": "55ffb4a6-1c31-4c62-b7bf-3bb5b73749e4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6c0fd72f-3f7d-4b1c-8a6b-e44e843a3343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1373fd6-54c4-433d-bdfc-693c7ee1de89",
        "cursor": {
          "ref": "bd6aeb53-6c3a-499c-8f49-6d99ff153243",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "581d60ee-1e33-4c31-a81f-ab02e7030907"
        },
        "item": {
          "id": "d1373fd6-54c4-433d-bdfc-693c7ee1de89",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3dfef55a-eb20-421a-af7b-44a6025947c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c35c46a-2327-43bb-a0a0-0d6aa875ac3f",
        "cursor": {
          "ref": "8e7a61d7-8326-4c4a-a151-e5c134aa8f49",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a857b279-ac2b-49f2-a897-fcd51019f1c1"
        },
        "item": {
          "id": "0c35c46a-2327-43bb-a0a0-0d6aa875ac3f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "12630794-67bc-418e-a978-1607ff951df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fabde6-cc47-48a9-822b-234ad6145074",
        "cursor": {
          "ref": "8f0cb594-b65e-4879-b4fc-8babf7f91601",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7e058112-9fd0-4ba1-b0ef-ba960f595f36"
        },
        "item": {
          "id": "b9fabde6-cc47-48a9-822b-234ad6145074",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "843572a7-2667-4005-bf02-d7c1e158ca3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d2b1a1-c9b7-4644-ac72-3d6828abb56d",
        "cursor": {
          "ref": "94c904cd-bcf6-4ca1-bf62-f0d58de2832e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6836e313-8b06-4acb-bfd7-1de3e8528d3b"
        },
        "item": {
          "id": "68d2b1a1-c9b7-4644-ac72-3d6828abb56d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c9a9069e-feff-4e99-ade7-9c1cb650d693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4d52e9-565c-4c23-86ce-a1028e51abb0",
        "cursor": {
          "ref": "af5d0270-e0f5-4ac4-b746-48e97ef58091",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "da162c16-4996-4b5e-8820-728b980ec25c"
        },
        "item": {
          "id": "5d4d52e9-565c-4c23-86ce-a1028e51abb0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "92d759a4-6c00-438b-9856-b835b638349c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22af04e7-c846-4750-b714-d15a96a828ca",
        "cursor": {
          "ref": "f16cc66f-10d3-4853-aeee-61a7805a60f4",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a43cddce-6e5d-41e6-94ae-3e416ecf1e6b"
        },
        "item": {
          "id": "22af04e7-c846-4750-b714-d15a96a828ca",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "334893a9-942c-4467-b054-34bb993670a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80fd590-94a8-4d31-80b7-10a80372fd0c",
        "cursor": {
          "ref": "f7ebf722-caf9-4a76-b1e3-627681d9c970",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f381f449-247e-4605-8640-424dd5663094"
        },
        "item": {
          "id": "d80fd590-94a8-4d31-80b7-10a80372fd0c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "65d802e0-d763-437d-80d3-0c90fd1e003e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543d2365-392f-4d59-819f-573ef41db54e",
        "cursor": {
          "ref": "395ca207-78f4-446f-89ba-64333e96d8ba",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "233ddb8e-131b-469e-9d34-d868bd7b0791"
        },
        "item": {
          "id": "543d2365-392f-4d59-819f-573ef41db54e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d7e8e2b2-5348-492c-a2cd-c4884a10e8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0046eb9a-54c0-4465-b583-a9bc8d527906",
        "cursor": {
          "ref": "bce3b75e-cc52-431e-b87b-5b6be10f1950",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b7c442e1-2449-49b7-a285-3400db7e7dd0"
        },
        "item": {
          "id": "0046eb9a-54c0-4465-b583-a9bc8d527906",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a5dfc7df-f484-48a6-9a79-e7702392b08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559cdc8a-467b-4f11-b512-6fa070da4454",
        "cursor": {
          "ref": "1904aa26-edb2-4ce2-92e9-f2a0c7d8b39a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "71968191-fd27-4f59-b61c-41333cc57170"
        },
        "item": {
          "id": "559cdc8a-467b-4f11-b512-6fa070da4454",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "46be053d-6b7e-420e-ba59-4ebdfd3e7fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c79f7f7-7807-4cf9-af2f-543ac69b3888",
        "cursor": {
          "ref": "27d6e417-28dc-4cb2-a1de-5be879137256",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8aa0ba9a-f79b-4b58-8a6b-e713f1cf98bf"
        },
        "item": {
          "id": "8c79f7f7-7807-4cf9-af2f-543ac69b3888",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f73eb883-fa5b-4e91-af18-66bf47c5ad75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be509f7a-bd60-47db-b202-79975e33c5db",
        "cursor": {
          "ref": "bfc88d1d-3c54-46c0-af15-f21a6780bb1f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "766ecceb-90c5-476e-9c8f-3ef3ec474df8"
        },
        "item": {
          "id": "be509f7a-bd60-47db-b202-79975e33c5db",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e61fa6cd-d6c7-4ae4-ab8a-b6ab0535bfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c598176a-a147-4e92-9dca-8acdf3880e67",
        "cursor": {
          "ref": "88db19d8-b13d-4c5e-8160-e2fcb83058d8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "39a9362a-d0a5-4c6d-9a0a-c69a7e225439"
        },
        "item": {
          "id": "c598176a-a147-4e92-9dca-8acdf3880e67",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3b1c3acf-ca2f-4d2b-83fb-9e39e8f065b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9d3370-e1de-4edb-adb7-b615c87891d8",
        "cursor": {
          "ref": "184acca4-e5aa-41dc-8825-d0ac6f7fb1ba",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "db469541-4cbb-4510-82cd-ee4a000c4093"
        },
        "item": {
          "id": "0d9d3370-e1de-4edb-adb7-b615c87891d8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "beea8351-d787-4696-8724-2a2b7e21f572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4eb1a55-e2dd-4e4d-9b12-079317f7140c",
        "cursor": {
          "ref": "b4468731-7dd8-4aef-be19-22cf52d7fe88",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0f9ba6ba-22c5-41d3-91fd-63a24b773768"
        },
        "item": {
          "id": "f4eb1a55-e2dd-4e4d-9b12-079317f7140c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e3bdec3f-527b-4988-a33d-881cf40ec15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ddc8c4-9f7f-4cf4-9adc-26a89537b4fc",
        "cursor": {
          "ref": "2731d06d-0aca-4149-9844-d1d46d59751b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "19acc038-8fbb-451c-b9da-4cb8aa322f65"
        },
        "item": {
          "id": "29ddc8c4-9f7f-4cf4-9adc-26a89537b4fc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4df56bb3-46a1-4ed5-993e-7c79c8aec9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286ed27e-d91c-4a00-bb48-6ced3d221431",
        "cursor": {
          "ref": "6aa2429c-d22c-415d-94d8-d985ab94029d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b638cd76-bbbb-4336-9ad3-56b7bb3362fc"
        },
        "item": {
          "id": "286ed27e-d91c-4a00-bb48-6ced3d221431",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1dfa84c4-110c-4619-934b-efda8f876d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21666b3e-1407-4b0c-a936-d2adb0bc4737",
        "cursor": {
          "ref": "0953e269-ccdc-4462-b41c-a157da96bbfc",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a1f09665-58a1-411a-afd0-2550970a1f7c"
        },
        "item": {
          "id": "21666b3e-1407-4b0c-a936-d2adb0bc4737",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cdcca889-09b2-48a6-94c0-d2e7aceb3229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a346b8-0416-4c13-a122-330f6ed1258c",
        "cursor": {
          "ref": "14a6df2d-8bc0-4533-bee8-25ba6f48009c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "903cb8d4-3b22-4f4f-bb0d-aaeed0f02123"
        },
        "item": {
          "id": "41a346b8-0416-4c13-a122-330f6ed1258c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4eedab78-e2e1-4ab6-a9e9-18948585adcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e795fcb5-f5a6-4749-bc49-03173d98c807",
        "cursor": {
          "ref": "68f56713-7e89-4d48-92b9-1ac5917b7db2",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "45885dc6-b5fd-49fe-9462-7b6281ab945c"
        },
        "item": {
          "id": "e795fcb5-f5a6-4749-bc49-03173d98c807",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "962565df-a7ca-467d-b270-15d57356a2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f124c43-89a5-415a-b355-8ba80ab02586",
        "cursor": {
          "ref": "d2ad5b8f-235d-432d-8dc4-48df4d4234a2",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "71528209-ac09-4b4d-9135-a862adff4b66"
        },
        "item": {
          "id": "0f124c43-89a5-415a-b355-8ba80ab02586",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f4c8cf6b-dcca-48bd-b16b-de4fbc3328df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914bcdbd-3f80-4c99-9c81-650e1e091579",
        "cursor": {
          "ref": "19e2fc4b-631f-42e6-a401-fcd732ffe9fb",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "43edcca7-0332-4be5-952e-055386fc8fba"
        },
        "item": {
          "id": "914bcdbd-3f80-4c99-9c81-650e1e091579",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "058c3908-676d-448a-a705-cfd353b3c0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37d476d-0d74-447f-a5f0-3f833e9cdb2a",
        "cursor": {
          "ref": "eaa8b962-5f48-4341-a7d5-bb7993e1b268",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "54a03ecf-0653-4a60-a48d-285bcbd108ba"
        },
        "item": {
          "id": "a37d476d-0d74-447f-a5f0-3f833e9cdb2a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "68755a18-3994-4b3e-9c03-f15a379db22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd29a52c-19d6-4ae1-8b41-d1603024d08d",
        "cursor": {
          "ref": "95da7a68-c307-4653-8274-f6ed992be2b3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "19402557-3739-48fb-8398-34d22b1493ba"
        },
        "item": {
          "id": "bd29a52c-19d6-4ae1-8b41-d1603024d08d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "90a6fb0e-f3b9-47ba-b42c-84a5cd754a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9180f6-ef9c-4d4c-b2ab-5cf7a749489a",
        "cursor": {
          "ref": "19756628-0352-4f4e-8d14-03e9df6ba362",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fa53c804-1f20-4220-8691-8fa8d94a955a"
        },
        "item": {
          "id": "4f9180f6-ef9c-4d4c-b2ab-5cf7a749489a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e5f60c71-b881-4fc2-abd5-e68d9fd942c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc49b0f-08e8-4520-bce2-d9f666995e19",
        "cursor": {
          "ref": "740dcbbc-b0a3-4dde-bc1d-4b1bbe95b47e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7e74d401-3200-4297-9e07-67d101bb3ab1"
        },
        "item": {
          "id": "adc49b0f-08e8-4520-bce2-d9f666995e19",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1c0e3805-3e1a-4927-baf9-c21500b3d0d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583ec26a-f810-440c-ad8d-23bfb4761a19",
        "cursor": {
          "ref": "a981e15f-5dff-4859-aa2a-1b30dccdce7e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "677b4577-67c4-47b5-8a9d-e46923c4bfe2"
        },
        "item": {
          "id": "583ec26a-f810-440c-ad8d-23bfb4761a19",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "362cccb4-7a6f-4bc5-9edd-2b07ea79824b",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f4226c-d563-4e4f-b425-71fdc1ab14d4",
        "cursor": {
          "ref": "cbaed763-317b-4959-97c2-4c065aba3404",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "aa248431-297e-4fbf-bb9a-867bcbd31e9d"
        },
        "item": {
          "id": "11f4226c-d563-4e4f-b425-71fdc1ab14d4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "342696db-fd9d-40b8-a557-7b2e755c26b8",
          "status": "OK",
          "code": 200,
          "responseTime": 2825,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "75583328-21c3-4820-98f4-1369830aeb79",
        "cursor": {
          "ref": "c97b9158-2f6d-4622-b1ad-4453a2ded009",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7e10f5f4-4c7b-4239-ac07-0e4769985b87"
        },
        "item": {
          "id": "75583328-21c3-4820-98f4-1369830aeb79",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "38b42379-34bf-4d02-8ca6-e6a3c131caf6",
          "status": "OK",
          "code": 200,
          "responseTime": 2253,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "623ba4bf-fedd-4e5c-a371-0a438e1b4438",
        "cursor": {
          "ref": "8e0ca0c0-072f-461c-880d-960589f109a4",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d74b2a42-aa12-41ca-89da-d4cafea67cc2"
        },
        "item": {
          "id": "623ba4bf-fedd-4e5c-a371-0a438e1b4438",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1adade01-0e9a-4fd2-80b0-57a434230017",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623ba4bf-fedd-4e5c-a371-0a438e1b4438",
        "cursor": {
          "ref": "8e0ca0c0-072f-461c-880d-960589f109a4",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d74b2a42-aa12-41ca-89da-d4cafea67cc2"
        },
        "item": {
          "id": "623ba4bf-fedd-4e5c-a371-0a438e1b4438",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1adade01-0e9a-4fd2-80b0-57a434230017",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17af8d68-1e3d-4cb1-8668-bd738acf5734",
        "cursor": {
          "ref": "db651944-e06c-4fc2-9bbe-81645b7f9347",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e1053356-ac19-4a15-a486-567f40c184b3"
        },
        "item": {
          "id": "17af8d68-1e3d-4cb1-8668-bd738acf5734",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "928d0eb6-57f7-43aa-a1e7-c8d74055e09c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b7554f-7b58-4ad2-ad60-2e16cf57d1e4",
        "cursor": {
          "ref": "9950489a-303e-4c6c-84fc-68c4974948fc",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0b85b338-9fde-4506-9762-f0a4e58f4edd"
        },
        "item": {
          "id": "93b7554f-7b58-4ad2-ad60-2e16cf57d1e4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7aaf47f3-3c63-4802-ae61-8434cb238c6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}