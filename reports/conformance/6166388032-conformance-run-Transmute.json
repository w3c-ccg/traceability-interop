{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "aff9c469-9ed8-4487-9b7e-f5e7a91ba453",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3e7faa1b-11b2-463b-833c-498f52b44f62",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de892747-0326-4b5c-ae06-7a28ddcd9fdf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "618b9205-c5db-476c-bea5-caf629245cf0"
                }
              }
            ]
          },
          {
            "id": "a873fe9b-2fc5-4bdf-8c3c-9f8b0c4972a8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e14392ef-61d7-430b-bc33-69c83f28b276",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2188d104-621a-472c-8896-bd28142cd0e0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d4ca143b-6abc-4e18-bfbb-4db65827acd7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3df5c1fa-9b10-4257-8c4a-71ecc419a4a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46ef6ead-2c10-4dd5-8535-5945462eb7f8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ddccf88-76bc-42f9-9d84-5b78fbda217e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f7e39bc-1e81-424d-8f0f-2f1d041efc49"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df2c8288-0397-4bc6-9e1e-5b613e2147f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aba64804-2fe0-4b11-b788-d16313c75e39"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96c0c145-fd34-4277-a892-7a60da70f76c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d553a6c-33a6-4237-b0fb-bc4e865a68be"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "058dcdbb-48de-474b-b01b-f3ff18fbd1c3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e7582491-3ec4-4830-b0ef-f57a8dd82bb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01223308-56e2-42a0-9f1e-95cbb40e064c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e62ce257-80f2-4d54-a066-4f2192ba9e50"
            }
          }
        ]
      },
      {
        "id": "179567f0-e04d-47d6-abfb-3fd7049ff9a3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3b14b025-6e69-4ee6-b629-4a1b91602113",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63113287-e30b-41cf-baeb-0e2d6d59fdb9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "147e99c2-d02c-4bdb-ae89-24506431eae5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89a3d3a-7163-4eee-a5a2-deab43cdc52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22e7506f-337a-4347-b279-299d7d2fa2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb6a821-9864-4d68-a00b-b2cd33a40a1e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6148a56-a6ca-4ca4-a0b3-95b62f1e0d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86d5c9fc-fe98-41a7-94df-2d0501c32623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4977a4-0d58-4752-824c-3b49eef3e157",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c7889a-e209-4c8d-bd84-9152bd4abe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bcb215b-e8d3-4c97-9213-618bb6ab3c67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e51494cf-4ac0-4a31-aebe-daa4c457faaa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11c2d456-9260-4d64-9811-d9daf0822118",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8952ca4-a3a3-43b1-a476-c6b48d80a7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0f5cbd9-f52c-4750-ad87-42b6a874a229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c036f5f-98a5-476a-9b3e-e08c06b5691c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8e525a-f376-43ee-a022-fbcc0905a385"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "feb4f755-f847-4d89-b360-0a1895615e2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "343c50e1-e563-4ac7-9d34-d5717a45cc65",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18e28577-6736-4e68-aa59-51012201a01c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7627f5d8-72dd-4af9-9da7-6c326258a555"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a03991ee-349f-4b9a-9f7c-4a8def125bfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f836a7ca-301a-4027-a92f-a7e432d698fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "620e4bdb-f67f-482f-93af-bb211d14fec1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b505341e-4c9f-4f70-85bb-a528085ded73"
            }
          }
        ]
      },
      {
        "id": "8c3468d4-91c3-494a-ba1d-719280aa9a84",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0ab94812-957c-483f-ae70-663f6401f383",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edb32f40-787e-4ca8-848e-5ccc98ab4ef2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c511ffa3-40c1-4c21-9b66-d0e100218900",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97c003b-d87d-4f4a-8b05-4c9d3c1dd82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197d9c4d-b149-4ce9-a793-df277de8bb08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490325d6-1e81-48c0-9200-bf95bd1c298a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd397b37-3f0b-44c4-9405-bff1eb82fc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9816e84e-7956-4da0-8063-87de7a8f46bd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89de2e93-a3aa-46f7-aa58-f0959a9abcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe96a29b-f5a3-4e58-8629-fe00b07ec49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb763ea-6688-4868-95fa-dd93950d1830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3bf15df-47fe-4911-b3f5-d22c3b0a6bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b5d1ea-2465-456f-848b-9cd19e6366f8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beeb27d2-503c-4bdc-975b-186c96dc3084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba68fff-1da0-4b7e-95b3-5422c990de9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44aee76e-4206-414f-bd7a-d31486d5d95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c2e171f-d4db-4096-a6bb-fa16fa26cd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8b297e-db6b-441a-bc2d-4d1e4640c6a6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f220f9a3-3069-4efb-a96b-124afadbdf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e48554b-884c-4e8a-999a-63ac21b48886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0c2a30-b816-41f1-8a77-241c4b2d0337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bcb6a6f-8ec1-408c-8280-c0de5fdfcf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13816193-7acc-4147-b70f-3f406850a450",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28019fe7-128e-42f9-9e11-576ba7f6f6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b33f89-0f0a-41e6-b8ee-4811790db836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b7e42d-16ce-4855-9cd4-f4a6d3c44d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b89a3cc-f124-4cd7-affa-8c15187ae0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcb9ffe-5fc5-42e3-a6f8-13781db7ae40",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bdfaba-c221-40d5-af48-7a322f098eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828486c1-5848-4fc2-b693-6a0484b193b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48afbf91-029d-4df2-9dd8-2bc105c5a902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9011bc17-6039-4805-b9b6-3af61d9102f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734ad6a9-c7d0-455f-a55c-ec79a5c8fb62",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3470e0e8-dba3-4437-9fe6-413f49c1634c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12afd0bf-abf5-4903-adf5-98cc1d569b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2c89df-91bb-4ea6-9de5-875a74638eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ed66af5-f718-4ac6-b89f-936097abe885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2bf75e-78a6-4e51-9c94-a11e38fbdf8a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9722e791-d0e9-4961-b04d-0c43dc226c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffaf125f-aac5-4793-bdc3-82b5d1ef4f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3281af-e9af-412a-b11a-ce00ef3b5c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0338603-b654-4f79-ae80-e15ffcf1df9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b69d3e-be65-4349-8dbe-111a2253ed90",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1727ad-e416-4640-bde0-3b60771c144b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8977b3-264e-46df-916a-9ce6cd74d148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c870101-e849-43a7-9945-de6c881b86b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fc97df9-8b84-4c41-bf05-27e4c7dc6c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39eae41-b3a1-4b7a-9d93-97420214cc01",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f204386-285c-4ee4-9cda-869aaffa739c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129d907d-7c61-45a7-8e16-5aa05fbf3d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2631e1d9-3eba-4f69-9dc2-459e93e414c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42b36556-fe41-46ed-a7c0-dc4015f8640b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b15536-e9be-4a27-92f7-1aff1d336e61",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de060317-3de4-4927-beb9-1d0780d982ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b12efaf-b2c3-4f36-aa53-7d8ceb0fe2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf38e198-0d84-40bd-abef-caaa94deb7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1da65582-3c15-47ad-83e1-b61df7b4b4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac6de80-42dd-435a-8dc7-d683d62c1474",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029ae9dd-a808-4483-a355-3414ffcf7962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648e3e53-7300-46e3-a313-035dac528573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f9bcda-87e5-4e9c-8e08-bd7a6388f4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "197c6a2e-02a4-46ff-9c68-b800dbed7d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff47eae-0ecf-4f4f-bee1-230e26c24929",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d01e0f-c854-4ae8-914c-1cbf187902bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55edbe25-cf4e-409f-ac4b-59a659d2a8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46181af6-db65-4430-a1b6-95b11154d6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2965de12-e40c-4b08-84c8-a41d56daf1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5af98fd-9775-4f4b-b3d1-f8e38d941872",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c80db0a-446d-4470-a1fe-2489f0a693b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c917aca-e599-452d-a2d5-b01d35000972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd0df86-8761-47f9-b51d-ddb45d9ec2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98c31016-75e0-4799-999e-d037be587d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b3883b-3144-4b08-b1d8-528ccfb96075",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f950d24-46bc-462d-8e82-12415c853f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befa82d8-90a8-4fd1-8340-55407ad8505d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322fefa1-692e-4d7f-9309-3de384eb9ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffbfc7ea-b02d-410f-81f4-ee6967653422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ef6790-f0cb-452e-ae17-38e198edd5be",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b70059-22b8-498d-843e-ed1e94374c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54103eaa-2d01-4107-8b17-99d8ff2fc94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda2b3bb-61cb-4298-ab3c-672d560fadfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f404183e-9c91-483b-a94b-d06c3b1ab747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0449f30e-61f6-4b71-8cd0-4eaa369bd3ea",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774d5695-bd1d-462e-ad13-6fd98293e815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f206f276-6d39-4eba-b7c1-3b79d8fc26dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac19336c-deb9-45d8-9694-fe4d3597b02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fe4e1b4-c54d-4630-810d-066bca2e7bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48fc0ea-e02c-4a06-8545-1d7ce6444a3a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cf19c2-7a80-4a47-8f21-7fa25f6383b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d885af-58c7-4d4c-904d-3d04777bd614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83eb16f-5c24-4767-992f-632fd9c31037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c35c3e19-7188-46e2-bcc2-cb5eccaf8a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d022e0-3502-4d58-a035-94cd75c9d58a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f390f772-b16b-4756-b8b7-53a4ac60b861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651f5b68-d274-4fa4-9c3f-e5dc4aaa415d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24448455-0675-4f26-8669-07a81fe53737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe827bcd-9377-48e0-b706-dce95a58ef69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566915df-39fc-4512-92b5-7cfe9cd0b1be",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db24e76f-5bf9-4e77-992b-8c2a39b8f28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93924135-dc0e-45f5-b3b1-3ec8869b22c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a64bb63-54b7-452b-93c3-3119fc33398d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "591e5ebf-a788-431d-b83c-31f67c7c9be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ad65fc-1180-4c58-aedf-befa1558113c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a30fe1-6904-4ee7-a953-e786c0a156a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986d577d-4f7e-4950-8aee-cda2192d6278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da664d4-eee0-498d-85ba-5dde2dac77a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87410fb9-f018-4362-8838-438c9319d493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b193f8-6522-4269-b09c-81c70b1a9ffc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013e0e9c-69cd-4cc4-9d68-4733c6109ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3db687-8b1c-4b16-80b0-889ab6d6c86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37a2272-8d6c-47dd-83e3-dbd6ef567d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "217291e3-22d5-4f2f-b734-02d114a84920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39fb7c0-5297-49de-892a-00598555fffa",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ac4d69-c419-4a69-832b-f79b7622fa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9de2ed-f0ee-4948-b078-7afe929ec468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b0e953-1b9a-420b-9fe4-86114cf0793c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3efb479-b8cc-468a-ac7f-75d14e8f4639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb4818a-1256-4cd4-95df-164faab97bd1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b95bfd-4477-478c-897c-2ed42bfb4acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b325da85-9df4-4789-8c08-4ebc01513046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6968d2a-e10f-4db8-a228-c5eda47fb3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ce0808-3d95-47c1-80ae-d196bca9e14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9523dbaa-4e3e-4ff9-ad34-cca294852cac",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067ef373-772d-47a8-9bbd-86c3fce28f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c8a1d1-68a2-4657-bf9c-603232e93014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94dfdff-ee5c-43af-9755-88dd3d49ff3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88744cd2-b847-41a0-9b2f-8e1f7887dd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87031d03-db47-4c38-bbfb-7204ec393dc6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f5d780-b172-4825-b341-e8bf4707a24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c1e806-e2de-4187-8b8a-08c633f53dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d081d2e-7a16-4590-9a87-ef97eaf1e4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa217b8-a929-4f8a-bac9-0f50b85f9ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130d3e92-9a27-466f-bc1f-ad7e48ae1ad7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5629a7-ed37-4d50-a34c-32308b24691b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8a614d-989c-4fb1-9290-fd1926603e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcddf7a5-cfd6-4453-9088-29f44c01ceeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74891e80-6c68-4d75-b795-4646e58ed12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76520996-d8db-4cde-8e6b-90634e54d631",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb5cba0-6705-4959-a9cc-e4bb5d93e063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841a4e0f-a85f-4f7c-8e8a-798c87268687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bba76e7-eed5-4d7b-aa64-81c5f48ec497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "784870a3-ebc8-4032-8148-33c20de2fa07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fab2ac6-22c1-4bcf-9199-c5f19aaface5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c0ebb1-7941-4317-b45f-e80e659d91d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e67fce-1647-4621-8cf7-33371fa64959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb69a40-72fa-449f-9921-fe07aae2c69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7509dfc1-0854-49e8-90b4-d5ef32664d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df634d0a-1155-4180-9f75-dd9236ea6b90",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71241cf5-79d6-4a49-bfd8-66fdbe1a6f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f402d0-5c31-4322-8805-9d57abd5bf70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497a7064-9b21-488b-8bda-e7f0a556e693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "db2ac0ba-d3bb-4153-83d6-bc5f3d5fc0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67ac590-2ae7-4c05-ad78-5754e9f7e274",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ca9117-010f-4428-be94-a1f52e3d6ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f578ef07-5dae-4fa0-83c2-ef25391d486d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dfa906-d4cc-45da-a6bd-ccd828c867b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49e36b8f-6a51-436a-89d4-4989aedd1100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a45c1f4-bdab-4f24-88b3-367e519293dd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd34cdca-bac6-4039-99a9-de091543717f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ca31a2-7869-493c-89f6-5a7139e4f6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22c5959-f09e-4c3f-9548-3a1ff3b4d2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8243881-8117-407b-8557-c6db693946ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0615ec5-88da-4eda-bb69-d33f65449a19",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d8e75d-2ba5-4823-a1cb-09ef64d9ba84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3207d68b-0fa8-40c6-b6e0-3f3b7fa25060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb7c7b1-d2bb-4e77-b825-1904eaafb369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cf4685-e3bf-4161-8817-0462216d4273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89a6087-84d1-4368-a312-c5b4f94f90b0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986324d5-a27d-4155-8d27-b79608d690fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8348a3-e95b-47f8-976b-ea06c3db29da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09581385-ee70-4190-bc4d-833f7f450ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc73a54e-a1d6-4b3d-8079-ab320688dd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1260fde3-0d93-4b0e-915d-dace22076827",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f133f36-908b-419b-92ef-33c6f672862b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217b23be-b404-4cbb-a0ee-6775b5869a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77667aab-df81-4063-8ace-3d0179b39587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbb0c10-d3b0-4e33-b6a8-3cbd27318628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a41cbd-215c-466a-9b9a-b867d56b3e18",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a913effe-79c8-450c-84ba-6844f471bfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1167766f-0c3c-422c-8715-12b755490390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a298c4d-b34f-4d8f-a695-2e1fc5234220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41b59f1f-6827-4904-a1b6-7c8f740ca601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55fcb95-cfa4-4927-9253-458134798825",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0212d61-fbb5-4ce9-a07e-b81814eff4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3be205b-6315-4e6b-8938-885d968b38eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79e24ba-db34-472b-950b-8e32f408f0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19b64ce9-a959-434d-8023-2220676812e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e02951-2bdd-42bc-9b62-d94d0be26f17",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf49c36-3d4e-4e40-92b6-f39644b584b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea007273-2653-45cf-9e36-45fabe5c1b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f97adc9-bed0-4e21-adf2-99ba144a430d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e13081-68d2-4da7-b5e3-b14db229de0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0098a05b-f73c-4253-b516-c0beaccbbb8b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0521a276-8a9e-42df-aa1d-334c131dbeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c4dc98-ac9e-40ba-ad2f-edc664d1024b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4875b4b-5de9-4b8e-b9df-c96b7f259cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e00d9934-790f-45fb-b596-5ea784b3b877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32b61c0-711c-4c1a-883f-ffe906f1f820",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01272c1e-947e-43b5-bdf0-2f37ca45f05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19ca67b-0972-4191-9c95-1cea273d4ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c7c3f0-2e01-4379-983b-24cff536ca9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "212b1cc9-3bbf-4977-8f60-1d19b867798e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e0a7fc-2506-4af2-ba15-0f15947ac639",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4fa08a-42cf-4272-8c99-01e6cda16c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a1504c-5a38-4c2c-a1a8-6aa70b43956e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c31311-035e-4e76-b558-b1a9c25fc0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7fc8f9-96f5-484b-bbe3-60b9115359ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45447a63-bde6-4640-98ce-818067ef4fbb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7cefd5-a064-4bb5-bdda-cfcd70f4447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f862357-384d-4dd8-bfcf-ab64c2d7e49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d9069e-9418-48b3-afa4-1911b185b484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "116ebe7b-7911-4f10-8b50-1ac04558a034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa35595f-0ce1-4c2d-a310-44974e48a019",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b107a7d-8119-4e6b-88c4-43182a487ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e053143-0892-4acd-8419-ddfb8d8da6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043b49b2-0ba5-45c5-a69d-80329d2e853a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "053a18ea-35b2-4d26-a707-9fe8bf4b5e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0d2d8d-8aae-412c-a401-ccde0a1931ce",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ef91ab-8379-4cfc-9a4a-61f2c04dae6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408cbff9-bb71-42d0-8baa-64f93d46ce9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207a4f57-c112-4ad1-ad60-f0c8c577a976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e80d21-9d13-401b-bea2-313fe323da1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741a1351-5fa8-48c4-8e76-c139510ecaaf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9bf7b9-5464-48a3-9072-4c3b58173463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5188c279-76a3-41fb-924e-bd445157a4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b909ad-3c9b-47dd-a558-8bbe4ce35810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60689bab-fb43-4124-9021-8ad4dd884293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d467ddd-43a1-4b34-b66c-6b61fce43050",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39885bb-59d6-4023-80db-b2481b496908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555a7ac7-998d-4cf8-a5c8-cf684a9635ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fad93e-1e8f-45bd-a6ac-e30969e6d4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2436ab5-5108-4c19-a091-367219eb5b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c16d4f2-b8e1-485b-93e1-19402f62d0ea",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee8567d-ce88-4534-9798-0e213babf51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887560c4-8f0d-4896-ac1b-a462747767f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166591fa-9414-43d5-a072-a70da2d05bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56635033-cdae-4297-acab-f3375db6b15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346da78f-5560-4c5a-b099-74f0098ad78a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc23840c-b85c-49b5-ab8b-189ebed8d1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293f012f-eb29-4c6f-ba13-2c60da6b3b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffc5d4e-f8e3-4343-bf77-5375e43700a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c966b61-5de0-4b5a-8059-8016b8dd88f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8047fcce-a4c2-4795-accf-ae759ccb2b0a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc0d6f4-29ab-4c90-b59a-39f129e12283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10e8e44-becf-45cc-ab70-d62a201ab9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa0f43a-f625-4610-bfe9-4ccbc9725baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "316138ad-5bc6-4a1b-a3ef-c3ded89e0b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfb91d9-1b18-4075-9939-5ac4687ad845",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38145bbf-ff80-48df-9b1a-6430cf9aea01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d116358a-399b-4b70-9dac-a75e3269c79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb6ebbf-46a4-47d1-bb7a-5b98cdef77aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "549c7add-ea05-474e-a8ad-35c61a7e6366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f87f00c-a121-4c8c-a13c-3a87cfb27c10",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350bcfb5-2436-4f26-b582-8ae961cacca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfd4524-3e7e-48d8-9a1b-68797d8e2b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b790ee-6c54-449d-85bb-45dcdbf38dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e72dc6a-4b86-4bee-9a69-6c2253a242b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd102018-7696-4997-97ae-db6e4cb0fdea",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97f3423-b2fb-4edc-b4d4-b1e6d3e4ae97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3da458-b37c-4cc0-80ae-d514f12e61d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7bf57d-b86b-42b3-aa2c-2e7f29be557b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b067acd5-b735-4984-a976-e07f574b0c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a1f45f-8d68-46c2-8a27-fa8485d2444d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9ae2fe-5356-4966-9442-e5822415122a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb41b54-a63d-497e-8d97-063e9408bb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c88c959-416b-45ac-98e5-ac13128ec321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea7fc83-6ffd-42f1-9a0a-c59f09e85942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d82e890-75a9-4156-ad17-734a5ef5f9ac",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de01957-d993-4cb1-895f-e963339a014d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6a003e-f79b-4475-a133-54baa0a902c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640b094a-7586-4bb2-9988-4c9a34a94667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b697c5-05ea-45b5-80f9-8e3abb0e7e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649e6ee1-bcdf-46c2-b51d-4107c157e8d3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a8cda8-0de5-409d-8db1-6cd2dd3b1f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd95e249-3291-415d-a4a4-05874895cd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d72627-ef17-474a-a23a-44d072fcf2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8324c522-2eab-44a1-a5af-64855e49ff37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de50b2ed-efbb-4ce0-865c-9857e670f4b0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0f0aa3-8833-45e4-bc50-96f8f50ac246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a9e0d5-40b0-4016-a844-fd0f00947c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16509ffa-3b27-4739-9313-7ca7165b190e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffe52de-ce88-42b1-b1d9-72cbe85a3feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008fdeb3-97b0-4434-8402-019f3e60720c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919b2dd6-461e-4109-becc-40f130e28451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3749a644-972b-4f49-a532-1da05a18dfc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2d178b-4405-4bf8-ac6d-19dd8ca1776f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c525de03-77db-4d10-a827-1a2f7aaa5fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefff499-e8ab-4821-a107-ed5b410840fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59ea813-472f-404a-aa78-1b44afdee1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf57c41a-68ed-4e1e-bb2f-26373a6a1c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4f505a-b63a-42e2-888f-8e8d046af9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "26aa235a-74fc-4659-a3a6-e29a33b70cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d249de5f-8b4b-4b98-a599-e1513b9d3725",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491265df-5037-4b9e-859f-1247d18194f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e634d40f-9b00-421c-8a18-ce8714f48485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e79210-17dd-4fd0-9196-3024b4d5325b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f88ac6ea-4107-453a-973e-1d597354f69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace8da6b-12af-4e3d-8bf6-c810ad7f5559",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472268a7-cd6e-4ff6-85a2-25da817e4126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9716c7-33a0-4d21-ae68-9dec895a51c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40aab787-ba0a-433c-badb-5ef4ff2a1516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3f2f2e-6677-4166-b565-604a8ae4c5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac97f982-9abf-48db-b4cf-b6268c30c424",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cbd263-c4ef-4c70-aa9a-9321b58ee17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f717eaf-e891-4c88-a9dd-51a9dca128d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cbc407-5155-496b-9b72-9645f87e2a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0e35ba-5e33-49ce-8432-44ca408272d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0c551b-34e1-4572-aad8-ddd942b5dbb6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a053ad-94f1-469c-8d07-0ca1fa617993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a8af7d-901a-429a-b488-ef1832aec0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c884221-a1d4-4061-9899-3b362ca6c546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "db9ed6f1-4483-4292-8649-ef85d3917a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ec9694-65b4-4da1-8d37-2dcb1b9d9402",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a53b6e-0dc0-4b77-8d41-0d5d3d3e18de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51166e48-e73c-4753-8233-6a63632c8e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3432a043-d8ca-48c1-8760-d7a36c1b3e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7188cf42-13ec-4938-8ba9-50746b99b4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a2163a-19d4-4a44-93cc-38168eb04ce0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8868d252-fe78-480b-b081-bfbb4449a6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60eca458-b5f3-4b8b-a1ba-be7772aeef9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff3a720-ff1e-4730-86ae-7c9debd1aa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed0556f-a3d0-4d4b-9d0a-d32e0eaa5334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa76ae83-366e-4c77-864b-502d75667441",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874dd849-6fcc-4576-8f76-badc76eb64ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedd6388-d753-4c2b-b85d-1e21163b7409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c5910c-013d-41f8-a567-2799f71ab294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44cb4217-a45e-4edb-bfd9-20fdb890237e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6482ba7-c0dd-43bb-96c1-155d8267c3ca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e01cf5-7545-4dca-bd00-49766066ed09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300fea58-8dd5-4377-bceb-ea1276c33499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0d4459-80a3-4cec-b99b-57a4b0f06742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "562d027d-e598-422c-88d8-852f9a1a3c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5ae17e-a71b-4d0f-927f-6e65adcc764e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c3eaec-b796-4445-acce-77c3179163d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427799de-4f02-46c4-a247-77224b7d4e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3810f57-af99-4992-ad99-547e1f7a50a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "598a88c3-441a-4088-a02c-54842e2f71b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46412d6-fd33-4a5b-a0e5-ce2d6bd7ac96",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a21a27-acf4-4ac9-bb75-8b727d0f855f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989c7bf3-0263-48b4-969a-8070be74fd22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd65019-bc53-45ca-8c67-a964bb4f8b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a781dd-631e-4b83-951b-592d4e80a230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb2db7e-087a-4479-bc44-d646402d0654",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2bd09d-5933-4222-a09b-094689d254ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192bac86-a04b-4f0d-8cd2-4acb2071548b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df2a63c-f93b-4b34-b01d-c2b0c6a7c906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4d30d3-d559-47cb-9052-2b3b711071d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc132e36-0566-45f9-a6ef-13250d1a33e2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab76b737-980f-409c-bae4-522bfe789e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9651919-c119-48ab-9f4a-a320ef422c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029332f8-8b56-4998-8a20-1d0503ee6fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8b4e4b-5e54-4780-a973-535d90f953d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852c010b-3ab2-4b0e-a326-0fcf8e9ec2a8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0579ea-f29b-46da-b54c-5971414eba00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e606eb1-55f5-40e9-aacb-a389d0aeb41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005a162b-684c-42c2-b303-220f57ba7e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ae3567-dd4b-4a44-8366-6700c8efbcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06d9fd1-73bb-498b-b7bf-3754fecb0a53",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136d5314-c082-4442-82b1-171e77dadb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb091f3e-f458-43eb-8456-5421b6d78793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01097ead-d8bc-4eaa-b76f-89ee3a0cc158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0d6f57-5fdf-48da-bf5a-e2b387b5b982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5671059-dd8a-4ebd-a118-751ef1e097a8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7353b8b2-d7f5-440d-b15f-2a334ffbb3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab7ad44-828e-4be3-8f65-c58f92b1fb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50234e0c-4877-4240-a73e-38e373e84257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb16a71-6f03-401e-97ec-65cc75d16eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf894eb-b363-4e85-aca2-0b7fa9235d56",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea19d66-b4ff-43f2-819e-e7cb23eedc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad6e6f3-5cc6-45b5-b7eb-7c58d0743188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a1b81e-540d-4625-be57-cb56026a31a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "186ab497-4281-4c48-b1c3-c23727233baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ac416d-4fa5-4d96-a8f0-fd813f663377",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cda7039-ddce-4b31-9d23-be196a6960eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aca38ff-9ddf-4c67-b629-ac43091338b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a2b43e-579b-45a6-91d1-d576224385a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe78ad9-5736-48b6-9e7f-4ce77e11cd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99e0e38-86c9-47a1-b281-8912a87bde49",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a637c3-88dc-4e7b-8cf8-00a04483eb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89406430-fbf4-4056-9d01-2ee6e31c6175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab509ef-042e-4f11-ad9d-c7616c612fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1224eb90-728f-4a78-98b5-5fd821b070b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd3b221-dc24-4277-b81f-89065ffe878d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383a8ccc-5774-441a-a4d8-8698d35ae14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c720aa-9c4f-4a10-9d26-5ab75ee70d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718e672a-2248-4df3-8ce4-ceec933f2cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76590b89-9235-4206-82f5-b927f2ee1e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06ce19e-21d5-4d70-8fad-f591dcb2c3eb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66416c8e-d89c-47fb-b92f-ca33f338d756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5dc06a-22c8-4510-a4dd-d69ec6a21fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803b6bba-5250-4567-b00a-1159427cd16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5534ebf4-a636-4c7d-8f0f-4e61ae6e9e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792cc021-0819-4fac-a2e0-b4448481f8e6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf9ba61-03c2-407c-bd69-85c14c9364d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58142e3e-f717-4b26-9643-c49a1b43c014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8492d4-8c12-4894-831a-fac374503d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97427781-ae18-4511-9017-a1132421c81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371a687b-8e75-42f3-ada9-8d6631351724",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfb19c1-5964-4d7d-b221-526e22e1b42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89af1cfd-f6cc-4090-a62d-630ec3b10495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f21de4-aaf1-417c-aa1c-4dc37cd2d52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aab45406-d136-4407-9a2a-16543f3c758a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12350f4-5b9e-4cfd-b892-7a0929620389",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e58d8ec-9b90-463a-a415-b8cf3f7f2b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8ea3c0-acd0-4c4d-ba70-c0034f7b2b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d769d0-ddef-45d6-9b2d-bcd287aa4f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4208b49a-2d01-48b0-8bf7-5dd15f81b81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd55c9d-4b4d-473f-b26e-ead580d2fb6a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c6fc69-2d75-4d79-b310-f29f36092c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8903d778-9ad9-4069-a5d9-c0f65fb75d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3b7bae-23ad-4e70-b7d6-d7f38310cfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51d919a9-1470-4349-ad79-c877155f8185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0175cd51-a94a-4839-8020-8e086d55670c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27de6bc-154c-49ec-a92e-5a01466ae23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618013ea-0428-45c3-9654-737e58f7f39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07065e7-a465-4be7-9639-77248a6b43f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb90fb1f-bb51-4c47-a4c3-3835d3894031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1258531e-95d5-4943-b918-e65e2edff292",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9576f592-1c38-42c0-8a7c-cd031e45178a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee232996-f93b-4b2b-921d-ad6ba9b5c156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aede4a03-8968-4119-aac5-b512f75eee3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee719040-602c-4f2d-aeab-cabca315620e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab3fe5a-a262-4704-a32a-8843918014fe",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24370de1-7089-4e33-9bba-411b2b559ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1daf1f9c-d22f-4eca-9fae-bc3fc1be3f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4686ffc4-2e81-468c-a0c0-d1bf2a819d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd6d839-ad46-46bb-9196-0b164a9cfe78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c590d868-f256-46f9-8a6a-f1687ff4c713",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d65166a-56ee-457e-b0ad-b066b429da57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d95e3f1-37f8-4528-ac14-fa712a5432bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ca27a2-d92c-4357-9110-5006173b6b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c87beef-b9a4-4485-96d8-f00d37152969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68f9b23-6d8b-4af8-8646-ee5680bcda02",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebb8b19-6eea-44b8-b915-fa6606d63e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9722db-f26d-46e6-8b84-0cfe4f8548a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8976e81-ce82-44ca-a306-2912c467250d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4a32b4-dbc5-43fd-9109-efff56edaaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d273559-cdde-4db3-82b9-4f688a66a05f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c52676c-fb69-468e-a833-61bba7b0b6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f713bfe-af2c-404f-8184-6fc11dd195ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb54cbea-cea1-423c-bf5d-83f3ba046206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c82b215-bc04-4077-914d-a4e87eba3731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf02bca6-9787-4bf3-8378-54eb58ea1f52",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1bb335-a54a-4c4d-b1f8-e9ae055aa864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2811bd16-43be-4623-bfd6-ee2df585b3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56d8558-917d-4993-9df7-c2227cef2ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "16a47765-4ebe-4a72-a876-4b97ae7fc77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98533936-e7a3-4d4f-b072-eaa6f8459316",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be04bd9f-053c-4cd1-ab33-e9ad836a93a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4596379f-242a-4e0a-9e3b-0c335bfad56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2cd22c-6800-4381-9976-6e08a99b5232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "577b791d-f40e-4643-bb46-483b786dde5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5064282-c238-4fca-98bb-3f2fbb2f75fd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1923c417-ab79-474b-89a3-9bb47317b76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce27652b-03c2-4de8-a01b-21d0faf8d6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf2834b-4774-4513-b794-16fac80f9067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ea5afa-7fc6-45ad-9023-e9f2d0c068c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f55054a-9bd7-4470-8c1e-2cee46b0769c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e222658-52a1-492d-964f-ad3c14e4e4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a8d19cfe-b467-41a5-8198-79dee13a8d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc43932b-824f-4b2e-9e52-c347eb636c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "549dfe94-85ce-44ef-98ae-a285d3055d03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b3f2f18-e38c-470d-b304-ac41a43e248a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90afbff1-88cf-43dd-86be-609763dbdbb5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2908f2c7-bc06-4fae-89c7-a8a96cea28f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c05fd8de-5b69-4e5d-a906-b3d8e2c1063c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38776ff9-32ea-4d41-a89b-18b41eaa6b1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef9e93bf-f345-42cf-bcf3-aa9cec32ceb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de4d8680-900d-4f23-9672-97f76ee1a76f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81decee0-0f1b-46a2-b8e3-267ea7feeb92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16163359-0bca-420d-aba3-9072293d4959",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30c19d44-d423-4e04-9ca8-38b904c9e113"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7a0e7fb-8d22-4006-bf03-ef33c817c1ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab64e738-a6d1-4f27-8f1f-ca3cdf15d9db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "97919fb3-9c87-4583-aeaf-984727ff0d15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "919ec315-f782-4f24-8880-23311f998760"
                }
              }
            ]
          },
          {
            "id": "d331f117-d084-4fb7-9379-5910b20837e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5829241d-4dc5-47ff-9054-2b0c1b7ac24e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "965baada-bbb6-44b7-b930-1d1156b0a833",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6041207c-ccf6-472c-a590-d710d7b40596"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a636b4cf-919c-4d58-927d-cf186aade9ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6866bc54-73c7-4284-8452-c01274b0e203"
                    }
                  }
                ]
              },
              {
                "id": "6af90163-6fdb-4f52-bacd-decbb2656740",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8110af7a-7975-4e9e-b1ba-1594d77745a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5394396e-5e9a-4d4b-af55-cb61ee62cd3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fceb2a02-51ce-4661-b470-80bb85143c84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e5ec125-2636-497d-9a76-de3ee09e8002"
                    }
                  }
                ]
              },
              {
                "id": "b0af3155-99b2-4cda-8bf6-785705cafeea",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17a585cd-42ed-494d-a472-7d69e7221bf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bb533a9-dd10-4723-8541-9e39a0e9e35f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "737eab31-8887-49a6-8ec7-a8afebba740a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01cfd5bb-85c6-4d78-a6ed-8c38bf545ef5"
                    }
                  }
                ]
              },
              {
                "id": "9a511f00-62d5-4e1d-bb9f-feeb456e0d1d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40e6a0df-bb85-47a8-977f-fc35602d620d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c47f5524-bab9-446f-92d8-7fbe31a17dc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e91c352-5374-4551-9014-277b29a3ed94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "58ab500e-9346-48cb-b9b5-61b6c12d215c"
                    }
                  }
                ]
              },
              {
                "id": "862cd35d-4c5c-4695-8058-8c03950fc5d6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07a99604-7822-4063-bbd4-4df306a7fb6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d5c7927-3b67-4286-b7d6-dce6fa273b32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aebcbf1f-d3d7-4732-99d1-962bf832151f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6c1497d0-8b87-429e-b735-dd22bfa80397"
                    }
                  }
                ]
              },
              {
                "id": "549453d4-41c6-41ec-9bf7-1bc8f3f5efdc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d0b6427-5902-4e3e-8325-6f4a5502012f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "060de934-8a69-4b04-977d-21d5bdf53f84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb3558da-957b-4564-b2a7-aab1255bacaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "89dda164-fb2d-45eb-a228-caafc70f0fe1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cc696bd-4965-417c-84b4-4847f14052e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f9763be-233d-4ba9-8ce0-794b87dcac03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0892c91b-50a9-4d33-a43c-d8498d30b4fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eaf12c5e-585a-4fac-a313-1fa20baa8000"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50b7fd56-3a0d-43a0-95fe-686f47b9cd90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9bb46bc0-0c63-4a87-bf9d-389c60f0b0ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a412a91-ab97-47ba-aeed-84e71175d333",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "904d34b9-7c1f-4060-985f-e20168372f1f"
            }
          }
        ]
      },
      {
        "id": "e2121ada-4aaf-46eb-ba46-f5629f30c6e5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "50dc0b47-2d7d-4d54-bb62-89562d9c8727",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa395f5c-9c39-4ad3-9b8b-f9157a5c9ecb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6f1d54e-36c3-41fc-becd-cdc3059b2ef8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81feee33-68a4-41d2-b0d5-8bbb421473ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3180a83-be35-4eec-8089-210851986a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5beb2abe-5c85-45a0-9f47-475318833d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9cb636-14de-4043-9c4f-3903e5e58f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77737db2-b9a4-4232-a2b1-fed6127302df",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fb1ffa-e04d-48cd-90b5-e26ee57a0e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b332084-d53a-4155-8e0b-222d655377c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e7b6ed-3e20-474c-9ebd-a72d8bbc7481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44a6841-48f1-44fe-95c8-7d3ff1af2448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad1549a-7ade-431a-9be5-767e2927d869",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb31937-ecc8-4310-9d43-a891e9446eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8eda86-4694-4fab-b917-9bf1abbbc5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8133cf79-17c0-48ed-a970-7ad328225028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d064eb2c-92fd-4084-a0ec-79e4b88cad2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1268086a-ae0c-44bb-be31-bf4bc496fae4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c743ac7a-30c3-4833-b09e-984b627d3f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428d7652-e5a1-497f-a903-5b55dca18920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baa767d-76f0-453f-bccf-9dd461d240c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1f9b9b-d8d7-4430-ba0c-d4425a8d1d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b130f03-fcf5-4fd1-96a5-00be16bc8095",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3f64a7-da98-44c7-b8a7-99b2199309ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd81dc5-aeab-4070-8f8e-492e5ff4004f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4942955b-590b-416c-ad8c-53a396017a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17cb1227-c2bc-4c31-a7fe-f1e3e4c4b423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85efe6b-5b72-43d3-8c48-1e2c11b98106",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0741e2d-a1c8-46f5-904b-076cddc4e3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34da881-a2a5-4c1a-ba29-b4e8806e35ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f98826-00e9-45bc-a07c-bec3e3a9fe59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f482beeb-aefb-4006-bee3-4d8f4c678f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290a16fd-b8df-45de-b883-64d1c73f0189",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323a341b-95c0-4e88-8495-1b92e3e9ad63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1722d37f-a48e-4bea-9c17-68987be5b7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c79add-e8b1-475a-b86a-7cc454e279e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "aad0e0fe-2623-43db-8913-c7f666a4c52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f88590-bd2b-4a87-bc0b-ac465c909d51",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65afeab2-c024-4e8a-a864-83e9915732dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc27a30-6475-4ee2-8384-84baa905882c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3fa644-8f83-404a-9f29-8e42ad707014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7590c821-10d5-4dd6-bc59-8553959902b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2d7ba3-a2e7-42d5-8cd0-e3abf0ff0099",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5424164-23be-4e3d-b9a9-644381772b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fd5cf9-328f-4e71-b2e4-e86d783b162f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31746ecd-644c-46e2-aa46-540f04b55aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da29779a-eaf7-4ac4-9961-47db14a0f94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf4ae1b-ff28-40ed-8080-86ae3aa4edd5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c0ad69-f8c0-4e9a-a79f-284a1b448d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e05b5cb-efe0-4e33-a212-29f032f0274e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2208eec7-4c31-4675-aaae-0c8a41ec2c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b69ed4-843f-449d-8210-7f8af597c47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852dda2a-0bcd-4e83-b44d-681beae4a8b1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def31461-c2f5-476b-ad19-9038c223e15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ca2d33-729f-4c95-9d10-e3b5c7cd9a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5979efcd-0948-4fba-932b-0927d4d1dad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9b14b9e1-32c9-42d3-b08d-6143aeef345a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da0b2fb-1ed0-46c8-a966-8d3a326c1603",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e5dd8b-2014-4def-945d-f853a039a1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f77948d-81b7-4422-a7c7-dfea5f05ed19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e7cf53-046e-46ca-bb76-19d209b0df9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55ebdc0c-2fb4-472b-b0c1-8a2291778954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f6e06b-e6dc-488f-8e20-76d741e77a84",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3eb19c-e01d-49f9-8f7d-1a5081019fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca881e6-3c9e-4c21-a42e-7cfbc1834f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2ed369-2489-4ac7-b6b9-ff1b40e92f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9420f6a4-e0c3-4fcd-848f-f59e7a8c49a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae29522e-3dff-47ff-8ffd-c98f91524963",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e13d1d0-c367-4662-9a90-ba0c036b5049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3cd2980-9c99-4142-b626-e8916340e230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e217d10a-d365-4256-9138-bf33b3540894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ebe70d-63d5-4745-b592-f6ee4a81b04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e57f3d-6cf4-4360-8adc-0dcdff9236ff",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348a2261-83ab-4538-bc0c-2b0464532f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfc76b8-e224-4f0a-91e0-5cd28799fa7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db06fc3-7d88-4710-872f-b19787678535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa6d965-a035-464f-81b2-f79c5f4f53b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfe4cdc-14ea-4a25-bdcd-3e244b61f4c3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48920c62-ab0b-4b9d-8653-c9cf4ca66d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012ff883-7aca-4190-9de2-4aa2fb95ae8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c96e05-1764-48b4-b941-2ccd974c543e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90c0535-60db-4e1e-9557-5fa4d5b3d5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3785b2-0b6b-4970-a7b8-8a25498dcaf5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60a68d9-3631-4fcc-82fe-bbbcd8227bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2604a886-0d92-4ead-8d61-8ac2172de0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265418d9-f792-46e8-9ef9-214fb4e46a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb9b658-3943-4bbb-90f5-18c911f7de58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229c874e-76f4-4cea-9ea4-f746efc11796",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e345643-27de-4e30-b341-4bc4142eff70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4563a6-c992-4192-941b-d864aec8ed90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6755c27e-fbd0-43fd-9d9e-d5209a2209cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59163c83-5ee1-4869-b0dc-311ff2c1278c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce4a8bb-194a-4132-9c5d-b93ee057477a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b967e91-5609-44cf-9233-38e34a46d4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827550ec-2d6f-4799-83be-695f8714bcde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9f479e-518c-465f-8017-18c39074ccc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7a753a-5678-4535-a5ed-bbcc8a22235a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81920f0e-f323-4c3f-8705-418bcb198512",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0f7bd0-b3f7-4d57-b675-693925457b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c2422e-c893-4eb1-a207-6a9bd702809d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7dad7a-d0fe-402f-8983-80d1ca82cc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea51ffe-70f5-4acd-8d12-08c885ca250e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bdc8e3-203e-49f8-8c3a-2a5a3e98f343",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e95bf2-e637-4c9f-9ab2-3a7ddb659c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3c796e-95ea-44f4-8a34-a3bec13b0c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d63f51c-82d1-449f-a688-eeb910881839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4cb40b-66bd-423a-8e8c-8aedd323d062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd7aa7e-e162-47de-a489-1dc78bf389b5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c2cba2-0e23-471b-b52d-e5525b244b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86c7ef3-f337-44c4-b161-c998237a7ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61f5e0b-f036-4df3-a147-08f8673a10aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa06507a-1426-47ba-83ff-fe14e229a96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20afb130-9f98-4d70-a034-2190f699f7d0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f60b686-a327-4702-a0b6-d7f729fbb994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77075ff-6edd-4538-85f1-dca80d5a495d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab3e496-6ccd-4706-a958-19f900c1c442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc2f7f5-8b11-4a43-b6ff-e357748eae92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbcb512-22bb-4d35-801a-b17e2d72b0b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212c605e-902c-4bb4-9b56-b4772bb97f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acaa7ad-7445-4df7-89cd-34eea7222699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5b9678-b935-4b93-a259-ed466ad88820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "022acb5c-d670-4294-84bc-f7ef42925bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68378587-01cb-45f9-bd2a-d58027cd369b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af550677-f8a3-4c21-967b-9bd44860c3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac60f5f1-6d7d-4080-862b-8c6a3825179b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd332c5-9193-4af2-b02b-5be6fd27394c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd03c33-5279-4d61-a866-ad610cb60300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74fd0bd-6d22-4aa8-87b4-ca4e5efa8eb0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39b8f16-5db3-4d74-9658-86919c16584a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b649d9-6124-45c4-913e-8fa1136dc37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9988a21b-e9f4-4311-8e49-88d438e67d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8838185-e46f-4d36-8fdf-dc979fa19c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a54b0e-bf56-4367-98be-c0237bb0fb61",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f5505c-123b-475d-ba7f-e361c978407c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bf4937-e9a9-491e-8cd7-ac46d203d754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cf35cb-5c79-4aee-b689-713c479d1b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7ad708-8f0c-4ff2-a903-890509b9a306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16658f75-e4b1-4dad-afd2-06ce0c596de3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbc37dd-ec1a-4e57-9289-f6b3433f0124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37ea842-72f1-4bf3-9d6c-c8f8bd9f6498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616a423d-56f1-4164-8e96-dd3aeed32ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee8f994-c335-4cd8-8917-8bdffef39fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ea8dcc-9a61-47ea-b13c-d2ea67049424",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed0b549-bd74-4c47-bb60-3ba3b875a4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0f4f4a-fac8-4d8b-817b-d0e13efb2706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3d9dcc-3b65-4a53-af1e-74cddddd4859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c173526e-5394-42bb-b36e-b4faedd0c9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329e9b77-bf57-497f-a69a-bbdace0ba008",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14c11bc-c5cd-43e3-9a66-ddcad237a51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12d5dde-6eba-4365-9a4c-c3c9dd1af3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5f92f2-b7ad-46a4-b64a-32d26ae0cf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d5aed6-8611-45bf-9b55-759cafdfb0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b458bf-6849-47c2-8ce3-4ce4598805cf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4169f067-c8f7-4e20-9ad8-2fc54fb019b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1980eb78-b147-4c22-a557-fb01567110a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34371dc7-8aff-40ea-9341-83feccd9efb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91242c40-73cb-4494-86dd-722ab4a903aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad30eba-9937-48be-93e1-e6d6ef5601f9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d7f383-832a-4c19-8557-d1b37f00dfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50659f23-13d8-4fd3-87b4-131ab1b87d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621ad37d-0e77-4560-9abf-3fdbf15b3725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e759389-e5d8-46c9-bbba-943d469f43fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ad87fc9-acb0-47c1-b6ba-54789bfcacf2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7564e17-97ef-4174-b6ad-50d3f74c5fc0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cea559a-111d-4574-adce-3d2581b54634",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4836006e-b548-4fb2-ac1e-ce58e91b5617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e228e4-b312-4f8f-8599-8c91519e5b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c35c30a2-49f9-4e12-b562-86e08ed215d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d70c2603-6e72-4fb2-aac6-20316c0d4440",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5d38b6d-64fa-4311-91d6-35641a888d96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ffeb2e5-92d3-490d-80bf-bee807d931d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f49b09f-0095-4e2f-a74d-6d7469a59e71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "447406ba-809c-4b41-8e54-cc5809fd3d1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cff7d314-0bf6-4a04-8189-2bc49d2e33c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "add3f4c0-2977-42e9-8503-627c16d197bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef6ce586-fb42-4072-bc3d-349a1b9c4c9f"
            }
          }
        ]
      },
      {
        "id": "b59efb00-eb5a-4faf-9bac-bfffa86d966c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "346d881e-0be9-4b21-be82-94dfca4f85d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f25b13da-e2c8-43a8-a93b-2ec69ce59034",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da2e0f36-16ae-4045-b61e-4b3233048283",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dcbfbf-a35a-40b3-8b96-e81ed2c9511a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bffe9f-0aad-41b8-8b3d-5bfbd1c3a4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da468413-c1ac-45ff-8d67-d6c429a0f437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0ba441-1f4c-4441-8d12-e4e7a71fc553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273f068a-6897-4076-9ee2-0375dc2c9e65",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2def18-bc6a-4890-abc8-016784e77987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b16033-a47c-459c-847e-3f287ddcc589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0840aa6-5918-4a2e-ae80-06f34cf719d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0e18ca-a46a-47d2-9183-d60d505ae1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdeb922-be81-479f-b6cf-e31e31de5d8c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892fa55e-2445-4e4d-9371-bf27ffe0cf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac94a869-7a97-4e76-ab97-705522c1fa34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d089a950-bfb0-4b75-b17e-da6921e2c4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2733bdf9-2228-4708-88e9-77f91d3a9f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c10684d-bcbf-45c9-b660-07c0875a67bd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8155eda-e343-4e03-b481-8f8b05d91aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b446962a-36fe-4eeb-8c51-410ac8aafb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd14a381-9e86-4b28-a7f5-7190530d7461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac99282-312c-4f23-8561-745440af933f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521fa991-c9e7-4483-89bc-d935ddeee7da",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94435a29-bcf0-4f9b-8f69-5de375d1756d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87fed9c-5060-49cc-bcd1-a68dc4e9e23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30595da3-8e1e-4b76-99e0-348d50bb1a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5fbdfd-4290-4e3a-b461-12fc32102c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23162da-190b-414c-b188-34293f40697d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3111814-e9ba-4254-b33a-34930d822dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a4f7c7-423f-4c08-8861-cae265fbb754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5618c0b2-da29-4681-80a0-436a75a319e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5317c130-1cba-4b36-a5de-35d766931132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d22afda-78f4-4d86-bcc9-4f7a19f65e2c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cdec7e-c155-4f97-b1ab-a22820a478f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e311b90e-6684-4cf6-a62e-3095e0fe477f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc29f9b7-9119-4062-aa2c-a4a9914f0a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "88388a71-a610-4afe-9800-94e49038ee01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb10238-3dd5-4c2e-9feb-e31865ae0df1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe615c91-4a3d-40ae-a03c-7bd8c11d8419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c241d09b-2ca0-49ac-9647-929862c3c843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620b05d7-04ad-401c-b985-0f7f9281ce79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf7699c-a273-4ba6-a56e-58f764097c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b2e7fa-d034-49e9-99ea-44ba7907b99b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1fb099-5053-4ac3-b0b8-99c2f686108b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1beab589-07f2-4f09-a3ad-84dfd46e6737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e68319-1509-4f0a-b49f-1c8bfa3045c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74da6f62-66c2-4f58-aa96-abff882779e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907f435c-f88e-418d-8664-e8baf4d45075",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77995c79-4e46-42a9-8e4f-23fc3e0a277f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d72af9-1112-4fd2-b285-b86bbf3bb798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e7d68d-6f53-4fff-b0e9-5b07785df3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4825cba-1dcc-4e6a-8361-58e2520ba025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a960559-d69c-42cb-94d3-1e55bf026e17",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568857d4-8422-48aa-8f8a-7c2a48c9ab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f59dd27-0f26-496e-a3f3-25d30f50d9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bb51fc-b15b-4d01-aaec-aa8fb783971f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "611f1d47-0bec-4f8e-8848-b7fb1c1c4e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4418bc0-7c80-4ecd-89e8-74a636db8957",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a072e1e0-5ee3-454f-9a94-81d429f7c3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc01f509-c01f-49ac-ac8a-379a0eeb37d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a90b21a-e590-40b1-9520-ab291779264b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "faa4f103-9ff6-4641-b3f2-9ce52a9cc7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9641bf-d0bc-4789-8c7c-eb11e786b685",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0381b3f-56a2-4170-8240-bd5233c253fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5484cb2c-65cf-46e4-a9b0-2aa0e75a4578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f55dc0f-df2e-4aa2-8566-795c9b90a265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c12cf4f-aae6-4a95-8343-891c8ff3b446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6da2080-d168-4cb8-a7ea-7184a21e3551",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572b290c-3a82-45d2-813e-8c68b4e16156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87767444-bdb9-42f8-8852-a6b67878bbc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cd9962-8902-4c89-bf34-0bf63ae7bc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0145a278-3ea7-44c1-bdb0-0b016f9bc6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d92669-f567-416b-8b42-5bebacc8b628",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f52070-92fd-4a30-9364-ba1f1e8c216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2127cbc5-ad92-4e24-ab79-32341faa365e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9954bdc8-d8f3-4518-bc2e-c4503bc07fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0492a4d9-ee4f-408d-bf2d-26260d760485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c31a3cc-89a9-4ffd-bcdd-7ce0181c6230",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf488f0-dec5-4832-a8fd-5d9f37dfd431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e72de9-1493-4f63-890e-e2ce25f08d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094eb787-4e9b-417d-a01f-1a7884a23b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d08776c-8f3b-448c-8131-4276d1f3f41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c246b8a9-ad12-4af1-ac8f-df7fc8db303b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb62294f-3867-48ae-8777-f38e8783fb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5964fc5-870e-46f3-b74e-bdaa25698e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c08228c-4221-4b22-a05b-c40860cf3194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d91977-7eb7-4e22-980e-dde24e18b399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f9fd4d-1785-4de3-b0bc-49391a52063f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f7c7a3-8738-4306-ab8d-88c138634aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3569a288-76b1-4bf7-83bd-fa32e2826d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b13c9df-be12-491c-bda4-bbbd967f225e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c90ac4a-b7da-4227-b50d-687c2ac3ec91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e363cf-4b2e-4553-a225-2deb34387fda",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cce1090-aafa-4730-a844-3cd818bf4164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8b2d38-0205-41e5-a12e-0e9f0ab35232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75304014-7765-4cbb-83f9-91d6745ad4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd4dabe-32f4-40e7-9547-0d2836da4366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030844de-6951-408f-b6ee-66b8882b9412",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00af2ee3-afc1-4d85-8bb2-e0f30c418aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddecbc58-5dca-4a9d-ad3d-e92730315161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406ab260-c884-4b9e-b21a-48bbd785d993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "259709f1-ffa5-4452-a6b7-8601a5272d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6597b979-4fee-449e-a04a-0994c9acd27d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393e9b2e-1f85-4a08-ac24-e0320e4f8a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fa84e8-9eab-4012-b197-145e7554a59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a968e4f1-b1e1-40b4-901c-58b6cb13ebd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8f8145-8fca-491a-ba7c-704e580a09c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06903def-0986-4841-bdef-1299b02142a2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c18170-336e-400f-bb54-8ca72fdae80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b937315-aca1-47f9-8142-37a8ff525ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5939ca7-ff49-40aa-82f3-4e921c884a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc3eb0e-bad0-4c98-a4b6-2c598bd075ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e6b046-e3db-4e35-89ef-2610551b49cb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c98024-3b38-4ef8-a923-47a188a01ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b6a09a-a860-4c9d-9412-9145ba728e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874f66fe-4ba7-48d2-b0c5-252a905165d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1dd53a2-217b-4dc9-937b-9ed36341c992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5310f1-4b75-4197-ab51-0133a479fb43",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae03171-b59c-47c9-87c9-4bb1988bdaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ca150e-8f9c-4ebb-ae4b-505422de16c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ce1ed3-7df0-4150-a4b3-09ae249fb3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d07a4c29-938a-445e-b1a2-662a08b71e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4835134b-549f-49c8-b43f-7b92982a2d14",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a00cf38-ab30-4b37-ac6c-6fce9672b957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed32dfb3-3373-47d0-9bbd-8fb113070a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750bd38e-5e67-4d8a-897b-1448199e8d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7a4c96-b633-4349-8e07-ea9c53e9d9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4088c065-6364-45cc-84a4-7a2f6b0caa65",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a96e82-446b-4f6f-b936-5b851f9c59b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80773549-4063-44e5-b1cb-39d791fc23fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce89026-72c4-40fa-b9cc-da27b0f7567f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7650e43c-49f0-4ee0-9aa5-4ca7370d6aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9e5d7a-2e00-495b-a681-5a7cf25098b3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe2676c-4d46-49a7-b80d-58e56992a119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bad8f32-718b-4dcf-ad8c-d21673ac02b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3059a6-fb12-41a6-83b7-b322b984642e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b21ee3-a568-4221-a283-aeff88faae5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c2a1dd-a6df-4b0e-8c57-c787b9abc275",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba43c4b5-7582-449e-9e9d-25aae4c885e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f60229-9c77-47f3-af9a-2318589585db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1794cc3-392a-48a5-a933-23fef55c7ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1916223b-7c9d-461a-9c04-2db5c2fc3e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a907335-85bf-482d-b041-b91505171758",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208f66d0-dc39-4b5c-95e4-199e5d46dba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bcdc55-792d-4c17-806e-b7d0d89cad1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dcb8f1-160c-482a-b068-8d2316485b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b00c00a4-30ac-4468-ae1a-ba4f91d8522b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990be924-b0c7-4bd9-af79-a69af5258289",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ecab6e-7498-4621-8eb2-6dcb07aaac95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cb649a-07fa-427a-8c4e-82b70b676f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65ebcbf-0f6f-4f2e-9b14-99982f4bfc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "938a4621-b0fc-41a5-b75c-c0897f473908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d7afa5-1e42-4cb2-a0df-1c7ebc0dfaf8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19496a7-a7cc-46e7-9e42-eea750adeb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405e01b8-1c00-43a3-a982-192415cdcd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a76cf2-7a18-4b56-b2c8-9f365babdd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ccbd88-e674-4a71-aca6-6ad5fb6eb12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99826830-8ceb-4e85-8fe0-31dd5ad9dbee",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae51ae08-9aab-4602-bf54-267d0ccdd535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cda2f9-5ecd-456d-bb8e-2c930e5618b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35145c17-bff0-4bec-b090-0680bac2a5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a3c645b-aaa8-4a58-b83f-3b03053783f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27ae2a6-cca9-4edf-904e-3e4e8877eac2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d1f97f-e497-46ba-9809-2fba75cd0f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7aed1a-363b-4d54-a98d-e1087fd1e8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ae9a88-eca0-4142-9f2f-1e8fae3dafe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8a51b7-46fb-4858-9b1b-432574eee9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d21fb2-81ee-4a23-8208-f8eee290780b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87faf464-3cf8-42be-8502-cb12b320c47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807e9493-221a-4e7f-acfc-aaf4650c3ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ccc0a5-dfb3-46ec-b822-28352ea50681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de22494e-5c9f-492d-bd2f-b760bc99f251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b01484-36ba-4941-b920-d2e83705b5f8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d020638-b191-4694-9e8f-7e61c6764641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc74b27c-f038-4c93-a75e-4b6e4e6e8435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9b9862-64a3-435e-9d98-da86f8e09dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e60236cf-6f03-40c8-80a1-5192a90c03a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dbefd7-0663-4871-8909-bbd1f7a1c3be",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cf148b-13cc-4c6e-a1ff-97b83d6ab252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cb4c30-d3c1-4e06-993e-47b8ba7d9191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d26c61-6e83-4b34-b445-b3895881d5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8dfa63-2295-4892-99d7-201f33a33c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d290fc-d897-4ed3-b98a-2e49080c29e9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85b649c-2a8f-47b8-b8e8-1c9a9b7b499c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c29d53-792d-4828-ac98-c7937cb1e0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1974782-137b-4c3d-972e-7c67f3ee98ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "721f950b-c319-46db-91b3-9f4442b618cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb91b288-e775-45d9-b83f-783f44b1b04f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc8aa71f-4fb0-4a63-9a87-ae1153622d0c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ec1169-c3c8-424f-a14a-07591b9aa1f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b1a132-7786-4bdb-bd58-9f212733d3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0d0b84-634a-4d0a-bece-d168f23d9d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4971c7d-cb98-453d-86d1-5ba8be3ce6d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dc075cf-2671-4775-8bf9-d84c5cd6477c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cf16637-0d06-4d60-91a2-30caf9870e21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb063b31-57c9-48c8-bbec-61400b2912d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b441ff2-2321-45f8-afba-2b4a432178e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d405b0d2-1408-4dae-bc2d-bb2489c31cce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f16ace1a-1235-4143-a690-3f1bdd54c7cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09a182c9-8431-4cb8-aca7-52cc7e14bfa2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8feeced7-3d97-47a8-87e2-314b0eee28c8"
            }
          }
        ]
      },
      {
        "id": "468907cd-8d43-472d-9c1b-a8a4f869f901",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0566c156-4698-48e4-a658-c59e8622e32b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adb44b5a-106d-495e-b3fc-49c90dfc467f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1ed5608-dcdb-4da4-95e2-a7d094a7cb5a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bd4576-18fa-4979-9b1c-e367051ad01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2728842a-174f-48d3-93d4-5499e2207112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91593fb5-3cdf-4209-97f7-46fb86560548",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f798663-888e-4c2c-8141-6fdae6b967a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcff3b3-9df1-4a4a-bb89-bcd27a269d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9805e4-ec11-4684-bc43-f094052740a8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c363dd45-4878-4e22-b6b8-3cc8d29721f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1965626-8caf-487e-abb6-ee6895d7d6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e367da-1928-4b99-8c6b-a294a1a62791",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf69181a-4746-4146-88dc-07c0482e86f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c11c73-3360-479c-ae20-792b711bd8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d831aa-397a-4567-b93a-717b15745862",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4ce20d-bd3c-48d4-8d4e-dd89bd9a08fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73165dca-624d-48f1-8bc0-578a19a9a292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c7ee43-0062-4553-8acd-c2dcca03119e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef503bd-ed89-4ec2-8251-cca631c27be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a893dc5a-160e-4865-941f-be0e2e6a38b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b99320-2a35-43f0-a3ab-49b570229d5a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e8143c-9994-4ee2-953e-0b4c4b24e28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567ded56-60c8-4518-90db-c10a962eaa5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e029931-ed58-4669-b802-30a8fe3766a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf100477-6433-4f23-b466-5d6eb2ce96e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57394890-f136-4867-b8b1-f90e23ade2ce",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82451e3-9a25-4cb5-9414-e8f97efed1f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc713888-1878-4dad-b72d-15d1d31ab79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537089aa-7e2a-4f77-8c65-e54b0ec6e8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f08c96-c119-47aa-8ed5-1a66fbb6643b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735d20c3-7163-4f3b-9915-c88e77e7e357",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b4096c-c878-4181-836b-de2878e95cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeef1214-9098-4472-91d4-0dfbc8afbe72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a367c5f-0e1e-4027-a96c-1676dee082a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba94ed3-075c-4856-92a5-1893239212ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa80410-813e-412a-822c-263aadc4bc02",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962bbd24-af90-4c6c-bea3-a6fff597adcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30f0a418-5b12-4f49-93d1-143f13ccc4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf1a452-2979-4b5d-afc1-9e62d9d35eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd91843-6e7d-4902-8bab-f8124cb161dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86319a53-2b66-4653-97dc-6529c1c98ea3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35fa951-d636-4fe1-b3db-8169996ccd80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab91b1b8-35f1-4cf8-a701-699d9c9698df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675f703a-846c-4dde-9160-29fc32d691ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71201e6b-4cd0-4672-9b0d-26df2092f6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8053f017-089a-43dd-a1c6-e3b8a3267066",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0017e87c-5b29-452f-9d2b-817e5f691d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21d454b-655b-4e85-a317-fe68897c47ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31549434-c464-4623-b116-ae543ef2ed2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ce4457-7350-453f-8340-3cfedf50aa2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a066d3d-8d3c-4ed9-aecc-9da016067423",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389c4d79-fe7d-45b5-80f1-44d1d533c839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e926ba72-3a2f-437b-8d0a-f52f24a46e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceef897f-5854-4ba9-91b7-a10701025a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae3029f-dd92-40e0-91af-518104f7a975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2f8f26-796a-4a4c-ade1-937842793b03",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b6066c-508c-48b4-8ed4-0d9cfb88a837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "572a9c69-ed4a-4953-9da3-ad98cfcfdfb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b080fd-adcf-428f-9116-04e270b2d03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d234a3f6-ff28-44bf-be21-4b0ae1b4fe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893767cd-7073-4e49-a826-b630c48fea44",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584e2282-aef4-4816-8754-d5fee6f50dc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44f63c77-2036-4a40-82b8-5fbdc2158679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6dc29c-b0da-4c41-9717-87d7dff2f9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7edad8-4e0e-4d1b-85a9-b0165646646c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e88afb-9d6e-4384-a3bc-a6541af76fba",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41cea88-cdab-4b4c-ba64-54fde1f829f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9195d198-49f8-4bbf-adbd-5769b1cde640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a3e492-fbe9-4ea2-9573-22c795316cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112e7b0f-eb09-4c19-b804-465aa830e44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642edd74-c55c-45d7-855f-f01e9fd9e61b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9401cf2-d6cc-4b8b-8572-14965731c05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68554da2-0235-489d-bf54-2c5c5d75f11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13f6593-77fb-4eb5-838a-9f8f94eb0516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9480ac-a92b-4494-b927-17167cb6b579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e0315a-ccc2-42d0-8e39-78b8d8648b69",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e256f147-472e-4dc0-ba8a-af34d4609405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a4fbd6-0322-4ece-8702-04079737fe3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540f86b1-e2cb-4a19-bf29-3123e92be8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecaa866a-384d-4804-a9ed-950980e1bba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6aaeed-6f36-435a-94c8-46643896af5c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2046155-671f-4ccf-9856-564faf400349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60052a2-2e93-411c-8c97-0a8fcc500275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1929529-b83e-4b32-a3da-273557d26382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eff0f88-1852-46b3-990c-cb91548e54c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0f23bc-444d-4994-b437-a2daf4f1be06",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3113fd-2b1a-42e6-bc79-d310fac9b703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b0366c-a1d6-401c-96b1-2926deb6cab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d5c157-1b03-4735-a932-f0ab0de7421d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ed0269-f042-4f6c-b3af-1bcd022e6a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b112d67-09f8-426e-8f48-9e0df3576b4b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a71129-4d6a-446c-bfd8-7b8a7aeb7f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da599091-5824-4d32-9e84-56b32d204977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752e57d4-f9af-4885-a042-9641c7acb783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcfb64a-5c5e-4371-ad2b-dd76814f22a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac89d4f0-db72-4c90-b3b2-0c334abc888c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a5e745-fcce-4d24-a94b-10a32dcf87d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558a7cb5-682c-430b-b8a4-a8b765b0743a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798cdd66-4e11-4a97-ad62-febce35fb8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdad6c5-e360-420a-be54-fd1f5008311d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f141aa26-a40c-472e-8c71-7a76831c96bb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa8fcb8-cce7-42d5-a568-36bbb5d3a182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef0bafc-db48-4c6c-91e3-6d97473c6b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e551e8-8c43-4121-b1e6-4679e2e60f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd3b4f1-a983-4382-bb7a-9e21120c811f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e9e4a0-3136-4b73-8b83-ad0c011fb50d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6890757b-5375-4096-bd05-1df04a671765",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "474e317e-eaca-4dc8-ad29-0c2adc2e5d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68333897-8f6c-45b0-904b-3071ee942706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afde857a-981f-4a0b-936f-f0d0385b17d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9174b1cf-9e12-4d20-b271-3c80800792d0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f74d04c-08ff-4037-852b-5f8d74388997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0365ccb-af13-48a5-9207-819622167dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4c4bde-4792-42a2-8f85-754d04b2c8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ca2ffd-ba05-4dc7-880f-a9778ae11c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b49cddc-88ba-4951-9cc5-0d8ceec61bc0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d03ca3-3ea7-4df4-a622-05dd726f3e82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8e4bcc-8ac3-438e-83e0-2c0cb8a5cccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec3955f-f9dc-484a-971f-dd6df534799e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465f2b0a-7ad2-42ab-82a7-c429cd96eda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a8a59c-9a54-4d6f-a34c-2e44ab92dc56",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfb9010-ee2e-41f0-af59-1ca870e97fe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9671309-18bf-48ec-9acf-f522f0384fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738bf104-1488-4e6e-9f88-9fd67a8f34bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dd1280-beaf-47a3-b169-7a12ae88f148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73982de-7039-4475-90bf-28336d7292cb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49c2d2f-5cc3-4b39-b7d9-068eda7b4fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cb116d-d01e-4a48-8f85-0a7c231a4b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e918e1-bf68-44f5-beb9-f0df5ae175b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b790764-ffe3-48fa-af9b-20a4f60bad69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8a17c2-7cd0-4785-bae7-c1454af13774",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997f6a85-415e-4ccb-a703-f25b4b6047cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841c07b7-d00a-45fd-b723-8c660efd2515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa43b7e-5047-4124-87da-7feeb157c0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ebae5b-9425-4a2a-a8ec-520948d023ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f51d35-8423-45ce-a4b7-8e97874fb45a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5557b8c7-5149-467e-9ecf-7cbde487bc7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94a87767-35ae-4af0-a8be-f6976f1f5d84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf708d7a-cd58-4088-aa95-c0f852f90761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8a31ed-9c61-43fc-b4fb-e60c089344c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4aeff7-00f5-4a93-ae72-5fec11f89978",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed8b99d-1c92-4467-a778-c27c8b520526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11e9b764-c3e5-4da4-aaf2-d9ed3ab1e467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e782be88-1ea8-4f86-9231-be144ac80ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffdd160-f6a2-4b21-824f-aaf7f6ddb631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a3799b-9eb0-4dda-8e52-72e0e8d53fd4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8452aa8a-95c7-442e-b6f9-bf798c491142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afbb660d-5daf-421b-9527-fbc108c0dc29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a44c72-c96b-412a-a77c-03871f63a6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc52a9ee-d647-45b3-9d5a-6261bef1064b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a697598-50e1-40dd-8c08-279b4b3cc090",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd05ea7-f3c8-4c61-9c48-41e14076bd12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b60b8eb0-77e4-41e1-bce2-45e44ea8de0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95872e18-4cb8-42f2-b262-7168a7b17cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10aff7e-2e75-41f5-99eb-2aa4040b6cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d13d532-7d86-402a-b4d5-47836b62c65f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308f5707-9cd2-4d1d-92bc-ee9f37884489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a67e3727-837a-4dad-b560-456074bc515a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6b5b4d-2675-486a-8b9a-965d296ae813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1c1b99-de16-4660-9cb7-2e1a42379a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350798cf-8a3f-4983-ad43-37c98b2409f8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a6ad34-e049-47cb-a0e1-2660873cca95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259a6d1b-9cd1-425c-9b32-c609aa89ae79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4b8b68-d669-4c74-81fb-cf0154544a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6799f46-52cb-44c6-946c-eefbe8335c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82881c05-ce83-489e-8992-52ad0056ad14",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e93670-b6d6-4977-9d10-5470d744595c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cd89f3-bb56-4653-99d0-0302ef79ab4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a4c26b-bfb7-47fb-9218-290dfcddd811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b044b23c-8386-42ad-8286-f9f251180adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b9e6b3-d24f-4cc0-b273-99ea2c8b3c92",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5708bf9-7771-44a8-a310-4ec53f51a278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184c93c3-6861-4a11-923c-8020c99b23a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3620f25-41da-4d56-9217-0e5caa46f8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4c8bbe-8b86-4410-9a2a-61f80b9cb7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b2baa9-bc0b-434a-8260-edc63c8c4271",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b6e666-3fdd-4cd8-a69b-835cb840c75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b579b98f-9b8e-4b08-ae6b-834ecff45b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9601cc5c-c061-4ace-b649-ec3178c18737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02f7304-1921-4b5e-820e-ba9218048f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245a43a1-f857-4238-9000-57023137f297",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250cdd91-bccf-48f8-bfc0-a0c73ae63722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8fdd97-0af2-4c97-8826-f9c88cf510de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945f4d60-2b6e-4e1f-b9c6-b8f490b3363d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7107da-1cce-4e42-aa81-c11b4038a684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40883839-112e-4446-98e7-d09c1f9e5f16",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9d143d-d91e-4e83-a648-0b978f7fd99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8ba060-378c-4397-b7dc-a0800a35da1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8192d6-be64-4571-af57-68c78432d59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471932c4-1449-452f-8f85-5364328dd946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf75f96-288a-43a9-bbbe-ba131ed6586b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29592cc-d325-4cb9-823d-4c7870632cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a92232e-264a-4378-91df-84aed62f01c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9897f6a6-83dc-4405-90a2-14ada9c9972f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bd6cb4-9eed-4686-985b-05b141b64142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79d0903-11de-4fc0-9969-d5eb2991c435",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f1d015-36e4-43ce-a31c-2fb2bda5ebe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65bdf2b-ca7b-463f-b21f-b8420c575c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6afd0f-d03d-4525-84f0-afa2528a1113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75be4606-b0ff-490c-8dd6-48c23883047b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987d8640-70f6-420c-b686-ab2acd482058",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9132e7-e0c3-4237-bfd9-0b01fcb656b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e968037e-71e5-46f0-a66f-f4bc73c35f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69add88-ba9b-4be3-a39a-6afd4d3f18dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71c7b5b-19a0-4fe9-8737-8975eea9a764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6fbc8b-3c9c-49c0-9a12-19368a3c054a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4905ce2-e148-4cb1-a37a-151dd348a4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a0133b-39fd-43f0-b670-f64358092eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bf29bf-424b-465e-b76d-af03b5cc7af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c407e4ee-9077-41ac-bf74-33ebc3c09c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57666541-6bc6-4b5f-8f7d-e3d77e94e17d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7db73e7-5f4a-4b84-9072-956d666944b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a30f15-eb2f-49af-8523-c209f3bae2b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf224888-99e1-4349-9acb-8ffa7a8d5345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28856fb-a6f4-4081-ae68-1cb5e99d1977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036cfbdb-676c-44b2-b50f-92a1b7dd8ab5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33186ef8-2888-4cb5-945f-33e30ffcce58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41cc9160-b592-4d1e-b936-7340f7543e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bd7c15-6571-4391-b3cb-8693c0401102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3201fe-e626-427d-84f8-eef155c7bf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcb8b1d-6a48-445a-87f8-2f69eba0bc47",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4f351b-c6cc-4e2e-8f47-785eda1a22a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8ffe6a-34a7-47aa-a698-c33cee9da51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b64736c-da52-4c6a-9710-0f1b00cf74e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7245197-e28c-49eb-b719-b72a8dc23588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d604d11e-60e5-4766-9daa-1d4ca8a3e43a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00af6e5-e9dd-41ad-8373-11972f22f452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c35642-e340-4662-bf4b-4940d4aa1a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1149121c-293e-4d92-aedf-62b7908b83f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97544b6-e327-450b-84f9-a14f5348f126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3043fbd-0254-4c45-9008-b4c2fe6ef6a2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5daf1208-e46f-4b01-a2ac-ca867f5941bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f57e2bf-5649-4095-b30f-9f356ca44cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3053c43d-2b67-4b23-8204-95e6bd24d23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1752e3fa-740e-4fa6-8960-118bdf6c340b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c86ff9-d9a2-41a4-89be-c18f5e235b9c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc90ba8-516b-4492-a2fd-30e6239a2d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa95875-f518-4876-890c-530ee4360a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437ed9b2-07bf-4bed-9291-e65b32755daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08a75b8-8bdc-4c44-829c-044bf538f5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2ccc0f-0019-44bf-8dcd-4a5e4cbffc9a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd93881f-8811-40e9-b1b9-bad6b772a051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c24eb85-69ca-4b26-9ad4-8edfea20f56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88ffca7-f0e4-4026-85f7-9041807e80f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e85fa1-8ee6-4ef1-bebb-df6c65188268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfffa04-860d-4a2a-9866-855b06a87d58",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4b92b1-5b91-498d-ae33-27f2f53384c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113aac51-4943-4c3b-ad72-3277442ee730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acef960-f367-48a9-a169-f5de66e63faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df91835d-1fd8-4220-985a-df9021cd6093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3388fde0-4ed6-4855-83dd-84fef5afee6a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f99fdf7-a6a2-4301-b997-62d44ef2c7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366a0aa8-67f0-4347-bd29-e6a5103f4fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db2d318-149f-4162-b676-219f5f2a4da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f5fe2a-ab6c-476a-a767-1bb02bfe44cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cd3586-947a-4ea1-ad25-112604b17408",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03e481b-a3b5-4691-9ba3-300ae01f3207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617b08c1-ec32-47da-999b-d0428e610f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7d68d8-5b73-412a-802c-97502ded4872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97b3bdc-d1a7-4008-99b7-159cf4382a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94de6ea0-e384-4b1b-97b6-20de2e3e6ed0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6d0adc-7866-431f-b6e4-3b5ba51d5ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7569024-6989-4f74-b557-560eda2ebf29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428ad070-89cb-41a1-91ac-36e3ecdd6058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886cc1db-82bf-4c2c-b55f-96d3438d6db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f858443-da85-4833-9cb5-6ac9a50b6656",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bb6919-8b58-4d54-a59a-a2c36093ad8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cd5e77-9809-4cf6-af96-b0ad35e7403d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6255bfc-2412-4720-9e44-ec7fbef9ea5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f455cf8-a88e-4642-8633-42edebd79fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cece8163-3ff4-4664-a701-3658e900291d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7723cc-516d-4810-892e-fe8be0e03e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a39d335-5e19-4b0e-88ad-28ebf4243531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5763c1b0-b65f-44bc-8a08-0fa5d5d62cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651dd553-3dc5-4a8a-bf9a-67e8c42fc9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f060470-fdf4-426e-8845-6697a2b8ff3d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff6811e-d652-4bb3-a1d5-35b5f1ac6553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff286275-64d8-4372-856e-1f3c17e882c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26120c65-c7e6-4c87-bdbd-19b943ebb09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5353ba6b-15cf-43a1-8497-5fac0da74e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebb32c6-7df8-4b69-a39e-b4ef09422c0a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b51d6f-58c3-4e2c-bd19-53556885a4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a90c90-ddd4-446c-9ada-10b0f5219fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7511b0-34a2-4d78-8036-0b2db474abdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2ddda8-8160-4da0-8fe7-3c183f273ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b3efd7-ce62-465a-ae00-9f722e998560",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d346ae-81e1-4634-adf4-87db81ff7206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b255ebe-6d3b-41b9-a68b-141da2ac849e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b237d148-5f40-475a-ad3a-f82e58d34f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2597f62d-777d-4206-8781-721a55a11f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de4ecff-84e4-4abc-8925-0894466081b0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd933c32-6f6e-4812-8f4a-d713fd640c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab0f398-4f10-4c9a-bf60-06b6e11df42b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591380d3-1b78-4189-abfd-d9dc017dba20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d8eb30-5ead-47a9-8b3f-9d0d9807cdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddb69ff-8c52-4415-8c49-0944eebe320a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d017bad2-b9b5-4f71-942e-522487bc8411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557b8108-9687-488e-b66e-74889e54314a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84510dc5-9549-43cc-b7cf-7428f43eb26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c043bbd8-5e8f-4ba4-9472-97bcc35d0330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffc78f6-b76c-4dbe-b958-5cc8d9ac9712",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd00dc95-7fba-4846-ba95-7e17e8944295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fca474-6dbf-42a4-b0f1-3feb15898b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501f8c70-4138-4a73-8fb9-65a479bda2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f191f7d-ad9c-425b-b158-af7f8e78bf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5a665a-51d1-4f65-bf2b-94c899be10cc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdc5491-96ec-4844-8dd2-0ffac3fce5e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a1fae96-b1fb-4efd-9794-f563231aafe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f5d444-55c3-443d-8d6d-bdf0c6efb8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4111a441-454e-46bf-a8b7-f34346ae1af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2115f2-2025-4d43-b70a-abe7866d3059",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbe05d8-f7ef-4dc6-86fb-c575d832616b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acff3236-7214-4a97-a718-959b7d7679d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0009ab0-1e52-40d2-842a-032d3f3b3703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0258e7d-ec95-469b-ac9e-e728fb9d6804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569080fe-36a8-4116-90d2-3b10eda9958b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca76843b-d58f-4980-91bc-16831d8f3197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa2f01d7-06a8-43b8-8c67-eb4f44b78fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdde28bf-ec2d-4983-9582-a0c025f5d00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac40e396-d57e-40fa-bb12-7624773e6697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427f757f-6774-4f31-aa9c-b36a3ee21637",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a11bef2-1bdc-4b7c-9319-38f7b90a8556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e14e3ca2-2a89-469f-b57a-6cc795200fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec39c57c-206d-4a6b-a0f1-515bc8814a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e3409a-c743-4016-b097-287b984b7a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfa3b42-acb4-4f02-9fb4-38fb3024a8aa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0470b05-4bee-4261-8cc1-9d7195230f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3266a6e6-4a9e-413a-b815-c6b8dbf2a11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6d8012-c99c-4d5b-8f45-0fe4b5b87472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86518859-c915-489c-aa2e-8e78b7aafe5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13c93b8-1e47-4652-b154-eb04c223fe2e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830fdc42-30e4-4400-ae24-6f3e2380c121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656a6365-16c9-4c61-a51f-66a2b740b97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ba481f-a1d5-40e6-b509-4874d39d3fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b5af64-d1e3-4910-a105-99237166a1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f223fdbf-0791-40a4-bb28-3a6701f1d532",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756c9210-69c6-445f-ac16-09aae54a5090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64dcc6f8-c975-42db-8c09-a6e32c65ea1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8407fc40-6e5f-4cdd-9998-39e58446d9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aab29f8-74f2-4cd8-9172-08403791a7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5eab9f-332c-42b5-8b60-16be9d079a29",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8399e3e1-0e0e-4c3f-9813-84dc2ebaa51f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21b7819-310c-440d-9a0f-f07085f3f233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c817812-e903-4fd8-9152-51dbd8eda80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc84a203-3fcb-42f8-98d3-3ed89d9979b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0ce543-a3dd-457d-b5cc-e74df858ab46",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7b62c5-61cc-4e35-8345-a93e01839707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527ccaaa-0448-4a12-a14d-d2464012a5dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb3cdd1-68f4-4d31-a8cd-3709f6dc5c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ce50a7-707b-4d67-aace-238f1886c126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac371539-b79f-49df-8d8f-52206d61880f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f556c47-8c78-4e3f-9637-4f02694d065a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38483969-8442-4f75-936f-29b06910f2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8572d9-5b74-4d9a-af54-0d605b7b226b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88103cdb-dd81-40f9-8240-e851c493df6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780cf26b-e3d0-45e0-b3f5-c95b5660bc06",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a532c08-8152-402a-8574-04bcd7a90c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41416e7-4860-431e-83f1-0c453fda46c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd2c833-60a2-40e9-b01d-80c0a2ab2d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c684b291-6ae2-4169-b2ff-ffc6bcdd355e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7399e03-e856-4dba-8893-d36471ed370b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2e6576-41cb-4c77-b1ac-61ccde870ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6c10a2-8b49-4801-abe1-824bd854d7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d331e202-34a4-4cf1-b2b8-c8ba823cb8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbe19ec-d4ae-46b4-b4a6-885e89d334c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879b7542-82be-4842-8df8-d49570410d1f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17b16c3-c472-4827-bd63-f8b7cbd47f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c3c6af-08fa-4b80-91d5-99b0f6c96207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e06a677-f88e-4926-b5ae-8e1d50827483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57e2e97-b722-4d3b-9b93-d710708ff4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcfa151-b26e-48df-9dad-5580b9cda018",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5cbb1a-f6c7-417a-b204-3ef4d18ddd9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f26681b4-554c-4056-8adf-155174650d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba297ecd-147c-409f-9be8-646cd38eb3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f876580d-371c-4b12-a5a5-0661e017a993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c67246-1ca9-4d35-919c-c02dd3d5bdde",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e0b967-5f9c-4d67-98f5-edfccca04bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b3369f9-d682-4d8d-9bff-371b47e1e137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5464eef1-3cab-4942-83c8-6ae8e4e9f23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a95718-6c59-4741-b4f8-fffebd529af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d63108-1d5e-4c0f-810a-8e17766705dd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0d6cea-0bad-4f97-aab8-93f08a522f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bacff461-f33e-4437-a1a8-22b6dc9c66bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845d4b99-dc08-4fb9-bd79-f563c7f6ce0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1d284b-f59d-4185-ac62-f236e2bca967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cc372d-5654-49e6-8e7c-5a61b8731523",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f25594-1c49-4beb-897a-65fa8e623a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1f15445-56c3-46c1-bc73-e62e47e9d57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc446a2-238e-43d8-9875-4fe5e7b472b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b91a7d-39b8-4b49-a8d3-3f674a7dfa3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d677ac8e-fd44-4f33-827e-6738c7343c32",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ef61a2-e6da-4d5e-adea-7280278d9aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c56cdc8-94f7-48eb-a221-af38283e3207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6d2a38-d8f7-44c6-b5a8-e1c942b58cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82463f26-9153-47be-9e20-b62527c8a9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0fb1d8-bbfb-4c4b-8b8c-71a010651264",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f991fafb-df5f-420a-a4c5-1d553f7c4479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "266210e1-fef8-4d66-8968-8281d8cf98d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cd6377-6db3-4d81-8fcf-a3101774269b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eaa4b14-c4bf-4b0e-a201-8d5c1220c024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c2ad21-f47a-462b-9c3f-cfc4ff184dd0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ea3573-20ac-4246-b4c3-5497b0e9e3ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39789c29-5901-4f18-8da9-1c96f5bf3ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17245b1-deef-4213-ac15-435c0da6f6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e0b31f-14c0-43e1-824f-210995d80449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e457a4b-f7cd-4b67-ba20-efce41bcc26c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee99ccd6-84b2-48e0-8ce3-63f2d5e4e2a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d5ab6a-1329-4af4-bf79-58165d6a0323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3f040d-3e66-4dff-8d33-1b90f638a4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ca1253-f00b-4de7-b811-0581d12de5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6ec0dd-53e6-4c89-8e7a-399a245638b0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f6bcbf-1cac-4f02-a01d-68649fcb45aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d64d728-c678-4d33-81fa-994110f37b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26981b90-c862-4f15-8d99-204992350c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b34710-f7c5-4285-9f1e-ce74e8d7132c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2814ca7f-3e30-47ae-8c79-d4c752448950",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa3105f-601a-44ae-94ac-1c0ee930913b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76c19f1e-0a84-401a-a4d8-72785f460e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eff281f-e137-4f43-868c-ef858eee00d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5ba8dd-896c-4a79-a57e-454f69415927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fd29b2-ecd4-48b4-b948-8592167c1ba0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c883af2-9c9e-4bcc-96ff-f1d7f640145b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b335001a-a52b-4254-8f85-90434b1ca5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2417577-243c-4137-bc15-3bb369492524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8599579-e34a-482f-a60e-4d5dd0c5c000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5778977f-5144-4f98-8023-38277462f979",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab688376-43ed-43cb-8a16-6572dde61b61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df999316-d534-4b85-892d-82a5bfb7cec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767d7eec-d2e9-4be4-b53b-8d9acc17950b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e6ee52-57ea-4dac-9238-a3a687af76fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06302b79-c164-4edc-8ee2-2fa78bc78bcc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb2e609-ccd8-4222-be5b-37403413c831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb17e68f-0ef7-4bc7-93f6-a04eb9e24b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138865fc-4e41-49d2-b5d3-1d3962c69a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef300858-91ab-4c48-981c-abcdf63e91d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f732b9-8353-46f3-8bf5-6c6a0545f1f4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9348b7-fb04-4c37-8eb2-b545cb5d99ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "746488b6-7f92-4620-adaa-6600e19454ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64afe263-be24-42d0-aaf8-5d06d5db7649",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7751fab-2e70-412d-9364-0414643aa9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e38a0c-be02-4356-87f0-cc4761af6d5d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70d5417-55da-429b-b1b0-44fe0078a41b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc5d54ed-3f45-4823-abfe-0542cb7ac48d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d83fdcf-04c1-4615-b2de-b76a098d5159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabd17c6-a343-49ab-84e7-5f3fdc86cd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ba5b5d-e36e-490d-80bb-0d8183fdb166",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cfdbc3-426a-444c-880c-cda2ed7fc450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4cd583-d56d-4934-a14c-1c5cd9a5509d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7949a835-775e-4384-84a2-8c1ce22026e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eba41dc-299b-4919-a6ba-4fc91a2fc957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5f7c39-914a-4158-9c58-6b424adcf38b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e08cc5-cc51-4762-9e16-d7befe05c470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb3e4373-c085-4ce9-afd2-3472c824d96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5902d8cd-9c5d-4a52-90fb-5301f0744234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399ad53b-c9d9-4d68-a604-1279bb788e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5875c8c4-989c-4b04-b43c-52fdd34958ad",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c7efcb-72a9-4921-a81b-966839c36edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372ddeea-c15d-4bba-a799-ff395b767dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2979bc-536a-4410-8852-d9d0c5b79238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302276ea-b15d-4df9-a00f-599b801ddfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545c36ea-6e30-4d63-aaf5-15ba8768742b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a9f5a4-2352-4ecd-b205-548412e1ff5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32b93ba5-2187-4473-86f8-cc7d31f17fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a19d63-64fc-49da-a214-be881d3014b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d8f864-c622-44c8-8deb-80a2fd036081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e4ba7b-a848-4b7e-a38c-11d689d7e027",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc03642-29d3-48c1-a5ca-6b9926384efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8e0b3d-fba5-41ab-9685-077aabfd66cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c2310c-6f43-4509-ac1f-4243898c13c1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989b9854-5388-4e63-a258-5d4300864d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a375ee38-7129-497b-b442-7eda4da2d0d1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e33c73-69ab-4169-9bf3-e6b48749e6a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d92b3f52-e76d-4ad7-ac50-0b7cd10625f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ee154c-2717-44c1-bd17-1649003c91e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f05cda-de2d-4be5-b1f6-414b2048c99b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe96602c-9665-4efb-95a1-30faec65b79c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c36585de-5c94-470f-b142-319cbd048138"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e48d1a-8a21-4bae-9edf-0e7dacf0ef31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "735b21bb-a7d4-4f97-8157-a497306ed8dd"
                    }
                  }
                ]
              },
              {
                "id": "ed8eb68f-ff26-44db-b49f-38c72663b015",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a01db11d-8f39-4b42-becf-397c530c08c8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9747926a-3ecb-4288-a575-331c1770b97f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8c61be7b-93cd-4ee6-9e30-82b32384c9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415f0017-9832-44a4-834f-fcaf1fc9edc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4c4d426-39b1-45be-8b24-fd2108dcca50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a96b19cd-f23d-47e4-ad2c-a9984f5f3381",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05a8d24e-d210-4340-8036-cca695c63207"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "818a94e7-f9a7-4dcd-8ac1-4c7c43c6a98f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0b1e0af-9ff5-4596-8fe3-13fd4f58e004"
                    }
                  }
                ]
              },
              {
                "id": "5f2805f7-7752-4916-a2b6-9b6ee21f44b9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2190d24b-556a-4f0a-861d-69b1420a400c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29fd6fb-9de3-4d5e-92b9-5390a1db883a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c4814b6d-2fbc-42ce-a268-5176fd950633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2a6129-9844-4caf-9b2d-ff726d036b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494cd1ab-84e8-4480-a257-bc9f5941eb4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "615bfa1d-85cb-452f-accb-cdd6531586a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82e65202-f85f-446c-b747-0b0b9fea2e16",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e80adad-57c6-48f5-a0c9-9ed193518797",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6cdf3329-6289-40a9-91ed-b2df2cdabbc9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "115554b2-9dff-4236-b639-434ee62c623c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b30a8e1-3d30-4f4a-a897-035806aada59"
                    }
                  }
                ]
              },
              {
                "id": "fea0be0c-f2b4-44be-9869-6276605cba31",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eca3a20-c0e2-451d-98db-8086d9e510c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "994160d4-439e-45bd-a11e-e7e1440e3d84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75f3cbe6-4875-4c0f-93bc-b016439b2ce9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "150e0829-ae1f-4a08-9f7d-f11feb711076"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf16b84b-bb5e-48cd-9fc5-dccf74a0e50c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cd089f69-2394-4120-b131-ccab0993994a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4eb178bd-478c-4f54-8fc4-5db2cffbf547",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f86f8b7-1868-4a75-98bc-110578416ac0"
            }
          }
        ]
      },
      {
        "id": "c89c351f-5760-4d7b-9695-c478d7527d00",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "49b8ac49-0b72-42a7-a69f-89bd2857f58a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62fdad85-01ef-419b-9c42-1ec74ec44d30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7ec5906-023f-4c9c-9ad1-431358c49a56",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e60434-fa98-4df0-8854-e55bdb4694fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eac5fd7f-e420-4510-8511-74e9a9d44571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5e8bad-60ba-4631-94fd-0b5052c0bd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "654dcadc-ae07-4771-a78e-5f5193c4a44f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68331c0e-c53e-48db-9594-bf06f2b0c291",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b4c6c20-d4b7-429c-b795-c62b51209060"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a28ea47e-1345-4fab-9fdf-d86368d00661",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f1090dc-7b11-448d-89c5-78e64f2b87b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e66f31cf-332b-4f6b-b295-4a3299a0129d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0d4be614-f4c8-4f24-9ad7-8105fdc2806b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef3c2f6b-197c-463b-a653-47da06e4df5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f56c9b31-56a2-43df-9ad3-1fdaf16fa69c"
            }
          }
        ]
      },
      {
        "id": "3b943d02-e3ff-49f2-a6b6-6bef97374dde",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "59860799-32b4-458f-9f7a-a3a61efa08e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac9ce8c8-533f-46d3-a99c-fbd23f1e77f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02452aac-7976-4827-93a3-2d9815acc9d3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e043f741-7ed0-4333-b349-c8e13fb54950",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bc9e733-9128-4211-a91a-19b38901f248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fd3bd1-b6f1-49fc-a2ae-736276aadce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38803708-82c2-458e-b7e5-6b4cdcaeaa10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5569c740-c1bc-4f49-aec2-62315a7357fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9955fea-ed0c-4459-8fbd-2e6c2488e161"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31581609-104a-4514-b958-aad59c11ee1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7836cf0d-a68b-48ca-898b-751bb18a38f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f34d3e90-c7a1-43c4-bf4b-b63507da67d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89c6c817-2f70-49d0-9d0d-219c47b8e2bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0a6b3b6-b536-464d-9da3-9d9ddeffa182",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b32e83f5-8205-4ee9-95c0-835dbebedba5"
            }
          }
        ]
      },
      {
        "id": "283e9acb-ff27-4ef9-a4af-e1d95a960b46",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "897369bb-230e-4364-949d-03453661a5d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4287cb82-8973-477f-b5f9-bb38cd725e0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2686fdd1-a6be-4687-936a-1c5f52cc8bfa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10630127-d5bb-4c78-86d9-0c5bd9ca8a65",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86c46224-81ba-49d0-9e21-7b2f62af8d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424fdfd5-845a-4d3d-9638-a7b09de0e55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b95be146-edaf-41b4-9a4f-398b5a96d8c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c520949-b0e0-47a6-882a-72ecac7f9b95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "860c726f-3d64-4b39-a7b8-c5a5b3e0c252"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d42caa36-988d-4c3e-90e5-0988446890d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bec868d-1e89-48fc-a56b-283ee1fd119a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d61619d4-cb84-47a8-a7e5-168490834e92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7bec3a21-7801-4b31-888f-1597cf6410e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab0f967e-fe58-4b1e-84d8-a252359879a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49267e9d-62ae-4c41-aec8-98d8a0adfc74"
            }
          }
        ]
      },
      {
        "id": "0a16ce3e-ed7f-4cb2-afee-47d53c95dc66",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83bc02d0-319b-4472-87d6-7e7d6748435a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea97a936-5ef1-4758-b46e-91db22e24137",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "26a3b4c5-1e7d-4b73-9dc5-5740f5c6f8d9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23b93863-ddd1-47d3-bc40-d1bfceafbf3b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf0c5e3b-9596-4094-869d-d924ae31c676",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 331.99647887323977,
      "responseMin": 18,
      "responseMax": 7911,
      "responseSd": 948.4864499623847,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694565176526,
      "completed": 1694565282902
    },
    "executions": [
      {
        "id": "3e7faa1b-11b2-463b-833c-498f52b44f62",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "017ba3ce-8bcc-47b7-97e3-c892cae11e82",
          "httpRequestId": "a6d43bb7-4c1d-40b9-9dd8-df2aeb9f8530"
        },
        "item": {
          "id": "3e7faa1b-11b2-463b-833c-498f52b44f62",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5423f510-8dad-4ac2-abca-40d0ac3a3d5b",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 0
        }
      },
      {
        "id": "a873fe9b-2fc5-4bdf-8c3c-9f8b0c4972a8",
        "cursor": {
          "ref": "d9f604e4-e364-4d38-a410-15746c1304c5",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6708017b-fef8-4c4a-8d57-4568c8213c47"
        },
        "item": {
          "id": "a873fe9b-2fc5-4bdf-8c3c-9f8b0c4972a8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3e6170fe-b623-43cf-ad01-2eb016d76113",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "46ef6ead-2c10-4dd5-8535-5945462eb7f8",
        "cursor": {
          "ref": "9d06970c-b7e0-4ba1-9212-b0609ab83f37",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ec1e314a-01eb-4f4b-94f1-70998c520821"
        },
        "item": {
          "id": "46ef6ead-2c10-4dd5-8535-5945462eb7f8",
          "name": "did_json"
        },
        "response": {
          "id": "2b6ad570-22e2-4d77-93a7-6e15e286f884",
          "status": "OK",
          "code": 200,
          "responseTime": 1359,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147e99c2-d02c-4bdb-ae89-24506431eae5",
        "cursor": {
          "ref": "123f4842-c282-4847-9fc8-0f61cde0e539",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4cead504-72ef-41b5-930d-3a614b7205dc"
        },
        "item": {
          "id": "147e99c2-d02c-4bdb-ae89-24506431eae5",
          "name": "did:invalid"
        },
        "response": {
          "id": "e97644e3-a136-41b0-b3b2-021b5a6956b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147e99c2-d02c-4bdb-ae89-24506431eae5",
        "cursor": {
          "ref": "123f4842-c282-4847-9fc8-0f61cde0e539",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4cead504-72ef-41b5-930d-3a614b7205dc"
        },
        "item": {
          "id": "147e99c2-d02c-4bdb-ae89-24506431eae5",
          "name": "did:invalid"
        },
        "response": {
          "id": "e97644e3-a136-41b0-b3b2-021b5a6956b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb6a821-9864-4d68-a00b-b2cd33a40a1e",
        "cursor": {
          "ref": "7ff0411a-af6a-445b-a97e-dab09dff9b68",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1535051e-9371-409c-8ab5-65b7a0e2b576"
        },
        "item": {
          "id": "9cb6a821-9864-4d68-a00b-b2cd33a40a1e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9b86a764-87a1-4955-a2d9-2da5144c4a5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 386,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4977a4-0d58-4752-824c-3b49eef3e157",
        "cursor": {
          "ref": "8218cce8-f258-4f1c-951d-528f203068d0",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "011006be-9b62-4919-8409-a7c664362558"
        },
        "item": {
          "id": "6b4977a4-0d58-4752-824c-3b49eef3e157",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bde6452f-d208-4276-b5e2-9e69161fde68",
          "status": "Not Found",
          "code": 404,
          "responseTime": 266,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c2d456-9260-4d64-9811-d9daf0822118",
        "cursor": {
          "ref": "6fa25f77-20f1-47da-b0da-8c6b5af43714",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6ce7ac1a-38b8-42b3-a2f9-a9e949dab0b2"
        },
        "item": {
          "id": "11c2d456-9260-4d64-9811-d9daf0822118",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e62bab91-2976-4def-b39b-d86de1fd74e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343c50e1-e563-4ac7-9d34-d5717a45cc65",
        "cursor": {
          "ref": "f0daded9-e182-4b7e-ac4f-5e106ad4a832",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1bddae32-3fea-4017-b79d-2102cb5f1a3e"
        },
        "item": {
          "id": "343c50e1-e563-4ac7-9d34-d5717a45cc65",
          "name": "identifiers"
        },
        "response": {
          "id": "f5c2c2f1-10e3-4bcb-8dd7-3b33e8e15acb",
          "status": "OK",
          "code": 200,
          "responseTime": 1274,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c511ffa3-40c1-4c21-9b66-d0e100218900",
        "cursor": {
          "ref": "7030f3d2-97db-49d2-9253-5a707947de45",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "df2cc308-78cd-448d-85eb-ada166740a6e"
        },
        "item": {
          "id": "c511ffa3-40c1-4c21-9b66-d0e100218900",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ab19a979-b309-4952-92b5-7c72d22d7299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9816e84e-7956-4da0-8063-87de7a8f46bd",
        "cursor": {
          "ref": "78613b9d-c1f1-4018-be2d-d30f35f28a62",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2e74ea63-72d1-4380-92df-dfd7a906a9b4"
        },
        "item": {
          "id": "9816e84e-7956-4da0-8063-87de7a8f46bd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ffd0766a-116b-41e8-96d9-ace149225886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b5d1ea-2465-456f-848b-9cd19e6366f8",
        "cursor": {
          "ref": "96510cdc-ca29-4ba3-b110-06656e43b09d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cffb1cc6-b0c5-49f0-8645-96e8602755a7"
        },
        "item": {
          "id": "32b5d1ea-2465-456f-848b-9cd19e6366f8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d6c31a01-d3a2-4a12-81f3-5ee1c01dccc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8b297e-db6b-441a-bc2d-4d1e4640c6a6",
        "cursor": {
          "ref": "3debe7a1-6e57-4169-b3e3-b4f96e3704c9",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c627f561-4f6f-408e-b8e0-9544dcfee681"
        },
        "item": {
          "id": "cf8b297e-db6b-441a-bc2d-4d1e4640c6a6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9b1d13cc-8f08-4d0c-beaa-3f830565facf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13816193-7acc-4147-b70f-3f406850a450",
        "cursor": {
          "ref": "d79e4627-4797-4192-abeb-b690cc67594c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8958fc11-ff03-4c00-8105-eb4fc2d8c735"
        },
        "item": {
          "id": "13816193-7acc-4147-b70f-3f406850a450",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b0f9b650-1e27-4004-9227-2f8381e1d4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcb9ffe-5fc5-42e3-a6f8-13781db7ae40",
        "cursor": {
          "ref": "004ace29-fd5d-4fb9-b792-20e4fa9eec43",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ab1f9ce1-3577-441e-b91c-4e9e75926b01"
        },
        "item": {
          "id": "bfcb9ffe-5fc5-42e3-a6f8-13781db7ae40",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cd65e0de-2112-4e09-aabe-c67fcf11db6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734ad6a9-c7d0-455f-a55c-ec79a5c8fb62",
        "cursor": {
          "ref": "6d1acea5-1993-45b1-b8ae-13a508e272af",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c6ada719-31cd-4021-954c-d53c7a38719b"
        },
        "item": {
          "id": "734ad6a9-c7d0-455f-a55c-ec79a5c8fb62",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "98401dde-28a8-4cb1-8809-3bb0cd97e99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2bf75e-78a6-4e51-9c94-a11e38fbdf8a",
        "cursor": {
          "ref": "beefc432-7de0-4dd6-964a-97418cacc4b1",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "16d29230-1743-417f-a2f6-db4f9aa8783a"
        },
        "item": {
          "id": "ec2bf75e-78a6-4e51-9c94-a11e38fbdf8a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "de4ea728-96bc-48bc-bab1-eb451e6e6f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b69d3e-be65-4349-8dbe-111a2253ed90",
        "cursor": {
          "ref": "c0001925-e563-4b6d-bbf8-20356463586b",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "41b8dd06-eccb-4186-9589-c15aa864a495"
        },
        "item": {
          "id": "b4b69d3e-be65-4349-8dbe-111a2253ed90",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c724aa28-d2d1-4dc9-ac40-94c71f245105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39eae41-b3a1-4b7a-9d93-97420214cc01",
        "cursor": {
          "ref": "0f9855ea-8a14-45be-b503-9f6349c998f2",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0b5b21ec-d0b0-4bd2-b5e3-a4f6fa503b2f"
        },
        "item": {
          "id": "c39eae41-b3a1-4b7a-9d93-97420214cc01",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f6379a82-7fb5-4782-9c65-8509d62fbc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b15536-e9be-4a27-92f7-1aff1d336e61",
        "cursor": {
          "ref": "9a117ddf-21ed-4611-b198-2e668cab56f5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "30f01e1c-cb1d-4e63-b7a3-bca97449b984"
        },
        "item": {
          "id": "53b15536-e9be-4a27-92f7-1aff1d336e61",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "649724f1-51af-4a44-b559-db31b5884b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac6de80-42dd-435a-8dc7-d683d62c1474",
        "cursor": {
          "ref": "8f961b65-6c39-41c2-8c09-772579e85661",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "75b4f504-8548-4ac7-bec4-731e2a156f2b"
        },
        "item": {
          "id": "3ac6de80-42dd-435a-8dc7-d683d62c1474",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ef8d2379-69a6-4d12-9779-bb5bb9f03989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff47eae-0ecf-4f4f-bee1-230e26c24929",
        "cursor": {
          "ref": "65de11b5-f102-464c-8bd0-98bb333562bc",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "59c744ff-242b-46c0-a80e-0d20eb45d29e"
        },
        "item": {
          "id": "8ff47eae-0ecf-4f4f-bee1-230e26c24929",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4acb5b1c-0794-4fd2-af7c-b1518579cc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5af98fd-9775-4f4b-b3d1-f8e38d941872",
        "cursor": {
          "ref": "8c58035a-69d7-4d06-97b3-364f015612c3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c0014766-f11f-47cf-b663-bd2b98951c59"
        },
        "item": {
          "id": "b5af98fd-9775-4f4b-b3d1-f8e38d941872",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "66c2b76d-7e95-427a-b05d-f581e115b0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b3883b-3144-4b08-b1d8-528ccfb96075",
        "cursor": {
          "ref": "46ee937e-d40b-4a99-b295-eaaafe6075bd",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b02c27e7-6fc1-4053-aacd-2424ad2f8f96"
        },
        "item": {
          "id": "94b3883b-3144-4b08-b1d8-528ccfb96075",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "81b20282-ec29-4dad-8703-5d1c2f7024a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ef6790-f0cb-452e-ae17-38e198edd5be",
        "cursor": {
          "ref": "0225057f-b2d9-4972-aadf-3447d514df16",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8d976c41-52b3-4861-a09f-f8c8af3d4369"
        },
        "item": {
          "id": "b7ef6790-f0cb-452e-ae17-38e198edd5be",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "26ccbb0d-5a51-4019-ba34-80e352c07bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0449f30e-61f6-4b71-8cd0-4eaa369bd3ea",
        "cursor": {
          "ref": "f86835dd-9fe3-4825-a670-c9d163d10066",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8dce6776-bdf2-4e8d-bfc1-d7719225e381"
        },
        "item": {
          "id": "0449f30e-61f6-4b71-8cd0-4eaa369bd3ea",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "270664c1-f63a-4935-bf20-35cbdf946f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48fc0ea-e02c-4a06-8545-1d7ce6444a3a",
        "cursor": {
          "ref": "3c9d261e-8a06-494d-aed3-0a4692cd6f79",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0502a52a-109d-4ca3-ad15-851c050ba589"
        },
        "item": {
          "id": "b48fc0ea-e02c-4a06-8545-1d7ce6444a3a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f4bc889d-7e06-4f92-b09c-ce5482974e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d022e0-3502-4d58-a035-94cd75c9d58a",
        "cursor": {
          "ref": "fba239c1-75b6-47a4-9e6a-88014f9f3441",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "457959cf-21d3-44ec-96c7-984d681094d4"
        },
        "item": {
          "id": "20d022e0-3502-4d58-a035-94cd75c9d58a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5f0022a4-f15c-49f6-8d81-902bfc5cf0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566915df-39fc-4512-92b5-7cfe9cd0b1be",
        "cursor": {
          "ref": "f7d53f94-67a5-4ad9-b8ff-d1c83a63fb5a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7703b6e7-b155-43d5-b6bd-347fcd5a784a"
        },
        "item": {
          "id": "566915df-39fc-4512-92b5-7cfe9cd0b1be",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "90fcb643-0add-47af-a535-08b0e68f42b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ad65fc-1180-4c58-aedf-befa1558113c",
        "cursor": {
          "ref": "4013cc3f-1eda-4bb7-816d-894b5e458b56",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b61ae726-729e-490a-9b1b-a178931a92d5"
        },
        "item": {
          "id": "b0ad65fc-1180-4c58-aedf-befa1558113c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7c590fab-70fb-4b54-9882-b4559f17ef9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b193f8-6522-4269-b09c-81c70b1a9ffc",
        "cursor": {
          "ref": "4d0defc3-7c64-4028-82a1-6fadf8e2d6c0",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "142337a8-39e0-4a98-96dc-4b8557c8774e"
        },
        "item": {
          "id": "c9b193f8-6522-4269-b09c-81c70b1a9ffc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3e2ee70f-7fda-46ce-9f82-a8295b6ffa19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39fb7c0-5297-49de-892a-00598555fffa",
        "cursor": {
          "ref": "e63da4e3-b7d7-44b9-8b0c-5daea13307c1",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "521a9cc9-e119-4128-80cd-efaf7e7de05f"
        },
        "item": {
          "id": "e39fb7c0-5297-49de-892a-00598555fffa",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7e6c78f5-7be2-4acd-89eb-dbe5074da795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb4818a-1256-4cd4-95df-164faab97bd1",
        "cursor": {
          "ref": "d8843263-5855-46a0-be58-9c776e8d0cdc",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "854c9a01-3e1c-4c64-adbd-630fa9a96ce3"
        },
        "item": {
          "id": "1cb4818a-1256-4cd4-95df-164faab97bd1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "094d4238-ee8f-46b2-b05c-43138dffa2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9523dbaa-4e3e-4ff9-ad34-cca294852cac",
        "cursor": {
          "ref": "5e47a419-819f-444a-9986-25ec80735a01",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "997d768c-25eb-4235-a736-55b35f961e0b"
        },
        "item": {
          "id": "9523dbaa-4e3e-4ff9-ad34-cca294852cac",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "50d8bb72-b267-4bea-b36e-02ad02b29408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87031d03-db47-4c38-bbfb-7204ec393dc6",
        "cursor": {
          "ref": "daaf5247-db48-4f0f-91b1-22889d042cb5",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2c6c4401-9501-4574-b8f5-8f53ca47638b"
        },
        "item": {
          "id": "87031d03-db47-4c38-bbfb-7204ec393dc6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b562b243-e9b4-4e4a-b485-85a7b4c366e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130d3e92-9a27-466f-bc1f-ad7e48ae1ad7",
        "cursor": {
          "ref": "8f63c1a7-067d-40d1-82af-be5dbe4d1cf0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b86089b9-facc-499f-b812-12a43d88b1e6"
        },
        "item": {
          "id": "130d3e92-9a27-466f-bc1f-ad7e48ae1ad7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d67b56d3-fb61-4c16-b535-993be29c0afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76520996-d8db-4cde-8e6b-90634e54d631",
        "cursor": {
          "ref": "b0206588-3f55-4f04-a799-ddc5d7853305",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "33a28ee2-bf10-4722-a92c-4b4ee50f955d"
        },
        "item": {
          "id": "76520996-d8db-4cde-8e6b-90634e54d631",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "11724b82-287a-431b-baf4-a8b439a77d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fab2ac6-22c1-4bcf-9199-c5f19aaface5",
        "cursor": {
          "ref": "b145078a-23e0-4eeb-b4fc-c4be68287f47",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "19378fad-f6ea-498d-83ad-7c6234dc4710"
        },
        "item": {
          "id": "3fab2ac6-22c1-4bcf-9199-c5f19aaface5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a1339bb8-a756-4063-9b2c-6b7fe7940c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df634d0a-1155-4180-9f75-dd9236ea6b90",
        "cursor": {
          "ref": "48673171-22cf-4f7e-ba6e-99e36861cb8d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2eb6bb6d-f90e-43b2-9e09-74ed710efca6"
        },
        "item": {
          "id": "df634d0a-1155-4180-9f75-dd9236ea6b90",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f70f34ba-ca3e-4591-b053-23f9db998e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67ac590-2ae7-4c05-ad78-5754e9f7e274",
        "cursor": {
          "ref": "eaf101e5-7b39-4251-8746-ba4d6470decb",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "45b762a0-d760-409d-849b-0fdf6699b965"
        },
        "item": {
          "id": "e67ac590-2ae7-4c05-ad78-5754e9f7e274",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2a87c6eb-5ffa-419f-b99a-631ddc294ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a45c1f4-bdab-4f24-88b3-367e519293dd",
        "cursor": {
          "ref": "1d877778-e26e-4989-96f6-a9030320b334",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a43012e2-4d2c-4164-831b-9995d8ded01f"
        },
        "item": {
          "id": "9a45c1f4-bdab-4f24-88b3-367e519293dd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "280e1a9e-892f-45f1-ac94-465f5c2c3d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0615ec5-88da-4eda-bb69-d33f65449a19",
        "cursor": {
          "ref": "98495592-7647-4049-b037-244e1259f44c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d0f58ecf-6f15-494b-92da-aef950668e14"
        },
        "item": {
          "id": "d0615ec5-88da-4eda-bb69-d33f65449a19",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "40d4db41-0961-46b8-b5b4-f7d1981c1478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89a6087-84d1-4368-a312-c5b4f94f90b0",
        "cursor": {
          "ref": "6ff0f7f6-ae83-4197-8ad7-8e69ec2847f8",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "21f6cf72-a462-4f59-910a-e49b93ebc70f"
        },
        "item": {
          "id": "f89a6087-84d1-4368-a312-c5b4f94f90b0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3b1fa6e1-3fca-48ba-a104-a34527265d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1260fde3-0d93-4b0e-915d-dace22076827",
        "cursor": {
          "ref": "ec9e3f0c-1d24-4401-b311-7eb2114e18ad",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "195c5898-370b-4639-9829-033f78dec198"
        },
        "item": {
          "id": "1260fde3-0d93-4b0e-915d-dace22076827",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "099f6daa-a824-40d9-9513-0b6fe5f9218c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a41cbd-215c-466a-9b9a-b867d56b3e18",
        "cursor": {
          "ref": "94f08789-9be1-499c-a426-2e81af4cf91d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ed6c9e48-7501-46ac-a85c-b785d93a4663"
        },
        "item": {
          "id": "57a41cbd-215c-466a-9b9a-b867d56b3e18",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9e671749-f665-415b-8732-c346bb49d3f3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 613,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55fcb95-cfa4-4927-9253-458134798825",
        "cursor": {
          "ref": "440b0bea-7818-44d7-af67-5bd1ec1d914d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "44735c9f-b6ae-4d39-8ba5-f70cf01b693a"
        },
        "item": {
          "id": "f55fcb95-cfa4-4927-9253-458134798825",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1ff47594-fe60-4d13-a7e5-b6a149ed0388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e02951-2bdd-42bc-9b62-d94d0be26f17",
        "cursor": {
          "ref": "90b071e1-05aa-4bfe-8490-f78a2b75ca63",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "45bfd346-343c-4611-b0fb-715a6cb6cd0e"
        },
        "item": {
          "id": "01e02951-2bdd-42bc-9b62-d94d0be26f17",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "97fdb7be-987f-4c78-a246-4ba953e25e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0098a05b-f73c-4253-b516-c0beaccbbb8b",
        "cursor": {
          "ref": "16a82b59-ffcc-4614-84ea-fb5e141926a9",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bd5e42ab-1442-49c4-8b0a-0b7627910480"
        },
        "item": {
          "id": "0098a05b-f73c-4253-b516-c0beaccbbb8b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "56a40206-ddc7-486d-a85e-3c950d56670f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32b61c0-711c-4c1a-883f-ffe906f1f820",
        "cursor": {
          "ref": "0abc7d1e-bc7e-45de-97e9-af4b02770a72",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2d6e87a7-fd76-4de5-a906-d40a3ec2c474"
        },
        "item": {
          "id": "c32b61c0-711c-4c1a-883f-ffe906f1f820",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f5eea1fa-22fb-4704-b973-f02b7bb7074e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e0a7fc-2506-4af2-ba15-0f15947ac639",
        "cursor": {
          "ref": "c19fbee3-1aa5-4d7b-9a28-775d574da52a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "44ebae02-9874-455b-ab7d-a1d07f37f913"
        },
        "item": {
          "id": "10e0a7fc-2506-4af2-ba15-0f15947ac639",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "42880882-2525-4459-a082-7e9b6cf8c822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45447a63-bde6-4640-98ce-818067ef4fbb",
        "cursor": {
          "ref": "46f33cfc-b2a8-4cfa-bf47-a0ff2ac6706c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3163410d-b1c0-4e77-a6b8-e9cd506a9e84"
        },
        "item": {
          "id": "45447a63-bde6-4640-98ce-818067ef4fbb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "01d4765d-8848-4bbb-b9d2-14d5b6128e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa35595f-0ce1-4c2d-a310-44974e48a019",
        "cursor": {
          "ref": "fb63c1a6-51d1-423e-8771-3e99e868af96",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "663866ba-ba8e-4799-8d61-022da61188ad"
        },
        "item": {
          "id": "aa35595f-0ce1-4c2d-a310-44974e48a019",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f9b39520-b685-4541-9eca-348051d4b39b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 589,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0d2d8d-8aae-412c-a401-ccde0a1931ce",
        "cursor": {
          "ref": "1b2d8540-3474-41e2-9561-34568575524d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0f231426-c40c-49c1-9760-953d0b263d34"
        },
        "item": {
          "id": "fd0d2d8d-8aae-412c-a401-ccde0a1931ce",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f131a0a9-2c7d-44ac-a536-ce60ea52b355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741a1351-5fa8-48c4-8e76-c139510ecaaf",
        "cursor": {
          "ref": "1d894a7d-96f8-44f2-a6da-fe98a2c61d29",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0b2a84d8-a7a9-4282-ac40-afdc21b1641c"
        },
        "item": {
          "id": "741a1351-5fa8-48c4-8e76-c139510ecaaf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e502ff06-24ee-4788-955a-d832b616f27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d467ddd-43a1-4b34-b66c-6b61fce43050",
        "cursor": {
          "ref": "ba4a9c3f-90f0-42cd-bb40-c428c1a0a353",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "489e3c0f-fd59-4167-a38a-e71d1dbc89ee"
        },
        "item": {
          "id": "7d467ddd-43a1-4b34-b66c-6b61fce43050",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7b07dcfd-4324-4df0-994b-b9ba512c89c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c16d4f2-b8e1-485b-93e1-19402f62d0ea",
        "cursor": {
          "ref": "c7b9f732-e1ac-4613-b75d-096ef49e0fd3",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ce6a6e61-6595-423a-8349-e06424f018cd"
        },
        "item": {
          "id": "1c16d4f2-b8e1-485b-93e1-19402f62d0ea",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "89fc2c19-0e63-4b43-9afe-55b9adf1f5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346da78f-5560-4c5a-b099-74f0098ad78a",
        "cursor": {
          "ref": "d6459155-8b66-4bcf-bd4f-c142eb52842f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6fd0d903-2924-4151-a3f8-ba3aa82c8694"
        },
        "item": {
          "id": "346da78f-5560-4c5a-b099-74f0098ad78a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a0397f9b-5857-4916-bf4c-5a5003934048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8047fcce-a4c2-4795-accf-ae759ccb2b0a",
        "cursor": {
          "ref": "ab65aca7-27f5-4800-b175-21a59ed6a2f9",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dc66d76b-42cd-4eb4-a448-d34941b369c2"
        },
        "item": {
          "id": "8047fcce-a4c2-4795-accf-ae759ccb2b0a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "174644c8-78bb-4c13-9510-ef91bd0b7d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfb91d9-1b18-4075-9939-5ac4687ad845",
        "cursor": {
          "ref": "683d146c-4b3c-4493-8bbb-50a53e212ba5",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5450ccd6-beaa-4d5d-b5f2-dfa6e885225f"
        },
        "item": {
          "id": "9bfb91d9-1b18-4075-9939-5ac4687ad845",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e17b82c3-3bfd-4fde-8055-5dfec62b3a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f87f00c-a121-4c8c-a13c-3a87cfb27c10",
        "cursor": {
          "ref": "be0668d8-adff-474b-b1b8-93cb5f12265c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "38b7f554-fd89-4c05-904c-81884c4e5219"
        },
        "item": {
          "id": "9f87f00c-a121-4c8c-a13c-3a87cfb27c10",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "82731850-a5da-43be-99de-73f95452b8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd102018-7696-4997-97ae-db6e4cb0fdea",
        "cursor": {
          "ref": "0c60f5dc-ec50-4909-80e1-6fdbeb07e8e3",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "325b20bf-2577-434b-b72b-cbdcdb212d4d"
        },
        "item": {
          "id": "fd102018-7696-4997-97ae-db6e4cb0fdea",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3d811637-8a8c-4a49-a169-8d14692750f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a1f45f-8d68-46c2-8a27-fa8485d2444d",
        "cursor": {
          "ref": "20e650e6-5ffc-4ba0-be92-4d81059726a3",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3ee84242-a393-427e-aae7-4b08a709a836"
        },
        "item": {
          "id": "c6a1f45f-8d68-46c2-8a27-fa8485d2444d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b061e986-2c16-41b6-a1a5-b0b089fab240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d82e890-75a9-4156-ad17-734a5ef5f9ac",
        "cursor": {
          "ref": "ee1817f3-2017-4535-b2ca-c65670506ac8",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b98306b2-7a81-47a3-b1f4-eb9a6f5bdbff"
        },
        "item": {
          "id": "7d82e890-75a9-4156-ad17-734a5ef5f9ac",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "faef6449-32b7-4142-903f-b7a43b9a90e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649e6ee1-bcdf-46c2-b51d-4107c157e8d3",
        "cursor": {
          "ref": "0f261a7a-5be0-4d59-ba70-51f80da09419",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "72b36962-04dc-4978-b1c1-9fa98ab81aa3"
        },
        "item": {
          "id": "649e6ee1-bcdf-46c2-b51d-4107c157e8d3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3f0dd2b6-a967-4fed-a690-60a650075381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de50b2ed-efbb-4ce0-865c-9857e670f4b0",
        "cursor": {
          "ref": "f97509a7-2c7a-4503-a732-2b6964a9b0d1",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "46037438-72ba-42aa-b6f6-23e627f87b9c"
        },
        "item": {
          "id": "de50b2ed-efbb-4ce0-865c-9857e670f4b0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f24aaa91-2975-4468-9c66-cbfbe30a6d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008fdeb3-97b0-4434-8402-019f3e60720c",
        "cursor": {
          "ref": "b60853ca-07ee-4fec-9794-cb9a222b518e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f817b589-8124-4c84-9445-a0ef1454955d"
        },
        "item": {
          "id": "008fdeb3-97b0-4434-8402-019f3e60720c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dbadc304-cc71-4d03-9179-c7c470de144e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefff499-e8ab-4821-a107-ed5b410840fb",
        "cursor": {
          "ref": "776ffba2-b2ad-4dd0-90a0-3805d628d6ce",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "46580efc-e7e1-4a15-937c-e327914d7761"
        },
        "item": {
          "id": "aefff499-e8ab-4821-a107-ed5b410840fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "acd4816b-009b-42a8-af7a-42d30b3f1867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d249de5f-8b4b-4b98-a599-e1513b9d3725",
        "cursor": {
          "ref": "30ffa35a-0f83-4771-99b0-a84e1c50cb17",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9dab7357-c2e4-4e4f-b091-e0eeaf1114f1"
        },
        "item": {
          "id": "d249de5f-8b4b-4b98-a599-e1513b9d3725",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "089c2778-1d29-486a-b5d1-b964f2bfa488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace8da6b-12af-4e3d-8bf6-c810ad7f5559",
        "cursor": {
          "ref": "75d6963a-c2c1-4cb0-933b-c20470c7aaca",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "55f75eef-e4b2-4772-ae7e-9b3ce5d248e2"
        },
        "item": {
          "id": "ace8da6b-12af-4e3d-8bf6-c810ad7f5559",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7d5298f7-947c-4b94-8d6b-caa4147e250e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac97f982-9abf-48db-b4cf-b6268c30c424",
        "cursor": {
          "ref": "2e614aa9-d5e0-4409-b414-74ba8dbe7a85",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f2da45af-1d96-472a-8ec2-8a61984b0d85"
        },
        "item": {
          "id": "ac97f982-9abf-48db-b4cf-b6268c30c424",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "80f7631b-ce32-4299-ac95-7a44dba0a747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0c551b-34e1-4572-aad8-ddd942b5dbb6",
        "cursor": {
          "ref": "62956b5e-8b1c-40ba-93f8-69d195737a62",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0686c6fa-050f-44e7-9dd6-e54e033e624c"
        },
        "item": {
          "id": "fa0c551b-34e1-4572-aad8-ddd942b5dbb6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8d96e94f-34da-4ebc-8479-51eadd858132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ec9694-65b4-4da1-8d37-2dcb1b9d9402",
        "cursor": {
          "ref": "53eaaae3-7fb7-4837-af63-539f6d1c92ff",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cbceaac4-22ca-4f71-ab60-d5206c473c35"
        },
        "item": {
          "id": "60ec9694-65b4-4da1-8d37-2dcb1b9d9402",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ad537809-ce5e-442c-b2ca-8860e15fa8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a2163a-19d4-4a44-93cc-38168eb04ce0",
        "cursor": {
          "ref": "7c83a46c-8d4e-4da7-8a21-a962186f9309",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b85de468-2908-41a9-ac6e-ca1df1528a8e"
        },
        "item": {
          "id": "e3a2163a-19d4-4a44-93cc-38168eb04ce0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "313e9386-a509-49a3-9760-536d0fdc67a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa76ae83-366e-4c77-864b-502d75667441",
        "cursor": {
          "ref": "069032eb-920b-4e31-acad-e3a8d0e276c3",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ea5cfcd1-d69e-4448-a8cc-95df8ede2f16"
        },
        "item": {
          "id": "aa76ae83-366e-4c77-864b-502d75667441",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6a0accae-e218-48ad-b143-30f60daa3047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6482ba7-c0dd-43bb-96c1-155d8267c3ca",
        "cursor": {
          "ref": "7198aeb3-aa43-48a8-9f04-5b4e9ddfe58e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0830b803-7f66-49e1-a08c-3f8f0ae047fb"
        },
        "item": {
          "id": "c6482ba7-c0dd-43bb-96c1-155d8267c3ca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e53faa5e-613e-46d1-8b2d-471e9d1539de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5ae17e-a71b-4d0f-927f-6e65adcc764e",
        "cursor": {
          "ref": "ee5c685d-5eb0-462d-9434-06ff0df75017",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ed71cd62-ee6d-4291-aa12-7084f20f9879"
        },
        "item": {
          "id": "db5ae17e-a71b-4d0f-927f-6e65adcc764e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "204a1aca-e3c3-4ce3-b403-a5280c16974d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46412d6-fd33-4a5b-a0e5-ce2d6bd7ac96",
        "cursor": {
          "ref": "0c1837ca-d468-48d5-b6cb-ccea2babb251",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "786c9fbf-704e-490a-9fb1-16b5718ff9fb"
        },
        "item": {
          "id": "c46412d6-fd33-4a5b-a0e5-ce2d6bd7ac96",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d0ac05c1-b224-4946-86d2-cabaa8618be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb2db7e-087a-4479-bc44-d646402d0654",
        "cursor": {
          "ref": "0a02a593-91ef-4140-8a34-1e2257a577f7",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "61f0ecd1-460a-41f6-aaba-f0fee29f815b"
        },
        "item": {
          "id": "bcb2db7e-087a-4479-bc44-d646402d0654",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "97e7aa41-1556-4f33-9784-52588924b1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc132e36-0566-45f9-a6ef-13250d1a33e2",
        "cursor": {
          "ref": "cb9d94a8-2d49-44bb-a723-93c12429b8de",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7e79e32e-7774-4ec0-ab39-a93a466dd4ee"
        },
        "item": {
          "id": "cc132e36-0566-45f9-a6ef-13250d1a33e2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "abc582c0-cb24-4bab-8686-b280d7a59cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852c010b-3ab2-4b0e-a326-0fcf8e9ec2a8",
        "cursor": {
          "ref": "0e881c68-cf5c-481f-a721-0244682b74d5",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "92153e5b-9c8e-437a-af70-8795f2d34cf3"
        },
        "item": {
          "id": "852c010b-3ab2-4b0e-a326-0fcf8e9ec2a8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "441ee4e7-c2d7-4965-b50a-80a3ea02e5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06d9fd1-73bb-498b-b7bf-3754fecb0a53",
        "cursor": {
          "ref": "b6abd1f2-2a4d-464a-9345-ecb56989e3c9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6626fe4c-6f01-4009-b74c-354b71580e67"
        },
        "item": {
          "id": "a06d9fd1-73bb-498b-b7bf-3754fecb0a53",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "02444dd3-f631-466e-a1c5-fd5f2669193c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5671059-dd8a-4ebd-a118-751ef1e097a8",
        "cursor": {
          "ref": "94997af0-8aa4-4c2c-832c-5e540e1d7921",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6d8ebd54-ddc0-4df4-ab54-66ff02f38a0e"
        },
        "item": {
          "id": "d5671059-dd8a-4ebd-a118-751ef1e097a8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c28f6503-119b-4677-abb9-2b321ca2c225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf894eb-b363-4e85-aca2-0b7fa9235d56",
        "cursor": {
          "ref": "3f6456db-99bc-4583-b895-6cafd4ccb778",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bb8f6e2b-95d2-4442-944d-0ed062f256d3"
        },
        "item": {
          "id": "faf894eb-b363-4e85-aca2-0b7fa9235d56",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4e377c97-81fd-47ea-9dee-5d4bceb05b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ac416d-4fa5-4d96-a8f0-fd813f663377",
        "cursor": {
          "ref": "37441bb3-e5f6-4832-aed9-ef60532384a5",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b31e8884-a1ab-4fcb-b3d1-0d78a1e43622"
        },
        "item": {
          "id": "63ac416d-4fa5-4d96-a8f0-fd813f663377",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "383b781a-ad0d-42a4-a2d9-0f65281f5ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99e0e38-86c9-47a1-b281-8912a87bde49",
        "cursor": {
          "ref": "8f6eb2ad-c098-4aa4-a602-1c9e45b55d4c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2e82d596-64d0-4761-83c6-06561bbf7552"
        },
        "item": {
          "id": "a99e0e38-86c9-47a1-b281-8912a87bde49",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "64a16416-f273-44d4-8009-819cffddf464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd3b221-dc24-4277-b81f-89065ffe878d",
        "cursor": {
          "ref": "4685b228-4f77-40e9-9fb0-adddadc5246b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6455a24b-c7d0-472c-bddd-05006a12ab76"
        },
        "item": {
          "id": "fcd3b221-dc24-4277-b81f-89065ffe878d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9f5c0904-fca2-42e8-81ee-f57b35d94ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06ce19e-21d5-4d70-8fad-f591dcb2c3eb",
        "cursor": {
          "ref": "74ec5303-a67a-4f26-8de9-885e5bb1a112",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c4af02a2-881d-4314-a925-3466558ffb4f"
        },
        "item": {
          "id": "d06ce19e-21d5-4d70-8fad-f591dcb2c3eb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c80e4025-a6ac-4921-820a-7cd8c06a5b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792cc021-0819-4fac-a2e0-b4448481f8e6",
        "cursor": {
          "ref": "bc21a8fa-3edc-4184-b373-934cb2438e19",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f9e0d458-5f10-49f7-8484-abc4d8cf9254"
        },
        "item": {
          "id": "792cc021-0819-4fac-a2e0-b4448481f8e6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8dce53c9-30ba-4bcd-8320-67c1be1c8bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371a687b-8e75-42f3-ada9-8d6631351724",
        "cursor": {
          "ref": "4db42825-b492-4690-b8ad-ea46e73f9f8f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "40dc67a3-7f59-4985-97ba-5947e57a3c5c"
        },
        "item": {
          "id": "371a687b-8e75-42f3-ada9-8d6631351724",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "63050142-d454-41c5-a3cd-7afbd887888b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12350f4-5b9e-4cfd-b892-7a0929620389",
        "cursor": {
          "ref": "5deaac0e-bdbc-4aab-8d09-9322caae9447",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "10586444-735d-4828-a281-d7557c92ae9f"
        },
        "item": {
          "id": "e12350f4-5b9e-4cfd-b892-7a0929620389",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6406390e-cc37-4b6c-a92c-70cc41298511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd55c9d-4b4d-473f-b26e-ead580d2fb6a",
        "cursor": {
          "ref": "64de0eaf-0a62-4b89-8f4f-6b72a22d84fb",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "44ac04bd-4f7a-46e1-8361-1c72f89f8571"
        },
        "item": {
          "id": "dbd55c9d-4b4d-473f-b26e-ead580d2fb6a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4c1bce88-609b-46ce-8936-643064e0bc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0175cd51-a94a-4839-8020-8e086d55670c",
        "cursor": {
          "ref": "8cc98fc7-639d-4481-92b6-e0b6d73ae7eb",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "41d61217-80c5-45ac-b107-f64cbb931697"
        },
        "item": {
          "id": "0175cd51-a94a-4839-8020-8e086d55670c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a92d2e78-fa7e-4ab1-8829-f0a5b78b6bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1258531e-95d5-4943-b918-e65e2edff292",
        "cursor": {
          "ref": "8a227e02-de3b-4c8e-8962-55f7108d2442",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2dc6360f-d4b6-4c72-a273-9a5b99c3fd7c"
        },
        "item": {
          "id": "1258531e-95d5-4943-b918-e65e2edff292",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b8f35bc0-80e4-40f1-8ca0-e8d280a43571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab3fe5a-a262-4704-a32a-8843918014fe",
        "cursor": {
          "ref": "3b00691b-fd19-4a56-b5d5-ba277719de6c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fd10c888-0d39-4a49-90fe-559cfae3f7f7"
        },
        "item": {
          "id": "bab3fe5a-a262-4704-a32a-8843918014fe",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7c144400-1526-4d62-9648-935fa01591f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c590d868-f256-46f9-8a6a-f1687ff4c713",
        "cursor": {
          "ref": "db88055e-0a35-4063-b364-e8760e45270a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "04c3c916-742a-48c5-b533-b9b9470d7213"
        },
        "item": {
          "id": "c590d868-f256-46f9-8a6a-f1687ff4c713",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a3ffc538-2f7a-469e-84e4-2462903c2210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68f9b23-6d8b-4af8-8646-ee5680bcda02",
        "cursor": {
          "ref": "91711b10-4a3f-483e-98fd-29071911fbdc",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "efc730fa-0197-44a8-a013-716c5cc41ae6"
        },
        "item": {
          "id": "c68f9b23-6d8b-4af8-8646-ee5680bcda02",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "de6fefae-26ac-45c1-bcbe-d6a7e5c9ba2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d273559-cdde-4db3-82b9-4f688a66a05f",
        "cursor": {
          "ref": "6953ae64-f29b-48b4-a5d8-b916b7ccdcef",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ed387651-7c0b-4469-ac64-41d288edd32e"
        },
        "item": {
          "id": "5d273559-cdde-4db3-82b9-4f688a66a05f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "751d4f04-f27c-41da-a18d-0c1d3a9bfec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf02bca6-9787-4bf3-8378-54eb58ea1f52",
        "cursor": {
          "ref": "38182f90-306b-40e5-a566-928248afda92",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3648d148-df45-4691-a9f2-816ef1f4c252"
        },
        "item": {
          "id": "cf02bca6-9787-4bf3-8378-54eb58ea1f52",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9c7fa741-2bea-47de-85c3-46f5014cb95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98533936-e7a3-4d4f-b072-eaa6f8459316",
        "cursor": {
          "ref": "0188d069-3f8a-4b93-8558-439aea6228de",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1c6c09db-a194-4426-bab7-bfe8de1936ab"
        },
        "item": {
          "id": "98533936-e7a3-4d4f-b072-eaa6f8459316",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3791b574-8c60-4e4a-b086-1324ae979b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5064282-c238-4fca-98bb-3f2fbb2f75fd",
        "cursor": {
          "ref": "052d9401-89ba-4ae7-85fc-4e3dbd67d193",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "21be9cf3-ccbe-4e7d-a0fd-6687710c27eb"
        },
        "item": {
          "id": "a5064282-c238-4fca-98bb-3f2fbb2f75fd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b13c763b-c83b-4bb4-b43b-4ed99075c2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f55054a-9bd7-4470-8c1e-2cee46b0769c",
        "cursor": {
          "ref": "94c31785-6bf4-4f7b-8648-8598226f6a97",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "61c3598a-4504-4e5f-a754-a94bc126aa14"
        },
        "item": {
          "id": "6f55054a-9bd7-4470-8c1e-2cee46b0769c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d5c1af8f-8c0d-4278-a099-0857b7ad5307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90afbff1-88cf-43dd-86be-609763dbdbb5",
        "cursor": {
          "ref": "9c1364f6-f9df-4655-9a5e-56971edd8a2e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ba81137e-7ec4-4683-8584-a19670ea479b"
        },
        "item": {
          "id": "90afbff1-88cf-43dd-86be-609763dbdbb5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f8bfe5e4-3946-489f-ac70-33b2efb9a7e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5829241d-4dc5-47ff-9054-2b0c1b7ac24e",
        "cursor": {
          "ref": "86a7cd44-427f-4a74-896a-e9ee7063fc87",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9228346c-3f77-4ea9-9693-3fdbb2d332a2"
        },
        "item": {
          "id": "5829241d-4dc5-47ff-9054-2b0c1b7ac24e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4114b1eb-1519-44a6-9768-c4ec2b00f407",
          "status": "Created",
          "code": 201,
          "responseTime": 7911,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af90163-6fdb-4f52-bacd-decbb2656740",
        "cursor": {
          "ref": "73e36992-71b3-4929-8150-21059e7061ea",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fa55bb42-bc56-41a3-881f-76c157fa928f"
        },
        "item": {
          "id": "6af90163-6fdb-4f52-bacd-decbb2656740",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "36699950-94bf-4e6b-b363-bfbd02088753",
          "status": "Created",
          "code": 201,
          "responseTime": 6898,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0af3155-99b2-4cda-8bf6-785705cafeea",
        "cursor": {
          "ref": "bc93c918-4f86-4f2c-a009-f1132162766d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "16b2b2b0-400e-4c9b-b84f-25668ae6369b"
        },
        "item": {
          "id": "b0af3155-99b2-4cda-8bf6-785705cafeea",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "419ffa54-ffa4-43e6-b9e8-6896414867d1",
          "status": "Created",
          "code": 201,
          "responseTime": 7594,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a511f00-62d5-4e1d-bb9f-feeb456e0d1d",
        "cursor": {
          "ref": "947111a1-e892-4400-9204-e3c7616f0352",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "eeb4f0af-a734-4f6d-9f59-88a9e6567d42"
        },
        "item": {
          "id": "9a511f00-62d5-4e1d-bb9f-feeb456e0d1d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0d272fe2-d470-4cb5-9745-6804f214599e",
          "status": "Created",
          "code": 201,
          "responseTime": 6538,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "862cd35d-4c5c-4695-8058-8c03950fc5d6",
        "cursor": {
          "ref": "6eb2a94d-c203-4ba8-a682-1bbfa7af8c44",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9d2ffd42-8fde-4175-9dd7-0414fd555c0c"
        },
        "item": {
          "id": "862cd35d-4c5c-4695-8058-8c03950fc5d6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3ee8cf4a-a915-46ab-9e76-38e14dc1fc46",
          "status": "Created",
          "code": 201,
          "responseTime": 7315,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "549453d4-41c6-41ec-9bf7-1bc8f3f5efdc",
        "cursor": {
          "ref": "6cb22e4a-3911-4437-860d-20c63ee2d687",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7f0e5acb-a774-4f04-a20c-06b110632762"
        },
        "item": {
          "id": "549453d4-41c6-41ec-9bf7-1bc8f3f5efdc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f5542ea8-df12-4bbe-91d6-c04889363057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "d6f1d54e-36c3-41fc-becd-cdc3059b2ef8",
        "cursor": {
          "ref": "1147c996-87e4-4329-8a5f-61903cfef5ed",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "aae0262d-2608-4a25-9f0f-8f022ed0bb3e"
        },
        "item": {
          "id": "d6f1d54e-36c3-41fc-becd-cdc3059b2ef8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e7505e46-b5ef-4a54-a14d-b5037ca5717a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77737db2-b9a4-4232-a2b1-fed6127302df",
        "cursor": {
          "ref": "1d689e04-86f2-439d-b083-a8a2dedda35d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "747490cf-e02c-46ef-bb9a-4f8b6b163c95"
        },
        "item": {
          "id": "77737db2-b9a4-4232-a2b1-fed6127302df",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1c08f199-bc17-47b2-96a0-a8604681e7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad1549a-7ade-431a-9be5-767e2927d869",
        "cursor": {
          "ref": "862580ab-4b32-4bba-bc4e-4e4329efed10",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "528bee83-21fc-43b5-b51b-81f2aa22e7be"
        },
        "item": {
          "id": "dad1549a-7ade-431a-9be5-767e2927d869",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "26bac286-21b9-4fa0-941e-cb2e499f72e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1268086a-ae0c-44bb-be31-bf4bc496fae4",
        "cursor": {
          "ref": "c09b40ce-2ffc-4d22-8319-23ba7260ce2f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1bb093a1-2dab-41a2-8993-6a0916de9feb"
        },
        "item": {
          "id": "1268086a-ae0c-44bb-be31-bf4bc496fae4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4cb96e0b-9538-486c-bf30-ee7ead1a9585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b130f03-fcf5-4fd1-96a5-00be16bc8095",
        "cursor": {
          "ref": "da8b6cda-b103-44d3-b976-99a2acdff883",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bc544c8c-355b-436f-b88b-bcc19bb18456"
        },
        "item": {
          "id": "2b130f03-fcf5-4fd1-96a5-00be16bc8095",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c5e69756-005e-435f-8f00-b4d1166c45da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85efe6b-5b72-43d3-8c48-1e2c11b98106",
        "cursor": {
          "ref": "2ca6c881-f352-4334-9c6d-8dafaec3eb72",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b64b7aac-929f-44fe-bc15-5b457f8b97b3"
        },
        "item": {
          "id": "d85efe6b-5b72-43d3-8c48-1e2c11b98106",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4fedd8b0-6d05-41a0-80cb-dacf44ef6178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290a16fd-b8df-45de-b883-64d1c73f0189",
        "cursor": {
          "ref": "f5273ce4-bd5e-4c46-8912-5f20278031b3",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f9a3b78d-8ecc-4578-b99b-af787ef65b3a"
        },
        "item": {
          "id": "290a16fd-b8df-45de-b883-64d1c73f0189",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "74c261fd-5612-4be6-a907-033e43036863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f88590-bd2b-4a87-bc0b-ac465c909d51",
        "cursor": {
          "ref": "6b6ad328-ba20-46b4-a964-d6613ac45de4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "57b82a27-f4b5-4daf-a2fa-20b43b232abe"
        },
        "item": {
          "id": "56f88590-bd2b-4a87-bc0b-ac465c909d51",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1da38513-1ce9-4c55-848b-b23c359adc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2d7ba3-a2e7-42d5-8cd0-e3abf0ff0099",
        "cursor": {
          "ref": "7005e99d-648b-41b6-b5ab-63e444edac13",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ef854749-0a9a-4d35-a5b7-edc989b06f88"
        },
        "item": {
          "id": "0c2d7ba3-a2e7-42d5-8cd0-e3abf0ff0099",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "731a35e2-30a2-4c2b-808c-2a9379e77ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf4ae1b-ff28-40ed-8080-86ae3aa4edd5",
        "cursor": {
          "ref": "cb62103e-d760-47fc-b3af-85cb0c368b6c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "be68224a-e681-4d5d-826d-d8b8769dbdc2"
        },
        "item": {
          "id": "cbf4ae1b-ff28-40ed-8080-86ae3aa4edd5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2ff8b0ae-d8aa-4bc6-bf31-52c6f20f6906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852dda2a-0bcd-4e83-b44d-681beae4a8b1",
        "cursor": {
          "ref": "7d608ebd-dcf5-4d11-a8bc-fb969a2b014c",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fda00c6a-2b09-4a0b-9e44-4dccd654f8d8"
        },
        "item": {
          "id": "852dda2a-0bcd-4e83-b44d-681beae4a8b1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d0885f3b-a445-4c67-8041-ae517dfd127d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da0b2fb-1ed0-46c8-a966-8d3a326c1603",
        "cursor": {
          "ref": "f0666a19-cb6e-4f1e-90a8-a504ad10b025",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "aa3c38f0-7e29-4b4f-b8dd-cc18a4e6f0fc"
        },
        "item": {
          "id": "2da0b2fb-1ed0-46c8-a966-8d3a326c1603",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5ccc94df-2f70-45f5-a8fc-c97afaa0bdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f6e06b-e6dc-488f-8e20-76d741e77a84",
        "cursor": {
          "ref": "33230c72-982d-45f8-abdb-adc6746d140f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9f1f541b-72df-4c17-97fb-0dbc1a38e8a3"
        },
        "item": {
          "id": "92f6e06b-e6dc-488f-8e20-76d741e77a84",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fb26b60b-73e7-4a7c-83e6-f9c6a2f44b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae29522e-3dff-47ff-8ffd-c98f91524963",
        "cursor": {
          "ref": "3c9b4d89-45be-4fec-bef1-1c9f0cc79fa1",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "53c0a80c-2b9b-4b9c-a393-f2ef61b58ce3"
        },
        "item": {
          "id": "ae29522e-3dff-47ff-8ffd-c98f91524963",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ff862349-1567-4f95-9907-0a1a724b1940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e57f3d-6cf4-4360-8adc-0dcdff9236ff",
        "cursor": {
          "ref": "fafb9bcd-2128-4da2-bbfc-4ae8b10293e7",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "050768a3-0ae6-43e2-8d99-2665835ef464"
        },
        "item": {
          "id": "35e57f3d-6cf4-4360-8adc-0dcdff9236ff",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1fb1e2b5-c548-4bf1-922e-6fa5e6312c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfe4cdc-14ea-4a25-bdcd-3e244b61f4c3",
        "cursor": {
          "ref": "4c45ac0a-9ef2-40df-9948-501a92aa26ec",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "58465441-5498-464b-b174-d721fef384a4"
        },
        "item": {
          "id": "8dfe4cdc-14ea-4a25-bdcd-3e244b61f4c3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3dde3448-7896-4f2b-ad9c-df3a81be3f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3785b2-0b6b-4970-a7b8-8a25498dcaf5",
        "cursor": {
          "ref": "8dbf58be-9d35-4c46-a7e8-d1c4b713b697",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e490b0c4-a5ea-414e-9582-16dc49dba5ed"
        },
        "item": {
          "id": "9f3785b2-0b6b-4970-a7b8-8a25498dcaf5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "16a4208b-ccc1-4595-9e60-ff8c2e310b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229c874e-76f4-4cea-9ea4-f746efc11796",
        "cursor": {
          "ref": "db3e9ca0-823e-4593-880c-046d4cd1fecf",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1026bb83-69db-4c04-9db3-410a5a5637c5"
        },
        "item": {
          "id": "229c874e-76f4-4cea-9ea4-f746efc11796",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c69c2985-140a-4aef-a914-76448b77bd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce4a8bb-194a-4132-9c5d-b93ee057477a",
        "cursor": {
          "ref": "697f9a89-8c13-470e-bc15-f959c7ccda12",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "61958ed2-5585-4907-8222-b7eae7d3c6fe"
        },
        "item": {
          "id": "fce4a8bb-194a-4132-9c5d-b93ee057477a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dd927e12-564c-4fb3-8998-442cb3c386ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81920f0e-f323-4c3f-8705-418bcb198512",
        "cursor": {
          "ref": "5c906866-6569-46d7-8c31-6783823d602f",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b1f81a7a-e13c-48a8-bf39-c862dc6fdbe1"
        },
        "item": {
          "id": "81920f0e-f323-4c3f-8705-418bcb198512",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "346c633c-69ee-4f81-a989-d5687486baca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bdc8e3-203e-49f8-8c3a-2a5a3e98f343",
        "cursor": {
          "ref": "dbb5c8f7-5c17-4391-8317-516cd7ccdec8",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3068fe6c-4b13-4179-aeff-b633e6ac8ee7"
        },
        "item": {
          "id": "c8bdc8e3-203e-49f8-8c3a-2a5a3e98f343",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "afea1d1c-a74a-4a0d-a54c-508b102c73cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd7aa7e-e162-47de-a489-1dc78bf389b5",
        "cursor": {
          "ref": "3a27ee49-5329-435b-8e8c-630734f63b88",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e48e85d3-00c3-4bca-adc9-c1261f8499ed"
        },
        "item": {
          "id": "ddd7aa7e-e162-47de-a489-1dc78bf389b5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c076db0c-c177-4fd7-8187-1b79ec5e9fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20afb130-9f98-4d70-a034-2190f699f7d0",
        "cursor": {
          "ref": "681a1fc2-7f12-4bea-807c-2ee418ddad18",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "44da6b60-bae8-401d-902c-8813ab391832"
        },
        "item": {
          "id": "20afb130-9f98-4d70-a034-2190f699f7d0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "931c5b3e-e464-4e02-830f-6cee5a4268c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbcb512-22bb-4d35-801a-b17e2d72b0b1",
        "cursor": {
          "ref": "4ed49d28-de6f-406f-9ee0-e266bc245573",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c9ae6728-636d-4e38-a6a5-07d6e31e691c"
        },
        "item": {
          "id": "efbcb512-22bb-4d35-801a-b17e2d72b0b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ea9eea8e-95c3-42d9-b237-5bbd1573bdd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68378587-01cb-45f9-bd2a-d58027cd369b",
        "cursor": {
          "ref": "6c4db949-accf-4a17-adc2-fb5c12f8f825",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bd96e9b7-e7db-466a-8c7d-949a3440aa53"
        },
        "item": {
          "id": "68378587-01cb-45f9-bd2a-d58027cd369b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6f480e35-16bb-4324-bacf-9ed73bb3aa8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74fd0bd-6d22-4aa8-87b4-ca4e5efa8eb0",
        "cursor": {
          "ref": "4a629229-f4ff-4f0a-9536-a12662ba13be",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "743d727a-566d-4c22-ae08-c3eff8325738"
        },
        "item": {
          "id": "d74fd0bd-6d22-4aa8-87b4-ca4e5efa8eb0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "71d6b1e3-7f96-4d00-b468-18a0c2e5c81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a54b0e-bf56-4367-98be-c0237bb0fb61",
        "cursor": {
          "ref": "3ba013e5-5ab5-4485-b199-10a39832ca35",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "492c1a92-83f1-4c95-96fe-62a3bc0e2e73"
        },
        "item": {
          "id": "37a54b0e-bf56-4367-98be-c0237bb0fb61",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c916bb03-d50a-4b90-92a1-6c515b50d154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16658f75-e4b1-4dad-afd2-06ce0c596de3",
        "cursor": {
          "ref": "104d625e-ff3c-4ce5-9fcd-c964c93ff057",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "29891b6d-c0e4-48ce-a215-c4f3e3b5cf7f"
        },
        "item": {
          "id": "16658f75-e4b1-4dad-afd2-06ce0c596de3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "057e3312-aa5f-4c57-a96e-7e95a9572380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ea8dcc-9a61-47ea-b13c-d2ea67049424",
        "cursor": {
          "ref": "e16789a6-cb27-4f4e-b466-c4e85e0686bd",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5f4a02fb-f33c-4ef2-8bf8-000a1e1952be"
        },
        "item": {
          "id": "86ea8dcc-9a61-47ea-b13c-d2ea67049424",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "184318c2-d4e1-42c0-8721-a2caa7670d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329e9b77-bf57-497f-a69a-bbdace0ba008",
        "cursor": {
          "ref": "a1b26f0c-8a4d-4736-a408-47cd09780111",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a4c9d464-63be-44c5-820a-d95ce1e6a8d1"
        },
        "item": {
          "id": "329e9b77-bf57-497f-a69a-bbdace0ba008",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b890d020-a4a4-4661-a7e3-29595cbfa13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b458bf-6849-47c2-8ce3-4ce4598805cf",
        "cursor": {
          "ref": "0c9a036a-4ad4-493b-9abf-3afe75618520",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "90634598-fedb-4266-8fc5-31e8299debf1"
        },
        "item": {
          "id": "20b458bf-6849-47c2-8ce3-4ce4598805cf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a741b239-56d3-4514-97cd-32bb0bf62e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad30eba-9937-48be-93e1-e6d6ef5601f9",
        "cursor": {
          "ref": "376caa80-713c-45d3-9e69-14c8ffdf628a",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7ea6d5b7-e11e-4fb3-9375-8ff6fe82e11d"
        },
        "item": {
          "id": "9ad30eba-9937-48be-93e1-e6d6ef5601f9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "82e6e365-122b-481a-be31-4fa083119835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7564e17-97ef-4174-b6ad-50d3f74c5fc0",
        "cursor": {
          "ref": "0b030031-4677-4a6b-89a9-72f9967e5cb4",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e55371d2-bd8d-4ca5-8746-a7209de22474"
        },
        "item": {
          "id": "f7564e17-97ef-4174-b6ad-50d3f74c5fc0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7864a776-af48-43d1-9b37-55a2afc3ebcf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2e0f36-16ae-4045-b61e-4b3233048283",
        "cursor": {
          "ref": "1caae7ca-d30f-4490-89bb-183793d0f8f5",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "78c2efdc-fee2-4422-94ea-4defe63302e0"
        },
        "item": {
          "id": "da2e0f36-16ae-4045-b61e-4b3233048283",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "36f07feb-a56b-4686-8ba0-3e8120aaa225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273f068a-6897-4076-9ee2-0375dc2c9e65",
        "cursor": {
          "ref": "84cf4228-9164-45b2-8466-e1557a6449d2",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "75d576f9-9ae3-43df-90e1-eb0db341fa5c"
        },
        "item": {
          "id": "273f068a-6897-4076-9ee2-0375dc2c9e65",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9bd3342e-934f-47e9-a960-2fe476a50e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdeb922-be81-479f-b6cf-e31e31de5d8c",
        "cursor": {
          "ref": "46330827-97e4-4881-a88d-ce8e0e4711a7",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "da60b04d-8c54-4829-8ba1-7625b2d14015"
        },
        "item": {
          "id": "0cdeb922-be81-479f-b6cf-e31e31de5d8c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "177c75d4-d392-424d-83c3-6d6d2fa718b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c10684d-bcbf-45c9-b660-07c0875a67bd",
        "cursor": {
          "ref": "cc5395e3-9c8c-41d0-9eb5-e41c8088a832",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "81715e28-cb23-4168-aef3-61a4e08222b9"
        },
        "item": {
          "id": "1c10684d-bcbf-45c9-b660-07c0875a67bd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b05b2814-1466-48d8-af40-c082894b6363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521fa991-c9e7-4483-89bc-d935ddeee7da",
        "cursor": {
          "ref": "dfb4de8e-be95-402f-9ff2-3b3f9e076230",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fc9d9500-a7eb-492e-a18c-cb0215b91492"
        },
        "item": {
          "id": "521fa991-c9e7-4483-89bc-d935ddeee7da",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "89d817c5-6bee-4c4e-b9a6-fb5db46663f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23162da-190b-414c-b188-34293f40697d",
        "cursor": {
          "ref": "d1c070ec-1f9d-4a0a-a882-cc57c8bd6e35",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b3a9da32-5eb3-424c-a237-48ba6ad9372e"
        },
        "item": {
          "id": "f23162da-190b-414c-b188-34293f40697d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dede4ae8-10fb-4f44-9e5c-ace40c0c484c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d22afda-78f4-4d86-bcc9-4f7a19f65e2c",
        "cursor": {
          "ref": "907de8e2-28fb-4fd1-a6a3-bc90b5df2b8e",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "51800d75-3976-4638-b3f0-97c1abbb6302"
        },
        "item": {
          "id": "7d22afda-78f4-4d86-bcc9-4f7a19f65e2c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a0c80522-fa85-40f1-8f48-d743297c6796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb10238-3dd5-4c2e-9feb-e31865ae0df1",
        "cursor": {
          "ref": "4d6f187a-185f-4fa9-96d1-41bb7eca24e9",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2d3fbe5b-0807-44ae-bfd1-3938126c6863"
        },
        "item": {
          "id": "3eb10238-3dd5-4c2e-9feb-e31865ae0df1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "72a5424f-1527-45d1-ad87-7d45af135993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b2e7fa-d034-49e9-99ea-44ba7907b99b",
        "cursor": {
          "ref": "a9e703b4-d6b7-4f46-a630-5d9c98d753a8",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "95037ae4-774a-4f37-bed3-e77ef5e7dbc3"
        },
        "item": {
          "id": "45b2e7fa-d034-49e9-99ea-44ba7907b99b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ffcdc4d6-9353-4290-b85c-d49c84b54828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907f435c-f88e-418d-8664-e8baf4d45075",
        "cursor": {
          "ref": "bfcaa523-c2ab-4ca9-9e75-1ae92d1da1f6",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "527ecd8d-dea9-4022-9632-3c3096abb5bc"
        },
        "item": {
          "id": "907f435c-f88e-418d-8664-e8baf4d45075",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d609f59d-0190-4476-bba1-c4b75d62c8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a960559-d69c-42cb-94d3-1e55bf026e17",
        "cursor": {
          "ref": "d83cf9bd-ac04-4bdf-9c57-846c9eee1c8d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "292ffa98-6213-4bc5-ba5c-ecbc09e0ddb9"
        },
        "item": {
          "id": "6a960559-d69c-42cb-94d3-1e55bf026e17",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "460780b7-37d2-478c-88c9-b186fd0fad80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4418bc0-7c80-4ecd-89e8-74a636db8957",
        "cursor": {
          "ref": "3a3932c0-2c78-4e2a-810d-11a306d87505",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7ae78509-8d2a-48b6-bca2-7fc5a4739eb1"
        },
        "item": {
          "id": "a4418bc0-7c80-4ecd-89e8-74a636db8957",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6ddc75f3-176e-4919-8561-17f57c749ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9641bf-d0bc-4789-8c7c-eb11e786b685",
        "cursor": {
          "ref": "cdc8cfdd-de74-4f43-8c50-ac54bc3e6930",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "93e28aee-66c5-4557-9ba8-110d3f3b6394"
        },
        "item": {
          "id": "2c9641bf-d0bc-4789-8c7c-eb11e786b685",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b4ef2161-a9a1-49f9-af83-44ef28f761a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6da2080-d168-4cb8-a7ea-7184a21e3551",
        "cursor": {
          "ref": "cd2aa67b-0d3d-40a3-a25f-9c9e1fb2dc1f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "76370a48-a1ca-4df0-9c61-c22be237493b"
        },
        "item": {
          "id": "f6da2080-d168-4cb8-a7ea-7184a21e3551",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "00be4ae8-f902-4872-a4b6-9c5473b08233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d92669-f567-416b-8b42-5bebacc8b628",
        "cursor": {
          "ref": "c80578b0-4cf2-448f-97cb-fd4751938d49",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "670e521e-86ae-44e2-a191-fbadba9fe927"
        },
        "item": {
          "id": "98d92669-f567-416b-8b42-5bebacc8b628",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2aad0715-0987-47da-af71-e2dfab159d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c31a3cc-89a9-4ffd-bcdd-7ce0181c6230",
        "cursor": {
          "ref": "4faea54d-042a-4e18-97ab-9e1f2bea1184",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "209724d6-a7c7-46e4-a6bf-54924f3b6c1e"
        },
        "item": {
          "id": "4c31a3cc-89a9-4ffd-bcdd-7ce0181c6230",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7b6e27be-01eb-48ff-ad96-a1ebed7ba392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c246b8a9-ad12-4af1-ac8f-df7fc8db303b",
        "cursor": {
          "ref": "9a2ddac2-fb4e-44d8-b4c2-3e31151e8d9d",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d836c286-a3e5-4580-b9c7-06264a131127"
        },
        "item": {
          "id": "c246b8a9-ad12-4af1-ac8f-df7fc8db303b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e85e38d2-4a0a-4746-b753-8155e70253c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f9fd4d-1785-4de3-b0bc-49391a52063f",
        "cursor": {
          "ref": "a8388a24-338d-434d-9af6-dc8f8b8b35ca",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "427b3aed-18a3-4a72-91b1-73d2cd87e560"
        },
        "item": {
          "id": "87f9fd4d-1785-4de3-b0bc-49391a52063f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5b68330e-d3f1-4fd0-ab61-be809b92a9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e363cf-4b2e-4553-a225-2deb34387fda",
        "cursor": {
          "ref": "b5346a85-6d16-4f06-a106-b8cd3219cd0d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e0c1888f-caca-4c93-ba1a-d35fd1aefc20"
        },
        "item": {
          "id": "25e363cf-4b2e-4553-a225-2deb34387fda",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2948de3d-3bc4-4f16-9654-10f621e38850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030844de-6951-408f-b6ee-66b8882b9412",
        "cursor": {
          "ref": "4f998e9f-412f-49ec-88b7-1fe4a117dcb9",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "53543145-d82e-44d8-ba4a-09865ef86021"
        },
        "item": {
          "id": "030844de-6951-408f-b6ee-66b8882b9412",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ec964564-acf9-436f-b04a-b13c165f5a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6597b979-4fee-449e-a04a-0994c9acd27d",
        "cursor": {
          "ref": "043af356-26be-450d-af1f-d676e1218af7",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5a48be15-057a-4064-9114-9d8205388711"
        },
        "item": {
          "id": "6597b979-4fee-449e-a04a-0994c9acd27d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "aba81178-60ec-4904-8a6f-af74c552172f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06903def-0986-4841-bdef-1299b02142a2",
        "cursor": {
          "ref": "701cf56e-ed91-46ed-842b-faa7a67e51c5",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "482d257d-b8d7-4141-8009-55e964b913af"
        },
        "item": {
          "id": "06903def-0986-4841-bdef-1299b02142a2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fb46aa97-5775-4056-8686-0bcd9da45d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e6b046-e3db-4e35-89ef-2610551b49cb",
        "cursor": {
          "ref": "0d602c16-8ea5-4b9e-950e-2e890ead981d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1c856262-db85-4541-83fa-25f7aa68c1f1"
        },
        "item": {
          "id": "46e6b046-e3db-4e35-89ef-2610551b49cb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1c5a8e3f-5e33-4c4b-a6fb-31269c8d5a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5310f1-4b75-4197-ab51-0133a479fb43",
        "cursor": {
          "ref": "9cf343d8-7045-4ffc-9f94-b9f10ef259ca",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1d20d466-aabf-41eb-9177-22b44d5c0fca"
        },
        "item": {
          "id": "dd5310f1-4b75-4197-ab51-0133a479fb43",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b1d06eeb-7516-46ac-ac42-b6e3a513edb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4835134b-549f-49c8-b43f-7b92982a2d14",
        "cursor": {
          "ref": "2520995a-43cf-4934-81c8-dc9c769ee81a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8ae4e0e0-07a5-4336-88c4-fda02d3ec90b"
        },
        "item": {
          "id": "4835134b-549f-49c8-b43f-7b92982a2d14",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "264e8b8d-a4e3-4140-8835-73786327bdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4088c065-6364-45cc-84a4-7a2f6b0caa65",
        "cursor": {
          "ref": "dc121716-3234-4a8d-8f56-0fbd648d6f1c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8f80694b-5c4a-4d5f-98ee-ccdb1303d318"
        },
        "item": {
          "id": "4088c065-6364-45cc-84a4-7a2f6b0caa65",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9ad0e856-a78b-4b27-8683-800e89ba2717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9e5d7a-2e00-495b-a681-5a7cf25098b3",
        "cursor": {
          "ref": "87f96a84-1fc6-402c-9cb1-6ef7079622cf",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d74dc1ce-3413-4f36-b6d9-8ce155378c49"
        },
        "item": {
          "id": "ba9e5d7a-2e00-495b-a681-5a7cf25098b3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d2c33d26-a7d2-4ce7-a35f-5b124337f11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c2a1dd-a6df-4b0e-8c57-c787b9abc275",
        "cursor": {
          "ref": "7d3562a0-0e22-4a1d-b7b8-39dd18cb4fbc",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f805de9d-9aa0-4b91-9b6a-322bac77d1d2"
        },
        "item": {
          "id": "62c2a1dd-a6df-4b0e-8c57-c787b9abc275",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "132e2542-c2ad-4b42-ba60-70a38a52beba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a907335-85bf-482d-b041-b91505171758",
        "cursor": {
          "ref": "f793e99c-4ba5-420b-a41a-1cbb45a6ac3e",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "924642d4-5a64-4d5a-94ef-ad7034ac285e"
        },
        "item": {
          "id": "6a907335-85bf-482d-b041-b91505171758",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ff73c422-d701-492d-a551-4b173190254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990be924-b0c7-4bd9-af79-a69af5258289",
        "cursor": {
          "ref": "c071fa14-9efb-4620-a2a2-404a6f6c92f0",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3f1fd7b9-d8ef-4577-94e9-81823853be87"
        },
        "item": {
          "id": "990be924-b0c7-4bd9-af79-a69af5258289",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "98e01d26-e49e-42cb-b883-518c4106b894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d7afa5-1e42-4cb2-a0df-1c7ebc0dfaf8",
        "cursor": {
          "ref": "6ffd4638-74e7-4a1a-95d9-b5511d21094a",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6f1c2701-720d-4d61-87f4-cd0bbfc2baba"
        },
        "item": {
          "id": "24d7afa5-1e42-4cb2-a0df-1c7ebc0dfaf8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "06da7e84-ce80-48ce-aa99-d4567391c05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99826830-8ceb-4e85-8fe0-31dd5ad9dbee",
        "cursor": {
          "ref": "7d409bb0-e894-4d97-92c1-ecb1747337ff",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b1cccc5c-bfa3-4bcc-a560-1cc78afb9c4f"
        },
        "item": {
          "id": "99826830-8ceb-4e85-8fe0-31dd5ad9dbee",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ab67ece9-60f6-4847-9321-6cd6d9bc3935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27ae2a6-cca9-4edf-904e-3e4e8877eac2",
        "cursor": {
          "ref": "3c554460-39e8-4ef8-83c7-9426482a154a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a06599d6-da40-4cf0-807f-0654d89dc930"
        },
        "item": {
          "id": "e27ae2a6-cca9-4edf-904e-3e4e8877eac2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5dfb23fe-52c8-4d99-99c4-28447a6c75c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d21fb2-81ee-4a23-8208-f8eee290780b",
        "cursor": {
          "ref": "3c1fe481-27e6-4667-be24-d3c54fdf4d22",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "160b2c28-56a7-4444-b968-4527e05df76c"
        },
        "item": {
          "id": "99d21fb2-81ee-4a23-8208-f8eee290780b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4a2c47c0-8da8-4588-b7db-2942d57151e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b01484-36ba-4941-b920-d2e83705b5f8",
        "cursor": {
          "ref": "2d801225-cf76-46aa-a1e9-e4a212f193f3",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dbdd0753-2aa4-4c08-a341-a1faaf4a2fd4"
        },
        "item": {
          "id": "c2b01484-36ba-4941-b920-d2e83705b5f8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9aecaff3-4484-45b6-8fb7-4703943f79f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dbefd7-0663-4871-8909-bbd1f7a1c3be",
        "cursor": {
          "ref": "1ca55fb6-2b6f-4d56-b444-48bc0193ef45",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "49be4b0f-0069-4742-a7d8-fbfe90fb2eb2"
        },
        "item": {
          "id": "f3dbefd7-0663-4871-8909-bbd1f7a1c3be",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f4db129b-3144-4755-bb02-56056d148bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d290fc-d897-4ed3-b98a-2e49080c29e9",
        "cursor": {
          "ref": "e921d897-8131-438b-8a0b-1f3149f1874c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2bf66397-682f-417a-9468-466179877ba6"
        },
        "item": {
          "id": "15d290fc-d897-4ed3-b98a-2e49080c29e9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f32537fc-983f-41ca-b8b4-d04b09542014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8aa71f-4fb0-4a63-9a87-ae1153622d0c",
        "cursor": {
          "ref": "4eff18df-e5ed-4ac3-aa98-94b968cbc5dd",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b7207390-cb36-4858-b5a6-942af070ab8d"
        },
        "item": {
          "id": "bc8aa71f-4fb0-4a63-9a87-ae1153622d0c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "28ffca5c-ef14-4357-8f97-621684701341",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ed5608-dcdb-4da4-95e2-a7d094a7cb5a",
        "cursor": {
          "ref": "a1d04849-6577-49bd-8a1d-90551ecbbbc8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d8da4982-1793-41e9-9787-72b9c51ebee2"
        },
        "item": {
          "id": "b1ed5608-dcdb-4da4-95e2-a7d094a7cb5a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4c400989-5295-4a45-bb96-7e24d8c3eb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91593fb5-3cdf-4209-97f7-46fb86560548",
        "cursor": {
          "ref": "0eccbf2c-5c70-46a9-adf2-09576616f3cb",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d249c188-21f7-4abc-b678-1c6b1fed27a0"
        },
        "item": {
          "id": "91593fb5-3cdf-4209-97f7-46fb86560548",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "167abdad-552b-4229-80c5-cb17f3c96797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9805e4-ec11-4684-bc43-f094052740a8",
        "cursor": {
          "ref": "968da820-9cd0-4136-9e18-06de15338af6",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "41f88386-0fea-4e45-ab59-1ae1407f6644"
        },
        "item": {
          "id": "ad9805e4-ec11-4684-bc43-f094052740a8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8f0a945d-52ad-42ba-b5e6-20a6ed7192ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e367da-1928-4b99-8c6b-a294a1a62791",
        "cursor": {
          "ref": "28b2c8a5-4789-426b-b136-f4cdb180ee70",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "dbf85ad4-b0d6-4cc5-8914-6f2011f1d9ad"
        },
        "item": {
          "id": "06e367da-1928-4b99-8c6b-a294a1a62791",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d9b8c5b1-79e6-4007-b45f-7c2ce07afd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d831aa-397a-4567-b93a-717b15745862",
        "cursor": {
          "ref": "c6fda235-04a1-4673-bfc9-d325fc3272f1",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1b4ded2b-114e-4ce8-b3ba-cb3c5b1ceac3"
        },
        "item": {
          "id": "d1d831aa-397a-4567-b93a-717b15745862",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c41243d4-04ee-42e2-8d72-02e49c955b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c7ee43-0062-4553-8acd-c2dcca03119e",
        "cursor": {
          "ref": "0cb9cabb-b383-4e6e-af40-579e592e38ba",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "30fe37e3-49fa-4b02-a01e-1b9771faedb8"
        },
        "item": {
          "id": "97c7ee43-0062-4553-8acd-c2dcca03119e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8889e4e9-b6fe-4230-9ad1-d0c12f81d81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b99320-2a35-43f0-a3ab-49b570229d5a",
        "cursor": {
          "ref": "34b1c223-5d57-4695-9296-abe9f3a90e42",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "629630ab-b6b7-4e78-b8bb-628ad3ee2b5f"
        },
        "item": {
          "id": "95b99320-2a35-43f0-a3ab-49b570229d5a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6f7a13b3-5b0e-436b-bce9-607cba57ede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57394890-f136-4867-b8b1-f90e23ade2ce",
        "cursor": {
          "ref": "5a6a1792-ff1c-4564-8021-5b4dcaf556b3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4f7df553-1469-4ec0-9971-baff0045cc5e"
        },
        "item": {
          "id": "57394890-f136-4867-b8b1-f90e23ade2ce",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "66bfa029-7847-431d-966e-877420f76415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735d20c3-7163-4f3b-9915-c88e77e7e357",
        "cursor": {
          "ref": "786b0f28-6ef5-4065-8ffe-5300c37e29c8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fba56c8c-df63-4668-a33f-294b9db5e92c"
        },
        "item": {
          "id": "735d20c3-7163-4f3b-9915-c88e77e7e357",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7472673a-0a5e-4466-9df2-84f16133905d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa80410-813e-412a-822c-263aadc4bc02",
        "cursor": {
          "ref": "93e11849-d3bb-44f9-a8c2-771ac0871a03",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1a28bb57-99ea-4acb-ac1c-dd09f815c2ba"
        },
        "item": {
          "id": "caa80410-813e-412a-822c-263aadc4bc02",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "71eaafe6-4831-4ab5-bff8-877bd8838189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86319a53-2b66-4653-97dc-6529c1c98ea3",
        "cursor": {
          "ref": "8dcabf7e-892d-4ec8-b4cb-1311cd1d993b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7fbb184c-d9ee-4d52-9ea3-29093a7604dd"
        },
        "item": {
          "id": "86319a53-2b66-4653-97dc-6529c1c98ea3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6b83394d-f615-4af1-a787-91a405e60efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8053f017-089a-43dd-a1c6-e3b8a3267066",
        "cursor": {
          "ref": "cc955809-81c4-4c01-8af7-d6ff6dc41ea8",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7fb08bb6-e991-42f0-8e0c-59a462f20142"
        },
        "item": {
          "id": "8053f017-089a-43dd-a1c6-e3b8a3267066",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b16c21ae-a238-4e45-bd69-d12a0c27f700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a066d3d-8d3c-4ed9-aecc-9da016067423",
        "cursor": {
          "ref": "e51be2db-717a-4603-8f61-3e20f8d6d59a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6c522507-1f85-4dd7-b1d8-8d48021c4775"
        },
        "item": {
          "id": "9a066d3d-8d3c-4ed9-aecc-9da016067423",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "22fc9511-4e21-425e-aa82-d7e7a8cacb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2f8f26-796a-4a4c-ade1-937842793b03",
        "cursor": {
          "ref": "0244a8dd-4e2c-4270-abb5-962f625a1603",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "15e52b04-fe1b-4184-ab98-eadde9cdca24"
        },
        "item": {
          "id": "eb2f8f26-796a-4a4c-ade1-937842793b03",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "649af7d3-2f6e-4675-80e2-910c80baf93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893767cd-7073-4e49-a826-b630c48fea44",
        "cursor": {
          "ref": "27987f44-b1a5-47e7-98d4-5f5ec22c9e5d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1a6b1f47-9cef-4389-a5f8-0e0e1da20eed"
        },
        "item": {
          "id": "893767cd-7073-4e49-a826-b630c48fea44",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "470a93bf-2090-4e65-bb53-aa2d997e465c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e88afb-9d6e-4384-a3bc-a6541af76fba",
        "cursor": {
          "ref": "f1842d93-cc35-447a-b64a-f7f5304686f0",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "733ea6a8-f6a9-484c-9016-73710d5a9623"
        },
        "item": {
          "id": "b6e88afb-9d6e-4384-a3bc-a6541af76fba",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "638cf95d-4220-463c-90a8-dccf4a6e3381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642edd74-c55c-45d7-855f-f01e9fd9e61b",
        "cursor": {
          "ref": "bd5b449d-c4c6-4bbe-bc9b-8e1a499ac2f0",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b0c42b11-316d-4834-811e-62f2ffc6e313"
        },
        "item": {
          "id": "642edd74-c55c-45d7-855f-f01e9fd9e61b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e31a98aa-fc90-467b-b342-5743f89cc6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e0315a-ccc2-42d0-8e39-78b8d8648b69",
        "cursor": {
          "ref": "906644eb-a7b9-45db-af43-6592fa264931",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8eaf25a2-84a8-47e0-b353-bec566c7a544"
        },
        "item": {
          "id": "c9e0315a-ccc2-42d0-8e39-78b8d8648b69",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ab41f1a5-c9e1-46bc-b990-70097bce4c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6aaeed-6f36-435a-94c8-46643896af5c",
        "cursor": {
          "ref": "76654b48-d3a1-4683-9e26-519f2b45faf5",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "939903ad-5061-4d61-8524-3e68498dc012"
        },
        "item": {
          "id": "8b6aaeed-6f36-435a-94c8-46643896af5c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "087516b0-7563-4cef-8474-57e625c7232c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0f23bc-444d-4994-b437-a2daf4f1be06",
        "cursor": {
          "ref": "7441c788-96ed-4d57-8707-6cc0f5d0be39",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "174cbeb0-c09e-4db1-ab3d-ab9b40d19369"
        },
        "item": {
          "id": "4f0f23bc-444d-4994-b437-a2daf4f1be06",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7fcdacf7-7a5a-40fb-8c54-8adffd7a050a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b112d67-09f8-426e-8f48-9e0df3576b4b",
        "cursor": {
          "ref": "3dd9d0dc-b2c4-4075-b50d-30e047644dbe",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "342edc65-b600-4515-a1a2-432c5bbec669"
        },
        "item": {
          "id": "4b112d67-09f8-426e-8f48-9e0df3576b4b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b51989fd-c72e-4488-aacd-ad7d70319c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac89d4f0-db72-4c90-b3b2-0c334abc888c",
        "cursor": {
          "ref": "a939c06a-fc89-44c1-8b3c-573970a339bf",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "99eb7a96-816f-4013-a8df-bfbb8f6d87d3"
        },
        "item": {
          "id": "ac89d4f0-db72-4c90-b3b2-0c334abc888c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "038f42f1-3b28-41e9-a74f-c98dd6451e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f141aa26-a40c-472e-8c71-7a76831c96bb",
        "cursor": {
          "ref": "22f3301d-1c2c-44d5-b457-b8a12d4c8e9e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "14335853-fd5e-4246-97da-b596a0c57119"
        },
        "item": {
          "id": "f141aa26-a40c-472e-8c71-7a76831c96bb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a79c3154-6d7f-42c1-ba4d-4430841f9f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e9e4a0-3136-4b73-8b83-ad0c011fb50d",
        "cursor": {
          "ref": "893fbf9e-f056-4d20-a370-c64adc82e3cb",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6e4e5367-b77c-461a-9b4d-f4f2a9b69609"
        },
        "item": {
          "id": "59e9e4a0-3136-4b73-8b83-ad0c011fb50d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8e703114-2e99-4ad7-abb2-e4ea44b3de91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9174b1cf-9e12-4d20-b271-3c80800792d0",
        "cursor": {
          "ref": "6ed5f2cf-ca8c-4355-9417-4bb2508853ac",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2b3755b5-bfb0-4838-a733-b2354bb651d6"
        },
        "item": {
          "id": "9174b1cf-9e12-4d20-b271-3c80800792d0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9e3dabcc-6bc1-4e3f-a9c9-e37b1a04b7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b49cddc-88ba-4951-9cc5-0d8ceec61bc0",
        "cursor": {
          "ref": "1beaf17c-5595-4084-bb5b-172d6525fb2f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "94001789-9610-4d50-8944-9b5afe2ef389"
        },
        "item": {
          "id": "0b49cddc-88ba-4951-9cc5-0d8ceec61bc0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4d5a5a3e-f3bd-4605-b41a-289f068796f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a8a59c-9a54-4d6f-a34c-2e44ab92dc56",
        "cursor": {
          "ref": "d5715bef-0ffc-42fd-b34e-d68c94f0ab86",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1851ca7a-46db-4263-bc58-c7046f04bb2c"
        },
        "item": {
          "id": "f4a8a59c-9a54-4d6f-a34c-2e44ab92dc56",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "badab8cb-4ac1-496c-a326-1a9b6eb969cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73982de-7039-4475-90bf-28336d7292cb",
        "cursor": {
          "ref": "2e3161dd-a98f-49f6-b078-a20b5300d1e6",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cfe139f4-953d-4952-8427-e1f4f046b32b"
        },
        "item": {
          "id": "b73982de-7039-4475-90bf-28336d7292cb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d9dc8b16-fc57-4bdf-89f8-25f6a91d5d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8a17c2-7cd0-4785-bae7-c1454af13774",
        "cursor": {
          "ref": "96d8e255-5c86-443c-90f4-6426b56eb0bf",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "32dd844f-7b61-4dae-9d75-84ecc4ea82c6"
        },
        "item": {
          "id": "7c8a17c2-7cd0-4785-bae7-c1454af13774",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "39d72d5f-76df-4112-b4fc-0fb7ad7b7a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f51d35-8423-45ce-a4b7-8e97874fb45a",
        "cursor": {
          "ref": "bbac4451-1159-46b4-b8f4-3c47cd823aea",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9d205985-a606-4f42-9535-6f5646a4ff48"
        },
        "item": {
          "id": "50f51d35-8423-45ce-a4b7-8e97874fb45a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d0473a31-0500-41d9-8a41-fc029f08628b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4aeff7-00f5-4a93-ae72-5fec11f89978",
        "cursor": {
          "ref": "9ff0e45f-1747-45fb-a48f-36ff4c5bbb88",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "96a4b995-e784-481d-93c6-23a78e4b47fb"
        },
        "item": {
          "id": "7b4aeff7-00f5-4a93-ae72-5fec11f89978",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e1f93bf5-6142-4d18-b47a-9f3474dd3a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a3799b-9eb0-4dda-8e52-72e0e8d53fd4",
        "cursor": {
          "ref": "9994392d-78d1-451f-a900-233c625f2a6f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9af152db-21e8-45b7-8ec4-5096005d1d86"
        },
        "item": {
          "id": "b4a3799b-9eb0-4dda-8e52-72e0e8d53fd4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "21798205-a5fd-4464-8586-b6cd4a22e398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a697598-50e1-40dd-8c08-279b4b3cc090",
        "cursor": {
          "ref": "1f0dcfbc-53b1-4cf3-bfd2-3333dd47a2d0",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "80400bc0-6589-4f65-9476-6c8dda6a6235"
        },
        "item": {
          "id": "1a697598-50e1-40dd-8c08-279b4b3cc090",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2d4c4625-ca01-4abc-a39c-acc851c51e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d13d532-7d86-402a-b4d5-47836b62c65f",
        "cursor": {
          "ref": "269f67ca-cfa0-4924-8526-1ff20cb5f0fb",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "442a423b-4b98-49dd-84c2-7e5670175e25"
        },
        "item": {
          "id": "8d13d532-7d86-402a-b4d5-47836b62c65f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "541e85f3-5746-47a5-91e0-6ae07e0c96fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350798cf-8a3f-4983-ad43-37c98b2409f8",
        "cursor": {
          "ref": "860ef9a2-0d01-4d8b-a203-057728dd6435",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "90e3b3eb-c013-4bb2-98c1-d929187be2d1"
        },
        "item": {
          "id": "350798cf-8a3f-4983-ad43-37c98b2409f8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bce6ba33-0dae-4cfe-a205-5a06a69eed54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82881c05-ce83-489e-8992-52ad0056ad14",
        "cursor": {
          "ref": "aae1cef4-1830-442f-9610-abc784957642",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8975134a-59b1-42b9-b042-bf8853a47652"
        },
        "item": {
          "id": "82881c05-ce83-489e-8992-52ad0056ad14",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fac5f7df-43bc-4ad2-bd06-017c86f69e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b9e6b3-d24f-4cc0-b273-99ea2c8b3c92",
        "cursor": {
          "ref": "91acb0d9-2421-4e42-b4df-33205c335c96",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "eead74fc-5560-4b5b-9f78-f0e4a0970d62"
        },
        "item": {
          "id": "85b9e6b3-d24f-4cc0-b273-99ea2c8b3c92",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "25ff873f-3868-463d-b5d7-1536d10f8595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b2baa9-bc0b-434a-8260-edc63c8c4271",
        "cursor": {
          "ref": "fb894586-8aba-4db7-9381-e3dfa6023fc3",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "98061fce-0da7-4c9c-b78f-eecf3e60d4ba"
        },
        "item": {
          "id": "74b2baa9-bc0b-434a-8260-edc63c8c4271",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "47f5ee4a-7e6e-4d38-aca0-0e0efb20f2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245a43a1-f857-4238-9000-57023137f297",
        "cursor": {
          "ref": "5873d6c1-0ad8-4dd9-9738-bdf0c16a299b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c8e68d08-8320-492a-959a-66cfc961fdc6"
        },
        "item": {
          "id": "245a43a1-f857-4238-9000-57023137f297",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a78fafe8-dbbb-4a91-bd73-480605a4e7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40883839-112e-4446-98e7-d09c1f9e5f16",
        "cursor": {
          "ref": "5f7aff5b-745b-456f-9b9c-d57da474311e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4589ea7a-3ea0-4793-ac01-f056b6c1ba80"
        },
        "item": {
          "id": "40883839-112e-4446-98e7-d09c1f9e5f16",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3f77d905-a301-4387-8d5a-4b1325f6d9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf75f96-288a-43a9-bbbe-ba131ed6586b",
        "cursor": {
          "ref": "0cb79a81-c54e-422a-acb0-9c5cb010a093",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d94c7fbe-88a0-4ba7-950f-77632ef383ce"
        },
        "item": {
          "id": "4cf75f96-288a-43a9-bbbe-ba131ed6586b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b473b5f9-163e-485f-94a5-7f6b2c8bba99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79d0903-11de-4fc0-9969-d5eb2991c435",
        "cursor": {
          "ref": "39876285-6c95-4991-9084-d0564fbaba52",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c4d119e5-b3b0-490d-9a66-c93ead3b8d7e"
        },
        "item": {
          "id": "e79d0903-11de-4fc0-9969-d5eb2991c435",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "177fc0bf-f11a-4768-8130-db37d185d922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987d8640-70f6-420c-b686-ab2acd482058",
        "cursor": {
          "ref": "5653f482-ee50-4929-9d2f-c326f60a8234",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e9523be5-7540-4e76-9eb2-b15d0f243f5a"
        },
        "item": {
          "id": "987d8640-70f6-420c-b686-ab2acd482058",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f0a192ca-d1ab-4607-9e82-4194dcd605c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6fbc8b-3c9c-49c0-9a12-19368a3c054a",
        "cursor": {
          "ref": "91a82b77-afae-4100-bc39-89a6d9c9b5c1",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2986c084-5f05-4dc7-b759-1073815582a9"
        },
        "item": {
          "id": "1f6fbc8b-3c9c-49c0-9a12-19368a3c054a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e23245f0-0e59-4f70-9549-b609a4cc26db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57666541-6bc6-4b5f-8f7d-e3d77e94e17d",
        "cursor": {
          "ref": "468691b4-40ac-4c99-b318-40b7f5b3a462",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f7189160-7ef0-4a86-8ed1-27361ee9c308"
        },
        "item": {
          "id": "57666541-6bc6-4b5f-8f7d-e3d77e94e17d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bd9aadf3-d378-41b5-84ce-a19351780b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036cfbdb-676c-44b2-b50f-92a1b7dd8ab5",
        "cursor": {
          "ref": "48f2f3d0-457a-4e15-8a09-57909e639d64",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "516291ba-7fe1-49d9-87cb-ba135b2d19ae"
        },
        "item": {
          "id": "036cfbdb-676c-44b2-b50f-92a1b7dd8ab5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2eabb264-19c0-42da-b7ec-56293760fb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcb8b1d-6a48-445a-87f8-2f69eba0bc47",
        "cursor": {
          "ref": "12ef2277-683d-44a4-be44-9e5c0a6c309d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bdb6f3a8-3988-43ee-8ff6-f975e7b5c1eb"
        },
        "item": {
          "id": "7dcb8b1d-6a48-445a-87f8-2f69eba0bc47",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4f7b99f5-53df-4866-ba10-fbb37b95630f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d604d11e-60e5-4766-9daa-1d4ca8a3e43a",
        "cursor": {
          "ref": "77b0d704-25a4-4088-9dc9-38f5a053c52d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1e7e04ad-3b59-4f6d-9a2c-1e44702dc077"
        },
        "item": {
          "id": "d604d11e-60e5-4766-9daa-1d4ca8a3e43a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5a07dc23-8dd1-47a0-91ee-880173c2b667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3043fbd-0254-4c45-9008-b4c2fe6ef6a2",
        "cursor": {
          "ref": "85021c93-c1a9-4f85-badc-37992b9e8415",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7c4a4299-e661-4337-be8b-8faa5a301f07"
        },
        "item": {
          "id": "e3043fbd-0254-4c45-9008-b4c2fe6ef6a2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4e89beee-9e51-479b-a069-961d071d6074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c86ff9-d9a2-41a4-89be-c18f5e235b9c",
        "cursor": {
          "ref": "b7f24e1b-55e5-4cd7-a19c-8bad33b53bec",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4c3f26a8-51f6-40fd-8b11-3872573322d3"
        },
        "item": {
          "id": "91c86ff9-d9a2-41a4-89be-c18f5e235b9c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4e99294c-b6ce-4313-9570-c58b48ecce06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2ccc0f-0019-44bf-8dcd-4a5e4cbffc9a",
        "cursor": {
          "ref": "cc1c1905-f0d7-49a3-9d65-a99d4ff2c03d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2d685962-27c5-41e5-bbd1-4aaae7436787"
        },
        "item": {
          "id": "8a2ccc0f-0019-44bf-8dcd-4a5e4cbffc9a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "28d051a8-e681-4346-bc9d-4b0652867f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfffa04-860d-4a2a-9866-855b06a87d58",
        "cursor": {
          "ref": "e5c04114-c66a-4171-b213-758a6e10864a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "542f312a-e349-4ca2-8778-f9df1e7de758"
        },
        "item": {
          "id": "edfffa04-860d-4a2a-9866-855b06a87d58",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "25923290-9c33-4d6f-a5ee-fc6e1b1e748a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3388fde0-4ed6-4855-83dd-84fef5afee6a",
        "cursor": {
          "ref": "5317d22e-ebd0-480e-9061-7c464a86c5f1",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c650a5e2-e001-4bfe-abe1-e5766fa18b80"
        },
        "item": {
          "id": "3388fde0-4ed6-4855-83dd-84fef5afee6a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2c4661dc-0656-408d-a936-c0783b313a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cd3586-947a-4ea1-ad25-112604b17408",
        "cursor": {
          "ref": "cbb62b6f-04ba-44b7-9f85-d50321f3ec82",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bf7c474d-bd4e-4582-bc59-bff52cac8328"
        },
        "item": {
          "id": "30cd3586-947a-4ea1-ad25-112604b17408",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f65c1c17-924a-49c2-b3f5-acdccc7fa45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94de6ea0-e384-4b1b-97b6-20de2e3e6ed0",
        "cursor": {
          "ref": "78856312-be2f-4748-b503-1109d7ce3fda",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a46d1a77-0767-4b21-8aee-b6675569540f"
        },
        "item": {
          "id": "94de6ea0-e384-4b1b-97b6-20de2e3e6ed0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "86559015-b668-419a-9cc6-688b71bfdbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f858443-da85-4833-9cb5-6ac9a50b6656",
        "cursor": {
          "ref": "6c4b312b-c02b-455f-a418-fb0dd99dedf4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c6ced6c5-1cdf-49a6-852f-72b69288c478"
        },
        "item": {
          "id": "2f858443-da85-4833-9cb5-6ac9a50b6656",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "858a54de-6421-464f-a5ce-80c1864ac35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cece8163-3ff4-4664-a701-3658e900291d",
        "cursor": {
          "ref": "277e7106-b3df-4864-87d1-47ea3ba0487f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0a10228a-c800-4b81-ba27-970af14c5307"
        },
        "item": {
          "id": "cece8163-3ff4-4664-a701-3658e900291d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6d2d9899-50ab-4721-963c-b395fd7ab2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f060470-fdf4-426e-8845-6697a2b8ff3d",
        "cursor": {
          "ref": "6d442562-ef59-45d1-8c8a-b54244a49ece",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1b55a368-5613-4903-829c-4d45a7c33514"
        },
        "item": {
          "id": "1f060470-fdf4-426e-8845-6697a2b8ff3d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a1a9094b-f5c8-4120-ba3b-306e3b805a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebb32c6-7df8-4b69-a39e-b4ef09422c0a",
        "cursor": {
          "ref": "b464bd97-1300-4d67-8614-3e28b21f9327",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "427999c3-579c-454e-8d50-0146f3a1b43f"
        },
        "item": {
          "id": "8ebb32c6-7df8-4b69-a39e-b4ef09422c0a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7eac22d7-b283-4006-89b1-a8a17ccbf84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b3efd7-ce62-465a-ae00-9f722e998560",
        "cursor": {
          "ref": "447a74d2-0557-46ab-b6e9-1831f15b9d70",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e7b36c30-4472-493c-9c25-99a75b4dbf01"
        },
        "item": {
          "id": "70b3efd7-ce62-465a-ae00-9f722e998560",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9fb8d354-5f1d-493e-bbab-9a5fbdb31897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de4ecff-84e4-4abc-8925-0894466081b0",
        "cursor": {
          "ref": "d116e2fa-3a48-4683-a24e-6a250a6f2533",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0dd1736d-e051-4ea5-a389-781ab8ac22e2"
        },
        "item": {
          "id": "2de4ecff-84e4-4abc-8925-0894466081b0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9ae59711-4f16-4fb5-b093-20757edc1c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddb69ff-8c52-4415-8c49-0944eebe320a",
        "cursor": {
          "ref": "c842fe35-44a2-4f44-8aff-55300b19fcc5",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c9888f0f-b4a2-4408-bcea-b914c20c84c7"
        },
        "item": {
          "id": "dddb69ff-8c52-4415-8c49-0944eebe320a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3bfd34a5-c975-40dd-bb1b-22393c88787c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffc78f6-b76c-4dbe-b958-5cc8d9ac9712",
        "cursor": {
          "ref": "df763381-f24c-4301-8aea-618563113e12",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e0635557-9379-41ec-927c-5999b9617fb2"
        },
        "item": {
          "id": "cffc78f6-b76c-4dbe-b958-5cc8d9ac9712",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f5b21537-5358-434b-91ca-2e2de854bc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5a665a-51d1-4f65-bf2b-94c899be10cc",
        "cursor": {
          "ref": "48a85242-9459-43d5-9923-3254609dc309",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d30e0a5f-106e-4530-a9d7-5b16a33d3db1"
        },
        "item": {
          "id": "7a5a665a-51d1-4f65-bf2b-94c899be10cc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "28774a79-45a8-4066-8fb4-f673fc24bd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2115f2-2025-4d43-b70a-abe7866d3059",
        "cursor": {
          "ref": "6a83757c-79da-425b-aeff-1ef361c0c11a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2aefee92-26f6-4ec1-be96-8efc22152b91"
        },
        "item": {
          "id": "0b2115f2-2025-4d43-b70a-abe7866d3059",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "08b6b50e-d01f-46f7-9a9a-eae95939a94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569080fe-36a8-4116-90d2-3b10eda9958b",
        "cursor": {
          "ref": "0816c024-4005-4fd2-a419-2b5ff8d73997",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b3d3cf77-1f75-427c-b681-faaef7735b53"
        },
        "item": {
          "id": "569080fe-36a8-4116-90d2-3b10eda9958b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f91ccc41-596f-483f-a6f2-a728616017bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427f757f-6774-4f31-aa9c-b36a3ee21637",
        "cursor": {
          "ref": "14b45761-0991-4a31-90b3-dbf68b0c3d94",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "10cabe35-b533-4340-8c1b-e0d523f729da"
        },
        "item": {
          "id": "427f757f-6774-4f31-aa9c-b36a3ee21637",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f93bbfe4-72bb-425c-bbec-3e701e47ce1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfa3b42-acb4-4f02-9fb4-38fb3024a8aa",
        "cursor": {
          "ref": "a37a166b-265c-4189-acc5-a1e0d90f1f2e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2866fbfa-0010-4b52-8037-57ad9a9df99a"
        },
        "item": {
          "id": "bcfa3b42-acb4-4f02-9fb4-38fb3024a8aa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c973e5a2-745e-4654-ba6b-8571e1511be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13c93b8-1e47-4652-b154-eb04c223fe2e",
        "cursor": {
          "ref": "44008a9c-d63d-4bbb-a27c-8901f25e8958",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5e29e36c-adc6-475f-bafb-45efb390256d"
        },
        "item": {
          "id": "d13c93b8-1e47-4652-b154-eb04c223fe2e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "61383d7c-e154-4449-9265-e02b0b4438ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f223fdbf-0791-40a4-bb28-3a6701f1d532",
        "cursor": {
          "ref": "ec735af2-de11-40e5-b3fb-2a6d9655e700",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "83fca01a-7c1d-4bc0-bae1-930d5d5ff16c"
        },
        "item": {
          "id": "f223fdbf-0791-40a4-bb28-3a6701f1d532",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9944cd9e-1047-4df1-a928-45fd2dd61d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5eab9f-332c-42b5-8b60-16be9d079a29",
        "cursor": {
          "ref": "77c8847e-beed-406a-9bb6-47b9fd73e96b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5a5d8298-fe6f-4c9c-81f9-fad7b237c4e7"
        },
        "item": {
          "id": "1a5eab9f-332c-42b5-8b60-16be9d079a29",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6b39ef21-a95a-479b-bf03-7110debce66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0ce543-a3dd-457d-b5cc-e74df858ab46",
        "cursor": {
          "ref": "8922bbcd-2545-4214-88bc-9aa9713c0eef",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7ecdbb09-ab05-4f92-8b78-310eb45ce2f2"
        },
        "item": {
          "id": "fa0ce543-a3dd-457d-b5cc-e74df858ab46",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9e47eef1-f4ec-49c4-b517-87db87e98938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac371539-b79f-49df-8d8f-52206d61880f",
        "cursor": {
          "ref": "58669bc2-ccad-49c2-9695-e7bdc81d54ba",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "852546df-fff2-4119-8f40-d1687f15812c"
        },
        "item": {
          "id": "ac371539-b79f-49df-8d8f-52206d61880f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "538e1a47-155c-4dce-94db-deffb015c571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780cf26b-e3d0-45e0-b3f5-c95b5660bc06",
        "cursor": {
          "ref": "4c8dc1cc-2009-480f-9a61-13ca9c31d106",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dffa8135-833b-48e2-b2fd-cbfef26cd95a"
        },
        "item": {
          "id": "780cf26b-e3d0-45e0-b3f5-c95b5660bc06",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "055de19b-e5f1-4d5c-972b-93969c3b8746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7399e03-e856-4dba-8893-d36471ed370b",
        "cursor": {
          "ref": "f9544059-0322-4482-b562-780bf227a856",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0f62a653-9c6f-417f-bd82-d961118c27c0"
        },
        "item": {
          "id": "c7399e03-e856-4dba-8893-d36471ed370b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5981bd07-2cab-497e-a62d-77efb2ab4151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879b7542-82be-4842-8df8-d49570410d1f",
        "cursor": {
          "ref": "9b36f0f8-9eba-4232-8190-1e37c7ace5d2",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3e241467-76e8-4abf-9d16-01b71efc5b8c"
        },
        "item": {
          "id": "879b7542-82be-4842-8df8-d49570410d1f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "49f62008-8552-4a7b-b538-8c03a219f884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcfa151-b26e-48df-9dad-5580b9cda018",
        "cursor": {
          "ref": "bd905a09-99bd-4f7d-9a4f-1c569c80177d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "603d6c3c-0c11-479a-b788-40e2f7a20a20"
        },
        "item": {
          "id": "1fcfa151-b26e-48df-9dad-5580b9cda018",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "38e0d217-83f8-42ce-a724-72d49cf453f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c67246-1ca9-4d35-919c-c02dd3d5bdde",
        "cursor": {
          "ref": "092219b8-fc71-4953-9bf2-fb346aa3c4e6",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0b1326fc-848d-4987-8460-155e004c3274"
        },
        "item": {
          "id": "26c67246-1ca9-4d35-919c-c02dd3d5bdde",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "87ae0ef6-26b7-481c-8ca7-56307643a564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d63108-1d5e-4c0f-810a-8e17766705dd",
        "cursor": {
          "ref": "fb63e458-7732-41ce-8844-494cf4d25d80",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e7c98968-4056-4792-b8e4-f6275a5f62ea"
        },
        "item": {
          "id": "e9d63108-1d5e-4c0f-810a-8e17766705dd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bc9fc10a-3353-47a1-87fd-2520f981b234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cc372d-5654-49e6-8e7c-5a61b8731523",
        "cursor": {
          "ref": "2fdd2446-bbd2-4c85-af9a-beb20047e859",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "661b6cfa-3ed9-40d8-8a70-6666198e1f45"
        },
        "item": {
          "id": "79cc372d-5654-49e6-8e7c-5a61b8731523",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "09902c6f-d762-4098-b7e7-6aeeeaeed052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d677ac8e-fd44-4f33-827e-6738c7343c32",
        "cursor": {
          "ref": "a211cba0-97ed-44f5-8a6c-fe89ebfabf46",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a04a3f65-604e-4ece-a2e9-3df56a34380c"
        },
        "item": {
          "id": "d677ac8e-fd44-4f33-827e-6738c7343c32",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "61f66863-ab69-43ec-bab0-dbbcfeb7083b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0fb1d8-bbfb-4c4b-8b8c-71a010651264",
        "cursor": {
          "ref": "e7d8aa02-8b25-4fd1-8072-ab140e952cf5",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "496b6b94-007d-4a08-8dce-420cb9840b4f"
        },
        "item": {
          "id": "4a0fb1d8-bbfb-4c4b-8b8c-71a010651264",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "06d0e5f8-4061-4e23-9e3e-c3a8dad0789d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c2ad21-f47a-462b-9c3f-cfc4ff184dd0",
        "cursor": {
          "ref": "22ddc321-ed0f-4133-b935-244727e007aa",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c80bd8d0-dc05-4b44-9568-26a1cae20f88"
        },
        "item": {
          "id": "05c2ad21-f47a-462b-9c3f-cfc4ff184dd0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "708b7046-102f-4dae-8847-1fba6ad646be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e457a4b-f7cd-4b67-ba20-efce41bcc26c",
        "cursor": {
          "ref": "6c741669-1dce-40c4-b21a-6735e962052f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "04879858-2a40-4968-93f6-d8628d7c6059"
        },
        "item": {
          "id": "5e457a4b-f7cd-4b67-ba20-efce41bcc26c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1c3cde49-43d5-4462-bf9a-711e87b6e8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6ec0dd-53e6-4c89-8e7a-399a245638b0",
        "cursor": {
          "ref": "65a51534-05b2-4b81-8a47-38fceeec530b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7b01b092-b7e0-47a0-bbe5-e5bde3262ba2"
        },
        "item": {
          "id": "0a6ec0dd-53e6-4c89-8e7a-399a245638b0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8dfb4c8d-c7e9-4893-a3c6-c679b41eec53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2814ca7f-3e30-47ae-8c79-d4c752448950",
        "cursor": {
          "ref": "acffc236-4328-4b71-9f30-78fa44bf1938",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ac5a0b5a-6a14-4b01-b5a3-92bfd4cc2d8b"
        },
        "item": {
          "id": "2814ca7f-3e30-47ae-8c79-d4c752448950",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5c78cbc4-216c-46a6-9c8d-2cae6dfbdb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fd29b2-ecd4-48b4-b948-8592167c1ba0",
        "cursor": {
          "ref": "2cea8009-344a-4f06-b9e5-a4e9d1037ff4",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0ca2eeb9-a15f-4a8d-9a39-b5d6eee8d7cb"
        },
        "item": {
          "id": "c5fd29b2-ecd4-48b4-b948-8592167c1ba0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "696f1a89-10ac-4463-b3a0-f769f9b51d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5778977f-5144-4f98-8023-38277462f979",
        "cursor": {
          "ref": "bdd717fc-cd77-4685-a403-5dd6ff12c95a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d579cb4f-05fe-49e3-866c-3b7d85332398"
        },
        "item": {
          "id": "5778977f-5144-4f98-8023-38277462f979",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "497ca3f6-0b8d-44ff-8d9f-522801aeb4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06302b79-c164-4edc-8ee2-2fa78bc78bcc",
        "cursor": {
          "ref": "e1d0d839-c8ea-4f92-b05b-d9cc57a00b19",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "199b3517-eafb-4ccb-98d7-3946239c2917"
        },
        "item": {
          "id": "06302b79-c164-4edc-8ee2-2fa78bc78bcc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7144d9bf-8672-4c91-9c75-e1e156be907b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f732b9-8353-46f3-8bf5-6c6a0545f1f4",
        "cursor": {
          "ref": "51e46a3e-a493-452a-9884-7f9b68dd6f74",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7ee71e7c-06b7-4a85-947f-24d544ea7887"
        },
        "item": {
          "id": "f4f732b9-8353-46f3-8bf5-6c6a0545f1f4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fc0e1a06-a7d9-413f-907e-4c2874a01be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e38a0c-be02-4356-87f0-cc4761af6d5d",
        "cursor": {
          "ref": "9ebd0184-65c3-4149-be73-c5dea5d84bc7",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "aed113cc-8241-4585-b06e-7ed09b4f9357"
        },
        "item": {
          "id": "b5e38a0c-be02-4356-87f0-cc4761af6d5d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "72e3c2b3-db8e-476d-86b5-344addb2fd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ba5b5d-e36e-490d-80bb-0d8183fdb166",
        "cursor": {
          "ref": "cd41663b-8b26-45c2-bb7e-0a80c9cdf605",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dc238f13-73bc-491d-8450-663cd6aced26"
        },
        "item": {
          "id": "23ba5b5d-e36e-490d-80bb-0d8183fdb166",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "789e150a-d1cd-44a7-b3cb-8286d5ca4d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5f7c39-914a-4158-9c58-6b424adcf38b",
        "cursor": {
          "ref": "3362d717-fadd-431b-a0e5-d1111535145d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e030435e-63d6-4046-a017-3240013c43e1"
        },
        "item": {
          "id": "bb5f7c39-914a-4158-9c58-6b424adcf38b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ced93913-d5e0-44c8-958d-68f4ff71935b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5875c8c4-989c-4b04-b43c-52fdd34958ad",
        "cursor": {
          "ref": "8b9f17cf-fafb-4f11-a3db-ea98bba6d4fa",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "99b1c482-2992-4b45-a0f1-db3c48ba9748"
        },
        "item": {
          "id": "5875c8c4-989c-4b04-b43c-52fdd34958ad",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5bd1ab4a-feb1-4b70-af95-6d33ccb7e786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545c36ea-6e30-4d63-aaf5-15ba8768742b",
        "cursor": {
          "ref": "f9ef5dc4-6ade-47fd-a4c2-71377401aa77",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "10a7c4c5-ef6b-45c8-b189-c613f5705939"
        },
        "item": {
          "id": "545c36ea-6e30-4d63-aaf5-15ba8768742b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3acf590d-5337-4a87-808e-a5dce2e33231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e4ba7b-a848-4b7e-a38c-11d689d7e027",
        "cursor": {
          "ref": "a7bd776e-2103-48a4-b23f-ff013140f653",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a25071d5-1920-4e0a-86e0-d0c4e612d45d"
        },
        "item": {
          "id": "09e4ba7b-a848-4b7e-a38c-11d689d7e027",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d99324fc-9e39-4fad-9f2e-9a7656978f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a375ee38-7129-497b-b442-7eda4da2d0d1",
        "cursor": {
          "ref": "94318e30-ab22-4e12-afee-d1163a527e69",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "236d3f2c-dd6b-43d7-8a2c-916edf9980cd"
        },
        "item": {
          "id": "a375ee38-7129-497b-b442-7eda4da2d0d1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e04f8910-d2dc-4275-9c96-6ac77bfaabd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01db11d-8f39-4b42-becf-397c530c08c8",
        "cursor": {
          "ref": "5023cd16-e794-4c85-a4c5-6f9070861f1f",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b9c37063-9dc9-4822-92b2-907d36c45d73"
        },
        "item": {
          "id": "a01db11d-8f39-4b42-becf-397c530c08c8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ba676bf6-fecb-4905-a9eb-ec60177ed101",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2190d24b-556a-4f0a-861d-69b1420a400c",
        "cursor": {
          "ref": "9dd75f65-a311-46d7-8b54-edd6e0c2bf36",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ac83e99c-12ae-4acb-9ea4-3653dd51246e"
        },
        "item": {
          "id": "2190d24b-556a-4f0a-861d-69b1420a400c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e993f83e-2477-4639-822f-6cb57aeb554b",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e65202-f85f-446c-b747-0b0b9fea2e16",
        "cursor": {
          "ref": "24b45ba8-bf7d-49e1-8faf-2ca0155cff55",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "95d8d1ef-a358-4aa2-b90a-9a32edd842b7"
        },
        "item": {
          "id": "82e65202-f85f-446c-b747-0b0b9fea2e16",
          "name": "credentials_verify"
        },
        "response": {
          "id": "38df4210-3526-46e1-977d-61c1113eaf52",
          "status": "OK",
          "code": 200,
          "responseTime": 1726,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea0be0c-f2b4-44be-9869-6276605cba31",
        "cursor": {
          "ref": "4702efd7-1401-45a3-a966-501a4351ddf0",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "af93361e-32f2-4e7b-9676-0d787e1f48fa"
        },
        "item": {
          "id": "fea0be0c-f2b4-44be-9869-6276605cba31",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d7801f3b-bcdf-4fae-bcca-771c14c5be6e",
          "status": "OK",
          "code": 200,
          "responseTime": 1477,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ec5906-023f-4c9c-9ad1-431358c49a56",
        "cursor": {
          "ref": "b0457720-d9b0-439e-bfe5-aaac1fdada95",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fc523723-e4ed-4f79-bd4e-b11c94a67836"
        },
        "item": {
          "id": "b7ec5906-023f-4c9c-9ad1-431358c49a56",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0545854e-199a-46ac-8438-3573f5ea425d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ec5906-023f-4c9c-9ad1-431358c49a56",
        "cursor": {
          "ref": "b0457720-d9b0-439e-bfe5-aaac1fdada95",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fc523723-e4ed-4f79-bd4e-b11c94a67836"
        },
        "item": {
          "id": "b7ec5906-023f-4c9c-9ad1-431358c49a56",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0545854e-199a-46ac-8438-3573f5ea425d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02452aac-7976-4827-93a3-2d9815acc9d3",
        "cursor": {
          "ref": "f71add36-e160-4bdd-b40b-8af0c0bed2a9",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bebcd877-2154-4cec-908a-3149a7b4554f"
        },
        "item": {
          "id": "02452aac-7976-4827-93a3-2d9815acc9d3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ac2f46d7-65f3-4de3-b6c0-fc24ffb9e769",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2686fdd1-a6be-4687-936a-1c5f52cc8bfa",
        "cursor": {
          "ref": "7d8eec50-63a6-41f5-8d2e-d199a1755c99",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0f3e4dda-d82f-4ba4-ae12-056fdc65bc4f"
        },
        "item": {
          "id": "2686fdd1-a6be-4687-936a-1c5f52cc8bfa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c0e65f10-4e83-470f-929c-90652ba998fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}