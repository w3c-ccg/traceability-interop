{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "708e115c-3700-42b3-a270-93743acce1de",
        "name": "Clear Cache",
        "item": [
          {
            "id": "52c33b02-df71-4afa-b315-fb9d3533fd41",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f460fc52-49f5-4af8-93f4-55e9f04b8f4f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7bd5a129-3b00-4813-9010-49481235a7e0"
                }
              }
            ]
          },
          {
            "id": "d6c0958c-9760-4285-bbee-a79044a218ad",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5362aaea-7c0c-4c0d-a4eb-62b5fe9517d9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e0332d37-1e2e-40b8-95cb-aef0f4cdb52a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bdf52830-824d-4515-aca9-b2969f51ee9a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8548edfb-2d14-4609-b396-1d63154005d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "004e951c-6d8b-4b21-bec9-57df9cb487fc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fda876f-4a87-4c5c-b47f-3d8766c4026f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11411e6c-e728-4104-a675-cc4e92ab0467"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d09d0929-50ba-4b7c-a635-a354bf5bbc59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9755b203-cd7c-4ccc-8a81-f62ab7afdb2d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b797d4c5-08a9-4a56-a45e-6f5f10e67763",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "943b6218-96c7-4b32-8699-46b9d8d677fd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a4779fe-4228-4fcb-889c-6915a8035b40",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5567498d-e671-4466-b51d-dac7a335fd0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3071f85-1740-42dc-9094-ebcbc4cb1599",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fac47c1-f3cf-4b99-b7bb-0044327b6457"
            }
          }
        ]
      },
      {
        "id": "0aba2295-17f8-4f05-96a4-5170882dc33f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d8a3b9ed-8345-4813-bf6c-605136fb6b68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97854243-7f87-4e40-9cca-2b60c5e16c13",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f40ac4a-683b-4df2-850c-995b154bce74",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a10cf0d-eb80-443c-b35e-95cf9f9f046d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "385b29b6-d80b-40f6-aad8-6cbbfd37c296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cb6721-02d3-4b7d-ab03-c3665eb933fe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff2af8b-f7de-4a3b-8369-ba778f9872da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be5d48f4-f1a5-4875-99f7-31085f65d664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e211ac0-c105-4cf6-8a34-ce9b17a4b7ca",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167e9e5f-88fb-499c-9b12-00d08d30a027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d88dfa3-bb77-4f9a-9680-9f98ff3c1ad7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "415c3107-cc8a-4e93-ba50-80b49fb53235",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3446adb4-e0db-4c9b-a470-b6f522451690",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb91cde-c9d3-4080-9c91-2344cb1ea58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86adbfd0-dd77-41e9-bb0d-cf2b36ebfdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0d7916-e33b-4602-b186-a15e24d33300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01f8f64-ab1d-4e92-97db-7bdee1f69fdf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "252eac81-99b1-4ae3-b4f1-759ca3c33231",
            "name": "Positive Testing",
            "item": [
              {
                "id": "811a0395-4840-4c01-9f68-1ef06ad3c5e8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd8fae0e-25b7-469f-badb-b7937e62c5b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "63d920df-a5eb-4688-97f6-43a2986fa5cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03a52d9e-5805-4eec-883b-3918550b212c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e899e043-c7f4-4d64-ab0a-4c99067add0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c964b910-69e0-42ad-8d1b-5a7b96df246c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7acf2981-8653-469d-911d-e21b298c557e"
            }
          }
        ]
      },
      {
        "id": "558f9cb8-f6c8-41f6-9fd5-cc3f65cb4db2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "51ed5f9e-0711-4bba-83fb-b17efeaa9aad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01952f18-702d-4a00-a459-ce2b4b0fefd5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "43f975ab-9551-4a77-8236-c886834c1888",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e09cf7-31db-4332-9eae-6fea448ef52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70571d8-80c6-44ac-ab02-2ad7ed5323cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e47c39-6510-4f98-a5ca-83ba2f14b707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90ece235-4181-4dd0-b0f5-e33a6090e454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095e627b-cccd-4e82-80d0-858ea7a230ee",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78101485-db75-46ac-b6a6-01bfb81765e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b954e09b-d213-47bd-a02a-c6bafaa1b049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4425d68-82cb-4cd7-8708-62b799f19040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfc2d075-7d36-4240-a237-13080fdf2056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b1e3ba-f5de-4ef7-a1af-f15121eefebd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e78247-51d7-4091-b940-3013e5eb65d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a53af5-0e36-409b-9361-d149914d9ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c1563b-3fa4-46a7-a514-e6dba74d28a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1718c78-b157-4bd5-946c-8dc98dc379a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54c9da3-2dbc-46f1-8708-032489ddf7d1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1851809d-974c-4c3c-a8bc-65a00227d797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1476e9-4125-42d5-910a-fcda2b5542b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978cab70-7870-4dd5-bdf7-fc7263b82854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "342da803-dbb9-4fd7-aa73-7eadc5af7a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b78e2d5-ad03-4394-99f6-77e8bb920dfc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f965aa-1da3-476f-b167-8d7c1c9e26e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7860f446-76c5-4dfb-bbd6-3db814851d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e3d1b1-1024-438c-a5d2-436b7b201df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c040c4cc-6ee9-4ed0-b404-87bbf6d3ed30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8f3fca-c35e-43d9-9b71-0a72703ce8e7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01adce82-fc98-4ec5-a6dc-45b472107e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f90454-a7b7-4be2-82b2-7f58e0666a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76f48b2-76c1-4f97-a68f-183e0f5c4817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40c050fc-de71-4477-bee1-55ff284cb513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c588260-0572-466a-83bc-828c9e9bef74",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b4bcbf-ef34-4dd0-a7d2-c70d9eb26ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7a0844-97fd-4010-89e1-1afb3f3c6889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b984d2d-15c3-484a-b85d-ad92dcdd0c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ce27ec3-cc56-4148-8a0e-9153b38087a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fdc9e9-9080-4197-983d-164610acbb3a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ec1388-32be-4f28-a23a-67d9fd5c091f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee81ef50-8782-47b5-9eea-4200b1e66251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2be0fd-e3ed-43c7-91f6-1cbe54c7b615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e915e353-a706-4a9b-af2c-8ca2013454c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5babfe8-de5d-43cd-9ec9-363c999e40b2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3544498d-cebf-44b8-92a3-cf06b3409960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a6321d-df26-4a08-8284-50c4a0bc3eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8326f425-83cb-49c4-b4ad-bdc6dc5ef23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d213b15-efaf-4d88-afae-35a38e7c174b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea264d3-b218-4314-9e5e-d768d299a19a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860455d1-e8d8-43f9-a8eb-14de6d9eabcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324cf7f7-7261-4c1b-b1fb-3f8c0d8d53ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c2d15f-f8d0-4367-990b-839384a64d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2568c112-180c-4e21-bf04-3ff572386026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72220f2-f5e2-458e-a5d0-fea7825aed48",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbee143a-cae1-4d1b-9864-7c8db1e6012a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb22f67-74de-4aea-8740-1b47fa7f9a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb1cae8-d927-43b0-b07b-adeac0e6f1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7921622-04f3-4e3d-b2c0-89824950fd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c65188-0c62-47e2-91f2-1ab503644a1a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6d8985-5378-4c4d-8b8d-5562de61207e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe6362b-bcf3-4211-bd13-a08f67527274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d0b9cb-a948-404b-978e-f2782fa1d598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7962ef7-4880-4148-9c79-0f989b84948b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba40a98a-d769-4e9f-839b-035d2da0b746",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854a8133-68c2-4caa-aee2-d18ed5f8dab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedf7fc2-b24f-4701-9adf-3ce73410716d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e59173b-dfd5-4b70-86c4-ade3f737acb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12ce757a-abc0-4e55-ae1b-31d3c23a9787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9e3e9b-63da-480b-82fd-4037e1a302c9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887fec74-5934-4330-936e-391389c43f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddec6934-76d9-4048-b638-a6c9d07772b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba784b6f-f2a3-4c97-a4fc-721a2e44b624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be095c28-d47d-4792-8206-b58f29d05b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a674c6-002a-4e91-929c-346bfbf4f4aa",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb03b1a-66d4-48e1-bc9b-b13479ca7485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782af9a8-ae76-4a42-a135-909619010a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1636885d-f1ab-4dd3-9825-e49dec383d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41d2f87f-772f-4c43-9fb5-d0861115e554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f971e01-5573-42b0-b16a-03c2a9f1c85a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0986822-542a-4755-a229-306d8f513708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c441b2-e3de-4367-bb61-84854a6ee5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca88cd5-a7da-40aa-ae32-00a8010abcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "340ec90e-77fe-4df5-b041-00b5b511acd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f0d36b-43d2-4ed8-b0ee-18857cd859c7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01875593-992b-4250-948e-5ba6f372aba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6263bd1a-e4d4-456f-a619-1f12f3d7bcdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ef2c65-ae24-4742-b317-044aec1ddb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1be285c-202a-4569-953d-799ef5f1b46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387f172b-439a-4c76-ac0e-10843769e66e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ded8ce-82a1-4b83-9cfa-f1671f8f5a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b850dc5e-ea11-4c64-8fbb-0eb8c6429289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962ddaf6-296d-44b2-bf0f-a619a8fa4014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "486368a8-6ebb-4b55-99e7-f6a68b1a005b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967188c6-ce89-4606-ad5b-37f08c96fcef",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec49eb2e-2304-4974-b3a5-d23dd048c21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f1e803-c2ba-4b17-9eb6-552361f399db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685227f9-4f0c-428e-abed-15e665a2c023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "865f81ed-4f62-44e4-8692-f8d8ae468b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb9b638-1c66-4b82-af25-4aeb2e7edfd7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bffd05-db67-4dec-9a8a-a6c97ef290a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490a3932-7104-4b53-a0ee-91e5efb42770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7b5eca-de19-4f51-9b7f-4dcb6a1360a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82dfd845-4d70-4d63-91b7-fda8ee1ac18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ba6991-921f-4ec7-918d-31c238a0da4f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981b57f8-98cd-44ec-b80d-0c73545d74a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7032f2-9c8c-4c86-8e28-36cd6d2a176e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8df4e5-22e1-4f50-8962-79268d7c56b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d214aa-6b5b-44ca-a225-3736c63e6c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78892a3-63c1-4ba2-9b6e-77c1f281ab63",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004435e6-1b9f-487b-8e30-fd20c071c89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72edcbb4-20a4-44de-b3aa-154e3273bbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403ae838-2846-41c6-bfd2-ade8a2a76eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2be79de6-709d-47bc-b212-908bb309983d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5ebdcf-e09e-4b66-9f0f-7e2beec5d28e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367579c0-1b20-49cf-906f-1a86f66d9aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a880eb01-faa0-4dfc-a7ce-0b81e866f6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ebda36-4788-4de0-a03b-4166b49ad6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18a670d5-d769-4a3c-9928-6ed1096f04b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767c9d46-9f36-4d52-a34a-a34ec4673479",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c5681d-9460-4544-ae07-88a5948dccd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8f9e27-fbfc-475e-a025-e32494c9d3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48b5cfe-7b5d-470b-b0b6-4e3704f3f253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3067f344-0909-4ae7-8598-7d091c8145b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ca21e8-0be2-421f-8dfa-97b139ac6223",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d108f5-710f-4fa3-bf8f-48af97031da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1183045d-d9e2-45a7-85c8-2b4f6c73a3d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41388d59-32a9-4a5a-a79b-411d77876cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f11b93-c060-4a19-929d-52de98282ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fce497-207c-4775-b475-88ab11cabcb3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b827c1c-1f72-4981-8f4f-83be2f19033a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26c7425-7761-448e-bb9d-bc1afbfcac53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab70074-ec1b-45b2-8f3f-bb534170f3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4318ece-fc9d-4ac1-9ef7-9111ee5dddc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2aa6dc-1805-4a07-bb22-e73e407daada",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a3ddb2-c043-4423-84af-39522500e8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499b593c-8d8e-4c24-ab36-2327842dabcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c158e4-0226-4f82-8b53-7c5a73e379f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3795f67a-0e75-456e-a162-f4b94d1cab3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31bd007-edb1-4f18-97e5-ef563a4c6e27",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32cea15-37e3-43c4-a415-cf7cd114b972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8419332-ea5b-4770-a1b3-adaf8e43bafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec7faf8-cc41-4cb3-81f3-56043cf3179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12ecb022-93b4-4c71-a319-39e8d858b7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ed77f3-6834-4515-aca7-76385330f423",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1780e8-a0de-416a-b4a2-cac29c47f518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b080210e-658f-4794-874f-57742aa1cbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b012f4e6-7b03-415e-974f-ab760c53e864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "384e6f44-3d13-4adc-97f2-e95b472e2107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54093c7a-0ed6-4792-8b87-d81196a26ade",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef218eb-c985-4229-aa94-a8b561025c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a160c1c3-f7a0-4435-8b8a-c0cf8c4814ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ce227e-762b-4ded-8a01-ca8745f324a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "537b4315-e9bb-4178-91cf-cf85fe307b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796b77e6-f130-4ae9-8877-28ecdf552274",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9638b2ba-f355-4c47-bf58-89be45c8838e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b350ae8-dd71-435a-b0d6-1a112f068f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c768a984-7bda-464c-b0e5-cb723f498044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8f5081-d2be-4f2a-a989-3527e0fcace4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4a93f7-b874-4807-9091-3b5547281bb0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd89a81-6c42-40e0-b976-9d86070547e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562872b9-11df-499a-a252-a1a43ee3385b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e04bc3d-0c8c-499d-badc-a417f1e87bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be774ac5-5794-40b3-aa7c-15a79035b20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1f39b1-c416-489f-b7c3-c740b72fa56b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d86cb70-2024-4cb4-b31c-c363b8c8657a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea29d571-25fc-49a1-9089-950b91dba5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befe9617-1d7e-4a9d-a855-b33f35998e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e79ba91d-c696-427c-9740-285bf3c2f421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5bcc43-a218-4e39-85b6-0ecd2f2a85ad",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4a33ce-5001-4fb1-bd4a-7d5810de9589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d63cbef-eb33-4908-9f69-7c33503c8e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcc9c49-43e1-4b78-b3b1-5084ced977ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9af65e-d66a-4edc-99bb-b38bb482af0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63305c0c-50dd-4278-a061-07e44d6f5518",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe62ccca-c339-4f4c-bb93-73dbc26e0758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3bbd2d-dced-4b9d-965c-05478b1af30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73be149f-471b-4ce2-b2c2-12208770b180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0e603435-ef8f-4322-8899-c24e5b4ced07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492df0b9-5ee8-4759-97ed-17f6213c223d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06808e5c-b06f-43b7-9d78-49924ec77366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80fc556c-a24f-46e6-8ac6-378bcf5fc182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f395de75-fc52-4b95-8ff0-09d62d972f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43be8f2f-ab30-4510-be82-6daadbc45ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63691c98-cab9-468e-9c86-66857671dc9a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa73b0d4-82eb-4dd7-9b57-54d1ae1dfcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4bf8e5-f2cf-4437-9880-d7716c266b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31488f4d-5e82-4530-b30d-5c37333ae0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2124acc-edb3-4c70-b5e9-883f3d4c24f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16ce874-9239-450a-bbd6-6018ccafdcb1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec46e0f-18f9-41ff-842f-00f5bb76ebda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13671e2e-358d-45aa-b7db-ec622755e1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf3d509-f5fc-4a66-8f8f-09aa4e7125ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6125615-d08d-4942-9235-0593e145e631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ebfc88-e19a-4367-8a2b-b891ba020b0d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8bc9cb-5000-4e33-b93d-c4f1c3d9022b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706d2881-6a03-4df8-a77d-e14bd9a2adbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c60125-0ffe-4714-b888-5c1b44836637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c48c5075-2057-4b39-be79-58d0e98e59dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d96f2b-73fe-4fb7-8f7f-571273ec6652",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee45ec7-88ee-4a11-870b-eaae4c0ed868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f45343-9664-4209-b34b-dd890d915622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5299ccc3-2768-48a9-86f9-498aaf1fb2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eff43e59-c97d-468e-9d1f-1ef304fffef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dab58f-eb8b-464f-97fc-fd75295bc827",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7a2960-4e9d-417c-b524-21d407dfde34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0ebb54-149a-456e-8e1c-9c3420fc6430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd608a33-4ce8-4792-a677-a1be75236bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "541057cb-54b4-41ac-99b8-16dc7f6601b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ee02f9-fc8e-4a41-a812-ba131dd05038",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1071c441-33b8-4865-84cf-600a722cc36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6228ab3-2429-42da-8706-f6107b7dfbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ee2907-62af-4058-bc94-2f09f22ca51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "41da3431-4bfd-4039-bba1-5452454c660a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bf3f0a-0337-4cae-b232-d51d64de599d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2837ddd-3a0b-4a8d-a0c3-f0843f73321a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96d557a-f1f2-43ea-94bc-5f996fe50f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231495bd-9a02-49c5-982e-25ee58a3b2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ba1b40-d83b-4341-82de-913c8b1cd86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef70e82f-22b1-4e53-a1dc-36f8dd9c02d4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e816efa1-8336-4068-913b-7415a7930985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bdec11-ecbc-4282-91b5-034652422178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244beaa7-6a2f-4ca0-8753-a625683939e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0f691d-d01b-415a-b9c7-4f304a618533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004ff41e-e1a1-4484-aefc-00e11b9e4b87",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98087a4-056b-4a8d-8786-1ae24e398638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde0b751-457b-42a1-a064-c158b00b0487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b0cb9b-a91d-4660-940a-7993aec9a5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8adf1d7-bbea-4f23-a452-bb61e7d729e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a5ad1e-afb1-4166-b9dc-8c90279c2ecd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef37ccfa-5c5b-4bc3-851c-d767baf89b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c016bbbf-57a8-4f4b-9b11-f2ce7ddd84fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4bae85-5a6f-4485-84af-f83589a0880e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8003bcac-4aef-46b7-9106-5ea648a97881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66215f09-46a4-457e-9128-89bad9d996b3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a7df9e-581e-4ee9-90fb-a6809ea2b304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1526a5a6-bdf0-4542-ba50-64415e6f0b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088c09f3-45da-4580-9360-f677a4faca82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aabc23b1-a67b-4728-a762-59d5fec83dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459d767d-7eff-4d18-8ddb-f966236cdde2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1036b02f-6642-45e1-9133-4c101e81bc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a711676a-3723-4144-a25a-5b022a70cae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ae3f51-8f1e-43cf-b694-29b86b5ecad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3b66ea-9604-49c5-b74b-4dae47528d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c8fb0d-3422-4f92-9571-310bf4579b23",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c6b20a-03bb-45ad-a385-4861647a6cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c60d3ec-a513-4f95-80de-7158b3888456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c730468b-a760-4d0f-b92a-7b669f7c1f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6701dc3-25a9-471f-9a64-48e8da8666cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55c38e1-4d98-4f9d-b286-e3bba2aaf581",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb76d59-2efc-4a93-bedc-e785fc8e037e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04d07d6-4ee9-4d5f-8b13-362b63425ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f420c27b-b44e-4010-b82f-999561085832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0630059-cca0-4e71-94ee-13a19ecbad8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c483fc4-66e4-488b-b75e-49f41d4206f6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6b3eb5-489b-465b-bbb7-ad0e70f1f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6e211a-ab89-420b-9ff6-896ddf2a3fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd40e8ee-4f8c-4a1b-b949-6900b17252a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e57a728-ecfc-4624-bf64-60bdc1e4b371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926a4379-abc1-4e45-9bc0-02a32651d267",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825950bf-b56c-4a3b-b3d5-ed651f33dc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e5de87-54e7-41c1-942e-707f5383257b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05670ce-adce-41d4-b2cd-8d3c34787230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9412bf62-6ac0-4c98-982e-ab183fbf2c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f10b435-7f5a-4fba-b784-21d7da66c0bb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f38044-7698-4ab7-8a4d-118b4bb40b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbdc8fe-d912-4a6b-8a92-08a0a50b6ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4efa555-9d39-4625-8610-70ba01362e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d29432-f487-45c5-8d90-da65a5bfc362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735c97f0-e52b-4fc2-9aff-fb422c73e4d9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa3df02-7ba8-4cfc-9939-1087f72c412b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fcb32d-4372-481c-aa2a-89f7d33db107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fef481b-bcbb-4537-85f8-eef9d09c701b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b49348d-a4a6-4f49-a5e4-345a9a45a93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316cf45d-2584-44f5-bea9-0886d188ebd2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84ea6d8-1a89-457d-b628-5f6e7556a53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059c69a9-711d-47f6-86b1-e005fcf9ad70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42be852-947c-46ac-8cbe-9e6ed2798443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e497b3b3-ca69-4247-9a4a-dc1dd1f6dc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077c7d63-4860-4d9c-aa32-07df922b5026",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03293b5c-673e-492f-95b8-26ab9e60c862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb626ca-39ea-4ed7-b269-7e24954e86c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdce9d2-3ff7-43cf-b5d7-5c7d89c1a99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "28a338a8-0451-46e8-a75c-670a7a3d25a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1f6b72-f40f-4408-a448-c0e53f01bbb3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4d6224-be47-4adf-aa9b-2a2995453fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182dc212-2de9-4f66-b6b0-b6727b78b29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4568d909-d659-4f59-9e78-f411bcdcf6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "29062ab1-aa45-4e26-a975-183e39ba0680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8288aa-641c-4589-872e-5fbed9517ec1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c130e0-97d8-4a33-ba7b-590d0b2a74da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c600973a-ed0a-4c04-89b4-f3ad69515f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b9feeb-f841-4626-b288-ed47a92db4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d027c51b-9659-433d-8cfa-3bb98595f33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26176f3a-dbad-49b0-bda2-bd8de94097d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936eb195-0518-463c-946e-01148fdcc02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fa2620-50d6-499a-b531-635ced3cd404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d44895-efc4-43b5-9fb3-a4a1319b74e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "04bc7833-849c-497f-b754-f0dcdd0bd885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad48e1dc-3142-418b-897c-5112e9b00ec9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5254bbdb-e2b6-41a6-b082-cb1c8d8853b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b557b3d8-dd1f-48b8-9a5e-866bd7760b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437b8d7f-5cfe-44be-807b-f44775a187db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f966d1a8-1ce9-48ba-9081-bc71420edde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a3105a-3856-448c-9d30-13b0aaa2d0ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87741fc-c70e-4b79-b011-55712a9572d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abc6819-cc3b-4c8d-b82f-01fcbaa5cc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8552d225-2f27-47fe-94a5-654e07a3e2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb599e73-2659-4239-a026-fc2ba695bb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8054daf7-36cc-4598-a7ed-6ec226f840b0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6080dc-59ee-472f-840e-5136f589da79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efd4fd5-c61c-49a0-937f-7fa2db3709da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfd47c1-0c98-4b79-838c-4da0c984aff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8f3432-64df-4273-b799-494dca0389a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0df513-e44c-4c13-82f8-961d996bd8ce",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6948d8a-924b-456f-9b49-f5f849825068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3023de-33f3-4118-85fb-4f619468673d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62232311-cfb1-4844-a2e0-217257a50f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b85992-4b51-473e-b7be-e0012848014e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caedcb75-612a-4ea3-8031-2a6c6065c57a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc5bf62-ee6b-4b93-b53c-b72ae232541f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f9b4d5-6c33-4e72-a621-55cda258f85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59cf09e-df7e-443e-8228-4f7ee6770fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4e9610-d5f7-48b7-b2a0-8a8d569c57c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e27a914-cf29-45ec-81d0-0f1dae92cfe0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca44a4bc-8177-40af-a071-292245ea6885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479220b5-2cd9-4e19-a6fd-e91b3fbc6549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dad154-aed6-4085-b3d3-f020966a85b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dfaeae1-3129-42a2-8a91-c2e57250f96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1b51a4-21fe-43e6-a170-aa4e7f78de6e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3a3d95-d980-4c44-b2ea-d6ecb2fcc5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31159537-7626-4d22-8635-2b60076d5bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3005b38d-f47f-4789-a664-6983d9a6faae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b54ddf-d31a-4a4d-906f-1387277ab5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302b12fd-62d3-4a0b-9838-c5c45cf84ade",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95773cd-dc00-4014-b8be-696a1a4f8750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4b439f-e123-4183-adec-83bf763fd3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209c4b4b-0ab1-4f23-abcc-dfad372fdc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01b42c5b-5ceb-47a0-afa6-092873f0f8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de08338a-d7e0-46a3-a5cd-0835db99edea",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15478c6a-2587-460e-96cd-e81474a91476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341bfe4c-0754-42e5-b0fa-0d7bd0aba59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e4a0ae-e6d7-462a-8d5f-f0b2ddbcdef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "769dd1a4-6730-4b89-a582-da2447b5fc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865c95fd-297c-44b8-9897-10b638a7e1a2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1de5c8f-0229-4249-882d-2c5cfd3c31a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a59559-4d5a-407d-9023-0e5f2c61a8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ba5d22-ccee-4fd0-8abe-fba1a13b4e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f31433-b516-422f-81e8-2aec0ff19506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e4fb49-3786-469a-97e0-8813c81caed1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed5b865-61f4-4e90-8361-b90d95f15b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e3e943-f01a-4bf5-89eb-f83c28b8c5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72a6218-cda8-4e88-8e1f-aa0b4ea88fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e4cb30-b734-4b4b-bbf8-92f956f4b76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b487c2-ca6d-4cf1-b63a-2ff47b485994",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706e53ad-d816-4873-a165-abedc73c20b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06caa738-63ca-40af-b9c0-be7a192b26fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5134b347-d3f7-4c9c-9339-8510dbed3063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "497deec2-f5d7-43d6-9c50-47903306f57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94817eda-9c59-432b-9a5c-102821c7d662",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332ccadb-489c-4a83-aeb6-d087641f8bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a023c3e4-2b80-419d-ae2e-ca99bf9699b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b90733c-90b4-47c2-a169-a44920f01cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "260a3b6a-fa47-4c4d-9fac-12fc60aeb2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0166a937-c55f-41be-a2ee-50ebd79ff887",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c865a2a8-4474-46ab-820a-b0e09fc75b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1772da12-5bb6-489c-b907-fdb98a9eaba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d11c2ae-ec95-482c-a2c6-a0a98e0f619a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc340b0a-a1f0-4533-b702-fb47adf39a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ce528d-b882-4e7c-93d0-786f0f8f51f2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e379135-65f3-4079-8112-0e02f5974b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa559e36-909e-41f3-9c16-22d97b26b615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eba8bd7-39ca-43d6-8ccf-4300beff72e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55c9ddc0-ddda-4067-9686-164ae2966f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385349da-742a-4c0f-a064-bd249a333423",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9a535d-d936-47f3-9ecb-c8dcc469c0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9b9c63-a42d-48e8-a1e6-4cd9fd50079f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b10f6e-3d7d-4fd8-adda-de1d6b2c25d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "489c5727-ba92-41e1-8e49-ff89e9a2f0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620c6cbd-875f-481a-adbe-fee64747e05b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd047697-c887-4731-9b3c-508707e8bb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cebdb02-1f33-4c5a-9925-03e908c31bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94509ef6-8de4-424a-93df-cedf177f22cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "217234c3-5e4b-4c2a-af54-6f2c2eb8b1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8959e73b-eeeb-478e-9848-9d13331e67e3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8378de-7981-47a7-9475-196ec6f6bb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54d1837-1284-40c8-b5c1-39d689202fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056e6e17-07d0-43c2-a48c-9ea2189ac1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41ec2b5f-e96d-4711-b64c-d55036f064d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb42f362-9ca0-4935-a139-a43a224a6498",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f06b93f-4864-4a79-a6f0-72c67338569c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d093f5fb-06e8-42d4-af7e-604b47d617f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc88c28a-3f10-4fbb-9a6a-bc02108478c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ffda3a-be21-4f28-9ef9-ac68165a2acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25daf8e0-8403-4826-b198-30652d5bdfd4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b47e971-c61e-409d-be38-cf190ab1ffb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf8978b-cbb8-4e24-91c1-31ccf6f5c779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dbaedc-4cfd-43ad-8c14-c4ac5226d7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23b6e55c-37f5-4ef9-b7d1-471dfbdce116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3395266f-ef36-4c46-9681-deaf26e3c839",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08192c4-0a33-4f28-bcdd-a593061d9c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7278fbe-9171-4c04-b4bc-b84ce9d0fca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248b9eed-3f0d-462d-999f-1e5ffae4f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7366ef4b-6855-4ee1-bd84-20c79d4953ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b06fe8-3e3b-430d-84b4-fbf7e472b1b3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a29de42-b14e-4ee7-bbde-bdadf8938d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6889499-48e1-4a07-a18c-ab82e52a690a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c48f1bd-b710-40cd-a749-199aa2755c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd80ba1b-398e-4f70-af07-73deeaf1f08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1029c972-84f5-4159-a832-69f44979a816",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7f7422-f927-4f0c-8304-f9383c12a1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed1e3d0-4918-4b3c-94f8-1cc3e65c0cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498dd099-4a0e-4112-9ff7-913312f8eea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e989d352-7681-49b2-8870-72057fbe387f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea2268e-1214-4dfc-b503-b065250f7921",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf416e3d-bb95-403e-9dfb-e51b34d54a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c99f05c-55b4-4e17-ab12-95a9f64b7a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d20909-8ff8-4063-adb5-774c031dc247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5b9547-d6b9-46e6-865a-684ebf5cce75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cffbca-5162-441d-bf35-9b6958b5a3f9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f1a129-81ed-45cd-a566-3fcb584fc7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be107a5c-7e7f-4ddc-b299-8dfad17b5a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f55f5c9-40c6-4c34-899e-d092d224cdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8917033-eb43-48ef-a307-afbebb86c1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d6f505-521d-4e8c-bc73-982dd442d22b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d9df72-e2eb-420d-b2d8-85b1c528467a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0517c450-9fb0-48d4-9634-aee4b2ea6cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff87f71c-f9dc-4686-92c8-21a7d318cb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cb4841-66d5-49e0-93cc-ae9654c2734a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24255e41-8a06-48cb-b705-079210cc793f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7dd16c-afac-4e90-9552-ccf57f299208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092f415c-fb49-4939-bd08-a0666a1369a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3068f32d-0034-4bca-bd59-28572f10bc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c64b4307-f1f8-461f-9a8e-3cfb58e56154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eabbb38-3a89-41e3-8866-a7b0d6f753b0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa1d282-c236-488d-8a9a-0e2504f7c692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54628604-4b8f-4757-b881-aac99ddd00b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2547ca0b-6519-4eb9-843c-9f7aec518503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef233e6d-68a7-418f-bd55-45a2b4df11b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ced1430-dca7-4e56-afb5-f228e124239b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d63866-1ad8-4b71-b85d-665d093a8c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c78c02b-8777-4a41-8296-c3c462ac5006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57da4d6-819a-4d7b-83a9-d5fbc3264432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "963856fa-daaa-40dd-8583-3a076997a846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f37727-44f5-4cee-97be-2065245f72ed",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e0ba1e-6d1f-4745-a26e-b4280dd6f513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f62afc-6892-44ce-a8ea-ff4010fb2990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242a2705-5b3a-4a30-aab4-c5e55c1a8347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed88908-2200-45bb-97fa-c74a612fdcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67869be5-b309-4802-b3ad-22b0c4593ea8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b88542e-9c26-485a-925f-7a3c11bb0c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7aaa0c-cd1e-4e9c-95a4-d9698eb4a91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ffdac8-ab35-4424-9d3e-2bc2043fcd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1969ac81-862f-4bc5-8635-1cc480243568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15fa25e-df60-4aab-8585-bf5aad56d86e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4df031-fa8a-43bc-b875-5024d770194e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf1753c-8c66-4185-9a50-73034a847604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b17ae2-3186-44ab-b62b-8e2f94663910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a33064e0-e06b-463b-85ec-7d6a727729af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0dd581-0378-4c7b-a7fe-45406b0797fd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c64571-af60-4ec3-b983-9c9e518fa124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "46c2483b-ac5e-46ec-af9f-e3c35fa34239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eb8232-9d4e-4447-894b-6f729b00dc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "48eb636a-4481-4812-854b-2be6095af4af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8e539e0-7c9a-4f3b-84a6-c591a6c7db09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4638b5bb-a280-4fc2-9bb3-31e7a9d0a23d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cffee4-5370-433b-b11c-ade88e6eddcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da43afc9-82b4-4960-a28d-99cbce2ec6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7859e7-3734-4d3e-b3ca-ed547d653ea9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfac6958-9b4d-484f-9a61-f8ee59c36bfe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "207574c2-1d97-439f-88a1-1721e5ed89a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "241fd9d8-f9a8-4daa-be4c-2f9d97300b40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcd0dd0e-4fb2-4a2d-aa6e-2eda7808c9f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba386e51-b58c-4aa1-85d5-40a16afc1307"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2670d58-1c04-4805-a036-7b449ae1d11e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba5cb358-971e-4b74-a6e7-8c46493f4eae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81ec3573-9d0b-45c4-b5de-055ad0cfd7fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4dbb74a5-23f5-4c2c-9474-ad9c5ae655f7"
                }
              }
            ]
          },
          {
            "id": "a982626e-cff3-4fc9-9867-1a749c5007d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e5dea58d-8e55-4421-8a86-e6bdd1ccab0a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "eee08070-2268-47fd-99b2-feec9ae0a350",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b568f3-5856-4735-b254-7af0a611eaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ccf3bebc-dffb-4cfd-85c4-5e8c79fa7969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48800bfc-1c32-4c00-95ee-bc88e6eb9c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e723471-6cfb-49ac-afc8-da9d082c89eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f05b5bf-1062-43ca-89eb-64e5eff666bb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43141e96-1b19-477c-aaee-cc8d0335f1df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0b5068c-ea95-4005-a29f-b6fe90b3f737"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75fe8e4b-7d25-4194-8cc0-c9b3e26221a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2dbcecf-1fca-4fda-832b-0a0196b83e82"
                    }
                  }
                ]
              },
              {
                "id": "af045f16-565e-445d-8d44-898d2e81990c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a081077-d3af-4589-ad2d-fb04abdd3752",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cac20f3a-bf8e-46c3-810e-bf2afcb1274f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d31050e-497c-4b15-8f50-7a2daba256ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5efb3dc7-0972-43e4-a133-8bcac25a1182"
                    }
                  }
                ]
              },
              {
                "id": "d2b4d037-6a3a-448d-b328-f43d4868ea27",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06f85848-0f40-415e-91f3-cb5e580c1159",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a357e535-3637-4247-b121-d3ee1fd2fcf8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38574605-9bb8-4fa0-be80-bd01681cd9c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ccf5221-7453-4745-ac58-edb85f33686a"
                    }
                  }
                ]
              },
              {
                "id": "46bc92f4-f231-4c25-8149-ee18a26760f6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dbf9aa9-29a9-43ad-a8de-0ec4da7330a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9871099c-4c81-41ab-aaa3-41571107bf38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7291021-4ed6-4c78-ae67-ccf5fb4153e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f66a2ffb-c113-4e88-972c-d2fb9ed9ce9a"
                    }
                  }
                ]
              },
              {
                "id": "30777da9-7ca6-472f-92d6-ac1b8e53167e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "338e3480-2cc6-4566-b733-ee9d39aa692d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0cd3065-b277-453b-b0a3-985f878299bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30758c65-26c4-407d-ac10-baa3920bf49d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7e7c2f3e-ec9d-4bd1-a1c5-6ce598a4294a"
                    }
                  }
                ]
              },
              {
                "id": "06d2fc08-c01a-4ae4-8ee7-46598596e15e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8846bdf-85a7-4a08-85b1-c2aba242c94a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea030943-325b-4391-ba95-daa9d1b1a842"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8167f375-6a38-466d-9aab-525a1087323b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61527409-4d4b-4742-b314-0199e2930dff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b37d147-37bb-47f8-ac60-3590925da13f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06154dcb-ff0e-4954-98aa-21db76fbac3e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54f1c5d1-1ddd-418e-8ec5-d394456c6a6f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e8d083f-308d-4e6e-b061-b21d6a436d67"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c3c095b-695f-4a05-89c9-2808a77727ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0fd8cd9a-5ab0-4103-904c-abeb84e084c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de944b89-9c1a-403d-a571-239549c8fefe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ee031a6-3cdc-404a-8d76-5174c8b8166f"
            }
          }
        ]
      },
      {
        "id": "7452ee96-2052-43eb-9b20-874a321897af",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f62fd6da-b5c1-4e57-b118-11239185c235",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62572364-1b88-443c-aba1-dccc87498d4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3cae74c8-d04c-4805-86f0-edc0381c7d98",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61221fd1-ee5f-4cd8-ad14-d2e988e7dfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e29d21-b9bf-4d60-9865-876c8c164ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdc2ca7-7ddb-4c0d-808f-158b2e97a53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d247f1b8-a18c-4b82-b4bb-e050f83c8e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43afa2b-5e23-4d1d-ac31-14593a431e35",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72facdc0-140c-458b-8434-0c8c1f0a1fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94578d9-d5e0-4641-867a-17091d5d6ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a458ed53-9ffb-47b0-b96a-38e67b423998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d87e691-c467-4eea-872f-4852e00ef73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993c5022-e558-4bde-a148-6917ba2b08ae",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e94238-1425-43f2-952d-db248f1f7555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc86434c-d35c-4382-a2bf-4431afcb6be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e858ed6-13ec-45de-aadd-c4a064be4519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38453304-2482-4d79-b2bc-5b336c3c6b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba53c75-27ee-46be-9d8f-53eca22b62f5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734c8ae2-1da2-46df-a148-e51cfe2cb809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc360e4f-bf46-4160-b7ce-e203bf871b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3e51f3-dea9-4f12-a210-330d2b027cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b698f3b6-71f2-409e-bbc5-e2c75f945c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e021a9c-e1f2-4620-9e00-f83aa19c44d4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c73db8-cfc8-4b80-afb5-a17605c90850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d0bd19-d236-4778-9f3c-9030bb5e90c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed87b5f-969e-4004-ad30-19c9990a313c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3296972-2a29-43cd-9a09-2f296686a3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2c7076-1c91-4231-9520-cc07637b89ef",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d20e004-4b50-4ff4-8bb4-13a9293fd4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfdf7ff-8e8a-4d92-93df-95a0dcb73b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9172153-0012-4b48-b90a-dd414fc19abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8192b27-9622-4aba-8cc1-d98727b0084f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190aeeec-f053-4232-a4ea-94c9f8bb2cbf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b49e80-2752-484c-a6bc-e42906f212c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd49565e-31d7-4da7-a5af-4b88c571104b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137f3c3e-71e1-4886-adc9-5f1bc98293af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2622a70-71bd-44bf-8435-1fe0f656625a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e46498-d4c6-453b-9619-8ca524c0cca3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3093aa88-0d4d-4ec7-aaa9-0c047ac6c562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5516afec-ab91-4518-a887-b3aeaf7d1e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c13525-3621-4843-8244-a367c182622e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b51a8f56-0425-44e1-817f-4e6a1e28180c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a6159d-0b5b-4245-a598-62a0c386f69a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168a1418-581d-4cfe-8e70-751605c9ef20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8810b46f-f752-486a-8208-2e0d263f6c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc5b209-fcc9-4064-a193-7e412ea096e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c91453d7-8d89-4629-8e88-9020ca81847d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41f3196-30d1-450f-9c3a-41f10244e381",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f1ff6f-8b61-476d-a327-37ba661e701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a454086-eb3c-48b4-ab9b-27ad9976cc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb75079-1a19-4f06-986e-4089df6c8afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c02cf759-7dd8-4781-8ad4-7a9321ad1938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ff5468-d123-48ae-9f0f-421e2c01f1ff",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c92e01-d003-4d60-8815-215ce99517ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6745e9d-674f-445c-9950-d5b83a6b5b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a4193d-0047-4d7c-ae93-7a739f02962e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4e1757-d918-4518-af27-8947eb6b21ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfb4324-75f3-4f19-8f06-ab3aaffc583d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29655b31-dc69-4e48-82bb-c27e210c2a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62ad47c-83d6-45be-935e-85c843ef6094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365a0a88-1b3b-495f-94fb-4cdc8cd502e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f22194-6d32-4569-96db-7cbf045bcb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72dc811-5f21-445d-bd35-0956e989e9f3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044cd9ab-568e-4307-8b7e-f0bb1895800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f770a18-9685-4089-bab5-65c2058dc473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432974d7-0526-443b-aae4-d5272c1f1cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19087c33-847a-4fa2-b43f-b9212d90899b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9838d337-dd04-4293-9e23-6a3707094267",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d960915-f9c1-4447-93b4-5101d4ced5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a23f18-7777-4d7f-9f8d-2a6694f8b622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b28e7f7-c639-4908-8109-5013aab4e846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d326e8-e20b-41e2-b7fd-1e129b92c6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ae1c2a-7831-4975-a457-a7cf034ba453",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df21745-12d3-4813-b378-4b9f9b306c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93faf8d2-9c93-4083-aa51-1870e1e982bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a43ec7-64ff-4cad-8c16-3f0cc9704d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "96dcab1c-6787-4fe0-881b-9d379bdb0ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb494fd-25c8-4b07-bc73-a20019e5ef96",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0518d63b-9ec7-4e0c-9960-31a53b89cc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674f4061-97a9-4924-b96e-09edc7826bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff905273-418c-43ca-bf1e-534bb2abafd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f6dbf6-cff3-443d-902e-992ad9ca1d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d63938-63e6-4d9b-95eb-f6583d3e9022",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e288cc-c077-47fc-a146-425083d137c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f823891a-8744-4452-ad2d-a002e8e5a7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9683ea-acb0-4a87-ac6f-ec4c9a69b7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f747ddd0-8031-4081-9991-4dc92f9d2f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200c58f6-34a9-4631-a4f0-3b063f35b0dc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00eda4df-97b5-44d5-a787-f8a976254af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1092619-864b-48e2-9eef-d1219c91ce81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16271817-1414-4cff-af61-6467aa87614d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "389b3706-02a3-45a3-ae75-a67634ce5af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f281c879-2d2e-434a-a856-6249a36df1cc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a44abd1-b36c-4435-b19c-1bfa4d5c0430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfe8774-3ad1-4f38-9efa-f5a9a1fa6a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ca9bc3-bf89-4e52-8ed5-d4e724ab5752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7a11fc-b304-43ee-b5e8-bfcc0de163e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6dd32f-84be-46b9-b9a0-1c5931e21c7b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b910c77-0aac-426d-bb7f-699b7d1ad7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8041be7e-294a-48b6-a84e-7df0bd419704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3790ef62-b2d1-40a6-a37f-57af2d9cfa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b29944ac-e04a-43c6-8ab3-8604d6d6b67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe99283-e118-4491-a2a2-369858142ce0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d0e76a-4166-47af-bf7f-53e8545f9046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645716f7-d69a-4bb6-94e2-d58ca910b90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba15a2fa-33ab-4c45-8d04-4fb82de8baed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7c06b0-a7fd-4e9c-bdfe-8c0106610ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4f0d5e-d5ee-4feb-ac73-918d4bab62d9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d67cc8-d264-49b2-a93c-7fd3710af496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8926179-e07c-4e94-8c8d-f7b4e659519c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a700d8f6-66f7-4b7f-9674-12022f29a6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43c7a90f-cb8f-4afa-a87e-042171a76d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52c1657-2cdc-4498-b0c8-36267bf6fe72",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380e59f8-0e34-48a4-8db3-2dbc47ecfa8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be68ea6-1269-4215-a715-16f65b4372d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edacf23e-6500-4455-9e4c-9b709bcfdc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "401bd494-7f51-4316-bdbd-8675162d96cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5104abc-43ea-43ce-9b19-493383d6c7f7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51424b06-adb0-49dd-8665-b42edc5b0ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbbd927-75d9-49c2-b57a-6a916df51791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de98b1a1-ea93-43a7-af3d-7f7add17e037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2914d94d-38f1-4dca-9807-e1533a2da33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c5fe7e-8cfb-4320-89cb-9f380940f7f6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c217d4-6921-47e9-8a84-f0bb6fe0a885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa450b6-0387-4464-bb6d-a726f9e8bbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c491b2a4-3f4b-4261-8775-f374f2a6aa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01412d7e-01e7-4258-a4b5-6a21b4351f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5459a49-77f2-42d1-9dea-99cc3270bd28",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96356792-555e-4fcc-b51e-0eb97dc6b029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a001729-8117-4de3-b61e-b8952d61c452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04f34f6-1364-4320-8926-89d56dc268d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ad8b8a-5a1b-4895-8d59-adcf008174ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a607e35f-bdbb-42c8-874c-5c97a2148d49",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746b4be4-0987-4701-ad15-f3a76dbef11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e1a15c-41b9-4dae-be22-a987ef4aa597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2820db88-b6be-4f9d-9d9a-265eb8d17b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f940a26f-89ea-4d5f-9df9-a0f1f969987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b087956-e547-4056-9631-9f5080e1bd54",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c11bb67-2467-4590-a9c8-ab9a80d34635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe690ce-64ac-41d5-bb2b-5a4e458b5368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532bb5d8-57ba-4dde-b6c2-0387d871e4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f10f2c-75d3-4817-8849-4d55e5d4cb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3f6f6e-6d7f-48c1-ac29-3b11fa689d64",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5665f9bb-1b6a-4e74-bba8-6571a3ac0cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53cfaa4-b949-4893-af65-329a567eaa59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df20d9fb-ad2d-4fb2-8627-97362d4fcb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6b2453-6b6e-40d2-b12a-351fa4aea0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db4f8b0-cad3-4824-ad9a-2b8c46a6c1c5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef9d5d5-5424-4654-9385-226c2e6c1897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98726c4-8b07-4d9a-9999-fc4f03a890a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4aafca5-802e-4d6a-ac43-4d1aca3114b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a942e9b-43a4-44e3-90c4-22854e1fffcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37fd077-bb74-4412-9338-2096531ccf70",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b95e413-7a05-47fc-9a2e-aef213bedd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea317031-9b31-4e9f-a2e3-97ad1c3ff0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91258c4-dd6d-4c33-9782-0fe9479e10d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb28755-ce46-4867-a786-9b66e2ef73d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b28b4c-4bf7-42d2-a9ed-47fdaa285eee",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29274b11-c1c3-4b94-945f-f321cc789781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde58fbd-a471-455b-b68d-661c47d9644f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be362d9-f50a-4e9c-9b8a-fc823311707d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a6a6ea-e861-4861-b1fe-f64609092859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6cfa55-2eec-4b92-939f-0db5446f10ec",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d3f9f4-2bcc-4b38-a771-44711dc8859b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8634e4f-a2bf-40d1-a3a1-c323d87763fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b24ead5-49e9-445b-9bdc-3b4d806cc538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e5c3c2-3216-46a9-b958-8eeb11293fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94607293-3c69-4869-a0a6-e96a913bc03c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616249d0-21e0-478a-99ad-b56d0e4be880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601830cf-562d-48ae-b660-5366c12067d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bb5ab8-0dbc-4ed1-9069-e0aa6055d576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d39ebaf7-fcd6-4629-84f5-354643607071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df382c5-ab93-486a-a512-c7e1de8f1d50",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09df31c7-69de-468b-bf96-19897536900f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86239552-f9cb-4714-8836-e9447bbb43d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe07530-27c8-4772-90b7-cfe2a557f2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f110b313-d963-4019-b4ad-3d6539c13145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74abdbf-b7d1-4ae2-8b14-2d74eac22c70",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e195d33-990e-430e-80be-a77ceb7a2152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c2d02c-261a-4cea-8ac7-1f52df731d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98202d2-73db-475e-8468-a3a050f448ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d414aa67-e675-41e2-a037-4de186b9748b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f932f19-2403-4bd1-944d-28c8ec05d830",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21a682e-2e9f-48dc-839a-987ad4341e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7441ebd3-e111-4851-ae91-76e6b120e474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbba459-f4e0-4198-864f-3451fb373242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be64712c-5674-44b0-829b-fbc7d7dccbf5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6fa9186-356b-454e-b8f3-90a7bc3b1d67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83150f28-8cf3-478b-a2be-dbf1befa3eec",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb571ebe-086b-4f38-bd5b-5285251e9ca9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8cdee2-8273-4ae0-b165-52eb88366d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67280e2-d5a7-45ff-ac6a-66e3f18ceba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b9ad771-5895-43f6-bc85-8b3cbef36a44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0aecdba5-fbe9-4c3f-baab-90679a0dc00a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf94565e-0472-4ea6-90eb-25788de73536"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7d31607-d96d-4d93-969c-1aed55cbd480",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8eedecd-28f9-4610-9562-715c4f4b5757"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d6faff1-4e79-4b7e-ab8b-02ef80bdbd8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9746739c-2e3a-4ac7-90f4-0cfea31938a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdf531d2-bc9f-42fb-9bfc-ba901be6101d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebd4a197-c2ae-4fad-a604-c27b90cedac1"
            }
          }
        ]
      },
      {
        "id": "8f5b81f4-6287-4b11-9013-63cd1d330e04",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "da5efd30-2730-43de-a012-c406d6e914d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffb87a97-2aaf-4336-9a4c-617f3392aebb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6bb04062-7884-4bde-81ff-cbf883e301db",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c800448d-3a34-4108-b777-f7319a661b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76eaf270-c700-4125-8019-6ff7d8fc5689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202c97a8-a481-4426-9514-3a00a6d90217",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3bcef0-2db3-4e26-ad38-033f4f4dc485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eefe843-6503-4432-a3b5-525989f88361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e80fc2a-66ba-489c-ad5b-91780237ef0a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd0926c-d750-493d-97f0-eeaeb21ecc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb241c4-3a79-4c57-bffa-f13d6c8a2ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330a95aa-c2be-4674-b28c-d43b193bc3cb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b784ee1-4865-46cc-99cb-9fe40dbe7a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae28deb1-50e2-41fd-9bbf-dc602eac7a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db50b14-5762-4e05-bcd8-f03ce80f7080",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591aa1fc-92f7-4872-82e9-9539911e4f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ac43ce-6bcc-44a6-8b31-7a91f5e9e2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1e2827-e891-4ce9-80bc-504b91ff6345",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04880df-0166-4073-ad5a-8f2b97788e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095c16b5-5bfa-4dca-826f-392bab878fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0b0b9b-9ab6-4a1d-b5dc-927c6a7ae626",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd49bb5c-0f92-4619-8377-1100d8e6c8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5fd9f5-f0e3-4206-bf2d-c1fcfd7aa08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ea68f2-06ae-40d3-8138-a3b2236cb9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b94ea3-2701-46a6-81c6-3c65a0db326a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50578de3-7d97-4681-946c-d5096e227e76",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025b8f7b-1367-450f-b798-0c2b1ebcd9ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f3d9ec-b6aa-46aa-8522-cf5622ddeef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbf456b-4d2d-4fde-a387-07cf99d44c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d71312-4455-45b0-8873-8dd0e469ec21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e075a9af-29e2-4611-8cb1-3e63641e812a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa108a60-9019-4a95-ab99-687d95dc38a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b14d5f8-6d8f-4463-b361-cf9817a454c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7159fb0d-bb80-44ba-917d-755a6f5f3093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ec1c83-2b73-4fd0-b5a6-1a27dc8d2010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11aa1db-1b64-4885-8cc7-545aae156c87",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67ad48f-02e7-405f-9929-8e8b40b2750c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ac5a3a-a98a-4c8f-8557-35a23f3dd782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b319bd15-c75a-468a-849c-7627b918c7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721e7a9d-43d4-4b62-ab48-976d8bcbbb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73120b37-1e38-4210-955b-c75ba8ba7a77",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ec83f8-a1a2-4356-9651-4d614245d4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039f6c2f-1b7f-4a87-8cfa-427d1fb11183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed40df2-9e87-47c6-b04b-421a1ba7427c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e90fc37-b58a-49e5-9d88-bd95c005cea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0908b23-3574-401d-91ba-65f7b935103e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea3f7d5-58d5-4cea-8195-c973d7d4fa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda0019c-437c-4a84-9343-9e92a5173ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d397b92b-f9eb-46e6-88cc-868f18a48657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915a64df-7a4c-4c19-add9-d504e275d616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9ef382-bebd-456e-9148-54f4c12d6dd8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481b9bc2-1ce1-4cf6-9353-9712bc02c4ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d10775-1505-4505-851a-a2169a3bb4c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31fd096-648a-49b0-868f-a1db59bf7a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5567645a-b557-4ac8-8a37-f3236f7bf9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32b56a4-dcc3-45e1-a672-e1a81aca6b84",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde4e3ab-0bc8-40c5-bf40-b66aa79b7854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c7da21-c75f-4603-aae3-721e18eb9e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faef5b92-fdf0-445a-801e-c2843b10bec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b484bd-61c3-45ce-bfe5-22c07efb2c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67c4315-05bf-4dc0-ad23-5fd9a66973c7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e48dbfc-1036-40c1-8a8b-0890bff002bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6740cfce-f232-4eaf-aa8b-3a33bb2a26f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a9ab5f-fca2-4661-88ca-8dfb299b3127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86513251-38ed-4f59-a70c-ff747e871961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fafc4ff-bfc2-48a7-b8f5-406b2de67aeb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c0e653-5a95-4d29-868d-a5fdc45c1cd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47431c69-0d68-450f-b1db-ac9784f31b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5c2101-dbe0-4000-92c0-f70cec2483f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1860a1-25af-4f96-8367-c42496c2fdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e823821e-bcee-4f18-ac42-065e31c21294",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fe33e9-979d-4d43-acfa-2b8c70e50312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4564351b-7d75-4338-a378-70e6ec31a0d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e71889-d2c5-4636-9af6-9e7127faca6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4168c78a-781f-4afc-93cb-0f8935defcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c8af75-d41c-40e4-ba64-af2f27152dee",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3fc605-2838-4fd4-952c-3156338bcda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e746846-0e31-4987-9cfc-c204ee9234d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87c66fe-9048-4cc8-8081-3ccd2fa15ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9057e0-5da7-417d-9b47-162354f5a842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2f0ec6-35e5-41b4-ae6c-e9ebecae6f29",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f4a2ad-b4c4-4d57-bcd9-e58773404df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9db4010-e228-4f60-ac07-655847c02f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e933d5-93be-4f6b-ae7a-5e79f1262eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d036c3-71cc-4a57-9434-dda50aa58101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fa9b0a-6563-454d-a66e-aaa5e2b12d2b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53194ae4-417a-4683-9922-ec55a9e31c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf430bb5-8596-44b4-b3a3-19a13a67dda9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802fc5e7-bf38-4ab5-bd43-354a49dec83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8858a91b-7fc4-4217-8140-716a5e2c95b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7996b93-fcbe-4a86-9e00-a1a5bad25da2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fa544b-deda-4160-a0c7-7736c326cbdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d457824-f97f-4ad3-b9de-e26ad4141c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "966f5976-487e-4dc3-b1e9-d3190ad9f23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dca792-6e3d-4e71-b0ed-f6eec3ac4d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb7269e-0034-4925-aa76-7b5434887399",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f84994-5d21-44ca-97fd-20f55c59d103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543e2b82-0fd0-4126-92db-9f27e6bb58ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b67d80e-9577-445f-a122-a830a69d8c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d05511-dbf8-49f8-9b71-c55b7c0e27b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00335d0b-a39c-48b7-9802-e224d2169d78",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2299df4-e532-4faa-ae65-8fdb38576a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7596a799-6e21-4baa-93e4-7bcdfd3196ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4483fe31-ff12-4d5b-b00f-02dba221b2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae1c1d9-d99b-4f47-a90b-d872b6cbabf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612b8631-6de0-4c9b-be9d-a33325bfc70d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd3c06e-ec20-4626-8d2d-0c12668f29f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4722c4d8-d6a6-4f79-b263-27ffa8cae761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add0eb84-a9af-45a3-ab4c-b0c1841a91a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdd4126-8263-4f14-9f53-881241c5a002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3550d30-9ce7-410a-b76b-f434d05f924b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2026d2cc-f5fc-4e0f-9fb2-c4cdadf6fdc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7921709-6ac5-4794-91da-757b8df6b64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10a47d5-284c-451b-a709-fab34c29eee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3992490e-e5df-4e67-9e15-ca003df65bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563d9730-9292-4a15-9167-ece07cdf8fdc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7727d66-9018-4cb6-9aaa-0412452ccd74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab9c9ff-c97a-4802-9e11-524cfca4c644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5e3ec7-2276-427d-947f-f02def242079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d8a120-9979-4248-aae9-bdccc3e31745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580804f4-7f0b-4c7a-909a-1d0e75fecdbf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b667f9-56fc-4f5a-b32d-54acb05d716e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf8ef2fc-6235-439a-a80b-469f41127c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e98aa3-aa78-4ffc-be63-0a445828a84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d03fc16-690f-4ae4-bd1b-23984c51672b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0138e9fe-b5b7-492e-9fd1-05b6bda704ec",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae77a8d-08fd-4077-9812-eb419a46cda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96bb5ac-ec4e-4a66-a615-f453fa35107c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eddf83-4efa-45db-a063-0e0134efe6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3eab6d-37ea-4e4e-88f8-96a3c9da8218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a235de-00b4-47cc-ae4c-1df75c0be64f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f9d000-7395-497e-8330-d351aa6a6e60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf2bede-e87f-4754-b0c9-f79f92ad1045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adeb7606-8668-4fa4-8e0f-0a1c88989022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c63b3b6-e4aa-4142-8e5c-9af89b302e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0e93b5-325d-437c-b374-4ec941305f27",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc27b0bd-7040-4964-b89e-53d746c14b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c131a1-ee46-4779-9f0c-c07d7931f17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59207e1-84e9-40de-870d-26d2414785f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4447e6b4-b1dd-491f-8766-3d47d0b877af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d65304-095a-43c5-a5da-972ba4559612",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b0196c-7dda-453f-8c40-65fde67a384e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed71dc88-af1f-46d9-9636-ae5b6bd27b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946b8c6f-6404-468f-9d34-b32b044705e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92294604-1cbd-4b4f-81f7-481c4021b949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263bfb1d-0f95-4faf-bb2b-869092cdfb94",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6c0c99-e805-4a26-96dd-1dd07c434b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d821944-59fd-4a1b-ba7f-4a5c5ed8b612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148f8160-e84a-4645-83ad-e3d9519b61c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322f885b-20ab-4bc6-8be5-68af4e4f1495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f13734c-71bd-483f-9ff3-eba7650807da",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37482935-fc0c-47fb-a38d-a541e5030702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f58166e-d59d-4999-a75b-e5a68afdcf69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61475a92-7af7-4d66-8171-93129ca8e121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23505d3-0028-4aeb-b064-f6566264b99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd82cdf7-16a9-46e2-8b65-a508ed13e042",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a83ecfc-4c28-4476-a473-70c6ff6d4a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6344d804-6708-4393-8aa4-8af470cbc274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94da64b9-b67a-48c8-beae-5d21263fee42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a351784-4c8a-490c-a020-c1d4d759892e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8455237-e2cc-41d0-9e5b-17ce35288f57",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdb8acb-012f-460f-8011-6b68946c6474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740e84fa-e9e1-44ee-9d7a-e52246cc43a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8069c6-43dc-4317-b010-41a747f97c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1ef937-e612-4141-a968-dfb3873dfd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cdd804-9ba4-4f72-9dfd-9df9c468e3b8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4087d78d-c2a5-47f9-b7eb-1bbf1e9fb8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0836f7-87b4-48e1-a2a5-07f4e1c9e0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da249b10-25e9-42c8-9a29-4ff9452cbb61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2e1d9e-caa1-4e1c-91f7-45a2147cf711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2e3450-3aeb-4f2a-b9cb-5e33ac84e87a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75dad36-d606-4f8a-8c6c-b3d232184458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b920d83-ac7e-4bfa-b351-13c727d1eb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c73de1-40fb-48d3-9e3a-8b062a0711be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd90ccb-cc19-4e29-8f97-50e286f0ebd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd0ea1f-e38d-485f-966c-23d639f3cb0e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61419ad8-e0c8-4607-a10e-f7d89f25ea77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff68813-3e74-40d3-b453-dcf53d30e6d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded81abb-8148-4a64-9f45-ca75a3e06a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8a4798-ea4b-4e6a-9dc5-d9f559fbea31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8453c188-280b-48b3-ac28-95ad6d44b8e6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59596c34-289e-43e6-820c-0a1945aacb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aabb669-f9b4-4a86-be0a-6c10d095db78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d0b986-af81-482c-85d4-3c0a750e3bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e89b9e-d6a5-4a59-9d1e-7e67aaaa44f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73920ac5-521a-4d14-aca0-9c5471a28868",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efdc0b2-a6cb-448f-b791-d65bec90b22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d27e0f-bddb-44e7-9943-cae303bd5b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617b8045-caa9-4d31-a57e-78d2ba6d8b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c21f84-72bd-475e-8e51-6d3822e69dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7216b60-fde2-4421-be08-d4a490c78ae1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65698ce4-3de7-4645-8087-d32a1bfcd9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07868af1-746e-47a8-a1ee-490dedf398d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336f3a93-c4af-480a-90d0-25f77f33370f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4faee641-45d7-4e2f-8ae6-c7af47db6687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2ba8b3-3d51-45c9-b27d-d331f2f8cdda",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a9c2d5-056a-4cec-a7cf-08e1277f0975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8604d4f5-3275-4757-b7f8-5b91e19a9357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cd15a9-1171-444a-b2a3-4ad802664f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f2313f-653d-4fa9-a3fb-530530c36ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7da7ab-b66e-466c-8b05-c0666b6d045f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0705a4-4fb7-47a1-af52-de9633dbf82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e186bf2-e429-475f-bfb8-0615e0be220c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ca7618-f90e-4ba2-8f0d-093e162e0da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4065915f-643f-4b67-8ec5-1c931dfc6283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcf1025-2859-45a9-9d77-4275ed08a5dd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b6c20e-8c25-4b10-82ea-64c975f99663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae059396-3b9b-4f7d-b161-89e7894c11af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d2baf1-e25f-44e7-8a74-54da73873eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661920ee-057e-4ddc-8d8c-7122695c8050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee25b69-7349-403a-9562-bac516e97e63",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1e25b7-c4e0-4449-aafa-b267eeb05fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e198a2-5bac-4bec-ac1f-57c373e2a205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a1afb1-3820-4f1d-8128-481eda8a56b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a869b0-4da8-4d78-a9e9-bc094e2279ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574b4267-6a89-4cb9-a485-b3705a9dcc5a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e51e008-a85a-4cf0-ae58-65153b78d36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e4d137-e621-45b0-8569-6dc4a48b7fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f59206-c963-4289-b682-d28eccdd1c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c425012-01df-4af0-8f90-1d543e167737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f48b72-6b9e-4486-85fa-f0533ed94dc5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23367cff-cd92-4b8a-abc4-599c3c980730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c33e4ec-b1a9-4f7c-a99d-73b4501042f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95db1d8b-809a-42f5-9f69-7c1ad41b0fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7669be-1a4f-45a0-8773-4374ad00e289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b296a0f-9bf7-4d49-8da1-d4df870ad641",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a3da84-c75e-4d34-91e7-e5b3c7f8c37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d61a1a7-3a34-4d50-8820-7fa3c143a50a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e087fc7d-8b01-43fe-878a-911cacd085de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d483b5-3ab7-4a04-84d3-d05f01d9da48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5de2b6-c665-4162-aa95-b7906ff15f04",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449ce485-411c-46b5-b4ad-78a4f3184200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8503b5a3-d4d1-4373-9643-bc584f8fce00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb6c489-9c46-4b79-8d28-7f84fc7328e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eac8daa-59d8-4f14-9a08-c398545fe247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16f7905-972c-461c-9f66-c4179d7b2c1c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e126a86-fd2b-4d44-90d2-7e1fd1aacf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64964ae5-f4a3-487c-a5a7-7b0fcf2df733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c3c7cf-9489-4ccd-861b-c8c6df463de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b266ddea-1af7-471e-97fe-c8f890debab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563bf620-e28f-44ea-b3c8-c0378ecc50ad",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8969fd-bda6-4c25-9f2f-03a72c6a080c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a6107c-fa57-4bc1-a15f-cfc3e766777e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449e5523-5657-4edd-8daf-afd3a2b21246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8876d8d-d002-4bf5-a61a-fcd14301ec3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57578064-5c2e-4135-9b2b-2eb1f66b3068",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ef927c-a88a-4a3b-84f1-cdec74095e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4feaf9-cb7b-4048-a1e0-fe1429dad120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558609f3-4ba2-427a-b3f1-bd79005c0258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e889c448-006c-418c-9ed8-a8050989a424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002cd4c0-1599-4dc9-b36d-20d138267081",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793dc16f-4ea2-4cdd-be93-fa346dd8e4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1daa8510-8b03-4334-ac55-579fdeaa0bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d807222c-9006-40f6-9ceb-1ab9f1233ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c15869-223d-413b-9bb5-d3de0810ff36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1155615-023b-4cb7-8e54-7b7b3ae01f96",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ab2a80-1ff3-4293-b5fe-867a18f403cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b8820c-0c16-46aa-8b51-327a32654c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1c76f3-54ec-45e5-85e9-9b94a62c0fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c72d57f-25e8-4f4d-b17f-aac398564c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f554d0c-e97b-46be-95cc-34e16e4e589a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc68e4ba-6882-45cf-9fe3-1a2081fdfc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17191ee6-1492-4660-ab22-f3796ace2a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d5b143-c45c-4f79-b0a5-95a96a36b1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccef6d11-9c33-4136-b0b5-28368727bb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4d8269-80df-40d2-b18d-91fa77764b6f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b75ea95-cee7-4110-8063-e6370063e9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2987aa2d-0d0a-4f39-9acf-fedb7f67c526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76eca26-52ff-4aca-83b2-d2b356ae8a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2b1faf-ceb8-4ca9-acf5-35fc8373e591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fe293c-80ca-456b-9674-d68126da891f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a1963d-8db3-44a6-bbb1-4c44fa3bcdc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bac0017-a451-4e69-a3df-2c5981bfab87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb779aa2-c345-4144-9c14-ac63214bbd4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ffbee0-2363-498d-8946-86606621abeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e1f9a9-ceea-4b98-92d0-9bac8bcecc5b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7149f8-0585-4a4d-a92e-e02404b26b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cb8caf-18b7-4904-bf0e-31fdbf7acd00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3e361a-a8fa-4cb5-b691-4d24620f62d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7654149e-978c-42ab-8380-fb89da5e43b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06bc8eb-a6f7-4827-92d0-016b6951b162",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93e8344-6bc5-4059-9a9c-73460049fc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee4d83a-d4b5-4395-8da2-f7776c92795a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4973e81-5992-48e1-8741-367e3c11317f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bacc53df-612c-41f0-8ee4-ce822319113c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e24ebf6-3e07-4ee3-8910-448c2d2c8626",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0352c484-d026-4546-8fa4-dceec01edab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad5685c-2481-40f9-8140-e3f57f54b83f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873681f4-8db2-401a-af7d-50fa5a7ad873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f4b891-8e2c-4891-9700-0a6271966b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae4d8a3-24f5-45f8-a9b6-e4505d1b25ee",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0fb056-beb0-4106-b673-e51348f965dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf1e0d1-62fb-446a-a60c-fea0aae9f460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18082aad-a9d6-473f-b6bf-a06a66eac25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ab2dca-957f-43af-a111-c923c5b11906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67923c3d-0807-4c7f-bcc5-ffdf33a08fdb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73d5a2d-27e5-489c-8c33-24ee3d39e098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4208b023-008c-4082-b18b-b53c7c3bb478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2538305f-25c8-44e9-84d7-97b800583256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce89d25d-0f43-4b75-bd82-89cac6d58924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759f54b8-3f9d-4fb3-a883-3e491733e919",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee047b66-999d-4892-b63a-ef0eb6d58206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8937287b-2b4e-4c09-817c-1576fb93febd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d11da6f-c021-4079-a837-84e424ba997d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4faa1a3-8d05-4623-a8ba-d89cafaa8898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fc644a-75c4-41d6-83d8-b7925060b4ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4b85ba-fbd2-4758-b319-703308800d9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb929a4-18a5-461a-84a6-34bf85b03d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b18bb4e-758f-4a78-898c-f0ef5712e37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae2bfa4-440d-4d9c-9c83-2224c884da84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861650c4-617a-4296-a2d8-7580fd274ccf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35129fd3-2d7b-45e1-9d49-89ea9b43343c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c38bbc7-ea27-4a07-b5ff-173e71a4068b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58352443-195c-4f5b-aac3-48d1cc8483bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6b148c-12ab-4d5b-8418-2fcf68d5539f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db44fac2-ebf5-406d-8741-628fac579558",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa5d2d7-e70d-4048-94fb-cc1f8727516e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35eb5ae3-d684-4dd0-b007-a563c6713bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5410c203-e05e-4774-b7bb-dcdddadf0a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1382d387-be8d-4fac-a2f1-dec722be5eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0d4d1d-eb1c-46d3-9c49-96ea838a8c5b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a77a09c-3bcb-4779-b3d1-6083a29a9298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ee2d145-72fb-49b3-87c9-6bf53b92acc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bc2eaf-a1ca-47ca-8e8f-76f6b0a4bd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4600c5d3-deba-4bb0-8826-a6ca4a845548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5123a6-54b2-4764-83fb-f1ea220ca364",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd15564-eb41-4ed1-aaef-3e359717a483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0917ddc-1f70-4910-a436-2c7a9f4b009d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8945a9c5-35a3-4a3b-a1e9-1d4866cf6425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afeb2866-4a14-427c-b00a-d19a12cb5283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6838f938-af75-4de4-a97d-7b9ab4c7c8b8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0dcdc1-135f-4087-90af-f1c0b3d36446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a2b755c-a711-4106-97c2-cc2cab1f3397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd03c67-984f-4a01-88c0-87efd99fee84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c593c3a-f04a-482f-99c6-4edb32b87c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106c0ff7-d97d-4883-b03f-11bb42ee19f4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bb32a4-f1e8-4b41-80d2-4d7cecb274e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5759ad3-2aeb-454c-b888-827fb8bfb9ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aeca436-ead2-415c-b04d-845208efa26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b833fca-3fe6-466b-a9f3-1867a7a9d04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a58ea5c-b57e-4845-9f7f-8631a87ee229",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d96cd99-9d31-40d7-959b-91cc3e63e6b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db3538c-73cc-4796-b482-70db5f56c77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a45614f-a981-4748-ae21-29c261d2a5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a8f702-cfdf-4e28-a615-b9836ce37418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e69fc0-c7da-4596-abb8-55be9fe45563",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317e7431-a1c0-46b2-8d10-c277211adc50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ebbe043-888f-496e-897e-5895b497c170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1cf6ee-b4e4-4864-b91f-abf59b8f3877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad487cd9-fd1c-48bf-a951-e261f4342888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4c346b-825a-4585-b5a6-a40b179b8943",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ef8f98-f54c-4b09-9e1c-4761d8f93aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "314c8b0a-925d-4f55-a9db-05bf272c8627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16e85a5-a2b7-44b3-9d25-47f831248403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d872fe84-4510-4ec6-af53-f7e9675de204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450572ca-a069-4200-a004-f10481beb33d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb1bc88-6135-4c77-add0-8c9ea56607c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dba0594e-5c81-478c-822b-6a40011fcdd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427126f4-3efc-4bc0-bccd-0b53b1c38a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73b1906-d239-4071-81ca-45198c997089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69e014e-cd4b-4ed7-87c3-54aaf985891a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6eb2e5-96c7-470e-838a-353e2be42d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f88845-b1c6-4b24-96fb-5f47c711c6a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fd3d1a-0cbd-4a5f-95ff-333f8db8742d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3530cb11-bdb4-421f-8eaa-71c31ad97f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8066ee0-f1dd-4112-af4b-52f2f7798254",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c46ec2-f046-42bc-adbb-253f0db5c15b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c81489ac-6e8c-4fcf-814f-4a41ff7944c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b548149c-c731-4474-a8f6-5e018d21ec99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fc7a63-b425-4539-8a7a-253e857058f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ee0b9b-a93e-409e-85c8-5a2cfb142748",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89266122-8cfb-444f-b7d9-f8ce251cc39c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e10f397-3957-4dbd-9814-dd14b728b7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031ebdf6-5509-4b4f-bf0e-b61722805501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a00549-8702-4b78-b374-80ff112b9ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ae38d9-0e93-497c-b7be-d5303093a2e1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bdca26-1016-457d-b76a-cd62eb1a1e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d17db41c-004b-4701-b4bd-d67130815101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263f5b08-e9d3-4bd7-962d-f79d44421b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694c885f-d152-46b4-b1a3-a867befe7a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdb8dca-d533-444f-986a-52db05582f82",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a61d609-8e48-4df7-bf9c-cfe3f7b58266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bebd03fd-3f1c-4d2f-a265-dccc5f79e593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232396d5-7b8c-4352-adef-6df1158cdbf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215a1101-3d38-4d76-beac-ce5efe2c91c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97292b9a-728d-4603-a4c5-327b15464edd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7db8bf-e8b3-4144-8981-bf21bb2f24f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "623e7bf8-aa65-4878-baf3-2f9e10178a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2a7229-3f2c-4cd1-a355-e111e25fc2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f935eb-1769-412d-a115-2ff0ad754488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546d3acd-7082-4cb0-b825-8571bd3636f5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b6eb91-0244-4270-a042-9aa7f97d5684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96047d9e-5eff-471e-ac05-5b692d84c38f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2015e038-c320-4b50-8c98-0529ba9cbfee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b4fe06-6f05-4170-9214-bbbbb072912d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5d86b4-6f29-4d2f-9a4d-17e22931085d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73cb1cc-2bb3-43b0-a2a8-c80c8378e58a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4601252-d9b2-492f-9d36-60d0a82a59b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d78d648-1942-41cf-8b26-8c52fef5f9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cd0b68-60e9-4a6a-9aee-f81fd9fb6a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20015506-913a-49f9-9781-3f89a9551b3e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbed87e-786c-465e-a2ad-27a18c5ee5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45107678-cc74-487e-b2bb-a7323d7f44be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b302b2-0825-4d14-a91c-1046153b9739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8567128-6b7e-4077-b68d-e1be10acf2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ccf8da-0b8b-45d3-a92a-4885e68cc9dd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66be455-77b9-4336-9ab7-632a2ca31664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb750f6-2027-4611-8a30-60a1b6f8c916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5668d0fe-7923-4e42-bad6-c8125abf348b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c7d175-071b-49f3-9491-4b3b40f63e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adc0be2-8ee6-473e-8e19-4969d4b40a19",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640391d8-45cd-4b52-8f31-253cb8daecd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0661191-f774-4417-8c7b-010abb668024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5692015a-213b-40e2-b5ee-d9c4d183aff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b41527-786b-48ae-8299-8f808cd46c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b144643a-250f-448c-b9ac-d23197316b0f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31259cf9-e900-4b9c-98a6-82f0e68217bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28235c1e-e275-4f5d-bba7-5e9e5170c7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37131a63-3a26-4a33-9271-efef80e22e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97c3d8e-e198-4c48-be50-2b9b1e2acb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed7cce0-9f23-46bf-a2fb-6158bf0cfe93",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832a2646-1e27-4e82-ab9e-76caa82bc8ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "266f15e1-721a-4c44-a71d-e71deab839e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc2f89c-8b8c-46e7-a3d4-6cf4bbf7bb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb70a194-c738-432c-863d-e28d10f98596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e03fd64-4406-4fe9-a70c-a1c1a9f30031",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0558d66e-1710-4e63-bc2a-f982aaffe409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d58b528-fadb-42ba-a009-0a7aa2cb9910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8833c8b8-c974-4869-a6d7-4aa6c068464d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4916bf8-8e68-46e0-97f3-ba458e718f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4abfde2-4f8e-45e1-b427-60a9de01f483",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed26956-9cb9-4691-a7c8-e53c26853a83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101d8fd0-9504-4a2b-9322-a40cf85de3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a86c48a-b7b2-43ed-8b10-abd04b723fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e46a21f-8bd6-411d-a984-33ccbd10b962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f9231e-a0cf-4bd2-94ff-6ff9b2afe9bd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eae1da8-3582-4666-b53f-19e381d402a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64fba548-9ce4-4292-af4f-15038331932c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8050b46b-d77d-4515-bc96-a941ae64f022",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bd181c-e499-463d-b3e8-0b26aca6e1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffda33d-fbd6-4496-b30c-6b0df25a2e93",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b72649f-b8e6-4dbd-98f3-dd5df9385519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf36261d-1185-49b9-8e6b-2d431120419d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71520ce6-2fcf-4aba-919f-b047a6bd7f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec4f5b9-f39a-44c9-896a-0b89199fb2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c402ef-39c9-46ae-b94a-aef9561227ac",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849f30f1-18b2-49b4-851f-a9e042456f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591e27c2-fe79-40e6-81df-71f82de016d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33930892-edd1-406b-bf23-aec7aee7e99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77010d1d-17f9-414d-8b0d-01e5468c90d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583bb2cc-7a27-4723-bbd5-458be4d550ab",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c23626-a50f-41f6-b785-a5ada85ea642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a76f42-9933-437b-a218-c9077ed0a2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880855c0-2c7a-42dd-9696-121cc550a2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99a33e7-9150-4aad-a3aa-4086902d2948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5d8e55-97be-4ff9-8310-34dcece1da33",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caa7016-6127-446b-a9a1-0ddfde1e7714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e255d0-0f95-4fb9-88b0-7737b3f02cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f0501e-f7aa-4216-8065-35516bff2d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155d6d1c-149b-4dc0-a94b-c7160bf822e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c765aa-60b2-474c-b963-9cfb1b4c5336",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6298e76c-ba75-41b9-aa0d-3445279eebe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31e949ec-9769-4551-9863-5200d0901675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d5c350-e57d-4e78-a5f4-6aca2faa10cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c112680-92c7-4409-831e-b5afc9b9ad91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb27913-1ce9-415c-bc72-f5907cb8a28c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6add0ade-ef19-4200-bb65-d54c74993367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "971a5e25-87f4-424d-abd7-2f8aabd17c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41600955-683a-46eb-8a51-149f5a2cd785",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e3ebcb-6160-40dc-bcdd-259bec7b42f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02084337-35d9-4862-b33b-07521b652432",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe21273-97fd-4dba-9572-402fa90d34c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ae6b6f-eec3-4fec-b4dc-2716bacfbe58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a384b15b-8f00-4dc2-9d26-dea666f3f2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e25493-6a39-4db1-a2c4-193cd4426fe8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "403b9de0-ae00-4b93-b116-bd554481d6e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81409d5d-2c06-44b4-9f19-e295cfbbc164"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "418bbf75-55f9-4844-83fb-4de0f3885bf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f59eb2f-d455-4b85-8222-cfd357974eaf"
                    }
                  }
                ]
              },
              {
                "id": "3a1e2dd5-ab40-40da-aa38-901e7501671c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6611a6be-792c-40d2-a2e8-eb7814b22ef4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b363e51-f11f-4f69-bd8c-047eff605bd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7e73c53a-a210-4b30-bf1f-eb5d0fc72269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd9099b-bbf9-470a-a0df-b403cbee290a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dd7288b-ef93-4c2e-a0a2-e3e09be26210"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e7cbf0b-24f7-4605-9db8-9030f02fb8d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9ba9b6e-d0d2-4db4-b5b2-a8c228485ae5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61638336-6879-4af3-af0d-8881b923409b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ed4edf6-3269-4a7e-b8af-54b67c303847"
                    }
                  }
                ]
              },
              {
                "id": "a362c58d-7076-4484-b32b-bb31130a33c3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bd2b865a-d63f-4f43-985d-4f1b93dccac1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b9125c-1228-4645-890e-7299d07a78b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "98b0b494-82e9-4a91-83fe-b61ce29377ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341626e3-354b-42a5-b9f3-f2cdde79d36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a1f0ca-c6ff-4973-9e77-b794250b6a11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3738b9b7-97f6-403e-8d27-8ad0eee1844d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b1efea8b-87bd-4482-8188-bd4c38872139",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1138fc6e-1095-4b2a-ab83-6538b29cf5a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "26ae1e9e-c8bb-4ae9-ac8d-86da43b0edb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa3f9f8b-db16-4785-948f-15708e764b0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c51dbff-b663-45fc-935a-b079accab00e"
                    }
                  }
                ]
              },
              {
                "id": "af8a183c-11d7-423c-99d5-1c833ab4f4b3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20ac38d4-afa2-458d-8b0b-8049b1af518e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5b9d1646-0d5e-40ce-a028-3bfe062ad30a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78f3599b-69dd-4709-bbfc-cb2fe1f2635b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20855c72-4c57-4d0a-9135-a1821addc434"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "057a710f-06fe-4617-b9b8-8eb82c1f9219",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5aaa5fe5-7dc2-447b-a4a9-4cc018c1a3f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36cbe723-af03-4f36-a5d9-4428309f89a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbacc921-2224-4e4d-b96f-e0c2df60a3f3"
            }
          }
        ]
      },
      {
        "id": "af9dee2d-d4e6-4a8b-8d1c-52a337e1dff1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "faa92ee9-d26b-4fdd-803d-5ef4b53a55f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20d2ceaf-be73-4dd4-8776-a6960d5453f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db6dbf23-ef74-4086-8c72-3b9414d014e0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97666946-0ed9-4bfb-9406-a721de1e03e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e511a97b-3a4e-4193-9f34-3affa8148d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ec85f4-6850-4f61-9b5b-475e73ccd2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5840f257-00f4-49e7-8b67-432464a7d56d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8ccfdee-1aa5-4b17-bd38-187ddcb5cbe5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5c34c91-40e1-4aaa-96c2-389dab507b13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe6d83c-cfc3-4c00-ae56-3be85e76a738",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9487fa0c-fd62-4668-9293-16c911a551ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19de4c7f-0eac-4e3d-97b0-7445efab840f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "375e8c04-03a8-4de1-a14c-af519336486e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff1ff17b-e12b-4e80-9b4d-cb0d5f862dd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b203b47-cf36-46ce-8c07-b45147d6cd6e"
            }
          }
        ]
      },
      {
        "id": "66e397a8-c0a2-49cf-ba1b-e8724daa10a7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b1b0ae76-5461-41e0-9c29-b609bb6cd45b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a045f253-f4fa-4877-a145-d6b2dfc926cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b9ebf70-622e-42ab-9e74-baa903762849",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e7a68b-4ecd-4cd2-aab7-fd808df6af86",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79dfef2e-f96a-4086-977d-326fece0881a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cc3c69-c37e-40a5-880d-6f0e2b5089c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b81a8a2-cf80-4a80-9d23-d8481e5cbb89"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "915519ee-e339-4045-adb3-1cd87cf3f871",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf21ff52-0a5a-4e91-a873-7b1c706cc953"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75bb74a4-5537-4a4a-a239-9587b85a96f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d487feec-3c3f-44d8-b5ad-ba2dbd28949e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "740ba9b1-0df7-4703-ac47-4967aa9fd60c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2891aa96-2bd2-4916-8aea-433161f22812"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76e9fe20-3f96-40c8-b4c6-e68a438c3256",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48accbc7-2aaa-4ab6-9d5c-967ea4652935"
            }
          }
        ]
      },
      {
        "id": "0d720358-3e68-43c1-861e-a03eef6bd387",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7e43e3fe-b8c4-485d-9142-ffa1f55bc107",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8284eec0-4ffe-4117-82fe-6605beac4a7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dfbcb6c4-c413-4af7-b002-253831532cb1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45dbcc2-1f0f-45ae-8955-4a0eeb0a5bbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35833846-d9c6-4c77-9bea-38c0b61b294c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a325118f-b03f-4f63-afd7-916c5cab2ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20c28099-15a9-4694-a56e-35e6159d009b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f9fe8e0-3391-4415-807d-24f71ba37264",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fae41c3-98a5-434d-9432-ef8bf56e9fc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84f1d3cb-27ed-4e9d-9b53-a5a7a5dd92f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9037c211-df0a-4c2e-ba0d-18c469edd913"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33fb2ae0-b037-4941-8703-3ad927d234ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e770005d-64e6-45e4-8d3e-26249a527c8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee47e98e-ff5e-4981-9610-82b5dd8ce51a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55027355-224b-4d6f-a104-d58416596664"
            }
          }
        ]
      },
      {
        "id": "339d4564-6828-4cd9-ae6c-1e496cd84831",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da94b966-e1e1-4b01-a6ff-be07809c79f4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99c72321-e924-4f74-8ebe-b6d98f659b48",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e56f80ba-dba5-4751-802b-75d794afcd90",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20343244-4db4-40e7-9e88-e6fc7cd63dad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "974c93a1-00c3-4b06-bd8b-cee8874dc49f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 140.0555555555555,
      "responseMin": 9,
      "responseMax": 11519,
      "responseSd": 750.4115464044197,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722818518043,
      "completed": 1722818561470
    },
    "executions": [
      {
        "id": "52c33b02-df71-4afa-b315-fb9d3533fd41",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dfbae13f-92d9-4709-83fe-178e925d720b",
          "httpRequestId": "9b3f01bb-8244-4da6-9e6f-34769799df55"
        },
        "item": {
          "id": "52c33b02-df71-4afa-b315-fb9d3533fd41",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9a693d7d-0279-4108-9289-4f73a5649c68",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "d6c0958c-9760-4285-bbee-a79044a218ad",
        "cursor": {
          "ref": "0c865f5f-7a68-4c85-96e8-6e2aabdc6589",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5a780605-eff7-45d1-97fc-28d2aacffc2d"
        },
        "item": {
          "id": "d6c0958c-9760-4285-bbee-a79044a218ad",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "082007c0-ab88-4328-80ec-9dde603490c8",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "004e951c-6d8b-4b21-bec9-57df9cb487fc",
        "cursor": {
          "ref": "7b3c9168-f7ac-492b-bd01-39724f325223",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "eeebe7e5-e7b3-48cb-9893-695d74647bac"
        },
        "item": {
          "id": "004e951c-6d8b-4b21-bec9-57df9cb487fc",
          "name": "did_json"
        },
        "response": {
          "id": "fc36bbad-5a2c-4747-a67f-e4f58fa80f75",
          "status": "OK",
          "code": 200,
          "responseTime": 388,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f40ac4a-683b-4df2-850c-995b154bce74",
        "cursor": {
          "ref": "02d654c7-4595-4bf4-b1ac-2cb151df0083",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "818a767b-df18-4cac-a8d8-ceeb7751e2d1"
        },
        "item": {
          "id": "0f40ac4a-683b-4df2-850c-995b154bce74",
          "name": "did:invalid"
        },
        "response": {
          "id": "6b3fa610-a35c-4a5f-ab07-2418f39499c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 307,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f40ac4a-683b-4df2-850c-995b154bce74",
        "cursor": {
          "ref": "02d654c7-4595-4bf4-b1ac-2cb151df0083",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "818a767b-df18-4cac-a8d8-ceeb7751e2d1"
        },
        "item": {
          "id": "0f40ac4a-683b-4df2-850c-995b154bce74",
          "name": "did:invalid"
        },
        "response": {
          "id": "6b3fa610-a35c-4a5f-ab07-2418f39499c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 307,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cb6721-02d3-4b7d-ab03-c3665eb933fe",
        "cursor": {
          "ref": "5fca414d-4be7-42e9-8d75-9a6492b2601b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6d7b0704-3be0-4dec-9b05-bc53d1cf8a19"
        },
        "item": {
          "id": "d0cb6721-02d3-4b7d-ab03-c3665eb933fe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "caa858d1-fed7-42a7-8534-35e9761a649f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e211ac0-c105-4cf6-8a34-ce9b17a4b7ca",
        "cursor": {
          "ref": "b4983a82-d571-45b6-8371-2ab2a520ec25",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2d36e21b-532f-43ae-9746-976a471bb8f3"
        },
        "item": {
          "id": "4e211ac0-c105-4cf6-8a34-ce9b17a4b7ca",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0250d047-d1bc-47b9-aebc-0e9fc81a0488",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3446adb4-e0db-4c9b-a470-b6f522451690",
        "cursor": {
          "ref": "0e677cd3-9879-4630-b06a-92180d61a83d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8a4b6264-768d-4b33-8e84-9b851e607170"
        },
        "item": {
          "id": "3446adb4-e0db-4c9b-a470-b6f522451690",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3cf2df49-cc8a-45ae-9507-f211331c4195",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811a0395-4840-4c01-9f68-1ef06ad3c5e8",
        "cursor": {
          "ref": "14069f00-41e7-4806-ade3-fa44efbf04a7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5b05cc1d-2784-4764-bd54-b15901bb4c41"
        },
        "item": {
          "id": "811a0395-4840-4c01-9f68-1ef06ad3c5e8",
          "name": "identifiers"
        },
        "response": {
          "id": "0f67931e-3910-4a27-92a3-c68f6e05bb20",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f975ab-9551-4a77-8236-c886834c1888",
        "cursor": {
          "ref": "3fce5247-70cd-4c9d-893c-b41f70e2f016",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "935ee09d-66d0-4057-9ebb-80859db5151f"
        },
        "item": {
          "id": "43f975ab-9551-4a77-8236-c886834c1888",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5ee15b60-9f38-41e5-b78d-ebebfcfe6c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095e627b-cccd-4e82-80d0-858ea7a230ee",
        "cursor": {
          "ref": "7b24fcdd-bf4f-4e7b-8b77-465c7bd26172",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "776b1a5c-b5a6-4b33-af7e-f6b9f3404cb6"
        },
        "item": {
          "id": "095e627b-cccd-4e82-80d0-858ea7a230ee",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4954c558-2085-43e3-bd90-51fe8906a0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b1e3ba-f5de-4ef7-a1af-f15121eefebd",
        "cursor": {
          "ref": "7a3e246b-d531-4a50-8277-400c8d916a87",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dd466139-7611-4300-ac90-a2b7c1fb34b2"
        },
        "item": {
          "id": "95b1e3ba-f5de-4ef7-a1af-f15121eefebd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1af8f009-0e22-48c9-a922-e6fa82ceb875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54c9da3-2dbc-46f1-8708-032489ddf7d1",
        "cursor": {
          "ref": "459b7a54-2464-4760-9b35-28d64c562fb8",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "834f6d43-cd63-4dd2-9c94-f11083949445"
        },
        "item": {
          "id": "c54c9da3-2dbc-46f1-8708-032489ddf7d1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7a8f1062-64fa-4cc9-b3f6-8f94e3ae6726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b78e2d5-ad03-4394-99f6-77e8bb920dfc",
        "cursor": {
          "ref": "64f57a33-c7fe-4039-9ed9-ea34669e9299",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9bac7a6e-c0f9-43e1-b59c-0cfc3c046a28"
        },
        "item": {
          "id": "8b78e2d5-ad03-4394-99f6-77e8bb920dfc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f2347576-28a6-4763-a7b9-802e26adbc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8f3fca-c35e-43d9-9b71-0a72703ce8e7",
        "cursor": {
          "ref": "c629f563-5820-46f8-a519-b115e32e67c6",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "47ce1706-4482-4a83-8239-f777e0d5d668"
        },
        "item": {
          "id": "bb8f3fca-c35e-43d9-9b71-0a72703ce8e7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6311fe18-eedb-4b63-9b73-b27ae71c984e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c588260-0572-466a-83bc-828c9e9bef74",
        "cursor": {
          "ref": "e18b34ab-e051-439e-8559-a847e4cd4e1a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f6386dea-c761-46a8-bfa0-ee6f579f9a52"
        },
        "item": {
          "id": "8c588260-0572-466a-83bc-828c9e9bef74",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "24e143b1-cbb8-4815-b0fb-9a55232a5821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fdc9e9-9080-4197-983d-164610acbb3a",
        "cursor": {
          "ref": "7bb0368b-31d4-4b77-8706-7cafd9a7c3d1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "34e4b711-20df-4d1d-a70a-ca883b0794f9"
        },
        "item": {
          "id": "d9fdc9e9-9080-4197-983d-164610acbb3a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b2fe81a3-a72e-40bd-84cd-e7a633ee95c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5babfe8-de5d-43cd-9ec9-363c999e40b2",
        "cursor": {
          "ref": "826c30ce-db63-4ffb-85cc-7f13d084a2f3",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b615c314-9e40-4dc4-ace7-6dc19ce6e9d9"
        },
        "item": {
          "id": "b5babfe8-de5d-43cd-9ec9-363c999e40b2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4189c0bd-7e4a-4c21-9021-eb5aa08a7a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea264d3-b218-4314-9e5e-d768d299a19a",
        "cursor": {
          "ref": "eced17c3-cb1b-4303-bff9-78173c93f562",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cb7dfe97-a1fa-4021-98c6-9ccb06b2b57b"
        },
        "item": {
          "id": "6ea264d3-b218-4314-9e5e-d768d299a19a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d3f49fcc-06c0-4926-8933-fbe7dc9e015a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72220f2-f5e2-458e-a5d0-fea7825aed48",
        "cursor": {
          "ref": "76c252e9-9531-4984-a043-50e9266e8515",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "214daaea-eb1c-4cfa-af13-d4573a4d193f"
        },
        "item": {
          "id": "b72220f2-f5e2-458e-a5d0-fea7825aed48",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5e031e85-59b4-43cb-af04-6f72eaa2ca59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c65188-0c62-47e2-91f2-1ab503644a1a",
        "cursor": {
          "ref": "8e81e4f8-61b4-415e-9fb2-578fae5de0e0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0b546681-47ac-45fa-a95e-c9dc8097861d"
        },
        "item": {
          "id": "f3c65188-0c62-47e2-91f2-1ab503644a1a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "42974298-b433-460d-9391-39568912c3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba40a98a-d769-4e9f-839b-035d2da0b746",
        "cursor": {
          "ref": "211f95df-ada0-458c-bad5-1fefb2fa3e9f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a28370b8-de7c-4dbc-a446-575e30321e29"
        },
        "item": {
          "id": "ba40a98a-d769-4e9f-839b-035d2da0b746",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c9b3015e-a165-468d-8c03-f88f7468fdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9e3e9b-63da-480b-82fd-4037e1a302c9",
        "cursor": {
          "ref": "aa4f2126-6fcd-40f5-afd2-c48c24b6090b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c4821cb9-8fff-44a4-9704-a24e896175ef"
        },
        "item": {
          "id": "ef9e3e9b-63da-480b-82fd-4037e1a302c9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "55216fb4-06a9-4ff0-9a59-f783f752ecb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a674c6-002a-4e91-929c-346bfbf4f4aa",
        "cursor": {
          "ref": "eddeeeb7-d39b-4161-a8f4-27cbe11fb5ae",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7083e00f-065f-486e-b4eb-d0056cd778e0"
        },
        "item": {
          "id": "50a674c6-002a-4e91-929c-346bfbf4f4aa",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "48589279-18e2-4570-a347-09fba348d2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f971e01-5573-42b0-b16a-03c2a9f1c85a",
        "cursor": {
          "ref": "533e2091-3010-46bb-8ec4-3c7f49dc94af",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e8cc9721-0949-4ff0-b334-82f6de83943a"
        },
        "item": {
          "id": "1f971e01-5573-42b0-b16a-03c2a9f1c85a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2f5b8bd8-550f-42e5-a8cc-2df715264bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f0d36b-43d2-4ed8-b0ee-18857cd859c7",
        "cursor": {
          "ref": "13632981-ac89-476d-8bba-8886ebfa4fac",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "eb28fffc-0f00-4207-b2d3-1451dce1d25b"
        },
        "item": {
          "id": "37f0d36b-43d2-4ed8-b0ee-18857cd859c7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1c0b1456-17f9-4b1b-92c7-96d697867833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387f172b-439a-4c76-ac0e-10843769e66e",
        "cursor": {
          "ref": "2f579f65-58f8-4c04-90c2-510a7817414a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8c68acbe-3d86-4529-8b96-d57ac04dcb13"
        },
        "item": {
          "id": "387f172b-439a-4c76-ac0e-10843769e66e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c2ebd7d2-4be6-4760-bc05-b023b8597e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967188c6-ce89-4606-ad5b-37f08c96fcef",
        "cursor": {
          "ref": "fd8bdf65-2704-495a-b0ff-154bc7360406",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cec899a7-cd9b-48ed-89b2-bffa98c84e57"
        },
        "item": {
          "id": "967188c6-ce89-4606-ad5b-37f08c96fcef",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d060418e-fbd0-4ef1-9ccd-623ab565209f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb9b638-1c66-4b82-af25-4aeb2e7edfd7",
        "cursor": {
          "ref": "bf7afacb-6c3a-4b89-a6da-846d0e6d68d7",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8d7bbb29-2f9c-432a-a30f-c98e632a1969"
        },
        "item": {
          "id": "5fb9b638-1c66-4b82-af25-4aeb2e7edfd7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3e352e0d-7260-4089-8a82-f8447965541d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ba6991-921f-4ec7-918d-31c238a0da4f",
        "cursor": {
          "ref": "7732a86e-1d76-45da-a0f8-e26a5b0badeb",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "15cfaa7e-b883-4b87-9d3b-cfe86944d93f"
        },
        "item": {
          "id": "d9ba6991-921f-4ec7-918d-31c238a0da4f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c63f7e94-ecd7-4f50-bda9-65ca4830110a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78892a3-63c1-4ba2-9b6e-77c1f281ab63",
        "cursor": {
          "ref": "0b3f73d8-508d-4b69-8f69-a45b11c5b995",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "51f8ffad-b747-463b-ad9c-9e3a34324497"
        },
        "item": {
          "id": "b78892a3-63c1-4ba2-9b6e-77c1f281ab63",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3e288b20-78cd-4098-af4e-2a4d03618b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5ebdcf-e09e-4b66-9f0f-7e2beec5d28e",
        "cursor": {
          "ref": "4fb24267-6cf8-4db4-b77f-47141a58789a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7d4be64d-dc35-404b-a402-6efb49eea46a"
        },
        "item": {
          "id": "7e5ebdcf-e09e-4b66-9f0f-7e2beec5d28e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4714814c-4c59-4964-b4f1-9b5db641facd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767c9d46-9f36-4d52-a34a-a34ec4673479",
        "cursor": {
          "ref": "83583849-a47d-450f-9d03-875e6f2e19f2",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e430cff0-b1a2-4e50-910b-cb130801dfde"
        },
        "item": {
          "id": "767c9d46-9f36-4d52-a34a-a34ec4673479",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4cf46dc6-785e-470a-9199-93bd1e33a6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ca21e8-0be2-421f-8dfa-97b139ac6223",
        "cursor": {
          "ref": "8db01522-9cd2-4e0e-b79b-58067a76bb81",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4a071421-2f1d-434f-b5df-f9fb404d234a"
        },
        "item": {
          "id": "e3ca21e8-0be2-421f-8dfa-97b139ac6223",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "556c67c2-bf57-40ce-ad14-19db3f5ceb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fce497-207c-4775-b475-88ab11cabcb3",
        "cursor": {
          "ref": "8b3f0613-fa69-4395-b9ff-f1bb8426816e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7dcdb602-3f38-4e35-ab83-4c85de9b3b9a"
        },
        "item": {
          "id": "52fce497-207c-4775-b475-88ab11cabcb3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "945291d8-8063-416f-a9da-a3a52ee4d3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2aa6dc-1805-4a07-bb22-e73e407daada",
        "cursor": {
          "ref": "3e131b91-6f05-42bf-b7ac-eb8cb0c9ad07",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "409ec157-e300-4327-8aa8-1394f4047939"
        },
        "item": {
          "id": "bd2aa6dc-1805-4a07-bb22-e73e407daada",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7f07858b-88f1-4bd9-bc71-03f9e24e2fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31bd007-edb1-4f18-97e5-ef563a4c6e27",
        "cursor": {
          "ref": "239c76fb-d618-4c31-82b8-fd211b1e52de",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c61c99a8-3e31-4e50-a216-6be076052ebf"
        },
        "item": {
          "id": "c31bd007-edb1-4f18-97e5-ef563a4c6e27",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "86b3cb44-67a3-40c8-963b-6ed5acad67ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ed77f3-6834-4515-aca7-76385330f423",
        "cursor": {
          "ref": "8d8aec12-7402-4f4c-8b26-56b9e3eb9b03",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a1d8dcc9-f7dc-40b7-a504-e1a9e9483447"
        },
        "item": {
          "id": "77ed77f3-6834-4515-aca7-76385330f423",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2a54ebb0-27a9-4adb-b59d-744efbc96cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54093c7a-0ed6-4792-8b87-d81196a26ade",
        "cursor": {
          "ref": "8d23e6db-38bd-4d5a-98d7-53842461e813",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6de9c65a-924b-4862-b800-3385b5ee3202"
        },
        "item": {
          "id": "54093c7a-0ed6-4792-8b87-d81196a26ade",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "27ea35d8-29e0-4c3a-8d9c-37694ce651a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796b77e6-f130-4ae9-8877-28ecdf552274",
        "cursor": {
          "ref": "d4837964-7c16-4e3c-9c97-3972cbca712e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2852e07c-cd6c-4d55-aeab-457e0027896e"
        },
        "item": {
          "id": "796b77e6-f130-4ae9-8877-28ecdf552274",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f2c86a6e-ee3e-498c-8977-4a1ebd35f0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4a93f7-b874-4807-9091-3b5547281bb0",
        "cursor": {
          "ref": "1b9ffd7e-0b6b-4473-b693-798965315f8a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c66ff749-75e2-41d1-b3a7-3a388c295336"
        },
        "item": {
          "id": "0e4a93f7-b874-4807-9091-3b5547281bb0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "042f85e4-b470-48c7-97da-42ef0eccf733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1f39b1-c416-489f-b7c3-c740b72fa56b",
        "cursor": {
          "ref": "e61c6984-d1c7-4e2c-9c8a-3184b06bac34",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "496cdfbb-8be9-452f-8945-27e1d2ba1117"
        },
        "item": {
          "id": "fc1f39b1-c416-489f-b7c3-c740b72fa56b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cf16b43f-5c90-4ffe-a884-4b2e72b3967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5bcc43-a218-4e39-85b6-0ecd2f2a85ad",
        "cursor": {
          "ref": "4794a40a-e349-45cf-b2bd-252c2f769dff",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "234fd645-e521-47f6-a484-cd43efabe559"
        },
        "item": {
          "id": "ab5bcc43-a218-4e39-85b6-0ecd2f2a85ad",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "da07a6ec-9305-4f4a-8d99-ac97b651b8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63305c0c-50dd-4278-a061-07e44d6f5518",
        "cursor": {
          "ref": "f78775a4-2e52-4a20-8d3e-9f09ef05b689",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7102aefc-86ba-4437-8244-06fcc399d4d0"
        },
        "item": {
          "id": "63305c0c-50dd-4278-a061-07e44d6f5518",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "76a7a550-27c4-49c2-8307-39d2402c08d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492df0b9-5ee8-4759-97ed-17f6213c223d",
        "cursor": {
          "ref": "bf0e5a54-df49-41cb-9b28-a997d2706b56",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d8403f3e-9878-4b0a-b418-64277dc73bdc"
        },
        "item": {
          "id": "492df0b9-5ee8-4759-97ed-17f6213c223d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4a36e824-9527-4bb9-82d8-754200f0250b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63691c98-cab9-468e-9c86-66857671dc9a",
        "cursor": {
          "ref": "0eb3b6bf-28d0-4d38-869e-d03169270df5",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "deefd00e-18b1-49d9-a083-20118d8db49f"
        },
        "item": {
          "id": "63691c98-cab9-468e-9c86-66857671dc9a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "539dd9ba-4dc6-41b0-9e1c-46f80eae7ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16ce874-9239-450a-bbd6-6018ccafdcb1",
        "cursor": {
          "ref": "65751a74-a1f3-48d8-857d-f7f4237182f9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2b01d6a4-e5e1-4669-9e1b-d404eeef8c34"
        },
        "item": {
          "id": "f16ce874-9239-450a-bbd6-6018ccafdcb1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f45ae877-7c73-4ab2-b97e-d0d36adc8bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ebfc88-e19a-4367-8a2b-b891ba020b0d",
        "cursor": {
          "ref": "c72bfd72-f208-4380-9ee7-32f81fc2baf2",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "332630ea-9162-4676-a6c4-65adc8404f63"
        },
        "item": {
          "id": "89ebfc88-e19a-4367-8a2b-b891ba020b0d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8ec2278f-11d4-46a9-a620-0be1785325fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d96f2b-73fe-4fb7-8f7f-571273ec6652",
        "cursor": {
          "ref": "28e35468-c6b9-4b4e-b5b9-52f204804170",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e3c018a4-4583-4e6c-974d-53164ae92f5b"
        },
        "item": {
          "id": "f2d96f2b-73fe-4fb7-8f7f-571273ec6652",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "629aadeb-f420-4e35-a2d7-c6a624f802bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dab58f-eb8b-464f-97fc-fd75295bc827",
        "cursor": {
          "ref": "f84ea36b-ab2c-404e-adbe-546fddfbbc36",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2627104b-7d52-40a9-ae8c-5f6a299e603f"
        },
        "item": {
          "id": "51dab58f-eb8b-464f-97fc-fd75295bc827",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b0bc6006-ba1a-401a-87ad-52cf0d866074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ee02f9-fc8e-4a41-a812-ba131dd05038",
        "cursor": {
          "ref": "94a11493-2494-4b45-9081-658752fb9037",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "81d59806-8f5d-4be4-8883-44d912f55d6a"
        },
        "item": {
          "id": "85ee02f9-fc8e-4a41-a812-ba131dd05038",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "164e6ca0-6c00-4fe7-8dfe-45891cb16022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bf3f0a-0337-4cae-b232-d51d64de599d",
        "cursor": {
          "ref": "49cdcd48-2da7-43eb-b132-d2d1466d2349",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1e07f3dc-ff97-4b1d-a9e1-30ed6c1af119"
        },
        "item": {
          "id": "b0bf3f0a-0337-4cae-b232-d51d64de599d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6b3af98d-ac92-4d82-90b0-d3a8d98720ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef70e82f-22b1-4e53-a1dc-36f8dd9c02d4",
        "cursor": {
          "ref": "0c81c596-f9a3-4c5b-a1c7-eab602a2da81",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "32435fd4-0f73-4ba1-8db8-1ba5ee0283ff"
        },
        "item": {
          "id": "ef70e82f-22b1-4e53-a1dc-36f8dd9c02d4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3885f579-6ba7-4d7e-b28b-3516fc26c6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004ff41e-e1a1-4484-aefc-00e11b9e4b87",
        "cursor": {
          "ref": "74f4c297-a41b-40a2-a115-5682bba3a0d9",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9e1ed36c-9981-432a-80f3-3ffd90a665fa"
        },
        "item": {
          "id": "004ff41e-e1a1-4484-aefc-00e11b9e4b87",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6bbb6bb8-118e-4126-b2a2-2b2b8bed0fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a5ad1e-afb1-4166-b9dc-8c90279c2ecd",
        "cursor": {
          "ref": "c2bc6150-93fa-4641-b537-18f9a54ef86f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a849c4b6-bfd5-461d-b632-522a3dce80b8"
        },
        "item": {
          "id": "71a5ad1e-afb1-4166-b9dc-8c90279c2ecd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f98fbafa-b0d1-4aba-b53e-32ccdf5adfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66215f09-46a4-457e-9128-89bad9d996b3",
        "cursor": {
          "ref": "c96cb525-3c2e-4d18-aec9-e007848655ae",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "312e14d5-bbfe-422e-b333-c7569725b767"
        },
        "item": {
          "id": "66215f09-46a4-457e-9128-89bad9d996b3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e5cfab40-207f-4df6-8de5-ae63ccd26262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459d767d-7eff-4d18-8ddb-f966236cdde2",
        "cursor": {
          "ref": "414671d8-5120-466e-b6bc-6b8c064524a0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a613ed3a-39bb-47d9-a76d-71ab752b0bc7"
        },
        "item": {
          "id": "459d767d-7eff-4d18-8ddb-f966236cdde2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "36358338-b3f6-46a6-819c-ba6a5f4a0fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c8fb0d-3422-4f92-9571-310bf4579b23",
        "cursor": {
          "ref": "82e33e2a-7b30-4a90-baef-28a59817fbbd",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6bc6c67e-f4b6-4b44-958e-3e60e2270074"
        },
        "item": {
          "id": "21c8fb0d-3422-4f92-9571-310bf4579b23",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5c4e8d90-514c-4c23-9185-ae61467d0f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55c38e1-4d98-4f9d-b286-e3bba2aaf581",
        "cursor": {
          "ref": "7fba92cd-89d3-4489-87bd-ed28e473d2b1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0538f0f5-aeed-40cf-9c29-a7dc02355b94"
        },
        "item": {
          "id": "c55c38e1-4d98-4f9d-b286-e3bba2aaf581",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "881c390a-880d-4ffa-8cda-25da64d483a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c483fc4-66e4-488b-b75e-49f41d4206f6",
        "cursor": {
          "ref": "d16dbcf1-32d3-4e13-a662-85dd86cd11b8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "52260d62-6450-4312-b907-a27b95d3b4b3"
        },
        "item": {
          "id": "2c483fc4-66e4-488b-b75e-49f41d4206f6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0a13ae29-aba3-4242-98e5-e50cab92205e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926a4379-abc1-4e45-9bc0-02a32651d267",
        "cursor": {
          "ref": "fba2a0a8-b1ce-4bae-b870-646db81f5562",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c9b55f4e-ef46-4a86-8f99-cd1425ac3adb"
        },
        "item": {
          "id": "926a4379-abc1-4e45-9bc0-02a32651d267",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6eade296-3803-4faa-8eb8-d8c7c4609cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f10b435-7f5a-4fba-b784-21d7da66c0bb",
        "cursor": {
          "ref": "c7d9c45b-5ed1-4aed-9d0d-ccbd5fc9d56b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c895dda3-32ea-483f-801e-714373046ea7"
        },
        "item": {
          "id": "9f10b435-7f5a-4fba-b784-21d7da66c0bb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e20fc6d2-60df-4455-92c6-d7e61bb11bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735c97f0-e52b-4fc2-9aff-fb422c73e4d9",
        "cursor": {
          "ref": "eb1908c9-dab8-47ab-9e4b-69c15b4543f7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e1695711-c11e-41cd-9630-991b3268a7f6"
        },
        "item": {
          "id": "735c97f0-e52b-4fc2-9aff-fb422c73e4d9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "feb3b115-bf9b-4f24-a233-9d83f1a8d3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316cf45d-2584-44f5-bea9-0886d188ebd2",
        "cursor": {
          "ref": "206206bd-73de-4457-88be-953cd1985331",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2c8f05e5-21c2-4ddb-89f4-738c94f68e60"
        },
        "item": {
          "id": "316cf45d-2584-44f5-bea9-0886d188ebd2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a91abe0c-3375-4d68-9e57-7011c28d443e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077c7d63-4860-4d9c-aa32-07df922b5026",
        "cursor": {
          "ref": "7a8476a0-7ff3-4de6-a253-f9754f22f3ec",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "16468ee2-d9bf-4a7c-a2ca-c14552221a93"
        },
        "item": {
          "id": "077c7d63-4860-4d9c-aa32-07df922b5026",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7bdeb2f5-3ee2-4038-a6f0-c91aca200a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1f6b72-f40f-4408-a448-c0e53f01bbb3",
        "cursor": {
          "ref": "7967073b-ee2e-4774-9285-3abbd4e3098c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b32d0812-7553-4ea1-ae2c-a976606583a5"
        },
        "item": {
          "id": "9f1f6b72-f40f-4408-a448-c0e53f01bbb3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ec0d31c3-5c30-475b-9209-1f49efef3ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8288aa-641c-4589-872e-5fbed9517ec1",
        "cursor": {
          "ref": "18c9b0df-e72d-41a7-a29d-2071ce98c25e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c3fa66ad-85c5-42d8-90a5-adb767e88adc"
        },
        "item": {
          "id": "4b8288aa-641c-4589-872e-5fbed9517ec1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4d487732-2d89-43d2-8be1-580b4ff476b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26176f3a-dbad-49b0-bda2-bd8de94097d8",
        "cursor": {
          "ref": "6c609b62-35fe-43e3-9c5c-e22b5e979458",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c730a8be-fc14-4ad4-a59b-c88fce0ea3b5"
        },
        "item": {
          "id": "26176f3a-dbad-49b0-bda2-bd8de94097d8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e7a90a99-2c01-44ff-a3e3-e09851f3858e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad48e1dc-3142-418b-897c-5112e9b00ec9",
        "cursor": {
          "ref": "1999c5dc-cec4-40e6-8ee3-aebfcca91574",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6f8cc53e-4ec2-4468-9359-b78c41a3c765"
        },
        "item": {
          "id": "ad48e1dc-3142-418b-897c-5112e9b00ec9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f9829c9e-434c-4bc9-8d2e-83487708fff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a3105a-3856-448c-9d30-13b0aaa2d0ae",
        "cursor": {
          "ref": "bf028bf4-ce33-4a36-aca7-bb1a25d0b621",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "df260a86-e827-4bff-a556-30285302d6c1"
        },
        "item": {
          "id": "88a3105a-3856-448c-9d30-13b0aaa2d0ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b0525e67-676c-4017-9ae9-1349a3bcf388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8054daf7-36cc-4598-a7ed-6ec226f840b0",
        "cursor": {
          "ref": "f552dfc7-22a6-4062-a34a-328b6a145ee2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c58a3572-605e-4ada-becc-72856222f205"
        },
        "item": {
          "id": "8054daf7-36cc-4598-a7ed-6ec226f840b0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "45ef82ee-5e5b-4b06-be08-dde15f1eefe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0df513-e44c-4c13-82f8-961d996bd8ce",
        "cursor": {
          "ref": "3a50979f-8d89-411f-bbb4-f8b2c93fdaa7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8cbdd0fc-c60b-4aba-aef6-2f083329bed2"
        },
        "item": {
          "id": "5f0df513-e44c-4c13-82f8-961d996bd8ce",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f518970f-030a-42be-8bc2-ee1faa22d97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caedcb75-612a-4ea3-8031-2a6c6065c57a",
        "cursor": {
          "ref": "05e6453e-d0ca-4fc6-85ab-bc5bed21783d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e38306f2-e1b7-4607-b10e-0cb9d03dd24c"
        },
        "item": {
          "id": "caedcb75-612a-4ea3-8031-2a6c6065c57a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "35f0fd4e-4cf6-46bf-9ec9-23d0d5c87ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e27a914-cf29-45ec-81d0-0f1dae92cfe0",
        "cursor": {
          "ref": "209056f2-2d65-46ab-b6d3-c354cb0d7b8a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7bc09312-5c79-478c-a8f0-875281337db5"
        },
        "item": {
          "id": "6e27a914-cf29-45ec-81d0-0f1dae92cfe0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1a47ec3a-f70b-4df8-97a1-b812b5a9a1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1b51a4-21fe-43e6-a170-aa4e7f78de6e",
        "cursor": {
          "ref": "5924effe-d68d-4492-bf9b-e17f7f7ddf3d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "33f6edfe-b57a-4a85-9133-d1cee147040b"
        },
        "item": {
          "id": "ed1b51a4-21fe-43e6-a170-aa4e7f78de6e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7ac65516-63cc-46e3-aaa7-d9494d4a08b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302b12fd-62d3-4a0b-9838-c5c45cf84ade",
        "cursor": {
          "ref": "540687cb-26c1-4513-a828-67de4d46867e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "964b9f88-1314-422d-9a6b-b7ed1923809d"
        },
        "item": {
          "id": "302b12fd-62d3-4a0b-9838-c5c45cf84ade",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ee5dea67-de66-4296-827c-ace32ce15e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de08338a-d7e0-46a3-a5cd-0835db99edea",
        "cursor": {
          "ref": "2145af46-98e2-4d8f-ba58-e3d890faa8a8",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6d4e1ec7-cc64-46a0-9f60-2ce690479298"
        },
        "item": {
          "id": "de08338a-d7e0-46a3-a5cd-0835db99edea",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b891ec16-9078-4374-b6da-78605f55c459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865c95fd-297c-44b8-9897-10b638a7e1a2",
        "cursor": {
          "ref": "c664852a-0a4d-4edf-8165-349e96f3b07f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "15db6b41-0a5d-4c0d-a538-025cc15f082a"
        },
        "item": {
          "id": "865c95fd-297c-44b8-9897-10b638a7e1a2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "316105a1-5a02-4672-b256-578082a9dae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e4fb49-3786-469a-97e0-8813c81caed1",
        "cursor": {
          "ref": "7c7c4796-a4c3-496a-ad11-992c36359096",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7c16fe6d-d67b-40d6-8346-f108aa5048d4"
        },
        "item": {
          "id": "86e4fb49-3786-469a-97e0-8813c81caed1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e6a1d5ea-3c39-46ed-b7a5-f2e5e2950906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b487c2-ca6d-4cf1-b63a-2ff47b485994",
        "cursor": {
          "ref": "d33fa238-ba7b-4688-a220-4c79028090f3",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "13eba627-22ad-4d21-ad8f-f090950abc25"
        },
        "item": {
          "id": "f3b487c2-ca6d-4cf1-b63a-2ff47b485994",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5a1e9ba8-1704-4b8f-9356-d9db1ee00b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94817eda-9c59-432b-9a5c-102821c7d662",
        "cursor": {
          "ref": "04a96f0e-c782-4ac5-9711-ac5e301a408e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c274b103-a588-43c2-9155-3b4bcef56bd7"
        },
        "item": {
          "id": "94817eda-9c59-432b-9a5c-102821c7d662",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6660b532-32d8-4e3b-af3e-8ab99d1e49ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0166a937-c55f-41be-a2ee-50ebd79ff887",
        "cursor": {
          "ref": "cc4903b1-036b-451d-8bd0-19f7684fff89",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8d606b4a-47c9-4c4e-bcc4-b95467518c31"
        },
        "item": {
          "id": "0166a937-c55f-41be-a2ee-50ebd79ff887",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "765d7eeb-e04c-4793-9fca-a1a9a57bb0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ce528d-b882-4e7c-93d0-786f0f8f51f2",
        "cursor": {
          "ref": "0160b672-118c-43f0-9569-edf6c7dc99d3",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5b02ec1b-dc1f-4d3a-b5fc-f71f9657e3ef"
        },
        "item": {
          "id": "89ce528d-b882-4e7c-93d0-786f0f8f51f2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2186afda-b7ec-46bd-ae5d-970ede32ae31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385349da-742a-4c0f-a064-bd249a333423",
        "cursor": {
          "ref": "4a4b11b6-24b6-4581-907f-7f7c8ba11c75",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "baed41ad-0ab6-44ac-86ad-93a034a6b98a"
        },
        "item": {
          "id": "385349da-742a-4c0f-a064-bd249a333423",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "31384859-221f-4b4f-a0f4-4d8e62a15127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620c6cbd-875f-481a-adbe-fee64747e05b",
        "cursor": {
          "ref": "61d65829-7cc9-435e-bf14-b7cee02a067d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "83774361-5cb9-45f6-bb21-1ad3f246cc27"
        },
        "item": {
          "id": "620c6cbd-875f-481a-adbe-fee64747e05b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ebb3679f-d709-4c5c-8453-466ac09635b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8959e73b-eeeb-478e-9848-9d13331e67e3",
        "cursor": {
          "ref": "09e99713-03a1-4ead-bb6e-77f907e9be2e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "87c5448a-65db-4328-bcc8-5407bece498b"
        },
        "item": {
          "id": "8959e73b-eeeb-478e-9848-9d13331e67e3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "60cad9a7-e2d1-4c3d-a226-a06469e8a658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb42f362-9ca0-4935-a139-a43a224a6498",
        "cursor": {
          "ref": "08e14dc0-f720-457b-b019-33dec0da1423",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e9ed881c-bc08-4620-af55-4697da1e6b63"
        },
        "item": {
          "id": "cb42f362-9ca0-4935-a139-a43a224a6498",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "684231dc-01c1-4073-9e23-8d5bae095d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25daf8e0-8403-4826-b198-30652d5bdfd4",
        "cursor": {
          "ref": "32d5b30c-1d56-4b41-84c0-7509761b81d4",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "363af7d6-1795-41b1-9faf-3b10273bb47b"
        },
        "item": {
          "id": "25daf8e0-8403-4826-b198-30652d5bdfd4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1a786d24-4e22-469b-a992-d5e78692f1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3395266f-ef36-4c46-9681-deaf26e3c839",
        "cursor": {
          "ref": "386a5ca2-b6f7-4718-af24-f17de1f9a759",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "31ba307d-830f-4b69-842a-32fd44f0586b"
        },
        "item": {
          "id": "3395266f-ef36-4c46-9681-deaf26e3c839",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cba41be6-0b60-4b47-937b-5f2533656e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b06fe8-3e3b-430d-84b4-fbf7e472b1b3",
        "cursor": {
          "ref": "249a2fa3-0a1b-4e1d-ab39-285149e8c2cd",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7c59ee5d-0c51-4055-aa84-c36475f1a85b"
        },
        "item": {
          "id": "90b06fe8-3e3b-430d-84b4-fbf7e472b1b3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "64f13d0f-8952-4113-948f-fe6e898a1dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1029c972-84f5-4159-a832-69f44979a816",
        "cursor": {
          "ref": "44af97e2-268b-4cb1-9166-2eadb159e179",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bb4bee83-620f-4247-b74a-b0f5aba65fe1"
        },
        "item": {
          "id": "1029c972-84f5-4159-a832-69f44979a816",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "22ebe7ab-60f1-41eb-a263-734bdae76c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea2268e-1214-4dfc-b503-b065250f7921",
        "cursor": {
          "ref": "ca83e2a3-1149-42c5-a58a-db71de9b3195",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d51d8bc2-12da-48ea-bd71-6f0e64761df2"
        },
        "item": {
          "id": "bea2268e-1214-4dfc-b503-b065250f7921",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6bdc7dca-b8c5-4a3a-9b04-a8831a3f4599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cffbca-5162-441d-bf35-9b6958b5a3f9",
        "cursor": {
          "ref": "675470e5-aaff-4f47-a780-f5b6bfb25158",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4164c6dc-1be3-40ec-80f2-980a05d5d2ed"
        },
        "item": {
          "id": "20cffbca-5162-441d-bf35-9b6958b5a3f9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "eb87a721-ef1e-4f34-b010-3c6147a92b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d6f505-521d-4e8c-bc73-982dd442d22b",
        "cursor": {
          "ref": "d99094d2-c1a9-49b5-9e54-6ff39879120c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "88b9bf42-89da-4c78-bc31-bc6df2ceec7c"
        },
        "item": {
          "id": "e4d6f505-521d-4e8c-bc73-982dd442d22b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "96477ff1-57ca-44eb-b33d-8aef6f306547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24255e41-8a06-48cb-b705-079210cc793f",
        "cursor": {
          "ref": "d77418f9-15ee-4218-a8ff-422d6b83cd8f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7359d18b-0077-443f-b4f2-fd1737602c1b"
        },
        "item": {
          "id": "24255e41-8a06-48cb-b705-079210cc793f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d2c06599-3e0f-49e1-8c4b-0d31c3be96a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eabbb38-3a89-41e3-8866-a7b0d6f753b0",
        "cursor": {
          "ref": "a7b782ef-b33b-4893-b96d-9825bfcde514",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b4fa77c6-bf0d-4297-8813-4d857f3ada47"
        },
        "item": {
          "id": "7eabbb38-3a89-41e3-8866-a7b0d6f753b0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "43d863b1-40c0-4d11-b01f-da68f8735d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ced1430-dca7-4e56-afb5-f228e124239b",
        "cursor": {
          "ref": "8f937202-d453-46c5-b30b-8e393b2370c4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "00fa42f3-1039-466e-840d-a7fb7cf3dbe2"
        },
        "item": {
          "id": "9ced1430-dca7-4e56-afb5-f228e124239b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "966e1d77-6544-44b5-87d4-dc526d6c077c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f37727-44f5-4cee-97be-2065245f72ed",
        "cursor": {
          "ref": "8687098b-d4b6-460c-bb92-49e346502622",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f7d8004e-1f47-4360-84a9-63c6150dd684"
        },
        "item": {
          "id": "18f37727-44f5-4cee-97be-2065245f72ed",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "34e0d743-24bc-4b77-9339-9c575fc26624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67869be5-b309-4802-b3ad-22b0c4593ea8",
        "cursor": {
          "ref": "fbd3ccc0-3f59-4d4f-92f3-28285bc1a410",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "005366eb-0ee2-4be3-af27-7c22c1878f1f"
        },
        "item": {
          "id": "67869be5-b309-4802-b3ad-22b0c4593ea8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c8926db7-914b-4f87-977a-4b79d0cf633a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15fa25e-df60-4aab-8585-bf5aad56d86e",
        "cursor": {
          "ref": "a705020d-6d2e-4549-8bd6-f1551774f126",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8f43fe2a-c279-46b1-abf3-d821f00a94fb"
        },
        "item": {
          "id": "f15fa25e-df60-4aab-8585-bf5aad56d86e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d98cd0c5-ac40-4f5f-b2c5-ebcd73a531c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0dd581-0378-4c7b-a7fe-45406b0797fd",
        "cursor": {
          "ref": "c7446649-8796-4bf5-83cc-daa1b27f69c7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "98e9c1bc-190e-4f89-8c4c-98830346c81d"
        },
        "item": {
          "id": "ff0dd581-0378-4c7b-a7fe-45406b0797fd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a44298bc-25ff-460c-bea1-41b8b3a0a8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4638b5bb-a280-4fc2-9bb3-31e7a9d0a23d",
        "cursor": {
          "ref": "f47397d6-284c-4c31-8288-af8fadd91c24",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "31c27fac-b569-42b8-8040-ccd23f601c04"
        },
        "item": {
          "id": "4638b5bb-a280-4fc2-9bb3-31e7a9d0a23d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d47aa5a9-c1da-4ae3-b1e8-d5fff202514f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee08070-2268-47fd-99b2-feec9ae0a350",
        "cursor": {
          "ref": "b6d43f3b-4db4-46a4-9032-43f481811992",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "48aa2b35-6076-4c8a-a181-1a733cb2326d"
        },
        "item": {
          "id": "eee08070-2268-47fd-99b2-feec9ae0a350",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "da8ed7ae-1ef3-4a72-b346-aebb15ed907c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6f05b5bf-1062-43ca-89eb-64e5eff666bb",
        "cursor": {
          "ref": "485d10b0-61f9-43a6-8a50-3677d5ee330c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "084db602-dc7c-43dc-8ad8-cf1ea33741fb"
        },
        "item": {
          "id": "6f05b5bf-1062-43ca-89eb-64e5eff666bb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "025c6bfe-2408-484f-8b22-9d234f2d3263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "af045f16-565e-445d-8d44-898d2e81990c",
        "cursor": {
          "ref": "fd18ad8d-9476-4d76-92e3-23f6c57913a7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d2798853-3a98-4d5b-9b09-67b326a6cfff"
        },
        "item": {
          "id": "af045f16-565e-445d-8d44-898d2e81990c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a47f35d4-3185-44f5-9016-ca7ad67fc08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d2b4d037-6a3a-448d-b328-f43d4868ea27",
        "cursor": {
          "ref": "325f0aa1-33f4-4bb2-9562-59c75ae8acea",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1fb1fe3f-24d8-4b86-b3d9-7e74e038e806"
        },
        "item": {
          "id": "d2b4d037-6a3a-448d-b328-f43d4868ea27",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "484ef79c-c39f-48da-89ce-f0a8685e77c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "46bc92f4-f231-4c25-8149-ee18a26760f6",
        "cursor": {
          "ref": "9ef45570-028b-477c-af06-86197d066846",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "39af9638-7196-45ac-b383-d1a5df0ce12b"
        },
        "item": {
          "id": "46bc92f4-f231-4c25-8149-ee18a26760f6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "61af8c7d-5eb6-42c0-8be3-9d1f0b8d8aa6",
          "status": "Created",
          "code": 201,
          "responseTime": 11519,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "30777da9-7ca6-472f-92d6-ac1b8e53167e",
        "cursor": {
          "ref": "2283ee24-6d8e-4e66-9fee-71d210915280",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "efbbdb22-dfee-4a83-9cdf-076e4ec9cdeb"
        },
        "item": {
          "id": "30777da9-7ca6-472f-92d6-ac1b8e53167e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "416c5851-92de-4d91-b723-04f10ca16e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "06d2fc08-c01a-4ae4-8ee7-46598596e15e",
        "cursor": {
          "ref": "745de36d-11f1-4bb0-a8f4-09f9e23e424f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f940d6f2-56c4-4ff7-a2fb-d920aa2cf65b"
        },
        "item": {
          "id": "06d2fc08-c01a-4ae4-8ee7-46598596e15e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6450ef48-a3c5-4069-8138-9a0302c09da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3cae74c8-d04c-4805-86f0-edc0381c7d98",
        "cursor": {
          "ref": "58e1697b-fbcc-4fdf-8c21-a65e8351c2d6",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5c8de1ad-d096-4fe6-9662-80c0c0cabe7c"
        },
        "item": {
          "id": "3cae74c8-d04c-4805-86f0-edc0381c7d98",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "43a13239-6c1d-4e42-a305-73a87f293aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43afa2b-5e23-4d1d-ac31-14593a431e35",
        "cursor": {
          "ref": "102f4e7e-2308-4763-a3c9-cffdb3181441",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f1febc30-c826-48cf-a284-4bde7552d525"
        },
        "item": {
          "id": "c43afa2b-5e23-4d1d-ac31-14593a431e35",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ef420027-7489-408c-abfc-7fe820281dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993c5022-e558-4bde-a148-6917ba2b08ae",
        "cursor": {
          "ref": "a1317f46-0a9d-40af-931c-a9cf0bbc3ce4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e319db9c-4c5f-4096-a35b-eca6f23a6611"
        },
        "item": {
          "id": "993c5022-e558-4bde-a148-6917ba2b08ae",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e47134cc-4b4a-4270-9fc5-be227f7847bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba53c75-27ee-46be-9d8f-53eca22b62f5",
        "cursor": {
          "ref": "58a932a1-b969-49f2-bc17-366c246d70c2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0218fca4-9cdf-4c07-8766-c46845fb65de"
        },
        "item": {
          "id": "dba53c75-27ee-46be-9d8f-53eca22b62f5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7d10ddac-d053-4721-a635-853718b6c5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e021a9c-e1f2-4620-9e00-f83aa19c44d4",
        "cursor": {
          "ref": "5c29ebb0-bd9e-4bb9-9169-22b79d805900",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "73c0e652-37ae-417a-b3fd-b489b61297fc"
        },
        "item": {
          "id": "9e021a9c-e1f2-4620-9e00-f83aa19c44d4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7f5715c7-6dc7-4809-b069-8cb76d75f65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2c7076-1c91-4231-9520-cc07637b89ef",
        "cursor": {
          "ref": "42659e17-98f9-4de1-937a-29e059fce55f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a5d3e2ac-9808-4230-9fc9-a60627ec7a4c"
        },
        "item": {
          "id": "4e2c7076-1c91-4231-9520-cc07637b89ef",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6cf28f6d-3b4e-4575-803a-2f4d5c84e21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190aeeec-f053-4232-a4ea-94c9f8bb2cbf",
        "cursor": {
          "ref": "e1a4371d-9001-43b5-b506-a9d7e88787e0",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "65fb95cb-ebb2-454c-ab3b-e8ea94b7aa3e"
        },
        "item": {
          "id": "190aeeec-f053-4232-a4ea-94c9f8bb2cbf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "69f36c94-c9f6-48e9-9155-4fd24ebc2af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e46498-d4c6-453b-9619-8ca524c0cca3",
        "cursor": {
          "ref": "bcd4d987-0fb0-4096-a886-82406b89461c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f09c8b1e-80a2-49d2-9086-db0f8db8b942"
        },
        "item": {
          "id": "68e46498-d4c6-453b-9619-8ca524c0cca3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "43a2e941-f5d1-423b-9696-cfebed5cbb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a6159d-0b5b-4245-a598-62a0c386f69a",
        "cursor": {
          "ref": "6e338bf1-3f6a-49c0-9a20-7b511b05d500",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e2435df7-1034-48b3-8577-36441343479b"
        },
        "item": {
          "id": "46a6159d-0b5b-4245-a598-62a0c386f69a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0f3fcab5-9b84-44d5-8736-bb8373f9c407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41f3196-30d1-450f-9c3a-41f10244e381",
        "cursor": {
          "ref": "955e59e0-412d-4a1b-81ef-076c57aba4aa",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3152bebc-c756-4316-bc7a-e56dc34db443"
        },
        "item": {
          "id": "c41f3196-30d1-450f-9c3a-41f10244e381",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b88e817b-f1f0-4b50-a3bc-3a52e848862c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ff5468-d123-48ae-9f0f-421e2c01f1ff",
        "cursor": {
          "ref": "0d987334-d0db-44d9-a3df-d6885c0c4430",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "347b9a4f-059e-40f7-9481-9b1e52d9acac"
        },
        "item": {
          "id": "31ff5468-d123-48ae-9f0f-421e2c01f1ff",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "941341fd-4aee-4eba-89b3-1ca6d0b4d6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfb4324-75f3-4f19-8f06-ab3aaffc583d",
        "cursor": {
          "ref": "e564156c-81d5-4043-a032-12d9d16c3cb9",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b0e6afd6-0863-414d-8e69-c7b58a011de7"
        },
        "item": {
          "id": "ebfb4324-75f3-4f19-8f06-ab3aaffc583d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "286f848f-f1db-4c15-af30-ade76238a99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 917,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72dc811-5f21-445d-bd35-0956e989e9f3",
        "cursor": {
          "ref": "57dfd0a9-0f7a-431a-b227-f8590edb985e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9d8d8bd2-8059-47bc-ab5d-e152ecf08bea"
        },
        "item": {
          "id": "c72dc811-5f21-445d-bd35-0956e989e9f3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "02a3c5a9-16e2-48d6-8d26-d43b4674a1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9838d337-dd04-4293-9e23-6a3707094267",
        "cursor": {
          "ref": "e9949e0d-1929-49b7-8094-f0b6f6c68fca",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e9dcfe68-d50b-4597-a38d-2cbc4d72bec4"
        },
        "item": {
          "id": "9838d337-dd04-4293-9e23-6a3707094267",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "618cad2f-1978-4739-a3bb-3dd055a9c597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ae1c2a-7831-4975-a457-a7cf034ba453",
        "cursor": {
          "ref": "ee1bd8da-c5e1-4060-9696-89f01fe9e638",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8b49a49e-1504-456f-af0d-81ea3746ca65"
        },
        "item": {
          "id": "c7ae1c2a-7831-4975-a457-a7cf034ba453",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d88c5e22-b8f0-4244-a8b7-daf59e6b1c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb494fd-25c8-4b07-bc73-a20019e5ef96",
        "cursor": {
          "ref": "b9409bf8-19e4-4561-af8a-cd167516debe",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "95825b34-aba4-45e1-930d-fc94ce1b16a0"
        },
        "item": {
          "id": "4eb494fd-25c8-4b07-bc73-a20019e5ef96",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "18e2e229-0134-45b3-bcef-c9002e78b5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d63938-63e6-4d9b-95eb-f6583d3e9022",
        "cursor": {
          "ref": "4b068a9e-29e3-410f-9a9a-689562ce855f",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1a8ab989-118b-4283-aee1-d473428440cd"
        },
        "item": {
          "id": "e4d63938-63e6-4d9b-95eb-f6583d3e9022",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "15a077e6-efd1-41b9-bbd4-aff4e3fc5063",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "200c58f6-34a9-4631-a4f0-3b063f35b0dc",
        "cursor": {
          "ref": "ba9dd60a-bb2f-4310-89a4-e87efc1ce6c4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c3879fb5-8c90-40c5-98a2-b214536a6234"
        },
        "item": {
          "id": "200c58f6-34a9-4631-a4f0-3b063f35b0dc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fa906488-d29f-4867-af0a-551723a17155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f281c879-2d2e-434a-a856-6249a36df1cc",
        "cursor": {
          "ref": "e15d50e2-6fb7-4a90-8eb8-23eaf7e5c16d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9112ad7f-67a6-433c-b705-869de6c6d4c1"
        },
        "item": {
          "id": "f281c879-2d2e-434a-a856-6249a36df1cc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "513212b7-4c8d-4229-8a88-037215003218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6dd32f-84be-46b9-b9a0-1c5931e21c7b",
        "cursor": {
          "ref": "c7deb923-43b8-455a-ac77-decd541caa51",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "012e20cd-9481-4af1-966e-3de13db5c61c"
        },
        "item": {
          "id": "7a6dd32f-84be-46b9-b9a0-1c5931e21c7b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "73faca49-2ed8-42fb-aa6f-5639063bba07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe99283-e118-4491-a2a2-369858142ce0",
        "cursor": {
          "ref": "576df639-de2a-497c-ae6c-45747d6ea3eb",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4b1ff4f4-4bf8-4cc2-8b17-f7998c59ef92"
        },
        "item": {
          "id": "dfe99283-e118-4491-a2a2-369858142ce0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dec5d9ab-8340-4153-89de-59183b24a4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4f0d5e-d5ee-4feb-ac73-918d4bab62d9",
        "cursor": {
          "ref": "dce7c2c0-b13f-4e6d-bf9c-b4b8830353c2",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e8e553a3-f8f3-4819-a546-5cafd53bce44"
        },
        "item": {
          "id": "7a4f0d5e-d5ee-4feb-ac73-918d4bab62d9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "78c5ba39-baec-4c54-b608-ca58e30bce11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52c1657-2cdc-4498-b0c8-36267bf6fe72",
        "cursor": {
          "ref": "354fde8d-34dd-4996-b101-46a6b60b6b92",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f0d0c95e-3124-4975-b572-a932909c067e"
        },
        "item": {
          "id": "f52c1657-2cdc-4498-b0c8-36267bf6fe72",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6d9586f1-546e-4ffb-99c3-6baada50aa26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5104abc-43ea-43ce-9b19-493383d6c7f7",
        "cursor": {
          "ref": "3d12a1b4-a394-45de-9e6d-df326516a4a9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2b2f79f6-c9db-49cf-abf4-3e3aa31573f7"
        },
        "item": {
          "id": "c5104abc-43ea-43ce-9b19-493383d6c7f7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f7041836-4255-43b1-94bd-f75a9eb57430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c5fe7e-8cfb-4320-89cb-9f380940f7f6",
        "cursor": {
          "ref": "c8e3d249-21ed-462d-a1ef-af36deace911",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "22200949-c404-42e1-96fd-f681a3b333c3"
        },
        "item": {
          "id": "b9c5fe7e-8cfb-4320-89cb-9f380940f7f6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "56fdec86-f88b-41f9-9a16-77fb248de968",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "c5459a49-77f2-42d1-9dea-99cc3270bd28",
        "cursor": {
          "ref": "a4b9c0fd-a80e-4bc4-a4e0-40866ba217fd",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d3a5710f-38d3-4f65-af2e-1066cc24b507"
        },
        "item": {
          "id": "c5459a49-77f2-42d1-9dea-99cc3270bd28",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6fb37a4c-7969-4a04-beec-c68e50b9bc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a607e35f-bdbb-42c8-874c-5c97a2148d49",
        "cursor": {
          "ref": "98303e5d-d3dd-4c4c-afab-e55a3c29b6e5",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "714d7205-14ab-433b-b68a-377e5e5b9782"
        },
        "item": {
          "id": "a607e35f-bdbb-42c8-874c-5c97a2148d49",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dabc4472-2f37-4255-b87c-9436d19306e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b087956-e547-4056-9631-9f5080e1bd54",
        "cursor": {
          "ref": "b00089cf-8feb-40c1-872e-ac9acabdd599",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c61ab6f8-bd04-489d-863a-2ff674b7aace"
        },
        "item": {
          "id": "3b087956-e547-4056-9631-9f5080e1bd54",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fabcc71c-9fe9-48c3-8d29-76e8ce484a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3f6f6e-6d7f-48c1-ac29-3b11fa689d64",
        "cursor": {
          "ref": "1bb7dbc6-c723-47aa-a26a-c3f5c5bf7d0d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0385fa63-f39a-464c-9d0e-d257e69f99d5"
        },
        "item": {
          "id": "6e3f6f6e-6d7f-48c1-ac29-3b11fa689d64",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ac4dfbb1-d5a8-4c34-a3d9-f3c9d3f653ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db4f8b0-cad3-4824-ad9a-2b8c46a6c1c5",
        "cursor": {
          "ref": "1c5bbc4f-1788-451d-944d-5b3114b3c116",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ace22143-aaf2-4292-9bd8-63c3eab6160f"
        },
        "item": {
          "id": "5db4f8b0-cad3-4824-ad9a-2b8c46a6c1c5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "87a773d3-59fd-4355-b9d2-d913b38ac921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37fd077-bb74-4412-9338-2096531ccf70",
        "cursor": {
          "ref": "41922d45-78d6-4379-a11c-cc0a9c17a022",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e7919c09-3466-4a86-a26d-0999dcb3dc35"
        },
        "item": {
          "id": "c37fd077-bb74-4412-9338-2096531ccf70",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8cf0b082-dba6-4690-9c58-d3b58a1bfb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b28b4c-4bf7-42d2-a9ed-47fdaa285eee",
        "cursor": {
          "ref": "1ad2179c-07fe-4dff-8624-11b444035f88",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b331ae58-b7ea-4bd0-a99b-9fd14ec58a84"
        },
        "item": {
          "id": "03b28b4c-4bf7-42d2-a9ed-47fdaa285eee",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4616c816-fba2-484d-8a13-2452f297cf2c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "bf6cfa55-2eec-4b92-939f-0db5446f10ec",
        "cursor": {
          "ref": "77abb526-3845-4509-a46e-77e2dfbea8b8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "865b5290-4cf3-4e00-9eab-043bdd1d9443"
        },
        "item": {
          "id": "bf6cfa55-2eec-4b92-939f-0db5446f10ec",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bd70e1a1-9455-4d3c-8908-0e8e964ede83",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "94607293-3c69-4869-a0a6-e96a913bc03c",
        "cursor": {
          "ref": "974a5ac9-1c6e-4350-b5f7-a0a7f396a526",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6cd55fb3-0732-4c83-aef9-3859a5d0e5ac"
        },
        "item": {
          "id": "94607293-3c69-4869-a0a6-e96a913bc03c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "33549548-20d4-4f92-a3e6-1347daefe65d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "3df382c5-ab93-486a-a512-c7e1de8f1d50",
        "cursor": {
          "ref": "76a67008-a60f-4382-823b-4fd4865aa06a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "56798a1c-3930-4768-93ba-1a94391c7386"
        },
        "item": {
          "id": "3df382c5-ab93-486a-a512-c7e1de8f1d50",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c2d43d4f-7af3-48aa-b1d5-3eec22e956a9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "e74abdbf-b7d1-4ae2-8b14-2d74eac22c70",
        "cursor": {
          "ref": "a1b38304-3cb3-4c73-8730-4b79bbdf504c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3feb0dce-ca1d-4cd0-a1ad-4276befd0bfe"
        },
        "item": {
          "id": "e74abdbf-b7d1-4ae2-8b14-2d74eac22c70",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "71a6edf0-c311-4160-ac38-01a2d7f6b385",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "2f932f19-2403-4bd1-944d-28c8ec05d830",
        "cursor": {
          "ref": "b67bc772-e2c5-427c-bee0-8c3745d836ba",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ca0db342-373e-47f2-8e82-b07ea5a0a457"
        },
        "item": {
          "id": "2f932f19-2403-4bd1-944d-28c8ec05d830",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6378264d-d52d-4cb0-bc68-d960ec0d9823",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "83150f28-8cf3-478b-a2be-dbf1befa3eec",
        "cursor": {
          "ref": "7b530a5c-84fe-4ae3-8bc7-517f373e5d23",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6c0cbfad-0ea2-4c41-9417-dd66d7b02dde"
        },
        "item": {
          "id": "83150f28-8cf3-478b-a2be-dbf1befa3eec",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2400c6eb-6f19-4300-9170-7bb794280c0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb04062-7884-4bde-81ff-cbf883e301db",
        "cursor": {
          "ref": "8ecdf299-ee5e-47c8-8dd6-0981e7e5f19e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f7bc9739-53f7-48a9-b2ac-ca303e76e19f"
        },
        "item": {
          "id": "6bb04062-7884-4bde-81ff-cbf883e301db",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7677370a-2bff-4890-a9aa-fd831fa510cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202c97a8-a481-4426-9514-3a00a6d90217",
        "cursor": {
          "ref": "be2c33f6-132f-4a59-95dc-27b4b335ed49",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bf424b8f-2e28-4fae-a10e-f2eb96866c53"
        },
        "item": {
          "id": "202c97a8-a481-4426-9514-3a00a6d90217",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "462bad87-69f6-4158-a154-be9fdd070693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e80fc2a-66ba-489c-ad5b-91780237ef0a",
        "cursor": {
          "ref": "56ab3d8d-6149-4eb3-8ffb-4735f7f03af1",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3f79be7b-ee1f-4cef-92ee-012c170cf597"
        },
        "item": {
          "id": "2e80fc2a-66ba-489c-ad5b-91780237ef0a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "08c53cbd-4c1c-4b68-9e12-5b705e212bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330a95aa-c2be-4674-b28c-d43b193bc3cb",
        "cursor": {
          "ref": "b5533cb7-d1d3-45f4-8d51-73ba683464a4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fbb044cd-4587-4253-ba4c-4ee72b766f05"
        },
        "item": {
          "id": "330a95aa-c2be-4674-b28c-d43b193bc3cb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "535180a6-0064-4b55-b505-0bc799faca7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db50b14-5762-4e05-bcd8-f03ce80f7080",
        "cursor": {
          "ref": "a4466cd0-f814-4a0e-a23f-acfe56f4cd35",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d5451e3c-ed6a-44b0-bcf7-c8666b081197"
        },
        "item": {
          "id": "5db50b14-5762-4e05-bcd8-f03ce80f7080",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2f0c77da-a785-453f-bf7e-77ea9fa9c719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1e2827-e891-4ce9-80bc-504b91ff6345",
        "cursor": {
          "ref": "f8921a94-aecc-4500-89db-3b57fa92565b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6cf61be7-48c2-438d-aae0-eaac7ae77251"
        },
        "item": {
          "id": "6f1e2827-e891-4ce9-80bc-504b91ff6345",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7c22a572-1620-4532-9571-ef3e709872f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0b0b9b-9ab6-4a1d-b5dc-927c6a7ae626",
        "cursor": {
          "ref": "c269b238-981d-4422-ae35-c611752c60fa",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "10fb3750-28fc-4c60-a1fa-637a13138886"
        },
        "item": {
          "id": "ff0b0b9b-9ab6-4a1d-b5dc-927c6a7ae626",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d9de28eb-2801-407f-9104-3fdbc1e59e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50578de3-7d97-4681-946c-d5096e227e76",
        "cursor": {
          "ref": "a5954994-8636-430c-8adc-175d21cf7661",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4eb22478-26e2-431d-b556-57885a2f3590"
        },
        "item": {
          "id": "50578de3-7d97-4681-946c-d5096e227e76",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "dac02b42-1aac-4357-aacf-807b0f5a0315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e075a9af-29e2-4611-8cb1-3e63641e812a",
        "cursor": {
          "ref": "6a1dbc68-e2c5-406a-80a8-def4aafd4b07",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f560a187-e76b-4507-a245-9fbf8c7af70b"
        },
        "item": {
          "id": "e075a9af-29e2-4611-8cb1-3e63641e812a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "81872c7b-15e5-4bc5-a25d-3b197c50b1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11aa1db-1b64-4885-8cc7-545aae156c87",
        "cursor": {
          "ref": "3fa2a96b-6a04-485d-ade5-088dc8058dd8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9f535253-d903-4ed9-bdf2-b71d4aaf14b9"
        },
        "item": {
          "id": "e11aa1db-1b64-4885-8cc7-545aae156c87",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9f824816-ce68-47a9-bd88-64dd2f8b0529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73120b37-1e38-4210-955b-c75ba8ba7a77",
        "cursor": {
          "ref": "56257041-95b7-47da-9763-6fb3de6bafc7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "eded4b4e-c411-439a-996d-dcadcd498ed6"
        },
        "item": {
          "id": "73120b37-1e38-4210-955b-c75ba8ba7a77",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c27d1bbe-6379-45e7-98f4-4badfe672d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0908b23-3574-401d-91ba-65f7b935103e",
        "cursor": {
          "ref": "d9701722-4e34-40e8-9acd-4a363497b500",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "216bd466-25d0-45cf-b7db-b07f2803f39e"
        },
        "item": {
          "id": "b0908b23-3574-401d-91ba-65f7b935103e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2f2266ca-c104-4519-a15e-853b6fe163b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9ef382-bebd-456e-9148-54f4c12d6dd8",
        "cursor": {
          "ref": "d6d64fef-ea5e-4fe8-8410-219ee6dce014",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "39204daf-97d9-4231-9812-640cbbe7c1bd"
        },
        "item": {
          "id": "6e9ef382-bebd-456e-9148-54f4c12d6dd8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7a01d639-47fe-4582-bd0c-db4562bdbda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32b56a4-dcc3-45e1-a672-e1a81aca6b84",
        "cursor": {
          "ref": "f60fbb40-141f-4f0b-a2ef-f57eafd083e4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "aa964d2b-545a-4a41-84fe-482f5bf95896"
        },
        "item": {
          "id": "a32b56a4-dcc3-45e1-a672-e1a81aca6b84",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d953e8c9-6b45-4580-bacd-ccd5b09dfcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67c4315-05bf-4dc0-ad23-5fd9a66973c7",
        "cursor": {
          "ref": "247d2a15-79db-4719-994a-349556760708",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1bc00f24-ae35-4053-b9bc-75c0015351ea"
        },
        "item": {
          "id": "c67c4315-05bf-4dc0-ad23-5fd9a66973c7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ac4dc313-4281-4b44-b5f8-69385a1b8c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fafc4ff-bfc2-48a7-b8f5-406b2de67aeb",
        "cursor": {
          "ref": "1469b097-0747-426a-ae4f-7ec3d31bef82",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d096dfac-b822-4dd1-93e1-a47ba26ef277"
        },
        "item": {
          "id": "5fafc4ff-bfc2-48a7-b8f5-406b2de67aeb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "214bb076-3b44-409c-b176-39b3a95382a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e823821e-bcee-4f18-ac42-065e31c21294",
        "cursor": {
          "ref": "a7fa9de4-afd7-4785-9bd3-0f03d599afd4",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b8687ff5-1496-47a5-98c5-8fb56ea4baed"
        },
        "item": {
          "id": "e823821e-bcee-4f18-ac42-065e31c21294",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d5a0758a-036a-46c2-a533-20ae5a0e370e",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "10c8af75-d41c-40e4-ba64-af2f27152dee",
        "cursor": {
          "ref": "e26ab26e-de5e-4bfd-be45-ad99b2caae3f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "91169a50-3267-49da-a8ad-461c7c98d2f0"
        },
        "item": {
          "id": "10c8af75-d41c-40e4-ba64-af2f27152dee",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "47c041da-5bd3-40f1-8af9-5a2c0fe1a13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2f0ec6-35e5-41b4-ae6c-e9ebecae6f29",
        "cursor": {
          "ref": "cd69e024-c753-4758-8cfe-8dbd0a8a43fc",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "30cc2ca1-16d1-46fa-ac8f-abceb690cb4c"
        },
        "item": {
          "id": "1b2f0ec6-35e5-41b4-ae6c-e9ebecae6f29",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "253e2884-4051-4562-a121-7ca42709290b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fa9b0a-6563-454d-a66e-aaa5e2b12d2b",
        "cursor": {
          "ref": "8746fd14-8537-4cfc-943d-4e851ad7bf57",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "83027287-35c1-461f-80b5-1950c219dea9"
        },
        "item": {
          "id": "11fa9b0a-6563-454d-a66e-aaa5e2b12d2b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a437d6de-3227-4aea-aadd-908a796a3d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7996b93-fcbe-4a86-9e00-a1a5bad25da2",
        "cursor": {
          "ref": "0e2eeb43-f006-4503-a481-2970055a6100",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d7fdc87f-4add-4c56-be4a-080d9b2075a9"
        },
        "item": {
          "id": "f7996b93-fcbe-4a86-9e00-a1a5bad25da2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "871b5b41-7363-41d2-9a7b-0b41650f52d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb7269e-0034-4925-aa76-7b5434887399",
        "cursor": {
          "ref": "68eaa785-8c72-4d37-ab26-d24babb2ea54",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b766e7e2-0906-4abd-9cda-0ef25ddd653a"
        },
        "item": {
          "id": "2eb7269e-0034-4925-aa76-7b5434887399",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3a0bbb2b-bacf-46e3-9c60-59f64fc3a910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00335d0b-a39c-48b7-9802-e224d2169d78",
        "cursor": {
          "ref": "7213f075-071e-415c-93d1-ffbfb0ba2073",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8bf6b2d7-39be-4561-96ce-cd164739dcf5"
        },
        "item": {
          "id": "00335d0b-a39c-48b7-9802-e224d2169d78",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a051ebef-90cd-4245-86b3-ec18c185c3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612b8631-6de0-4c9b-be9d-a33325bfc70d",
        "cursor": {
          "ref": "5f940a57-27f1-435a-828d-fa3c44cf4791",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "671dd53c-ff0e-4a22-ba7f-a1a8a2ee5235"
        },
        "item": {
          "id": "612b8631-6de0-4c9b-be9d-a33325bfc70d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f213ff0e-1e69-4587-b81d-32a4e8b958d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3550d30-9ce7-410a-b76b-f434d05f924b",
        "cursor": {
          "ref": "2aac82ce-da4c-4e82-9f3d-9ba8f962e4b5",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "45c675b8-5c43-4260-bf9b-dc62f3f11678"
        },
        "item": {
          "id": "c3550d30-9ce7-410a-b76b-f434d05f924b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "48959f20-d271-41ae-8840-0013696e119a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563d9730-9292-4a15-9167-ece07cdf8fdc",
        "cursor": {
          "ref": "115c10ae-608c-4030-b692-1c2e55f82f59",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e60dd727-16a7-4a17-b011-0af1b456358e"
        },
        "item": {
          "id": "563d9730-9292-4a15-9167-ece07cdf8fdc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e2b4458a-7555-41f8-9243-e3128dc8b76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580804f4-7f0b-4c7a-909a-1d0e75fecdbf",
        "cursor": {
          "ref": "78d346fb-f2c7-4f8b-bb31-a2c59c66dd21",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "59c2820e-b3d4-46f7-8abe-ae6d21f71e30"
        },
        "item": {
          "id": "580804f4-7f0b-4c7a-909a-1d0e75fecdbf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9d22d305-7857-40ad-ba47-566b539946cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0138e9fe-b5b7-492e-9fd1-05b6bda704ec",
        "cursor": {
          "ref": "4ad09296-3409-4f60-ac58-ad19e90a8a2d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cb99595e-2137-457c-8dfd-6aa64899cd4f"
        },
        "item": {
          "id": "0138e9fe-b5b7-492e-9fd1-05b6bda704ec",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0ade5e87-6252-425a-bde4-095861ab69a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a235de-00b4-47cc-ae4c-1df75c0be64f",
        "cursor": {
          "ref": "30b39aea-b3f2-47aa-bcf7-e7e3d36a6d8b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2458df26-d06e-47ce-a17c-4089e56cd628"
        },
        "item": {
          "id": "56a235de-00b4-47cc-ae4c-1df75c0be64f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "db63de74-b51e-400e-94bf-215c8a8f8cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0e93b5-325d-437c-b374-4ec941305f27",
        "cursor": {
          "ref": "f3824963-28ff-4b12-b85a-e8114aaa1203",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "db63ea67-19f4-4509-bcf4-ec8adcdee770"
        },
        "item": {
          "id": "5c0e93b5-325d-437c-b374-4ec941305f27",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3d92301e-dc44-486d-859d-fe1a1b346015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d65304-095a-43c5-a5da-972ba4559612",
        "cursor": {
          "ref": "0200660c-f832-4bfb-8a3b-6faa2677bab1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f9c5e71a-c09b-408e-b354-8d0840744f5d"
        },
        "item": {
          "id": "f5d65304-095a-43c5-a5da-972ba4559612",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0e4d0403-04f9-4055-a412-addbe22b7b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263bfb1d-0f95-4faf-bb2b-869092cdfb94",
        "cursor": {
          "ref": "5953e997-1f82-4ae8-bd12-d8bf63b579c0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2303a03a-a308-4e5a-bf1e-96d31810e27f"
        },
        "item": {
          "id": "263bfb1d-0f95-4faf-bb2b-869092cdfb94",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d9cc8490-60d8-480b-8e38-0f16264d5a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f13734c-71bd-483f-9ff3-eba7650807da",
        "cursor": {
          "ref": "fa1ee6d8-d858-44a6-a7a7-49c4d870525d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1f829cc0-af34-49d3-b6fb-4f39f0f42039"
        },
        "item": {
          "id": "2f13734c-71bd-483f-9ff3-eba7650807da",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6eb08eab-bb7c-457d-b966-351ca0491da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd82cdf7-16a9-46e2-8b65-a508ed13e042",
        "cursor": {
          "ref": "be791315-b6c5-4e22-b608-a632ca916a57",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a1183d62-45e3-403f-9bc8-4e662dcf5c2c"
        },
        "item": {
          "id": "dd82cdf7-16a9-46e2-8b65-a508ed13e042",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c5c48b55-e7de-4c61-b006-12ef933c7cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8455237-e2cc-41d0-9e5b-17ce35288f57",
        "cursor": {
          "ref": "0c5ce0ae-4098-4e5f-8391-04372ad5f9df",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "992669d3-cef9-49af-8f57-ad9838073616"
        },
        "item": {
          "id": "c8455237-e2cc-41d0-9e5b-17ce35288f57",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "30de1297-262c-4209-a10e-0469a0bf77aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cdd804-9ba4-4f72-9dfd-9df9c468e3b8",
        "cursor": {
          "ref": "f55aa2d1-8b40-4b8b-bb8f-e29d5388b58b",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5f3d7ba4-afde-4904-8795-dd9f6207de0e"
        },
        "item": {
          "id": "44cdd804-9ba4-4f72-9dfd-9df9c468e3b8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e284cbaf-58ce-488e-91fc-c2bc870c621c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2e3450-3aeb-4f2a-b9cb-5e33ac84e87a",
        "cursor": {
          "ref": "40c1e57e-62f6-4cef-9947-d4f1ede4c857",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ac5d4c1c-78d1-40c7-9154-5e5ae000ccf4"
        },
        "item": {
          "id": "dd2e3450-3aeb-4f2a-b9cb-5e33ac84e87a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0c939140-9e21-4a86-b00e-b8aa6ed53eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd0ea1f-e38d-485f-966c-23d639f3cb0e",
        "cursor": {
          "ref": "a8a84d04-ab3f-4712-97d2-720cc0c0aa44",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "daee031b-3625-45de-ad50-b0d2bdcf54c6"
        },
        "item": {
          "id": "4dd0ea1f-e38d-485f-966c-23d639f3cb0e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "52dd1784-15d3-4354-ae3c-3133e5e2a0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8453c188-280b-48b3-ac28-95ad6d44b8e6",
        "cursor": {
          "ref": "d22f605e-a81c-4559-9878-83d6540a3f92",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9375e893-a94e-48d5-9b7e-835a510d4810"
        },
        "item": {
          "id": "8453c188-280b-48b3-ac28-95ad6d44b8e6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "eb8a6d18-a26f-4e8c-9530-8bab2b33616b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73920ac5-521a-4d14-aca0-9c5471a28868",
        "cursor": {
          "ref": "70425911-8cd3-400c-86b5-9db96361d809",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f988d68e-8bda-445b-9cf3-6d6612268b69"
        },
        "item": {
          "id": "73920ac5-521a-4d14-aca0-9c5471a28868",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "09601308-772c-4c49-8291-714f1ea691a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7216b60-fde2-4421-be08-d4a490c78ae1",
        "cursor": {
          "ref": "58a03a9d-e611-4b75-adb4-abd59207caff",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2ccfd2c2-1db2-4fd5-8c47-7cc679c0d11b"
        },
        "item": {
          "id": "d7216b60-fde2-4421-be08-d4a490c78ae1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6a890b72-c357-470d-9c84-915373c21297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2ba8b3-3d51-45c9-b27d-d331f2f8cdda",
        "cursor": {
          "ref": "d46e7e14-6853-47b8-ba8d-bc386133b073",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "89293949-a4b3-45bd-a8e1-a8812ceee209"
        },
        "item": {
          "id": "3b2ba8b3-3d51-45c9-b27d-d331f2f8cdda",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e2408bed-b467-453d-8e0c-74f0680908b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7da7ab-b66e-466c-8b05-c0666b6d045f",
        "cursor": {
          "ref": "1ebec427-9182-447a-82a0-cb6498adc743",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "73eca187-1465-4a47-9112-bc377df5f89d"
        },
        "item": {
          "id": "ac7da7ab-b66e-466c-8b05-c0666b6d045f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5e40f310-68ca-4fae-80d1-0575f2454f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcf1025-2859-45a9-9d77-4275ed08a5dd",
        "cursor": {
          "ref": "1a92a1dd-d1ae-4718-877a-8e1ceda54280",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "394e6fa8-f125-44e9-b30b-99c824402764"
        },
        "item": {
          "id": "9bcf1025-2859-45a9-9d77-4275ed08a5dd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "52195b69-9fa0-4bd3-a949-bfef07c09ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee25b69-7349-403a-9562-bac516e97e63",
        "cursor": {
          "ref": "8647a8b3-6819-4399-a13c-fbc0ffbc5165",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9107ab10-8008-4bea-8bf0-5b6f94220abf"
        },
        "item": {
          "id": "8ee25b69-7349-403a-9562-bac516e97e63",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "02bdb9dd-cb18-48f2-9256-2995dcd028a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574b4267-6a89-4cb9-a485-b3705a9dcc5a",
        "cursor": {
          "ref": "4abe88ec-f811-4a7f-9a45-2982bbab6a59",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c38c6a60-9c64-40c3-985f-68ea81bfd561"
        },
        "item": {
          "id": "574b4267-6a89-4cb9-a485-b3705a9dcc5a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cf6f5628-2cd1-48c5-840b-735b34498d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f48b72-6b9e-4486-85fa-f0533ed94dc5",
        "cursor": {
          "ref": "683c00cc-b002-4d38-8dd3-3e918f844359",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b3f328a7-8a07-446c-af76-a60aada425b6"
        },
        "item": {
          "id": "07f48b72-6b9e-4486-85fa-f0533ed94dc5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4c52230c-aa71-451e-a9b6-75a1f4aa3af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b296a0f-9bf7-4d49-8da1-d4df870ad641",
        "cursor": {
          "ref": "e117c986-8eea-4b92-9a68-fc2b26f066dd",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c2cc494c-77e3-4499-8d84-70809e4e739d"
        },
        "item": {
          "id": "5b296a0f-9bf7-4d49-8da1-d4df870ad641",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "056ff445-1123-4fb7-bf96-4b94543409a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5de2b6-c665-4162-aa95-b7906ff15f04",
        "cursor": {
          "ref": "a5e2bab0-1010-4ee2-8b16-f11e62ea6048",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "496142fb-59b6-49eb-b6cb-46aa17bb84c0"
        },
        "item": {
          "id": "0a5de2b6-c665-4162-aa95-b7906ff15f04",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7b6cff4b-252f-4ac4-9ed5-ef31610e36b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16f7905-972c-461c-9f66-c4179d7b2c1c",
        "cursor": {
          "ref": "bbb2e56e-cfe8-4e50-b873-2f2a7a398c5a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bc32d91d-cd05-4b0b-9f40-1d1730f7f9a9"
        },
        "item": {
          "id": "e16f7905-972c-461c-9f66-c4179d7b2c1c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d6d30c55-c049-43d7-bcb0-32bf6b175d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563bf620-e28f-44ea-b3c8-c0378ecc50ad",
        "cursor": {
          "ref": "c64a3872-40a6-4311-835d-2d725e8e7e94",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "314244a9-2b03-4baf-8146-6fb89e201e3a"
        },
        "item": {
          "id": "563bf620-e28f-44ea-b3c8-c0378ecc50ad",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8f5f44cd-a807-4005-b5f0-3b027837691f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57578064-5c2e-4135-9b2b-2eb1f66b3068",
        "cursor": {
          "ref": "7f1ab450-fef2-429c-a20f-f3e20c12f23a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4dfe1318-cc5d-433e-87a8-3cdcfc9f3406"
        },
        "item": {
          "id": "57578064-5c2e-4135-9b2b-2eb1f66b3068",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "03b279da-dec4-4b63-872c-0f5baa399594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002cd4c0-1599-4dc9-b36d-20d138267081",
        "cursor": {
          "ref": "6c81ab0a-bb86-45c0-9cd9-0eab6f3a6528",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6940a12b-e467-4fbc-924f-efa9f7bc7106"
        },
        "item": {
          "id": "002cd4c0-1599-4dc9-b36d-20d138267081",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b094cfdb-1b9f-43b8-affb-b19d46c2d58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1155615-023b-4cb7-8e54-7b7b3ae01f96",
        "cursor": {
          "ref": "8582e095-abee-40a6-a636-b11c0e0b9ba3",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bf233f38-dcab-47b8-9374-61be5e0ba1d0"
        },
        "item": {
          "id": "c1155615-023b-4cb7-8e54-7b7b3ae01f96",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a9b6819a-45d7-4980-ae03-9ea304138cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f554d0c-e97b-46be-95cc-34e16e4e589a",
        "cursor": {
          "ref": "930227bb-69ed-4d86-9d5a-124056de1146",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d2bee5d1-4a05-4365-9a91-4336d4b7fc78"
        },
        "item": {
          "id": "5f554d0c-e97b-46be-95cc-34e16e4e589a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "076f83d6-f7d4-4c7f-b29a-b319c688e245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4d8269-80df-40d2-b18d-91fa77764b6f",
        "cursor": {
          "ref": "65ef743b-78fc-4b95-bcf5-62b737197fe2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dc52e5c4-73ef-49a8-bb3e-384c0940ecd3"
        },
        "item": {
          "id": "6c4d8269-80df-40d2-b18d-91fa77764b6f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f21ebe7b-db91-47b1-bd3f-16f6f8390dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fe293c-80ca-456b-9674-d68126da891f",
        "cursor": {
          "ref": "b842d19e-a28f-4cba-8db2-9558bfca9c1d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "04298cf6-821e-42bc-aa62-22ef402a2955"
        },
        "item": {
          "id": "59fe293c-80ca-456b-9674-d68126da891f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "245262a9-eea5-4768-9cf6-eff98ae93b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e1f9a9-ceea-4b98-92d0-9bac8bcecc5b",
        "cursor": {
          "ref": "a7a5b032-937f-4769-98c8-728f80967802",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a19f29cd-35e8-47dd-ac82-ba3b890838c6"
        },
        "item": {
          "id": "d9e1f9a9-ceea-4b98-92d0-9bac8bcecc5b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cee0b3ae-aaec-4e9e-9cca-0866a5880e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06bc8eb-a6f7-4827-92d0-016b6951b162",
        "cursor": {
          "ref": "407241e1-4ca1-45bf-85fe-daebb785146b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "67faf99e-183f-4ba7-a3c2-71a4763918d4"
        },
        "item": {
          "id": "a06bc8eb-a6f7-4827-92d0-016b6951b162",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d55a8710-26f6-41f3-8d39-3bc8e6cfa6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e24ebf6-3e07-4ee3-8910-448c2d2c8626",
        "cursor": {
          "ref": "87dba4e4-2a4b-4127-92d0-295f8a34e7f7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "344b0d98-6001-448d-8b9a-5961aa8aaf29"
        },
        "item": {
          "id": "9e24ebf6-3e07-4ee3-8910-448c2d2c8626",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "27798602-c5ac-415a-b7dc-d36fa4742bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae4d8a3-24f5-45f8-a9b6-e4505d1b25ee",
        "cursor": {
          "ref": "1fbb4f86-d4b5-4483-be31-2f37011998c6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "04ced4ab-f3d5-4bbe-8105-1c9a9cba0ef3"
        },
        "item": {
          "id": "aae4d8a3-24f5-45f8-a9b6-e4505d1b25ee",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "145f1d3d-af2e-47d9-9691-b90cdd69b575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67923c3d-0807-4c7f-bcc5-ffdf33a08fdb",
        "cursor": {
          "ref": "6dc0fdb3-d728-4fc2-ae5e-a1df6fa2902b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "64d2bc32-79dc-4d0e-853c-bd86bea1f6b7"
        },
        "item": {
          "id": "67923c3d-0807-4c7f-bcc5-ffdf33a08fdb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "01c5ff50-4a28-4516-8ada-fd028271f812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759f54b8-3f9d-4fb3-a883-3e491733e919",
        "cursor": {
          "ref": "bb80321e-c839-44f3-866f-1798506896cd",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "776805ef-3d49-476d-990b-e57920b40364"
        },
        "item": {
          "id": "759f54b8-3f9d-4fb3-a883-3e491733e919",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d4bb3c92-3fbf-43f6-8cb8-6bbde58f62e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fc644a-75c4-41d6-83d8-b7925060b4ea",
        "cursor": {
          "ref": "d3cd2447-56c8-4a31-9cde-8355176eaf10",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5305335e-d3b0-4b35-8214-40c446019830"
        },
        "item": {
          "id": "e5fc644a-75c4-41d6-83d8-b7925060b4ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8a419728-0112-4e78-81c1-b415b3f47a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861650c4-617a-4296-a2d8-7580fd274ccf",
        "cursor": {
          "ref": "c9a44069-376c-45bf-ab66-bf348ef71a74",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dca87696-47a2-46e2-8321-9b121dec32e1"
        },
        "item": {
          "id": "861650c4-617a-4296-a2d8-7580fd274ccf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b176d6b6-ed5d-4d3e-95f1-f88a9b2b8a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db44fac2-ebf5-406d-8741-628fac579558",
        "cursor": {
          "ref": "49e255e7-5a83-4dfa-bef7-0d86b58f7df3",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5ee7bdf8-36f6-4808-ad36-bc95f35f20ba"
        },
        "item": {
          "id": "db44fac2-ebf5-406d-8741-628fac579558",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1fa42b66-9f42-47a2-97c3-167440a27fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0d4d1d-eb1c-46d3-9c49-96ea838a8c5b",
        "cursor": {
          "ref": "542bb87b-5e71-4c56-a772-a04062c5f8e0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ffdc1641-e090-44f8-989b-a586112320a0"
        },
        "item": {
          "id": "4c0d4d1d-eb1c-46d3-9c49-96ea838a8c5b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "06b9e495-4c87-47c5-a00d-f4d72e74f2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5123a6-54b2-4764-83fb-f1ea220ca364",
        "cursor": {
          "ref": "8c90ed3d-8368-4b04-938c-8e569e1524b2",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d5de860c-a9b6-4923-af2e-67bfb712e49d"
        },
        "item": {
          "id": "2d5123a6-54b2-4764-83fb-f1ea220ca364",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "030928c8-01d4-45aa-8aee-a297e1b24c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6838f938-af75-4de4-a97d-7b9ab4c7c8b8",
        "cursor": {
          "ref": "7bfd80cc-73b3-405a-b08f-95b89fac9cb8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4de4e2b4-ee7a-4ccc-ae02-d920d5e5b6ca"
        },
        "item": {
          "id": "6838f938-af75-4de4-a97d-7b9ab4c7c8b8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "db3ac0ce-7748-427d-b244-4b24a0b6f51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106c0ff7-d97d-4883-b03f-11bb42ee19f4",
        "cursor": {
          "ref": "8ce12b8b-96e9-44bf-ad83-bffcdb6b8d1c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8bb46a04-0141-4de3-a142-4c16df4c2912"
        },
        "item": {
          "id": "106c0ff7-d97d-4883-b03f-11bb42ee19f4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "22d321cd-25e3-427a-ad0c-5cb95c1e5a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a58ea5c-b57e-4845-9f7f-8631a87ee229",
        "cursor": {
          "ref": "39990b45-aff9-4627-9cce-6e5c0bacd064",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7c2d176a-d2ff-4588-a998-25bb8649aa5a"
        },
        "item": {
          "id": "7a58ea5c-b57e-4845-9f7f-8631a87ee229",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d01affc6-1930-4ab2-95d6-f4912822a96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e69fc0-c7da-4596-abb8-55be9fe45563",
        "cursor": {
          "ref": "cc47fd2d-3781-4ded-9783-a68caab3f4b1",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ac5ec7fc-4292-484e-90f8-7e3593658a2c"
        },
        "item": {
          "id": "d9e69fc0-c7da-4596-abb8-55be9fe45563",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "448f7636-b85b-4b57-a0eb-8aa48b7a6406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4c346b-825a-4585-b5a6-a40b179b8943",
        "cursor": {
          "ref": "a6d04a23-1184-4567-9aad-128b330774ce",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6bc7e08e-2086-4bae-8189-5514b4d6d02d"
        },
        "item": {
          "id": "cb4c346b-825a-4585-b5a6-a40b179b8943",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8932bed0-1b0b-449a-8f35-b9f81c0f0953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450572ca-a069-4200-a004-f10481beb33d",
        "cursor": {
          "ref": "3fbcb46e-845a-4f80-b880-75c205ac9ccf",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "038fc9ed-1758-468b-9597-e3b7ea2bfaae"
        },
        "item": {
          "id": "450572ca-a069-4200-a004-f10481beb33d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a27fa4a3-7080-4ae9-ad8a-f6b9c9cd1cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69e014e-cd4b-4ed7-87c3-54aaf985891a",
        "cursor": {
          "ref": "3e2bf710-7ec5-45bf-8213-cc04b2460289",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "edfaa390-a249-4bb2-b3c9-deda7de930e8"
        },
        "item": {
          "id": "c69e014e-cd4b-4ed7-87c3-54aaf985891a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "eb4179a2-2ea2-4eab-8a0b-319bceb11400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8066ee0-f1dd-4112-af4b-52f2f7798254",
        "cursor": {
          "ref": "aea0d554-c4bf-4ce7-bfb0-5ea8ddc43e99",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "66d4255c-028f-45d0-bdd4-41a205d92f0d"
        },
        "item": {
          "id": "f8066ee0-f1dd-4112-af4b-52f2f7798254",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "21b2279b-52b8-461b-bb5c-afa75d1841fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ee0b9b-a93e-409e-85c8-5a2cfb142748",
        "cursor": {
          "ref": "1925e77a-6814-42cd-9d77-c52a0a16d690",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "da3d6a5a-b430-4838-b426-ea8a6ee3f97e"
        },
        "item": {
          "id": "74ee0b9b-a93e-409e-85c8-5a2cfb142748",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4f007ad7-26d8-4eeb-b2eb-24321ddb0ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ae38d9-0e93-497c-b7be-d5303093a2e1",
        "cursor": {
          "ref": "c0405783-e75f-48f3-a85c-232b34e98285",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9ba479b9-4d77-4e14-874b-caf844b47dd6"
        },
        "item": {
          "id": "78ae38d9-0e93-497c-b7be-d5303093a2e1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2f2d02ee-9ee9-40e3-a4eb-5dc7cf3c8367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdb8dca-d533-444f-986a-52db05582f82",
        "cursor": {
          "ref": "d555a0bd-726d-4cfa-a144-62d9d9c78991",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "08a49fb3-9e23-4393-9dcc-93185eff6789"
        },
        "item": {
          "id": "2fdb8dca-d533-444f-986a-52db05582f82",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a05e963c-03b1-46a2-8bb7-1a2ad2e0236e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97292b9a-728d-4603-a4c5-327b15464edd",
        "cursor": {
          "ref": "cfc7e750-5449-4854-b6e1-1ebf49f19419",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "30c8fb65-0137-437f-9d6a-b689497b0db1"
        },
        "item": {
          "id": "97292b9a-728d-4603-a4c5-327b15464edd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "15316dd5-9ca6-42e7-a51d-1900cc1a06c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546d3acd-7082-4cb0-b825-8571bd3636f5",
        "cursor": {
          "ref": "1ec5326b-8b9e-4e6a-845a-df9b2bd33417",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1b2793f8-56ca-4484-99f9-47bc94ee67a3"
        },
        "item": {
          "id": "546d3acd-7082-4cb0-b825-8571bd3636f5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "06898a52-1cbd-4b5a-a3e6-0ad577ebad73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5d86b4-6f29-4d2f-9a4d-17e22931085d",
        "cursor": {
          "ref": "f2dfeb77-9f5b-457b-bca8-40e6ce350e77",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "02422c0a-65f6-41ac-ac3a-b944aa1f6daa"
        },
        "item": {
          "id": "ec5d86b4-6f29-4d2f-9a4d-17e22931085d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "81e32c3d-c596-4f9e-8d73-7f3b2904d198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20015506-913a-49f9-9781-3f89a9551b3e",
        "cursor": {
          "ref": "0e26e8cd-be69-427a-be36-f038d0201b0d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8b66e4a8-87d3-47e7-87d1-f674b387ea5a"
        },
        "item": {
          "id": "20015506-913a-49f9-9781-3f89a9551b3e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "68ad750c-5ee1-4268-8065-f62093327b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ccf8da-0b8b-45d3-a92a-4885e68cc9dd",
        "cursor": {
          "ref": "7ecb99e1-2d33-4749-b8c3-106106a76476",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d56ab537-57c0-4bee-9eb5-b675901daa3b"
        },
        "item": {
          "id": "a7ccf8da-0b8b-45d3-a92a-4885e68cc9dd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6e19cb09-1acd-41a8-a7c7-53319d376640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adc0be2-8ee6-473e-8e19-4969d4b40a19",
        "cursor": {
          "ref": "2627554b-b0e4-4faa-8a60-da88866c267e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9aa57eeb-5877-4565-8244-d6a2ab52ea83"
        },
        "item": {
          "id": "8adc0be2-8ee6-473e-8e19-4969d4b40a19",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "12ff4823-9af3-4b15-a115-a9f587f3fe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b144643a-250f-448c-b9ac-d23197316b0f",
        "cursor": {
          "ref": "13113fc3-256b-4c66-950d-70835e167756",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f7d34b8c-2c50-4652-a15b-a6a8ad042bbc"
        },
        "item": {
          "id": "b144643a-250f-448c-b9ac-d23197316b0f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f5fca04f-cf02-44c4-bca3-520983a2cdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed7cce0-9f23-46bf-a2fb-6158bf0cfe93",
        "cursor": {
          "ref": "d5fe2e20-b986-4142-9b06-23a323aaf5f9",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e3287580-e7d7-4323-93c1-7b2b260c4f46"
        },
        "item": {
          "id": "2ed7cce0-9f23-46bf-a2fb-6158bf0cfe93",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5798a43c-f4b4-4462-ae45-9a707fc8c1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e03fd64-4406-4fe9-a70c-a1c1a9f30031",
        "cursor": {
          "ref": "3e59100c-d7cd-4fb4-8185-5db403a8739b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "14871d82-7c80-4f40-b0b7-3b5108c2265a"
        },
        "item": {
          "id": "9e03fd64-4406-4fe9-a70c-a1c1a9f30031",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e231cd50-ba48-43b8-ab13-5cc4098302ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4abfde2-4f8e-45e1-b427-60a9de01f483",
        "cursor": {
          "ref": "ce0bd565-9eb3-43fc-b026-ea55115c9c89",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "882b6ae4-016a-4090-a708-d1fff2e07156"
        },
        "item": {
          "id": "e4abfde2-4f8e-45e1-b427-60a9de01f483",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "717ba047-198a-4e00-960b-8bbf5684a5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f9231e-a0cf-4bd2-94ff-6ff9b2afe9bd",
        "cursor": {
          "ref": "64928efc-e638-4150-87b8-c53b0340de45",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fd16a2aa-ad93-465d-9bf7-bdc6391597b8"
        },
        "item": {
          "id": "b6f9231e-a0cf-4bd2-94ff-6ff9b2afe9bd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "02bfea1c-3f8f-404c-8344-a9017b5ca80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffda33d-fbd6-4496-b30c-6b0df25a2e93",
        "cursor": {
          "ref": "860e62e0-cd7e-4847-a47f-77dab5251514",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2e67fd97-25e3-47f3-a09f-4943970b3e51"
        },
        "item": {
          "id": "0ffda33d-fbd6-4496-b30c-6b0df25a2e93",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c135d43d-750d-4050-a7b9-f6bb2c18f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c402ef-39c9-46ae-b94a-aef9561227ac",
        "cursor": {
          "ref": "0cc4c10b-147f-4a1e-90e2-344b24fa0a9c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6edf2735-290e-4350-a9b1-895402f4f9fb"
        },
        "item": {
          "id": "68c402ef-39c9-46ae-b94a-aef9561227ac",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c538ba66-4b61-4f91-91a9-a651083b7b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583bb2cc-7a27-4723-bbd5-458be4d550ab",
        "cursor": {
          "ref": "b198d909-d210-4845-a0a2-20d69a517b73",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a9a88bb1-796c-4bc1-bc1a-177b6b9a8885"
        },
        "item": {
          "id": "583bb2cc-7a27-4723-bbd5-458be4d550ab",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "40b25e80-5178-4b91-bcdd-321ab75c6bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5d8e55-97be-4ff9-8310-34dcece1da33",
        "cursor": {
          "ref": "8c9e6e65-72b9-4137-9255-310493988102",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e57126c5-b30b-4a1a-bd2a-37598ba1b154"
        },
        "item": {
          "id": "3d5d8e55-97be-4ff9-8310-34dcece1da33",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "09a15590-91db-4170-9e06-25185f05431f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c765aa-60b2-474c-b963-9cfb1b4c5336",
        "cursor": {
          "ref": "0500d479-97ce-42a9-9383-05a5c6f06385",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c74ca180-1c76-4bd6-91d6-1e045b3f6ce6"
        },
        "item": {
          "id": "d7c765aa-60b2-474c-b963-9cfb1b4c5336",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "649cad0d-9993-4828-9f47-e7f526ceee8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb27913-1ce9-415c-bc72-f5907cb8a28c",
        "cursor": {
          "ref": "ad179cfd-1171-48ce-8942-ae2d4430bf3a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dbb0a0db-1996-43f3-8d56-306da9f1c2db"
        },
        "item": {
          "id": "acb27913-1ce9-415c-bc72-f5907cb8a28c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4b85c192-69e2-4079-a563-f2fd84dbaf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02084337-35d9-4862-b33b-07521b652432",
        "cursor": {
          "ref": "b36048c1-8079-4610-9207-b355674ce529",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bf38dc9d-3b10-4a1c-8987-0d8f7abdd1ab"
        },
        "item": {
          "id": "02084337-35d9-4862-b33b-07521b652432",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d2286efc-c51b-45b3-922f-de23ef1c90a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6611a6be-792c-40d2-a2e8-eb7814b22ef4",
        "cursor": {
          "ref": "45dc7fad-28f0-41e1-8fa9-d1fd6ae610d6",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "432dbcff-2e88-4ed2-8b27-70f4e22784f5"
        },
        "item": {
          "id": "6611a6be-792c-40d2-a2e8-eb7814b22ef4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3a6974e5-1f46-4e1e-b9cc-3778130e74fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2b865a-d63f-4f43-985d-4f1b93dccac1",
        "cursor": {
          "ref": "acffa8bb-4f73-4ce3-909e-33c4b1b78cf4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5e1457b5-9eaa-4236-85b5-22a70aedf829"
        },
        "item": {
          "id": "bd2b865a-d63f-4f43-985d-4f1b93dccac1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0a8c04ed-d3d3-4186-b322-3a64a99498c6",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1efea8b-87bd-4482-8188-bd4c38872139",
        "cursor": {
          "ref": "d87de806-e132-4a23-8f68-7762d4f8dcb2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1ec69580-46b9-4842-9624-fe84723f6002"
        },
        "item": {
          "id": "b1efea8b-87bd-4482-8188-bd4c38872139",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2dcb1d82-4108-4cb5-bd8c-a5e5a8975336",
          "status": "OK",
          "code": 200,
          "responseTime": 2248,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8a183c-11d7-423c-99d5-1c833ab4f4b3",
        "cursor": {
          "ref": "7138ca9a-38d3-4238-86d3-206ad2b5aaaf",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d3195f80-e4c5-4de7-ae98-de6822545512"
        },
        "item": {
          "id": "af8a183c-11d7-423c-99d5-1c833ab4f4b3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e86bbb5e-8a4d-4cf1-9da6-19d82c497aa5",
          "status": "OK",
          "code": 200,
          "responseTime": 2246,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6dbf23-ef74-4086-8c72-3b9414d014e0",
        "cursor": {
          "ref": "ef254190-622d-425b-a438-4052e2b98336",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "403d7292-c32c-4589-993e-2e4d90d0960e"
        },
        "item": {
          "id": "db6dbf23-ef74-4086-8c72-3b9414d014e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40d39e42-3f8f-40b3-87bf-086a5b7c69e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6dbf23-ef74-4086-8c72-3b9414d014e0",
        "cursor": {
          "ref": "ef254190-622d-425b-a438-4052e2b98336",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "403d7292-c32c-4589-993e-2e4d90d0960e"
        },
        "item": {
          "id": "db6dbf23-ef74-4086-8c72-3b9414d014e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40d39e42-3f8f-40b3-87bf-086a5b7c69e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9ebf70-622e-42ab-9e74-baa903762849",
        "cursor": {
          "ref": "a3391eae-fe62-434c-8af4-f401c34fbd52",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "67b0f50e-f20f-4545-83a7-4c89cfe4c227"
        },
        "item": {
          "id": "1b9ebf70-622e-42ab-9e74-baa903762849",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0385adc4-e749-4ffc-928d-bdb8c4d03f7c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbcb6c4-c413-4af7-b002-253831532cb1",
        "cursor": {
          "ref": "a60d88e0-30ad-499b-a8ac-cf034c33d14e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "59a912c7-d77f-4c41-8c82-a7c92f88795b"
        },
        "item": {
          "id": "dfbcb6c4-c413-4af7-b002-253831532cb1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "109da74e-0f1a-42d1-bbe8-f864e1790524",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}