{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d85401a2-bf27-44fb-a327-ad8241325f95",
        "name": "Clear Cache",
        "item": [
          {
            "id": "80d42ca9-b08c-4837-b3c9-5fab92ddd535",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7efc56ee-19ef-4744-ab7b-7182dacd7de8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9a1abff2-8417-4471-8daa-24cf4fe3c3a7"
                }
              }
            ]
          },
          {
            "id": "e51d0ce4-33d9-4b65-8b1f-f2a7b1d8a156",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7249bb0a-2ae4-4078-8210-172971cb8d95",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "476e2fff-abfd-4bfb-aaf2-912b35d8279b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f3688462-45f9-425e-a32f-de80de603966",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ae90d871-bf21-4ba1-803f-b27be0e97205",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48e0b52e-cecb-4709-abfb-eb7d35180e18",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecb41124-499b-4226-94a3-0c55ed72007e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "633ad173-43ff-4a5d-9aea-c977e9204ad9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e19714ff-ecf6-4432-b17d-a4a6c21452aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "deb981a9-1248-48db-89c1-81e8315612c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f96b2ea2-8216-40ae-a04d-5f733b3d1b4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "47220470-5871-4f25-95b8-ab5bc584c2f4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fece56a8-b52d-406c-b2c9-ef920564d226",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bfb89ccc-4a7e-428b-a677-d07c8ef5ef1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2466feee-ef65-4969-931e-312363155456",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46f3cb0d-ddcb-43e5-997e-01af6e0c8f04"
            }
          }
        ]
      },
      {
        "id": "daf14ecf-7c24-499a-a9e8-c5bba8a5745b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "798fc3c8-4a4b-4010-b769-04c5d58a8d20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dabe73ef-431a-4682-9542-9da2cacca693",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "50236be5-6b79-4b2d-a036-213d673645f0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed333dad-2d54-49d8-85df-7074ee4a5778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adac5830-f9d4-4a9b-91a2-eab9a26b242c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d772df-5a5b-426d-8d4d-fa2744bcc43d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebce0d0a-fb85-4266-bcf1-4e32465a3d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3986faa3-f184-485c-8641-0a43a11a9a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bea99b4-04ca-4cb4-9e46-00a4d0ba7df9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a07cbd-baf7-4f60-be41-3c3ca2f289da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d0f764c-46f7-42d7-aa6a-bd45ca02d056"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7fc42eef-fc5e-4b2f-9c3c-e2e2aa077eda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "919e53a6-b24e-4581-8e0f-464095f2d3bc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4c69dd-3449-4c23-aff7-1cbc0b886c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53814e1d-ea78-4dec-aa22-ffd93e42c674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5d8ffa-2894-4eb2-af0a-735efc5e47cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53b5d17-b885-44c1-bcc4-6d14a4946735"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "233e7abd-e923-4e71-8f08-1226eb96d66b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3e1ae97-78e0-43dc-a599-9a991d292c6e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2af09a41-1c3e-4e1f-80a2-237d959a0609",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0890a230-8a07-49e6-ae13-a33061793c48"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e19a9bd3-3cc5-49c0-b1a2-882f489f4307",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c0f5d655-31bb-49f3-9c94-00d915643e62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c923abac-d2f7-4965-8e4b-e54983f686f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7db77446-dde8-42f4-90af-40914142d6cc"
            }
          }
        ]
      },
      {
        "id": "24110649-9ddf-449c-ab0c-436bdfc6ac32",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "21fa42a8-dc9f-4195-8885-fda7f8d73525",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea40c2bd-6431-42fb-8893-51a5a969988f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4448ae04-13f1-43ce-976b-d8752b6760dc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a09b828-5d57-4807-a96c-7007116c7ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45af90e-270b-4501-8195-03544417bd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012d8535-ae1f-430e-b5a4-3be917ab6cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9bd02b4-5be2-459b-8920-7a7835daeaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e294b410-3dca-4ba0-8641-f06854075cb4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf4ad08-5961-46b9-8d46-75140a4d93a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7f1b46-e327-4800-b16a-fbaf5bdad6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7ae82a-bddb-4a09-9c74-b469d3a7afd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a0522f7-e394-42ae-84e6-6a46f93b6e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c419158-9ec8-43a5-8c63-31131dd6d19a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a722081-6057-4148-8d17-a6c339e8eb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c83721-528f-4826-9b73-f44df7769ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa52636-62b1-4569-8c14-e1392979b7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9af2f3f-62fe-4e54-aa12-bb5b3c53f306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7359f4f3-a29c-4eac-8703-b1b6f16ee392",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a482b3-6acf-4870-ac3f-d1732702751a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab8e01f-aa11-4148-a64b-f68a0b90230c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03af801b-d1d5-4948-8118-09555f9a17f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2d03b9e-5651-432c-97e7-996320fb16bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f433a5d-c231-424f-bea3-c2136351df1c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4c8f64-84d1-4ebb-8aa4-c6d74b392a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b94f6d-a88b-4d23-9f3f-76a46f9902f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ad88dc-52f8-4442-92e0-d5e38b3660d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c626c13d-842e-470d-ac6f-e87d2ac318c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085f4ef7-c4a4-4aa2-be3e-ea8b1fbaaa59",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b3f5f2-4852-40fc-8abf-0d332216021d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f8e072-f200-41ee-ac9f-1156ce662d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9efb5b-47e9-4e73-900e-22f38e905c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5792017-e851-42b3-af99-ee4a44166d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711c072b-9ae0-43b9-8f6f-b034ddaafb44",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151803b6-97a2-4f97-bdbd-22c452ba7d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5cd33c-dd28-413a-b5b6-fa751e9ea1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b87010-8922-4f09-94fe-494ea5c15aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7b88fcb-fb03-423e-920d-40e3a520e6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1ddabd-dfe5-4726-84bf-6f0bf0f170dc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959054db-aab3-4e1e-a210-8702fe9ec4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5bf390-4ed6-4215-b469-117fe907d3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c09121-0b45-4e87-8f30-602385bc1d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e73c140-d587-42b5-8ec7-5023a66db1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec660464-24cb-4c0f-8539-326416369b0a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7b2431-5487-47a4-84be-5dd34862f444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd5a55b-1b52-4086-8c30-8133434afa35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941d7b79-2c85-4766-96c3-c64cc99f4324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "465ba2ff-2173-4a32-950f-1a130f96e8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdda9522-e616-43fd-8427-6fde0a3e1a2d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4e8e1d-42dc-405d-8c31-612eaaf5e4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71598c83-a79a-406b-9d72-e9e7743b7576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfb94eb-a310-4e4b-8fd3-a91a6352b6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4db7c210-3aa5-431f-b07e-0218a1e2488f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639ea770-35ac-4945-bb59-d7c416442ba1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9e8eb0-b828-41fe-9a96-d42fd9ed8af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce97c066-8468-4254-8a0a-6cea95c70256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff90767-5d30-4319-b81d-06f4f63d64a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6417a82-2ef2-4473-90af-289709731825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d35aec4-ffe4-4b1d-8a0d-58346a04ab7f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28511764-7e05-4cc9-b9b2-1cf8afd98732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383b4239-cc96-4d0a-b42a-c5fc1d897bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af59fc4-89f5-43ae-921d-c99a1a788243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03e67970-8fe0-4557-b9cd-c2bccbf6c77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce18dd98-165b-409a-8435-8a891fc25348",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78e2bc8-c2b8-49c5-876d-0c4e2c735370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867f0e42-296a-41b6-8dc4-9836afdecea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c2f05c-ccf2-46cc-9a17-bbae05570c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a12aeaa6-52c5-4ab6-b8d3-9a980370ab9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dca8928-0b88-46df-9089-799e125dec6f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c89142-c0a1-43c2-9e60-c84c71436e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af33567d-c048-49bc-9160-d5c89d26c397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8540c19f-fad1-4bd6-bf80-37dc54d5fcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0caa45b2-a53b-4b6b-a0ff-5797e7d9ad9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf54c5d-391a-4736-b95b-8eba294a9b6f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79095cee-e863-489b-a724-7b700f924041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d6bb02-3d46-4fa3-b1b3-6b83cd7b7180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16921aa1-1b6b-4bb3-b9e7-9c3a311bbe8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25cb833a-8e9c-41c2-ab9d-9c02de0afb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcc2187-ba6a-415a-a9b2-54147de30712",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcbfba1-d79e-4bab-98b7-77a2e29b7e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aee943b-25f7-4754-b5ee-3cfea62c67cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae2f74f-262e-44f6-a730-0af5a67e495e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94ad1352-0d57-4126-a8e3-415402cc88d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849c72a7-5a29-4ca3-affc-99f26d5ac871",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f6cd79-9076-43a3-8db9-341801f89517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa1a470-5870-4b81-8fc6-6d558265c7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93033bb7-56c6-40d7-a2ac-f1a7834538a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e51374c9-3cae-4293-8570-23a67f3e1121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2f6a9d-f887-442a-9b3d-63247f844a4a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be900acc-ceea-4e54-bec0-89eea1be6f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ff7824-a4e7-42f3-b520-cc8a6ae83ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbdf9d5-6081-4c6a-8262-686d5aa21e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2f03b2-751b-4a9a-957f-639b202f625c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3780abe8-4952-4f85-b3bb-b8fe5da02f77",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92c69b2-9282-4566-9aca-cde688f7f60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7daa7df8-a4e9-4af7-9146-8c2a4bc9a909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b43e1a4-e22b-4687-b415-b3771987f40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "264a5868-7205-46f3-b7a2-d03df9c8f937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b62f6a-0afb-4df2-b8d3-7b39ddde5c98",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa3cb06-a90b-4df8-a562-1dcfe0576c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a327a1-f504-42f0-977b-dc2b6f5b8404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f4e62e-3eaf-4094-a880-8a904d284c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e74c1ba6-23fe-4707-a185-249dc304edef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93997a79-4b7d-4081-bafd-0d3525e92fad",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190cfbc3-b9b4-46d3-95db-c28931c880f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4caf6b5b-3231-4347-a74a-e23fb042b345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440c741d-0150-4f6a-8bad-d9bdaa3a81c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6f15a5-e018-4af8-9ed1-e95488c30bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88e2d17-9875-40a2-8251-36a3431700ee",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df320a20-d5ca-4498-8b0a-56e7de16eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54da6d5-0c72-463d-8b52-62c85b3e88a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2baf7587-a5a5-4f8b-ae02-2eaaac1ab6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb751251-d8af-4eb8-be18-d98e3676f85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf71bf8-9272-4aab-94b0-ddc392bb1f02",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c45305-7d80-416b-b35f-c408b080d1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a339fba9-6d6b-42a1-84a3-8f0bb2ee8821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4fcdb6-9989-49ba-a9b5-d7f13498badd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d384c04-9283-4f1c-987f-01229cd23b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec444ad-9be1-471f-bb92-d0789a806591",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d12d8cb-948c-4073-b130-535f5b992936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81d86c5-9860-4229-a1c4-b0228ba3a402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348b25eb-8b16-4f50-b3d4-5afcff5856f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2490c648-bc05-4dcd-9d96-1306e5d80312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbeebfc6-3a8c-4ff0-8f13-b911fb49f76c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ef31d3-27c5-4176-a058-7177329a0d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9d3647-5ca7-4ec8-b29f-3244d9de13f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf0a30f-2a47-4593-9244-fd3af85cf58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2ea198-3cc3-4658-bc0a-7ae5165e91e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d325b1c7-e585-46b8-8914-fc4d3a4c229f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1d05bb-4af4-4123-b0fd-bc888b0f7302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c58bafb-b40a-4aa3-8c14-68d3ba3751c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31c6956-904c-47f2-86af-3426bc1282cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c96f9de0-dc65-4af2-9e15-34ba280cd2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d199cf-0133-4787-9864-54deb7ee7ec2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea50446-0eea-48bd-bd75-6d43ce26610e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe628c1-5450-408e-a2ca-7ca1b740281f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7736a27c-e96a-44e9-a7f3-9e5f8b6f1c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d484255f-5bce-4b43-bfdc-95983f99cfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d42c8c0-533c-4e30-a734-9b161b417ec9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75edbd9d-40ea-4717-9286-c8cc3d455729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8856b311-7dfc-42c9-bf9c-0bf671eb5919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608ee126-44d3-47a6-a10a-88713f8d06d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b159aa-a260-4b6b-8b2d-19bcef20b6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f905b703-5798-4387-ac1d-751155c25e00",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b247b74-bca0-4cba-9a36-1a40f876b52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e0de60-e0e8-41c5-ad26-fe2f27f42c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a69cbf-30b0-480c-9b3f-870b7ab2ef06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5589610-de07-4f6f-80f7-792de10e808d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a534be54-5f73-4acb-b1d2-c108bb2559c5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf61e93-b6fd-45ea-9235-24babd854d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc569ddb-ae2b-4799-ba12-44799345b4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4759fa-989f-496f-96b8-d69a180192cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb6a3b1-b0ea-4739-ace6-e6164f9da435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790ec0c8-44e3-43d8-bdde-9f0a15ed9898",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bf8b28-810e-49bd-b75b-bf687360af31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abfcb91-2c6f-4b6c-9de3-fdeef2aa33c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af54ac4d-dd27-49e9-916d-9cfb75756667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "252ead51-ee06-46d2-908b-53042756f8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f844857a-0155-48ad-8bc4-458c4a55de2a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d74f444-f20c-4d0d-a565-1ffb58b7bdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d612ba70-bf09-4e85-a7c3-e8ff72d2da55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120e4b96-f003-4e4d-887c-755b955f7d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60c5cc40-5eb6-47d8-adad-399c1d6a8e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12378b14-2856-4d5f-95db-620349197587",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d00c3b-dd7a-4c0e-b14b-4ae726ff3e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3316d65a-2c3d-471e-8b3a-d6945607a3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a89148-18b9-4692-b6d6-a3c615d1ae40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06c2c2dd-fee3-487a-a02c-a609d4b39521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24264047-b263-4154-8b16-4fbc49aae9bc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4fc7bb-cc88-4132-b10d-8201b1e9ff5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3260068c-47d0-4166-8bda-7fcc20115fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b66091-53a3-4581-b116-adf5887e5641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8ea378-3076-4485-a9a1-1ecf003a9b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c1641b-0244-4cc7-ba79-f8791e5fdd6e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865a1961-a7ff-4d23-8c70-fe86a8cc2b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8f9ffa-594f-482c-ad21-c37ccfdc7975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d251be-f065-435c-811f-ecd83c140c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "93d993a1-6954-4501-a81e-36d8bfe72321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4e081e-93d2-438a-b415-7a66f814e200",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9213cd68-c92b-40e9-b904-8abfdba18384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c957b4f-3ba4-4af2-940f-9c31fb5ec15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80798136-a682-42ac-9416-d2946dd95e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "934526f9-3dc9-446c-82cc-16fe663aae41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdf08e9-5dc6-4e0a-a9fa-76e80aa2856a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f502bc3-362c-41b6-b805-e18e41f6b3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8583786b-c1b7-47c3-a060-cf089ffa0742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85076f40-a6e2-43ae-abd4-01bbb79bfc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58aed3d5-4255-4719-bc48-adee686dfc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84439092-01f6-4dcc-b6d3-0e446f4e4750",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a734b417-afcb-4546-bdd4-f073a9bdb243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7713e9-4309-4bc8-b026-4699c91c3cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fce749c-f128-4aec-a282-7bebb99d39cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "87395329-51f2-4372-8dc0-95b1f744af17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d321a75-4684-4b22-9b9d-d726e57b89c4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1276c12c-c628-4bde-b9ae-719354e8b83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b10a05-8688-4ebe-bb03-81934aea15fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23fc6e8-3588-4e2c-812d-261e5c06e4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c33e63ea-7a29-417a-bb3b-c3e64f9f1dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808bc2ae-1d30-4406-b57b-3e68666adb59",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd3628c-07f7-4fdf-aaf9-641f5cedf00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e70f017-473a-4184-b690-0ae1cf231e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51f26a6-c159-4be1-8397-74d64760e104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "49f3b12a-b4a9-4d40-b571-cfb164f8e43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503bbfc3-a155-40d5-93c9-e372f4ad4dd1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ad8cbe-a3ce-4f9c-b82e-2596cd1d5893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79aba933-98ff-48b6-9a84-932919bb5f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c6299e-fb77-4d27-a776-ddc1d1de0ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "613ab96f-cddb-4f8a-b436-aa3ffca435ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e59308-5529-479c-869f-36047d743775",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fbf624-de73-4189-9f8b-5092116b7df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ae075c-239c-4520-b320-c082b8548d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4ef7bb-f8c8-402d-bd61-77295ea0bae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0b47e4b3-9ca8-4e40-8d4e-a241b7aef321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89430b40-0e01-4a9f-ac8d-f6571db08f20",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f6e949-7d8d-43f9-b466-34865b378257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6d1bf1-3c25-47dc-a83c-cfcb58601ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcb418c-42fd-4466-b0b6-5057d3516995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d59f3fd3-82b9-4c69-8c71-5e5acae3d8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc33af0-2be3-4c02-a076-c218aee0c080",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5d86ef-6155-4fbf-bc8b-311653e858dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4642212f-bcbd-4e06-acfc-672a6fe2ddeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe16911-95b2-4f14-8504-55534b419b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "41b8149f-2567-4787-8c34-a59872fb06ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dadb699-9cee-4ca1-922b-106cce4c63dc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89466d74-fee8-4913-9bf7-2f30782c7fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a4324d-a5e4-4bcb-b773-2ffe15cf0755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f9757d-3cf4-46de-a0f7-152d3569ff36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ade06e7-cd0f-453b-8426-45806a2fbbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0877f0a-2c0d-48a9-af1f-b93fe1fc46d5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161d57d1-d0de-4230-af45-b1cda5004f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3c5ca5-d18c-469e-8f40-fb0e4751ff59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1623bd-5b4a-4fbe-ae5e-5c578cf494d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a326e1bf-551b-4930-9269-c7794994d721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb14135-320a-4da6-9834-6d18febcd854",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce168931-b6f7-42dd-acae-ba9e25cf5aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52519e9a-d5e7-4e5b-b023-293adfe7a24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09187e0-f475-4d14-ab8e-c7b9dd98d76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17c7deb2-8b31-4464-b2b5-1b71001fa94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf00ebf-29a6-49c2-823b-d5c8834090fd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f978811-86f1-40b1-ac8c-0969e6499c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc393e5-c4d0-4d06-bf5b-d442c15d5797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba084f8c-c297-4b2f-ae3a-f488cc2d3637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b548aef3-7b6c-4be4-81c4-930bfc8aeb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f1dea8-e3ce-44fe-b384-3777c7be989e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab86439-9268-4a2b-90d9-046146e340ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd1bf82-aa09-4e94-8ac6-a620feb41574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7212fb-9088-47f8-8d6f-e9ab783692fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "055cf05d-f23e-41e0-b3a9-f23c0a136051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0972393-1483-4c31-9cda-6eb2727db65d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb5c7c7-2317-453d-9d96-cc58929669dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3b6cd5-f84e-4d84-855c-9f362491a1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca39972a-5579-4135-bbeb-26ef013a67e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a19d020-5ddc-4939-9f16-27303fc9c513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e210cb-c189-4c83-a4b4-e0ffd8919e2f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57aab098-3286-41f7-bcf3-e98c3eb0ff6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da9c2e5-cb7c-4b06-a37a-c7b8ad2b8bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5641d2bf-d681-46ea-8207-5fbd2276e6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "850fba08-599d-42ff-ae07-1132c6f6de0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823aa158-9429-41d3-a981-a754faa75315",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3168847-9d3b-4c74-b9cb-9d057d80964c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee94222f-2374-406b-845f-53cbf9e3b74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae94c4c-51fb-41af-9c8e-ef0a303f3f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e95e91-d870-4e28-bb0c-218955fcee70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc8525d-92c0-4c07-9a2c-2c4c1ac575d8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a3036b-97e4-4a0b-bbe6-47cb786cb0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d215382-e140-49c3-bf83-210e38fdbfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4200e1b6-5839-4850-9f57-aa1aca0aebd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc4f2da-5632-4c76-80a8-74ea8665c765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2744ba9-23f7-4ac1-b689-eb0dea1aea86",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e89e4f4-2aaf-40d2-af80-8bbca85bfeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08539a98-3496-45a0-b457-cbc8873edb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6378b0c-d5b1-4983-8242-6314a19e093e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be14dbd0-25f1-4d08-9f47-b64fedf56b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a29446b-c3de-4915-86d6-e8abf8af981d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbcb358-a80d-48de-8200-132a463f3cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60804c06-1c18-489a-961a-cb36e8d5228f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b936000b-f58a-4f85-a7a1-76481d87198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e891081a-3ced-458b-80fe-a95aea706d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef28959d-b795-44f4-b94b-f0e54d7ad519",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faae38fe-02d7-48a0-b5a3-31c3bd4224a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5bd464-1e0b-4a82-8330-5a245f2020da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44785217-9657-4744-acc4-4cdb51dc6eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "13d65bd0-2c14-4d90-86c8-8229195916c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0b6104-c1f1-4824-91bf-960daef769db",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb3f5c6-e318-4714-8d31-fd490f185364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0186e9-5092-4733-ae2b-6320e69b7d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e23dafc-4d31-410f-bb60-1c16ca4892a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2227796-96a8-4029-8917-2fc08d48cd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82dad0f-486e-4b11-a169-28da0320d279",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dab61c-3017-4fe3-87e5-b12ea525d6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a08881-444a-49f2-873d-4dba3a769e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd17d59-e6a6-448d-8d27-34ab56cc9e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9607bc-681f-4f95-8ac8-48fad59f317c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ab19f6-58e5-4ca0-9d8f-a79d991d7213",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbaf9587-c2b6-4ecb-b87e-d45d278eeefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852929be-e721-4e08-a524-6cb1cb550cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3cf84f-0cfe-47ea-b527-8ab95f5e608f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "08295819-db3d-433a-af82-b8f76ba84f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ff5efb-71e6-4a42-a6bc-e93246900c9a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4777a1b-59af-4431-9cff-686f43048b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df10249d-3114-4b1d-9691-c7563ee3b29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c097ded-c563-4994-81bf-6d9b643ac0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f369aad9-4eb8-405e-8e00-10ee2f80eb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294f8ffa-3837-45d0-9265-add39c809e2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c162c4-7327-4cb0-af16-fd57e9450859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf81445-ddb0-44ff-af7d-9e756f57a1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e984a0-cb88-442b-8a6a-c0cd8caa0025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "80169ac7-e048-4213-9605-30740ff8ae55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a95e196-7d3a-4f06-a8d5-4041e10a4002",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b14b37e-9135-4529-9784-69d981a9d854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ca5f8b-8333-4b2c-ade7-15a8f5bff5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e91ad82-1faa-49d4-9c1f-a07415460d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "72383f88-90f1-4998-9527-97f59300aa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cd07fa-273f-4992-8b60-cbfc5d5189c2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2098deaf-ae35-480a-92c1-bc73be673d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bc876b-e8bd-4713-be0a-99d6a2b0f228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada01b72-4766-4538-a9fd-014c4041962a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "804032d0-db0c-449b-8be2-75dc5b98f049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fe3de7-8420-4f55-835a-2f602ca418b8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce33b0ee-13df-4a52-bb09-6695d4442f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf3fab5-18a8-441f-b8f7-f150497c4af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94ccaf2-ec5a-4699-8ba6-e5b8e68a54f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6970aa-66f5-433d-a6d6-cbb446772b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727ec66f-229b-4b14-95d1-0730a018be58",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85a755c-af7b-45c0-8117-2672a167beb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e7e8b7-57e4-453a-a7de-d8bba78465d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62261868-3950-4569-af80-2122ad61220b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3be811e-2ef8-4ba8-ac4d-9ad5090906e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2255074-a0a4-4a6c-bfe7-7490eaad3a5b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafbc400-e356-4ef5-963b-a47e8a089097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e228f12c-36f5-417e-8f53-7f129a8507dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba9334a-23f4-4024-9c2f-0996044d81fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56196b7f-4cfe-4bb1-8392-f67a7eaa5c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27605f07-45db-4257-9800-41d863bb20b0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23485205-db71-44dc-a303-7dca703c03e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacb61aa-7818-4b91-81d4-dc4cc42632b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182b8039-2d07-4de2-9934-af9655b027fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "045bf047-6f29-4226-a148-44338ed6afa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d562c9b1-9673-4714-a047-a05e2e20c90b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb6a959-ca5d-4074-87e8-bff8aa40a649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5cd89f-59eb-4bd4-b7e3-ea1af0bf971b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615d88ff-1978-46a0-b029-e2bab147b1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "be867c96-bdeb-4a10-93d1-7842955cdda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa84601f-07fb-4e5b-b8cf-8a80571e51e2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a8d7a7-95da-46d8-aab2-82fcbaca97f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c43140-c285-4779-a2cb-3313573539b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b44ef05-7d6e-4892-a6b4-d80a01c4497c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "099f4ff6-0342-4978-b327-cfe138042d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0768a9ee-7c03-4f70-bda9-c4453c6231a1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bcebdb-00aa-4279-8a66-9256dd94826d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b948df4-20f7-457a-89f4-ef6f3252be69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2308e7f-177f-4c27-b92d-e5042afc18bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "618a7825-143c-44ed-9986-63a78fe4f07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18b271a-eca9-4c41-80fc-354d31e8fb14",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e081fc32-03b8-4165-ba3e-937f3b2320b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f77c43c-48e3-4c8a-ab94-88ea5489507e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8077316-02bf-47c6-ace1-5e37dfbf309f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce55990d-5d7b-44ff-965c-da79460eedaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca89d4e8-f5fe-4f73-bedb-a746af5c76c3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d799745b-b657-43a5-9013-5128497afc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2fd4e0-8d46-4c09-85e2-164b9289b363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283d3d74-e1ff-4cf2-80f5-db1ad96fc2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7366265b-1e88-4639-a8f6-78339c2bc807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0e670c-f8b8-4bf7-a702-6c172b2f11ff",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c88b734-5de1-4be3-8a87-8e95f7f87c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b55596-bcd9-4ae4-b2e1-a232c525b2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef32b473-ab73-4cbb-9107-85d893d4ea14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fad70920-5d78-48e7-bf5d-da83d521b41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0cd2a1-81bb-44e9-b0df-f671d144e1dd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88bb8ce-ee65-4a70-9d28-c01ea1182079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571d509a-c052-4903-95b0-ea0d991a9d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac774e06-7fe7-43c9-9d79-3fd3bf39525b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf1f3f3-1a16-46ea-b5c8-487f28abd047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26088776-653c-4273-a602-b6035b588876",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776a34e8-8f6e-4ad2-b6bb-356c84f08d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98e15b0-b615-40e9-8343-063dd79da4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d254950-6b0a-444b-8f5b-d034bdb3efcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a5fb7c-b1dd-43e5-98a2-2f8de9ab535a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2e765e-02c7-4d65-8f10-369772ff8a5a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5131e9-6487-4038-a222-e553b7dcc72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce36502-dfb5-401d-b8a1-950415cd2d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9479c459-ad35-4d86-aa05-189ed7c8fd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f63c8e1-a270-4834-90e9-2cd82818ff2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb284feb-6a55-4885-b309-fed04dfbf86a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515db89d-23aa-4fb5-8d21-ff29c1e0e7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f802191-a8c3-4d86-a3b0-a396cf9e5385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448d423c-1793-40d4-baa0-653555e16b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0c88bc-f849-44e7-b1ec-30160de41ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46dd7b2-7500-4972-b8ae-df65d0fa9aca",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0e3196-6c75-4ce2-8753-175aacee021e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45285a0-1154-4850-9dbe-8d73e725d20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647bc80f-50bd-4655-864e-988e98a13f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49c0d598-494d-484e-a599-98e427dca21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852dee05-1586-478d-9a91-3e1daefb93a5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab34960-6924-4e87-8bb7-bf7f594913d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841a6aff-f556-451c-a965-4405e52345ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144dd83f-bf69-421e-aa3a-e1a4f49e581f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4d38aa-fa7b-4c2e-8b7e-4c81e1016f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2385e801-a90d-4734-8f31-add867028ebe",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a15a57-fc18-40bb-969d-229b24dc495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e41589c-4943-4f22-980c-1c98eef4addd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c05baca-d19f-4ce5-8758-03133b6d3d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a769838b-ccf1-4261-a4bd-fddf0510fce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5834978-e580-40d0-95e6-2028445679d4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825b8723-53af-4445-b59f-d09003854f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f414579-86dc-4060-9c11-86a15c8d392b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbe3f0d-1a40-4790-88ec-19c02afc30a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5607ec41-ddda-4c1c-b431-9e7068bd319b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74a1a9e-5bb3-4900-b38c-3461ccd5f562",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d148e803-a1a9-4aa4-8e7e-ec8d9e4ebb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a7c19c-f065-4a19-abc7-b760c2d9842a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ff7f54-374c-4784-82bc-3f935dc38a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "852e2ef4-616e-4b21-97d1-325cd0c04faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90e222f-707e-410f-b5de-1bb3a03757f4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dba5dd-8b82-40ed-88be-3eb7f678c973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20b1dfc-6538-4038-9dba-77b0c6665758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3021e9-bd3b-4e67-b62f-c18b05503d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9fa300-f034-44d1-b753-ba1579d829ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18ce6a9-c651-44d3-9dbc-8708985f0582",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649f29ee-e710-4694-a11f-07b6df0b12f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7a496a-0a5d-4621-b25f-8574619a64e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50c80f7-7aa1-470e-a367-a09422611ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf4ae27-91d5-4d7c-adf0-1be4164d4f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689df946-e820-40ed-8e3b-d4868479825e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc79f00c-87b7-43f9-abd9-17c0f6e365b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1eacc9-941b-4695-9d1a-a9b3ac87fcae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be51ce5-1adb-4941-9742-5270a63f981b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a288940f-f22a-4aa8-a83f-6bae21290998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ff99f2-9147-4558-9f34-e07799f5b566",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcb7823-2b38-44a3-925c-93fab5ff2bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8213ed-68f5-4f31-8eae-0d6fbd197f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a15b58-361a-4aea-b776-f796df794edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70585eb9-d8d8-4116-a56c-3f38090984e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2285392-a6aa-4937-9230-3cf9dc99bc32",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34a2c17-5dbb-45a7-8fbf-b4932686041b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9886986c-9252-47e6-9283-5e03bb61d067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330943ef-1187-4854-aa1b-06786985feb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b08f400b-e5fe-4871-a411-d8c02a982f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66b605c-6405-4f7b-82ce-9eb7ae97fba6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86984414-a126-4d07-8a36-96781b21518f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea42003b-7131-4804-b9a9-4903ccc236ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6022b2-e53f-40a8-8b2a-a1d27a13ca23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e283ff26-7f8a-4bd5-8267-0c6e943e0086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3e8a6c-0c87-47b5-a0b2-986e2cf8bd74",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c212f4b-2af9-4c2e-8b42-027132739aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70365c8-e3d5-4ffe-afc3-bbcffbde0e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ea22df-440c-4410-9466-ffce3f0c865b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2703637-9ae6-4edc-b9ad-9acb9a34c8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd42382-03e3-4148-bb1d-09bbea29da11",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77891ca-fbe1-406f-abab-42308e2d972b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651155ec-dc0c-4a2f-9ec6-c707f9570c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cbdc8f-ae5a-42d4-ae14-cbc35f73a747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "45fe41b9-2fce-464a-9a96-d8775cc9908a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec8350a-c80a-432c-951d-556f915404ac",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65572380-15c5-4123-a3f8-f92bc717e5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7e52eb-ed34-4684-82f5-8810e1ae66e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20f09b3-f6ca-429c-9b31-8d0efffec412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cb8897-2cab-40e6-a1bd-b35597867d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe53090-81f7-4d11-8ea6-79a979da8c2b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7a87be-6f36-4229-90e0-ba20452a27bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "30f3a6ac-51e4-413b-a6a3-dbf64659b23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e6a518-dfe9-45d7-a749-26c3bddc2a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb3fa3b-253f-494a-8a4b-8ac992df9641"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43ad104f-2451-414e-8d45-2f3bcb54eb38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e6cb787-4c0f-406c-8c61-7cca7650253b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6880228-c702-4992-99e3-295d92d8ee8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3386f0f7-b79a-4100-9f50-80e0a502b03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271afe83-5200-45d2-80e8-42c55b8768cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f492a0f-675a-49b8-804f-6d81f2aaaf17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96bed063-6ebc-4988-b86b-7e71e76bc725",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2864bdb-4fcf-48dc-a780-6c031ab3289a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f24b1fe-fcd4-47b2-a25b-c51b7755f4e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7409573-1c71-445e-8f8a-a001c6eafb25"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0fa0d33-273b-4974-a9de-1936b0f07f3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0384fe45-d9e7-4034-b987-c90776024e5d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eed9e788-917a-4e87-a033-be5d42da47ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0eff5663-d92d-4a78-a0c6-3408a3704db8"
                }
              }
            ]
          },
          {
            "id": "8dcdf6fd-02cf-4e6d-8fe4-af9ba095b430",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d31f74dd-71bd-4302-aee3-17cfa9b4b133",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "31924364-f6e0-4895-9d0c-8beec4ea7b07",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26e5bee-331f-49fa-913e-49207abbea16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e98fae4c-4409-4db4-87d3-5eeea4ac47fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893aa77e-0cd8-4382-aa44-3f95d5707381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b68513-6e55-4bd7-b6a2-c7ab487bb299"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ebe2616c-06a9-47bc-8563-920fa4145e3a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9270f4f5-7e86-48c7-b850-2de737cb308f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c7d0a3e-ab8e-4872-af97-f3732b6877f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20449abb-a1b6-4adc-a596-747f34822df0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1101ef12-500f-4927-b81e-663da58000db"
                    }
                  }
                ]
              },
              {
                "id": "4c8647e2-75d1-4fbf-b06d-b025eda75ce8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20a928ba-029a-4973-8d38-3ab72540ca15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef48501b-efe0-4654-8d64-6ff0ef400f87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acc5518e-4403-4c95-beec-5f1bae14a969",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "947cc8af-1dde-494d-9cb8-795b13e05959"
                    }
                  }
                ]
              },
              {
                "id": "fc361f3d-52cf-4151-8947-831f35219b68",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ae3667c-d9c7-43cc-b19b-7b527a6b3564",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "297c6be6-6a36-4407-b216-db0538223e30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6395d651-b172-40ad-bf87-224e18a92046",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51209fa0-4e97-47a6-8b63-5f0edb616e60"
                    }
                  }
                ]
              },
              {
                "id": "91b974e5-9e54-4642-b066-fd051fd52c15",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccbe8f60-606d-4d5c-91c0-4606eacf551e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ad75000-92eb-4da5-b933-08c5863b35d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b2c5b7f-06c1-4188-9ec3-78025c663051",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ce97953b-4dda-4871-9a8c-746ca385adea"
                    }
                  }
                ]
              },
              {
                "id": "555238e2-a3d5-45ff-aa2a-a04cd9c88652",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "566f1bb1-c14d-4850-90af-5edd571ead5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "928c0c36-c818-419c-93ea-d19b5bd69b52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f9612c4-8d87-4598-b8aa-de47f9a4219e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "71d0933c-4250-4197-a7f9-5210fb6a4e94"
                    }
                  }
                ]
              },
              {
                "id": "322e5fc2-8e38-4496-9a1a-0a2fdfe922b9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7da4c33-f328-4019-b33a-227f6839fdcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ca0c283-355c-4b1d-9415-a51ec7af0b08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5542ebe5-e07f-410b-931b-f92e49edf34e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5606265-340b-4aa6-80ca-3113380704f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15af752b-53dc-4606-851e-8ea40639bc6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa5fe2b1-8ae7-4220-8a9f-494b77d11654"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e460ee53-7bd4-4de9-8d80-49058728c70d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbbd8974-e5c8-475c-ab0b-35717a3cc5bb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51a52955-8353-462f-9242-f9812210f38d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "974662b5-22d2-4ad6-bbf5-eafcd827d3a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7e344bc-e5cf-451e-a6b3-b030d6f4a1fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "934baba4-37df-49a0-997f-4f22267c6328"
            }
          }
        ]
      },
      {
        "id": "37053a86-3b75-45f0-9df0-4e9c3133bda3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ebaad07e-687c-4cfe-82e9-768c417c286c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ecbff34-d0cc-48eb-943c-931b3b300928",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9fde7488-420c-40a3-b57c-8d687dda78b4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18be485-3b73-4184-99c6-2fd05d340c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7d38ff-b29f-432d-aecb-8e20ad5c68cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801f2ca3-c44a-4e06-a227-586497163904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1057a22-3c7e-418b-a667-d209efadd25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b12add-4870-4fd1-b38c-1e459ff5dd92",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5e7077-f714-41d4-856c-50367a8269b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a9f21c-6ed9-46a8-8e75-cffa5a59acdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846f3b08-b898-4bc1-a8e9-00d69839a6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bcf7d56-84cf-4b43-88a8-b54ebaf6fe53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4ec50c-2169-4a86-979a-d0013dfa0b64",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b320a155-38f4-426a-9e0a-c98e64e678a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302b8b5b-906e-4637-9217-b09baff93e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f029ef6-d888-4f78-9621-e002fcabb84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0a2a99-3691-41db-b784-9cc0e0c024a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64eea4eb-33ad-4918-9d9c-91aa50b8096b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2c9c91-462c-4ddb-942d-8801a1f9aeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01f15e4-4909-4500-a68b-ff1bd849398f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59313391-9afb-4449-99f8-450b459ac0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf018a5-2a06-44c3-8536-dc14fcff3d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed869ffe-3f43-44d2-a632-42fa8edee3c4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16507ba4-602e-404e-9d5c-8834043c23fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8774f1-73c5-4ff7-9616-2cfcc98dd779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbd6ccf-9e74-4cfb-8daf-4ea484b9288d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5a4df2-3dd4-46b5-9b26-f264a238e898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dc4743-86b9-4349-82d0-a5675ddb200e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb08dcb-5625-403c-815b-35186f8b9484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ed9f41-697f-4489-be26-190867b64408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562a5db8-889f-426d-8fc1-7fdfa76946a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d60108-9650-4c65-9882-06efc281d56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f78dd7-595d-454c-9a48-651d059453b5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0df4e03-a7f8-4813-9a42-eb0fd6c00c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60b823a-e89e-4f76-b629-58517b25078e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9d7f18-0fad-4289-90ff-abaf2cbb532b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7883d451-ff2f-4899-8f81-0d2c616432ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13ec32d-70b4-4a79-b357-4f1f4c586ced",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb16c5ae-42c3-4d3f-8e78-c76f2b43ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2e0ac6-2abe-44ad-a5b7-c1ce58b26639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32351273-651c-41c3-af34-605e074ad8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be720f3a-7a7f-4e2b-8219-b2ecae507a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08780264-29cd-409d-906b-ea02679f5f99",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0c6db3-269e-407b-8c3f-400ef7fb6e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c594e7e3-4425-417a-8087-3b9a8a56c5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52816dd6-6780-4b5b-9d90-37db49cda94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9db9ac0-bd1a-43b1-9cb6-9fa2d3a2c970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb593cd-30c9-4ea6-8c5b-05779dd00b26",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c5d3a0-7284-4e82-bcf9-ee4314452fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8532c1f7-f700-48d6-b8d3-4b3ab086eaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9189d59c-c672-495c-a69c-6f81477972b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1924ab11-9bbd-49b9-95d4-9fe9fea19e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46602eef-0aee-40d2-b494-2264661016aa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777b091e-756c-4905-892c-728c0b3ed479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1591b75f-d7d7-42d3-ac34-efd170d0b039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d33e819-f892-4542-a019-b44e34ad0c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "97aad540-14ed-4184-9265-456cf772963c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774f1f18-20ad-457a-8d83-2150933625ea",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03cccbf-db31-4a2d-90b3-790302c70c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5239de0-3425-43dd-a77e-a9ae9e50d963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cddd2b9-7174-4280-94af-72b3428c8da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "514e3de2-d2a2-4ccc-91c3-a7145c939ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2822a7de-2eb7-425a-a463-d5235de55f3e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53de821a-ae8d-4077-8e88-68b1df795a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdb9550-67f9-4cba-96ed-01949d3114d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae32027-aae6-49d4-98df-75c6651469f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db34352e-fd4a-48fc-9d63-9c74f7c8de9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b554660-1365-4f78-8d9b-c0120c14fa0f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca5cb1d-d2ff-4e61-aa1c-f4d9fd3ee663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8acc868f-3c71-46cc-adaa-e9100e649e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9bf98f-f638-439d-b75c-809b7f1ca338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "21bf8d09-48bc-49e8-a5cd-a6d16b714b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe42790-537b-4b19-a5c6-34097737e845",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedba6b9-7dcd-4a9e-b555-ba02b55697d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684710bf-3fd2-47bf-94dc-58dc5244ea45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bd47e5-19e7-48d6-ba71-ccac64a33be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e100d72d-7938-4e02-96f7-b80b42d89cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2569133e-deb5-49cb-b772-5d5ff015f42a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e48bdf9-d95b-466a-b41c-3ceea7f7e639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31457204-2286-4873-8c53-a4b80a6c912b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76420899-0df7-40ed-89da-280b1c0db8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1775249c-68be-4f48-89ac-8e7a12148a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c76685-c1c5-40a4-b653-68c4cb036a06",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab585d2-69ac-4d11-9add-9e58cf1202d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f802e19-9cf2-4f25-ac88-db090f086455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8f4733-3299-48de-b735-66f75f69824c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4eddc2-4325-453d-a26a-3b60a36bc7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6470caac-1b14-4b1a-a0da-d83e20877e12",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b88e0f-c6f6-4154-a8ee-4698297faca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7452b5ef-5b2b-4ddd-aa94-ef0f4aaaf92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18f2807-b980-4bbc-9f5a-02e41f55753e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1672a2e-8f9d-4bc3-bb48-8ce366969afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edecc80f-2672-470d-9a45-33d2c1bfaa79",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c630b28-c18c-4807-aeb4-03579916f6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477a76e5-d312-4984-b88a-c5b191a03183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1c1ccb-120b-4bb2-856e-4e011acc6823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01033140-8454-48f5-81fc-00980a770b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fd8d9a-f4b6-4612-bca6-7ccbc738d7c5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcfdb4b-3eba-4d28-b28d-cae2bde8ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b327a4b-0978-45c3-ba41-f8ae40a85d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb05932-5365-4ca3-9ec2-4fe791c36f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29fcdd6c-2cc9-4176-b047-caf5267c02c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5f60bd-20c3-4c18-9775-8ca44956339b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bd57aa-0187-4fbd-9226-f2a8b9d408b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9eaa913-139d-4685-9cef-52a0149cab69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b958f24-3a64-4251-a227-2cd3abef3d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42bf6ba0-784b-4a29-a3b6-4adc2f9a92ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97abe6ce-ffaf-40c1-b745-404efc73a6a4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4026c6e-d124-4084-9e09-d948d0723a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63fe1ed3-c1ad-4dc0-8ec1-b4e7d1293ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725d50a3-e2b6-4afe-bda8-9a2dcd54f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5901dd-c7aa-4935-9e33-2532547572e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f806e068-7234-41e4-85f0-e53b9ed38aff",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8ecca8-9124-4ffe-b950-36f16c32da6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66580713-1fbc-461d-90dc-60c4282c7c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7e710b-b94e-4278-99ec-4248f7117600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9544f5-6752-42e3-b843-59a5a8dd1f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736f1f60-6e1e-4e74-bfad-1e9bc29c2190",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c51f228-2932-440c-9425-a993a6e2d976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ae097f-a54a-4e1e-8f2f-9283ce200d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a362a613-4c77-4f06-90b0-b8a929b66d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "124cad5b-9d88-4112-bb65-16a436fcf427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c501b057-3de6-4557-b7e9-79675e855961",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12080bc-7721-448e-876a-e909815ebfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e808ba-714d-48a8-834e-5b69b1a4b6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fb18a9-c501-442e-8642-4c9c92cf4399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd41ce2-3f54-4676-ab83-596696a4d61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a743274-dff3-4ea8-9dc8-d0343d66697a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e72d04-1687-448c-aad1-327c7119217d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7069b8f-008d-4c6f-a182-0cc09fac1ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d0eb79-cc6a-4fb5-9c92-ef57af95dff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8709722a-3851-4fc0-8ae5-1b45e5f4dde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa10159-181e-4dea-8142-947e81410a70",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c055193-dad9-47c9-ab30-b4d8aadd9f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a6c2e2-586a-4e59-afe7-4971ea3b226a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552e08ae-be0c-48b0-9d83-e32b001400f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41251cc0-e341-4ee0-b787-37d22edafa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef0c00a-e76a-4336-9960-61caa2d7d3fd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a55fe4f-e570-4e7b-b104-e4ba47f0747f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203d96f5-d1a0-4692-8777-cf325d0fe1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83061908-8369-4607-906c-e56082b44d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a64f23e3-d7a0-4e90-82b0-30f71604bed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423d6f9e-7117-4b07-8848-3bdc79afe189",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9afdf1-5edd-4f97-927d-e13223add245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67d31d2-cc59-4192-a35d-4ee810a1fcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59be9058-5c5d-4655-a106-a92db39ac8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "923e2ade-beca-412f-a844-cbeba54fce1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d0a117-26d7-438a-9c8c-74fd47546d5d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323cae8c-0851-4fd2-8c61-f98fbf37e065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f19de47-9502-482c-92d0-e10fdfe9c31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07d55b8-b8b2-4cb8-aca0-a2751fa81622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef8d10a-f512-4f37-9c2f-2c778723d43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d2e601-3ec0-4c14-996f-9927b7fe618d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae87102f-f3b7-4d16-a1c5-e5d3e79fe77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d535a421-d92d-4764-a3bc-e244c34c40c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc7806c-aed7-4b21-80ef-6a0b71fba25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "450cd9ab-358e-4023-b82a-cd38db555764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72511f64-6c3b-45a4-b8ac-5e954cdceaa0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6787e6ea-bc10-44cb-acc5-f543b712f9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a8e43a-10ff-4e95-9ebe-4ce1a75193f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008cb1ed-f576-4438-aa46-8a788daf73d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4abf82f2-f39d-418d-96d1-56522dd5b20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d273fd-a1ac-4187-a309-b8f83ffc5d45",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6131a81f-f449-4bab-ab96-d5be2b1fc046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a19844b-4b7b-4cb5-84c8-fe8c366cae46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987af2bd-4057-49b6-90c6-0f3ccb0920f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "393eafc4-30ac-45d4-b858-667e8a8a0eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa327cc9-869d-4f28-9d31-38c8f3f902be",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3614b2ce-2999-4b06-8b60-f4ae6e66fcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ff53f7-70aa-4a9d-91cc-2043f0be812c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241dc9d4-764e-4a50-852a-671f67c6ecb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f62d0077-e3a7-4085-b71e-09ebeaaaee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d67e15-4fd6-435a-81f2-ad391407147d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d84abf-9e03-49f5-a28a-7679aa0c3d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e463fc3c-9cfd-4e16-b4ae-517fef4b15b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2b69e1-c88f-4d1d-8edf-b5931257b230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b08211-3325-467e-bd78-6af9df947f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9448e0-15c9-45f3-8f18-0b02a3c6956c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e885839-d3f6-4826-a9e3-ae559591e8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4521ba7f-ee73-4257-ae64-fb1c41f16820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44879911-3eb2-4f79-935f-32a9e99add13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42136de2-ffb3-45c3-9fd2-2d2fe9c614e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f5a89b-51d7-425a-9b4a-b3350a1dc13d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43c80b6-c9d8-47e0-a278-c8df3ff16246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc60489-09b9-4ce7-9a07-6c51a7adcfa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960b57b3-057d-48eb-9cc1-598f1d719f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33ec799e-af58-4f27-8a6f-becceb411a5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e355f91e-fc78-4d09-a0d0-6adf69252522",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b79fdc62-8a7d-4a20-a4ac-1dbc392ce098",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf069729-0962-4c1d-b760-e20bd536132b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b28bafc6-c427-4e42-89ea-81fa598ababf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3db8b5-9a86-40e6-9c6a-380a491c46f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5ff4a3d-4102-44d2-8c77-3177f114c069"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e50da11-a17d-42f3-8c39-72a1dd544086",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40ff3f5b-5c94-4f8a-8e82-37e2e936c7e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6e1efec-5a06-4298-999a-a320f9b72071",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a023d40e-d644-473a-99f2-fe76c25a7eb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5ef331a-ca9c-4d2b-9109-9b52fb062b45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2073333a-4c78-4132-98f0-2a9d979468ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eab068a9-78a2-4ff8-aced-33720b274720",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ee8476e-fde0-459d-a511-3b488d91846c"
            }
          }
        ]
      },
      {
        "id": "c3c6c74d-6f94-4fe6-a726-3f28e28cf29e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1b1272ba-ec34-49fc-afa4-ef305f9e8806",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75d6b41f-2fbf-4805-a3ae-a585ecd1f65f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "473613a7-f768-4684-818f-fdb13bda9f3a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8892ad-51a7-4bf4-883f-f9a124b20319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e965596-4aca-4f7e-aef4-56ec97c398a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa26d6a-80a9-44c8-aa5f-31cfaa43a338",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4706abff-8eb7-43b3-b156-8a8928cc4557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa16472d-8d28-4829-81dc-17988d0f60fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1191c975-62e3-48a3-8f17-838fa97c73d4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb342f64-e039-487d-8794-88effac42b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a723fa27-7df4-4751-b93c-99a5fc730544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f43b0a-b84d-4c69-81bb-4a340e9209a9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdd8f15-ee53-4674-9bb2-8b772cc5c008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9d19b4-3ac3-4ed3-8aff-ea9a2f2d31b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5061cac-ae1f-484e-8181-bf112e02f7a7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e57dd2-6181-44c2-97e5-638a954186d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e61174-e280-4d5d-b73f-9109644b28d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ecd7f1-cf75-49e8-86b8-96e1079699fd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105ea851-68d4-47a1-b5be-2dcfafefdde2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0d64ac-5007-4be9-ad61-19c9941909fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fd843c-2d42-436e-8910-5c8afc7b2d41",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414f080b-3cb6-4ffc-874f-468e9b517a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36119ee-78ff-408f-9ee7-b835e4b0a59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98189f9e-de24-496a-a377-c13948449594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f8cd31-bc54-4ef5-8466-9602b8c6396c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc38f716-d421-4906-9a7a-7c505e39554a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89aaab43-cc69-4175-96a9-3fb15879394d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5636305c-6a6d-4474-aa2d-b7f726d46b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf00326-a24b-4fda-8052-9fd2983ff95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d354171-4bf8-48be-8ba6-73440bcf429d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58064a2-ae93-4f32-8078-eea1cf24a02e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709d922b-3a37-419a-b2aa-91dc9b740055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ae0cfb0-adb8-43fc-9709-69e2db29947c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28db42be-0c68-408e-bbe6-174c7b3936fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144dd712-60a7-4d76-95e2-d01826aa6015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050ba878-49f2-4dcd-a106-ecda2dc8834c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc0ef12-e55f-4a09-b63b-baafe0e54bd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "461ddbba-675f-4219-8e4f-ff779fd2065a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4413aff-3d71-4521-9d24-97637fab768e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fa73ea-b557-4ae9-8999-802f6115647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c47d98d-806d-4828-8ccc-de97b77f659d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d8042c-12d9-4802-a523-9605116f025d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3ad00c-8162-4826-8667-93a82713cab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad95afd8-17db-4d38-8efd-34c93f6b0492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8956fa-7666-4d95-b7ba-354988713e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77abfb9b-8948-4c35-b030-1fc1f195ed3a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6842616-5621-4a14-9d51-3c6e6d6b20e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c64f31-4c01-4667-884f-d3de6b953fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d986058-bf3f-4ef4-ac13-e6c34ce00d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c9ca8d-fe4c-49cb-8d74-1c22e6a56515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25421bb4-c009-4f8b-aa0c-b9ab81c29c29",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a47f23-84c7-4af9-9dc0-0474e94f3690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4452483-2a6c-49db-8fd6-5e9caf8a2e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e097c904-caba-4df5-81e5-ae2af9ec838e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5d96b3-b474-493a-bf36-03f5ec68e713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f14c504-637e-4735-bcd1-712b8712ad55",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c134f03f-4421-483c-bfb2-e9884a2efb75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52066203-73b6-43b2-8da4-b465bfc6f07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea10349-2e69-4e24-9f47-fec688c893e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640bf1ab-9ac5-4576-aac1-659a0a213b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684b3e84-3205-4cc6-a004-005e8821538f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a276d2cd-d97d-4cc6-8610-e567d9def3f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6686022-48b7-428d-bd3a-8d13a7d9c323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d149f148-306a-457b-86e9-aea6a50f7797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50baa060-6634-4da2-90af-2eb89009144e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2b4244-a095-4586-8a1b-6f4b91e7245b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e36b3e-c9ef-4800-86ed-cdf1dee912a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3596e74e-01e5-4218-ac1e-8b2c6469f4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbe1ca3-f94e-492f-b8b1-d73109ff2b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e986ed13-6a73-4fc4-8ac9-bddccd47131e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c43142-fc1e-4d72-8b5c-9c7ddf5f9eb8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e875e5cf-00c1-43d9-9555-dd79abd474dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2867da-0ab8-45b4-b5e1-ac2133d548be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f592b6-d99c-4f8a-b148-a2b6bae8c111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfcd2568-9575-447d-94a8-c700cfb99f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e99fad-0209-4084-b62e-1c15f894cf09",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e28dbd-55a9-4984-83fc-b99e59e8962e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05c6953-b910-4c32-8826-e037d1425d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6afb25-83fe-44fe-801f-6e3f876d4faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da01b29-903c-44b7-8360-fb0d15b93410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7956d038-33bf-49e3-a708-f6c0236d3a2f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc205bf-94e7-494b-aa6f-06aab9c94931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07438c1c-5d8e-4ffe-a4ed-e2cc9ddb5a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f9cde0-3b0e-46af-9c59-b2c4282edc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69920692-f19e-4c13-9f40-e09e867aa3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af11eafd-28dd-406e-8220-25cbf84ae824",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e913c1-44bb-4c4d-b8e2-6ef440efc1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fa8c5b-e150-4e30-a9cc-0c34412edc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "325467ab-9d9c-47c7-ab17-83c910dcf965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a3e5a4-b6ed-4e1a-9cb4-b1901be71388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52b43df-0738-4685-8ee7-2ad78995d62f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8151a6-a9ee-4133-b78d-75d843cfb186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b816a581-9d28-4e25-a31e-d80959a960ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db8d8f2-e355-4bb0-b215-58342c39fdc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c894fd-a937-46d6-83f4-420ed8c9e6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c54dd7a-0b96-4c63-b9b7-9b5b7221743e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb3b8d5-3d8c-4516-ba2d-47c697e78016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef6b5cb-a444-4ee6-b396-b274a6332487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5918706-c42f-4bf6-9d63-94e72188a862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829c8640-1096-41a0-ace5-306f24300c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abd3222-a010-4dbe-9d56-9a6ef7660a95",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e936057f-53f7-4143-9a3b-a7ecc740ea83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cb053b-1b43-4e9f-8dae-a608256d32b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3ee34c-02ee-44f2-a748-7f0961663cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a495e74-cc84-4437-86a8-15c26aa30aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c79b1a-8f0f-44ee-8e35-51b727f8f9c3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d29a3c6-7469-432d-955a-1db638b25d51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21d16135-c9b8-43c2-82cb-60654d4e58f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f53fe61-2fcd-451d-8b8d-170c0a2635a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b5ab17-2989-480b-a1c8-8a598e998b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d22efe4-4c63-4ca5-9c90-d6cda4f2e556",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be117bcb-f034-423d-be36-0e452e9f03f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a94bae22-e175-44bf-90c0-2f02c21bead2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cc98a4-0bf5-4120-9be7-a439a1393382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf67db77-7b1b-4bbf-b4ae-2649a2a3c6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9341b8c0-7143-4e49-87c5-65d401c8e667",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38127ae1-3db7-40fc-8ba7-af869ac37567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e49d845b-c637-494e-8531-454e502ad13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9ea32b-b7bb-4778-b127-854aed0cc229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdbbdcf-85aa-4f1e-87b5-d785f7cd38b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef515101-2bb7-4d06-a531-800e70ab7c87",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9167a383-20b9-4a08-b65c-887b116cd03e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ae56e9-031e-4e97-8649-4b5db89fa51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3655a6-841f-4a6e-98b4-6d98068f1fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f516264-6466-4811-b235-6d284ce136e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bb0848-f4f7-4342-93ab-7b80178a9609",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee16e256-1f54-44f6-98cc-626c5b7ae1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1755c3-0518-4a06-bd32-62c3c23c7c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afacdb31-367b-42c8-a722-846a8d8d0e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d2815a-58b8-4812-83a9-b118ac9498d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db732100-3e40-49ea-b596-6c108a99dfe6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0497b38b-f3b8-48c1-b464-fddb5e98270a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2fa6002-3013-40e6-98c6-54ecdff557f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcf4d40-203a-466b-97a5-6f9c4e16e22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a03b7f-c131-4c05-8f4b-8c5fbda4e53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9612d1-4619-41f0-b9cf-d058e3b1d3a1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a37a0f-03b1-49d6-88b6-072cf2094e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974b1224-2a7b-4d6f-bb13-053064e47d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b66eb97-6fd0-4729-959e-74669fd975d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5b8d17-19d7-4ee0-a4f2-f5c44b6eebfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cab391-7771-4dbf-ae95-28e000cf8a9e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0440e3f-b3ed-4c4e-8a7c-e9a121612d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f42e118-7c0e-4ef9-9309-ff0cb6008971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26445fb7-dbd0-41d4-af4b-a18e28fcd7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9783288f-71c2-4dc6-a0bb-e4fa39f534be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249a34a1-6183-4484-ab8c-694829940998",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c450e8c6-8e27-49bb-ab2b-e8a37e2d6e09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bddbfffe-a855-4972-99b9-2ee92d28c2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1323e11c-160d-455a-8ae0-ff549279dc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e1b185-5f85-47e4-9fbc-5e16e85bbfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64069efc-64cc-47a8-a6f3-f270111696f5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a67a6b-7ce8-4eb2-b80b-9a5ce4ecb2b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c46b022f-52d0-46a4-bcde-28ba3f2df66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34083bde-cb42-4d03-bd35-2163be9f83f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2076e6e-512a-4847-b4f5-56d85b1436c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a1d2da-dfc1-46a6-be02-f90986b64538",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f55aab-3aca-43e8-b71f-5f7157fe9d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c231b199-5b3e-49bb-9aa3-4d87d4d8a5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5625aec-13f6-44ce-a58d-9575b1b95847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f440d5-b8f9-4919-b83e-cdc33f372d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017c73f3-6f5e-4689-b0a9-dbf8e695dd76",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6f28fd-5d04-4beb-9526-f8d37ea05d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c48705e-367b-419a-b6d5-316a54690954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464a3122-aeb9-40d2-acb3-a434c718d0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f992c0-ecbf-4d14-ad07-1404e74439fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62785f14-a505-499e-a3f6-50fc969030a6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53b4c07-ca54-4c26-9a55-29d80da39624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0003ba8c-622e-4d8f-b96c-cf9f698ecfff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0d41c2-bcad-455d-a858-bf080f629147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef22b64-be79-4594-b3a3-0a2cc9af4683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba45877-d4f7-4c08-ac3b-acdfea23fd4e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5c5c6c-a29a-4b55-a4d9-217c50eaff8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf982ad-ed53-435d-819a-e070cfed37d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15b0b11-335a-4975-bd20-c041bb09ea1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cd371e-e441-43d3-a432-24c25d79038f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccb4486-ab25-443a-a58e-a1a981b4544f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf6fafb-4e67-498a-b180-3b27abcb72c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600e7634-d399-48f8-8975-ab5eaeb4599d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143202e3-3bd8-42a0-a4bd-49ccab50af78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfeff6b-692c-4268-931d-28a72d7eb992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be382e27-816b-4983-ac32-6d9e0dd8aaf6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7702b021-4b72-472a-b419-ecbc34bda9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2574b90c-a1a8-41f5-9698-80bec26c652b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0699d5e-a1d5-4090-a8b1-cef77432e1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0e51cb-3836-43c5-9007-a1ee631543e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddae2454-aa4e-4250-998b-f8bfe80af1de",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b00bee8-6b59-4173-a49f-c4a8552f8f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba26c743-5987-466e-943f-73618ef18a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a4fa6f-b576-4ac0-aaa7-01ffbec3005c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a5bd0f-eefc-42b3-b465-177d5f33ab7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11987f8-6a18-413c-80a9-e316144726eb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2117bec5-f21c-4b9b-b4ba-abc46d0c2e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7641e1a-761f-4b0e-9d3e-1530f4730f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a807a2bf-aada-4e59-a669-3517f0f4197e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9232d0af-0962-41de-9134-eda1bf6eb613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ea15b0-cff2-46b0-b253-76f40234cab9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7412832-c453-431a-88dc-805db511328f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fcc9c4-2c88-49a9-b490-96bbfef0eb36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9fa3d6-9ce0-4a6e-9f0b-f83a7d3d3ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396dbaa6-d60c-440e-ae4e-511726d2b565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c995517-ae4b-49e1-bd8e-353a6065b709",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c269eb7-8672-4413-ad05-f4ce68e7db2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f7ad6c-bc90-419c-b616-3ab62242c8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a03d37a-4ae3-44d1-81ca-f70192e63f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c4e9d3-6627-413f-97ab-35feb4f29e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fc2ade-77fb-4322-9b51-a966ae485154",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4a392c-c2fc-4536-82df-e48b56e0a88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b031db8-9cb7-49f8-b4c4-122de4ba8041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b765dd-11a0-4a3d-a854-eb64aed34ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166ba4f6-a96b-46f6-9b5c-6e10a245fda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4498b4-0091-4730-9a76-bfa707d773ab",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7000be87-a6e9-48b3-8cf8-403608574f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29058f4-1192-4101-90ca-48877543adf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0518a209-96d6-4f97-9b29-5724547483cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dfd253-4d91-4597-b0a6-c71fa447c089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b6b6a5-48c1-4259-8692-8a04d86c44de",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66e5111-40e4-41b6-ac3a-abceb4022142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d9e2da-f035-492b-9af7-403dbaa6b09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7d1d92-701d-47ea-9331-7f0cdf7fd2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254e80f9-f85f-466d-b7d5-d67e5f8cba33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b73084-fbd1-4116-8721-ff58804f2e0e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb191f2c-e039-4d56-9efe-bcff364021fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc3852b-775a-4b82-859d-362414a944ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a4ad79-52ee-4690-932c-fbaff5d37e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4df3e35-0d76-4e51-a18f-ab808327e8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6365c91-fe20-4a44-85a6-4cb9c1b61b35",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d5f546-bfdd-45cb-a1e3-455cfadbdae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e387af6-68f6-4c94-a157-38639fe53a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "becaa9b2-2fcf-4598-b9bf-85ddb1ad0d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1c7ae7-eda4-4944-82a0-e48cadd16201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c19f16b-1f8f-4f25-aaa1-d55577b27979",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26794c18-a89e-4084-9fc9-c0081b8c34ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af164101-56d5-4c7c-815c-1a6a31fe92ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253f111d-c001-4389-8e5e-8bb2dab0085f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c213240b-3c81-4523-9c8a-28c09a762a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1bbfb3-e442-45d0-9c5c-e4e45f6fab4b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f53a950-e001-4ca9-bf12-7f934f73b84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202e1553-923b-4f34-b377-bedcf3a11079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c417a965-cf26-435b-94a9-400f1f4ab268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06caaf1-105c-4cd8-9e97-5b3beac7ee85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850ffe0c-1b04-4ca5-b52b-560fe9ddc6d0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2312ab-0d88-43b3-9340-ffecac8ab9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df20bc6-f6c1-4a4d-9535-73814af44c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3873072f-9bd9-4770-89fd-35775f41602d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e7e7b0-e85d-4e78-adb5-883d8d915c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d63d690-491f-44ed-9628-7a844b62a867",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a77e8e-7eaa-4933-bbb6-f757474990fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d21c923-4491-464c-a562-3c8973637116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17ffd96-caf5-48b7-bcfc-81f83d5d2cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38c7c0d-17ba-4b85-983c-4c1429f49b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649f92e2-0e08-4eb1-b142-3e8fde346e51",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafeaf7a-b415-4d28-a4b5-c8ec1c2ef249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386cb246-dcea-4f18-b9fe-7b2c5ae96065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ece4df3-a29a-4e4d-b709-e63963261ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c621ac-ff45-443f-8e57-1dcad365cb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f484111-cc70-45f6-a3af-366c40a75eb7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec3aa56-a4c1-4867-9d78-3fd7c2bc4451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd71dda-2bdc-4ac4-8f96-e33a692c6211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659f9dd5-0818-4c15-a83c-a9764578b267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c2efad-6683-436b-b4a1-8f5e7ee04a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091d4be5-28b8-4a26-aa9f-251f2cb5c5c8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e221ad89-5877-465a-a08c-a3f431304860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9637ffc3-d3a8-49e1-b324-2bb2ad1221f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22a229d-4898-4e86-a457-21c6dcaf05ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff5e20f-7c60-4cea-95ec-7efa6bf7adfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085de0c9-c24b-4121-a3e1-d77e4c273664",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7aa4f4-5523-4028-9713-87ef75fe9776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d98391d-f01f-4f81-b139-7178c73408dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53892c0-f6a1-4ffd-b563-510ee49a1400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e14276-c0b4-48fc-a54c-cf683cb0f505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d40651c-4fa1-417a-8b0d-7aa644e92a31",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2859cb-9933-4e15-8f6f-36c4290ac4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb3edc0-1b41-4f1f-8662-832c82db96b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607cd535-cdb5-47e5-ad6e-f938c82af3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7042d2-6546-4b24-b943-a713cf0dee83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bab5aa-c32c-4fe3-9d96-56d03ea57de9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4069fa-e2db-4e21-957c-26eaad6dbe55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d610228-3e02-46b8-92c1-42de6557f64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb3bf1e-973e-4f5d-8466-9d8e5eb76a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b210630-59e8-4fab-a748-19c84c1dbb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e35d33-3172-4040-a0f8-b8d5faf58b83",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52323cb-7fdf-4b33-ab81-eb8b4eeda024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a845f8-eb59-4f59-8a06-77ab166af58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7114e62-4040-413a-9de3-e39104b66660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c04f72c-4a12-491e-a0a7-fd94c9968a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22752af-c73c-48ad-8fdb-f05909921d10",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2405fbb5-c7db-469c-8afa-d515884fa8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df9ac3d-97a6-4fc0-80e7-971205a04899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0d988a-df08-403d-aea8-b8344886ac4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7f5986-ff7e-4369-a905-e5cd459b03b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd31d19-3043-4ce7-8a0c-b48761f12a0c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570269ac-55da-4664-b6fd-9f7c0ae1d833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccde248-b5e6-49e2-a0b7-9a9ce26cdda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93022fee-a914-4dd0-b962-2b5f261ba7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbe81cf-c922-46f1-9ff7-9e90eba3bfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c968562-20ee-413b-b121-dfebd458b083",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166897b4-465a-400d-83af-2b2f8f00e503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35997437-ca98-479c-9a39-d2e01203229d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31acc68d-6f19-48b0-87d8-5d65f2c86544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9009fd10-5c22-4f38-ac68-661269ec1ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac98b63-345d-40ed-bc74-c4b2f11add5e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e204a4c8-e5be-49af-8284-dad9853a0cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583a8a78-7258-448f-9482-b2c72478c2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f71344-e595-4309-9927-fe4458582e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0beed73-7b05-4818-b073-a7bad0a88627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00077c1-a1ae-40ac-bab3-2d1493d4ba94",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79eb7db2-fe46-4139-86a3-936212ca6a7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b013980-b9a1-45f3-b053-e3b9e0535150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa59131-30ac-42b0-9eb8-ddba694ec23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab40ca3c-156c-42ff-9f39-7f5649b87220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e249d1-f2f8-4519-8af2-f3d2d459fc21",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90f71b4-a32d-42df-8462-69d7518685bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6adbc3aa-d9cf-484f-b25b-d7f5751b79f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51f18f4-7a31-4c3d-8782-441e66753444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021d9624-f523-4847-b0e1-745f3a8e8cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e103ed-07a1-4eec-a02b-b75871396edc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10246f73-ced7-4391-8d55-ef744777ba20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d1d43c7-535f-4028-92c3-caf9f6cbe389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9b6ffe-3e56-418e-83b8-8edf1b66d1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcd0e5b-fbe5-4d72-a860-59e2ab16b359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459e67df-4e76-42b6-814c-fdd13ff8d547",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7271744b-8f8b-405d-a7b7-dff0c9545a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88c4f95a-a22d-4624-9dce-59bc58303696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4eac36-a5f4-4c26-8c12-3df0678720e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1ab222-56e3-4613-ac0c-204c1417ade5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f391e59-f174-46eb-8bf0-17e75c6229df",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461112e9-dd47-44a2-9efc-856312312a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b3b4fd-be8c-4214-8249-89c8dc097056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6b7d8c-2145-4015-8783-5ef393d9e492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae5a5bd-d0d2-420a-8436-3e5c688956d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda544de-463a-42a5-be8d-b62d54b53b47",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60396ef4-2f10-4989-b070-d74cc0ee91dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f61668ad-f54d-4ab5-ab7e-20f2647263f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86d7b5b-6817-4db5-93da-d92c1209fa4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc77ee7-b73d-4b03-a540-58e5548257d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92835c5-6a07-4af5-b1d5-6e66e4a49c27",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb10b8cf-a9fb-4034-97df-2c491d9fbfa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "741bd837-cb4d-4c87-aab9-6e512fe858ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b06ea04-08a3-4320-9869-357d3081c813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b914003-539d-4347-9984-9d8402759c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7990680-c864-48d0-88f5-19ceb3278ae1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f223a81-11cb-489d-a0a7-e0f795aa6268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3445550-e16b-4e85-a9d7-c6d5c95df9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f08edb-2c9e-48ab-b987-9911f7ec1dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ca2da8-6d9b-4d2c-9e5d-b097d7ba2b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381cd1c0-45e9-4558-971c-3f8346910ab6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941e4d88-8ef5-4383-ad82-914c78ecbde4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3daa10f6-f225-4e19-9f36-e5dd0e8def9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38933170-ce57-4844-8d07-aa661d61df68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57499935-369b-45ae-ac0a-d900474c02f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29782823-99e6-4190-98f6-18b9359eb9d3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b2397f-d9d6-4c4f-b9f1-20975d754d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b4fa5a3-fd8d-429d-adbe-b4ea8368f74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9226d43a-d634-4c68-886c-e2db658561bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2161887-46ec-4ac1-9fb9-842c2020b96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd81f33-90bc-4234-bc72-a0d2f889a9a6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cdd531-933a-4b5d-910c-ad3ea693c561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4296daa6-4690-40c7-9145-f1a66acd045c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634cfd2d-35d8-43e4-9000-e70ba9fd7c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab12c61-f9f2-4635-abab-5ad8a65134c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f072e40a-100e-48fe-85f4-afee2c757a0d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf3318a-e162-4c2c-bf0d-994329494bf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "516a484b-16d5-4460-bbcc-65dcdaf7eb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9fe15f-bf4c-4cd4-ae74-f8a2438f81b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387f23ee-ea6e-4efb-92a0-5e85adf1ea2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df18a3d-0d32-466b-ad1f-cb9f9e772640",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc43a9d-de41-4306-ae8a-c88e29b235d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f439a34-8ae7-4d43-9033-00af4b47ab93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086950bc-2e2f-4486-bc57-55df7c7a0c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a9de5c-5093-4bd4-bda7-99748d52e9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6fd564-442a-43d6-8ef8-f0d8f862d983",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b7f633-e462-4ed3-9a50-08dbbae719b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d28ab0-bd53-4af0-95db-c91d12ed3424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cde4c75-bde1-4933-a5a8-7406721ecbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c336dbcd-2b3e-46d8-8187-3d2c0db91c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef7c5e2-fb35-4919-b2d3-aa60eb262fba",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe067e1-e712-4aa0-a2ef-373d8d6fd03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f24d989-043e-4e50-801f-e2bbc07f1948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0654f008-f37f-46d3-b557-4a93397358ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ed6feb-5e1d-419e-98a6-d91b3dfe724b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2fb2f3-c045-408b-b537-a8299497ab23",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f12bce4-c8a1-4311-b173-cca2c3d65fcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7665f9d8-6bbb-4ea9-9ed7-1059642598b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b358bc-fef0-4b14-b0f7-c3905a103333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09012e2-5cb7-476c-aa8f-5c230d3d009e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2318b727-dce0-4243-a19c-4ac67d21ac46",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375214f8-3ce1-4d4b-8c1a-7e90db3beab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a1f919-fb5c-42d9-8c07-c5e02b338d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3358087-a399-4cda-9043-e67fd9134c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cd6f96-6195-4f35-bc1b-7f207f430068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1714127a-2281-4fde-bae2-b9006cbed5e0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491df7d9-4150-4ff1-b428-98e747ef4622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfc19ff-6c3a-41ea-959e-5f43a7923a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ab038c-c50e-4650-b9d1-6258a4971662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069403b8-c23f-4350-9159-140cc630fe16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a452da3-3751-4e95-82ac-b16ba01cf195",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af4c943-97b4-429e-b330-9268f36cbbce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0464cc1b-f5eb-4b9c-b8b9-30a3c7faa53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d991c66-bedf-4f1e-b169-932264957456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa40b958-3ca1-4c3f-bee2-fe2e99b78cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084a3e02-7964-4ede-b158-c732391a839b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0914557f-bc65-4d6c-83a3-a8654685676e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35b87429-3689-4a72-8175-9eb222c14025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27415d5e-be2b-469f-b34a-1206bc2f27c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ef1d9d-e740-4d82-9fbd-0378673b0438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fd41e5-64ba-4326-9c3f-ce75f273ed9c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc618755-efe1-48c1-8934-f6d778e5e95e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253d86f7-70a9-4c08-9769-5b7c1ff4a2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94959368-9187-4c63-b216-dc0bc1da76c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622b89ac-116b-4280-847d-1fb041f18844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042ced54-5363-47bc-a5e2-4c40e6cdf48a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91deffe0-2d0c-45af-b5da-1e11b37fb7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88be776f-8a09-4888-907f-bdab90ba17ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f69cc9-c275-49c6-ae71-56c07fccb36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080b7ae1-ef1d-4fea-98fb-b7e8d205d34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33060a3-a797-46e7-ac96-88e5ac60a381",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193bd52c-35d1-47e6-9637-921ff685ecc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f20c76e-706a-49f5-aabf-2476298b560c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69600e1-7c3e-4fc5-a280-3feb479f3db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dc3396-597e-4c51-a4a3-9a95160345fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175851f0-551d-429b-9c4d-fa85b383a981",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97d6780-900b-4c0a-863d-1efc29cb1c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a543b0e1-21b1-482a-89ea-60fd22eda230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a9d056-aa24-4d69-8a70-6411b265e04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd18b700-b6df-46c4-b456-fd0abed03ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6553b68b-7fbf-48ab-b386-9685d2d4e660",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6642a94-7f50-4649-8eab-6fb33e476806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32c05585-1353-4746-b4b1-f0178ab60729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9831c8-b109-4e06-b9a0-c257d36b00bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd14f82-2b73-416b-a06a-ae0ef07fde66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3aa0ba-e029-4f2b-8026-c841114efad3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08402da1-e668-4120-8521-adf391de1e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7993ebf8-6695-4e88-8363-14dce7c42a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00087201-f1f6-49e7-9940-8af36410cf94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eaac4b3-1a5f-4609-a44e-7fab920fc193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd71c4d-c41f-4145-b120-86777c223089",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89e87fd-8f54-48d6-91b2-97c7719650c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a263e33a-28a6-460c-8a8c-bd85361d2ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93db36ea-9d08-4511-8dd9-a2cf5a92fe93",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cff443-7200-4d72-b20b-8696a21c0147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7010c0cd-41d2-4129-b2d9-e75e1eda7273",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc77634-ed3c-4aeb-927b-5f00c5bdd7a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "351398bb-e9b2-42f6-9351-e39792b7a5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8d6526-a6f5-4f71-b88f-ca2a99d73647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a9fbd0-c496-4275-a6d8-09386ffd8106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59a89ba-b405-4cdb-a30a-c8082e7bdd04",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c48cd7-9cd8-4536-8004-8b5076d1fabe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4d7ad11-0971-435c-a2a7-5ccf6187a0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27b1a96-4420-491d-b112-5da82ea6e536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49bc5072-a862-4452-8a0e-e5f754cf8383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e588fa8-d376-43d0-84c2-3fe2b1053163",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ead021-f008-4600-8a93-47129cbab559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e38dd2bc-b432-42b1-aeeb-0b0eca617105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9e6b16-261f-4eb4-a70d-34627ec87223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c80be7-8f1a-4acd-bf97-337c6b619fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e020fa-9bad-47d2-b5be-bbd34b5e93b0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a5db47-87ce-42bb-8080-53d94981f791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e87fbdb9-43e7-4063-90c4-f45c338e148a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d1cbd3-080d-4e3e-8cbc-f9d8e4751abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784ed773-3b49-4cf5-855f-9684dad71b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04dd4e8-8550-41ff-a4f6-7187e42540d9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169d360e-b5dc-473a-a296-c37d0a597b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841da5e3-7ef0-4ef7-82f0-81cd2174ece1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6262a5-ad1c-4568-956d-6d27ddeb1c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a3f477-523e-4fbd-a33a-2b8dfb4b90c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48967825-db66-47b6-942d-08e69a2add05",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0ca356-2ef1-44fe-a5dd-f780470e4cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d891b125-5979-405d-b477-b3a343e7bb7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44d60bf-4855-4c4a-86aa-ddaaa5038188",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4a1f44-6158-40ca-9b31-6f8b357e41c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762c060a-c49f-462f-92f9-dafaf8d09903",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab26c65-52df-4872-8022-e137c449eb9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1435baab-2c1b-433e-a3bd-16d8a64739a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66df9e9b-28df-4336-b562-2e56cbab0125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa425e6-15d4-44e6-912c-188ba650d0c7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9027849c-0dae-44f1-9d33-ab976370c32b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25d99b7d-4388-456e-81f6-61275f1fca54"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d3e25cd-07ee-4feb-a0b4-80369675d2f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e3c907a-f3df-47a5-92b9-5f22e61ca4fb"
                    }
                  }
                ]
              },
              {
                "id": "e4bbc667-453c-4526-a64c-17d27922186c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad28e54f-116b-4800-b8ec-9508e58f3d90",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c41210-2504-44e9-b663-166bd18040b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "be9ba5fb-4d24-41b2-8543-6a9dc2d6ae58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd5c618-4445-4bb9-b6ee-fa6344d4c784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcd72115-6d2d-497b-add0-73b1298e3cbe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be63079d-92ba-43f6-8d59-a7871db535db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88b021c1-937a-4542-996c-9d5d6306eb82"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcbf8c60-7f9c-47e5-bdca-d2954ad08fef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9750179-fe58-41ed-a328-74af050b69dd"
                    }
                  }
                ]
              },
              {
                "id": "f70b302d-4f84-4a81-b037-479318b2ec49",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "664679e1-f005-4e3e-b0f0-877405b6a6f2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1c23ff-0fdf-4101-aafa-7ac939bf79b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6586fad0-12d2-4a3f-a7e3-6e30c67d5bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1216ac8e-62b9-4349-84f7-0fb058f9e226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ed98fd-8341-4978-a3da-038b2b8b2e19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "026d4f52-7e56-450d-b585-a6bc06afb22b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f97218a9-cc49-43b2-a60b-c72a7b7f5556",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c813f40-2e11-468b-a62e-2f042e82956d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e5a80b1f-9720-48d8-8c51-1b94bc3b6caa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e2f718b-f8b5-4975-b885-f02301fa4cca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24e9c533-53a7-42b4-820e-30a97cbffa89"
                    }
                  }
                ]
              },
              {
                "id": "6931a82b-209b-46a4-afab-4411411f0583",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3229f57-a91d-4775-b85a-26a0f83dbd49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fdcded41-b40e-4d25-8adf-ad8a2ae5f18d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7795f7fd-72da-413e-8ba0-455ac979a87c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "044d472e-05f0-478e-8805-40c46536ca1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "718695a6-f301-40d9-abf1-59c0c34c8f13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ce57127e-937d-4781-b621-a0b0109eb094"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c9a6274-5fa8-4335-8611-bd7912b1bdfa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9af5fd37-d4ed-4a9f-bee0-30accb4f87dc"
            }
          }
        ]
      },
      {
        "id": "c9b33378-3f78-4eb3-b197-b469525319a2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a76e3f34-46c1-4d61-9107-19f55d89bf34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "deea4cb7-1103-4e7f-a3d4-4cf6015fbe55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ec3655e-8d41-4734-8206-9f52ab1a1cb5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254d15c5-357a-4bbf-adfc-ce3a0db729b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7a43be8d-63bb-4083-a5a1-f5a77d43f322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7c33c5-df12-4406-9cb1-a29edaa8fa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cd7668e-81e5-4b99-a82e-844cee5446a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "195c0e56-1889-4f92-8387-b1a512e64408",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0747083a-4c84-4301-8c31-bca519b01c62"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2c56c9b-18e7-4c81-a234-62b6efb58900",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3208f49-a6bf-44fa-8aac-c9eaea1ef5ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "947f2d9e-4cc2-4cbd-b64c-79aa6e460ffd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5d8542a3-cb0e-457a-9702-4bd296a18523"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f9f1ad0-6dd6-49c3-a6b3-16fa817823bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ba9aede-81be-426e-a8d2-3c5141de9b83"
            }
          }
        ]
      },
      {
        "id": "1dcd86b0-9489-4b5d-a400-7b71ba7f7bfb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e893a48e-2f4f-4d33-8607-a028cb4dde68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8eb4b479-043e-4426-befa-ddad7ac7233a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3b62f3c-9716-43da-a81c-c005f35cc5ba",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c76f9d-037e-4ef8-bf6c-be559a63b8cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa803172-0582-4ede-86e4-cdb749e7d99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56032b11-6a95-44b0-9989-cd5408b1eaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21ad6dde-dd15-4b7f-8b41-f541500feabb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1192c894-898a-4c03-b66d-73a04467b812",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2aae7cd3-c836-4986-907c-6d07185db529"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a3ed109-c4bb-4d39-a515-fa075aafc6dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18d9b3b0-f693-482f-a813-d3dde532e679"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ef75138-6918-4801-be90-edfd56267997",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8520c47f-1e5e-4bc6-82f0-ea4c45b19c7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8e2802a-c6bc-4e47-bc1a-c743472f1e2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c5069a6-25f6-485e-a6c2-e613c5448253"
            }
          }
        ]
      },
      {
        "id": "30258e01-9127-4981-a410-7bac983ebdc4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "28192ec1-3be2-4745-bba4-19b009dcca53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03ed0cee-78cf-4964-bac9-b3c0e4f4f760",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3359b32-dcd5-45d1-b5bf-9c300b317826",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff8c2a6-ccfd-4edf-afb1-9fbab7c0b32c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cae1e535-c398-4ba5-8a21-04a65541c2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37881e10-6f87-4d58-bca6-36e1838851b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc8b2cfc-68df-4c0f-b0d2-4d93afa57261"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3ef35d6-81ec-4703-a78c-41cf4940b116",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "432703ed-6c0d-4f39-8878-3d164528428a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "318a9a3a-ebda-4266-9c44-1664cc35e5b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b4de6ba-f26f-49ac-b70b-6772301b44c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12c7975b-196f-430c-92b1-578d11e1fe6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f8319b77-ff92-4e9c-8be7-8a98f60b5538"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35ec7d0f-60a4-4d69-9b0d-83ab19afa009",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8dbcadf-44d2-4d61-ab3f-520ea457f79e"
            }
          }
        ]
      },
      {
        "id": "3e0a812a-1294-4675-972c-3edfb7f61c81",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "407f302c-7bfd-4618-8e0b-0ba9d0d3ac3a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98858187-839e-4d4f-93a0-67e16a08f939",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7fee5413-da27-45d4-9928-4c9c0c62400b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce596ccb-660c-473b-915d-6285236d3f36",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7be2eda1-a96e-4644-b671-02fa159b09c2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 114.46428571428571,
      "responseMin": 10,
      "responseMax": 6748,
      "responseSd": 502.933192723981,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723768812441,
      "completed": 1723768849525
    },
    "executions": [
      {
        "id": "80d42ca9-b08c-4837-b3c9-5fab92ddd535",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bbee0025-b0c5-4fee-87b6-acf5bbbaea9c",
          "httpRequestId": "d1f5e1ac-a2d5-42a2-90ab-2232f4bd9e4c"
        },
        "item": {
          "id": "80d42ca9-b08c-4837-b3c9-5fab92ddd535",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "495b2d0e-3e68-4e63-929a-ed11a13c7359",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 0
        }
      },
      {
        "id": "e51d0ce4-33d9-4b65-8b1f-f2a7b1d8a156",
        "cursor": {
          "ref": "0974621a-7a4b-4018-be7e-c604e5ae6cf3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4a57386d-b3c0-48b3-add5-f09d1b93560f"
        },
        "item": {
          "id": "e51d0ce4-33d9-4b65-8b1f-f2a7b1d8a156",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ca23755b-5fb4-42e9-8bda-431370276752",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "48e0b52e-cecb-4709-abfb-eb7d35180e18",
        "cursor": {
          "ref": "fe55ac77-35bf-4902-aa8b-d736fdb0d47f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7fe60f27-39b6-4641-b15e-f5ef863a1238"
        },
        "item": {
          "id": "48e0b52e-cecb-4709-abfb-eb7d35180e18",
          "name": "did_json"
        },
        "response": {
          "id": "73a819a1-b74d-4c58-b09f-6ad7740d227b",
          "status": "OK",
          "code": 200,
          "responseTime": 281,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50236be5-6b79-4b2d-a036-213d673645f0",
        "cursor": {
          "ref": "3356f5d9-4959-47b7-95d8-91224c4bb811",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2796761a-3b8c-4757-a75c-6eea700d3219"
        },
        "item": {
          "id": "50236be5-6b79-4b2d-a036-213d673645f0",
          "name": "did:invalid"
        },
        "response": {
          "id": "5da00169-9b44-4cdc-b1fc-8e8ac04ce5aa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 356,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50236be5-6b79-4b2d-a036-213d673645f0",
        "cursor": {
          "ref": "3356f5d9-4959-47b7-95d8-91224c4bb811",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2796761a-3b8c-4757-a75c-6eea700d3219"
        },
        "item": {
          "id": "50236be5-6b79-4b2d-a036-213d673645f0",
          "name": "did:invalid"
        },
        "response": {
          "id": "5da00169-9b44-4cdc-b1fc-8e8ac04ce5aa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 356,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d772df-5a5b-426d-8d4d-fa2744bcc43d",
        "cursor": {
          "ref": "8fee5f77-90f7-4bda-bccf-8a61b289bac4",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d428d915-d71f-452a-b3de-ca7ebcee1a8d"
        },
        "item": {
          "id": "83d772df-5a5b-426d-8d4d-fa2744bcc43d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8eeb747c-8400-4d62-921f-7a24e10303e3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bea99b4-04ca-4cb4-9e46-00a4d0ba7df9",
        "cursor": {
          "ref": "d0775e78-06ed-45f1-851f-bd279638a7b0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7b8e9c3a-5dba-4faf-a38b-fa4e4577ac33"
        },
        "item": {
          "id": "7bea99b4-04ca-4cb4-9e46-00a4d0ba7df9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "faec1182-25f4-45c7-ae65-c803effb6e77",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919e53a6-b24e-4581-8e0f-464095f2d3bc",
        "cursor": {
          "ref": "04166d96-757f-4678-ba39-72e5964dfc13",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "533faa9c-a0e7-4e09-a078-29f2c835837d"
        },
        "item": {
          "id": "919e53a6-b24e-4581-8e0f-464095f2d3bc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ea610e2c-164a-4458-84f6-5452a550d967",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e1ae97-78e0-43dc-a599-9a991d292c6e",
        "cursor": {
          "ref": "81cdc3ba-daff-4f4d-b0b7-38647d72bf6b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "df8b2f9c-a1d6-4abd-94b4-b26edf3f2db0"
        },
        "item": {
          "id": "c3e1ae97-78e0-43dc-a599-9a991d292c6e",
          "name": "identifiers"
        },
        "response": {
          "id": "02c40a68-4b74-418a-a4d5-515b03bb6c23",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4448ae04-13f1-43ce-976b-d8752b6760dc",
        "cursor": {
          "ref": "97b28c3f-bbc4-48a8-a366-c014ddc24fa0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "93a4deb5-4933-4838-a288-5d93c9bc1e69"
        },
        "item": {
          "id": "4448ae04-13f1-43ce-976b-d8752b6760dc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c131b773-6c30-4c1a-ba2b-8cba6c51dcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e294b410-3dca-4ba0-8641-f06854075cb4",
        "cursor": {
          "ref": "f7683221-a0f7-4754-bb38-90db3930daa4",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "eba56bbd-446c-4212-9d41-5d6d140fd7bd"
        },
        "item": {
          "id": "e294b410-3dca-4ba0-8641-f06854075cb4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e88db7e0-33a9-4587-9526-ddcff35a5767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c419158-9ec8-43a5-8c63-31131dd6d19a",
        "cursor": {
          "ref": "fc8e26ef-7fb2-4c8f-866c-f5ce1f433944",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "301fff26-a664-4ed9-a98a-d5eff81e91e9"
        },
        "item": {
          "id": "9c419158-9ec8-43a5-8c63-31131dd6d19a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6edf3f65-aa70-4120-82b3-7e77c2004973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7359f4f3-a29c-4eac-8703-b1b6f16ee392",
        "cursor": {
          "ref": "178287df-5ea5-48b8-9852-7ae8ad0fd4d1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "28a3fb6e-4256-4286-b18d-4e05b2d5c71a"
        },
        "item": {
          "id": "7359f4f3-a29c-4eac-8703-b1b6f16ee392",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b90a8a89-8554-4871-b58d-dccd8eeee8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f433a5d-c231-424f-bea3-c2136351df1c",
        "cursor": {
          "ref": "9e48a15e-0fcd-4e8c-9de7-616490a3fcd5",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ce2ddff6-f535-4efd-bc7e-d5d6040a9156"
        },
        "item": {
          "id": "1f433a5d-c231-424f-bea3-c2136351df1c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b34e58d9-1982-4dd1-b8af-1212c4585cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085f4ef7-c4a4-4aa2-be3e-ea8b1fbaaa59",
        "cursor": {
          "ref": "18c3c2c1-799c-4414-a38c-000cd549a957",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "29497bab-e752-4fe0-8b6c-1b561971744e"
        },
        "item": {
          "id": "085f4ef7-c4a4-4aa2-be3e-ea8b1fbaaa59",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b0aad42d-5575-4258-ae18-e0384bf29496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711c072b-9ae0-43b9-8f6f-b034ddaafb44",
        "cursor": {
          "ref": "7c658e6d-6528-4f73-84a1-d7a404bfff75",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3e148e71-131e-4c67-99f0-2ca70340617a"
        },
        "item": {
          "id": "711c072b-9ae0-43b9-8f6f-b034ddaafb44",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "72248925-ab5c-4831-970a-1fa576796db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1ddabd-dfe5-4726-84bf-6f0bf0f170dc",
        "cursor": {
          "ref": "76e10799-6475-4cfd-8fec-5ab9ebfd80eb",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "756a46dc-aed7-419c-aaa9-08ecc9e5ec72"
        },
        "item": {
          "id": "7f1ddabd-dfe5-4726-84bf-6f0bf0f170dc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8f50076b-627c-4300-9b0d-3cfe918a8fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec660464-24cb-4c0f-8539-326416369b0a",
        "cursor": {
          "ref": "937ef516-62e1-4079-a93f-01836b80213f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cee127d0-2f2e-416b-9450-ec83e5553b8f"
        },
        "item": {
          "id": "ec660464-24cb-4c0f-8539-326416369b0a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a072b940-0073-4e53-b26e-b040c7d282f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdda9522-e616-43fd-8427-6fde0a3e1a2d",
        "cursor": {
          "ref": "e516cbca-087f-4c0f-9698-61e6b29160c3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3aee8efa-496f-41f7-a795-2f0bd1c9a116"
        },
        "item": {
          "id": "bdda9522-e616-43fd-8427-6fde0a3e1a2d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "271e0285-e696-4e9d-b1d3-b3d454b813e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639ea770-35ac-4945-bb59-d7c416442ba1",
        "cursor": {
          "ref": "fd6649fd-7075-4aaf-973f-3b2d127c66cb",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c4c2d2d2-e065-4418-b8ee-1acb808abce8"
        },
        "item": {
          "id": "639ea770-35ac-4945-bb59-d7c416442ba1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1f78525e-bcdf-4a9c-9401-2e6f08ec2085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d35aec4-ffe4-4b1d-8a0d-58346a04ab7f",
        "cursor": {
          "ref": "3866c872-b912-49c3-b187-a4801e32cf0e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f4ffeddc-d4bf-4d9c-8d6a-53fbca809513"
        },
        "item": {
          "id": "5d35aec4-ffe4-4b1d-8a0d-58346a04ab7f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a914ca35-67f1-4b68-9316-d6d56b5c33a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce18dd98-165b-409a-8435-8a891fc25348",
        "cursor": {
          "ref": "c8d46e33-3006-40ff-b48e-ce802254178e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0cade376-e1a7-4462-94f2-7d3465cc639c"
        },
        "item": {
          "id": "ce18dd98-165b-409a-8435-8a891fc25348",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e7f6a75d-b577-4fe7-8bec-0748c00ec831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dca8928-0b88-46df-9089-799e125dec6f",
        "cursor": {
          "ref": "1a61c623-9d66-4190-9cd8-fb0b4a5351dc",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "54da3863-c596-4876-a2bd-ca216de76ddb"
        },
        "item": {
          "id": "6dca8928-0b88-46df-9089-799e125dec6f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5b5cfd9b-878e-4f72-9118-ff2406ad78fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf54c5d-391a-4736-b95b-8eba294a9b6f",
        "cursor": {
          "ref": "e4fe71b6-cbd7-4021-a82d-e85c3a366983",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3d507cb8-e904-4408-8fbe-c6b977634597"
        },
        "item": {
          "id": "faf54c5d-391a-4736-b95b-8eba294a9b6f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4c929899-5ee5-4c75-8558-353ea1fd6a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcc2187-ba6a-415a-a9b2-54147de30712",
        "cursor": {
          "ref": "70993ac2-aec3-4e0a-8927-45e22a456035",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3d21cd22-f47a-4d04-8e1f-6dd4fda639e7"
        },
        "item": {
          "id": "edcc2187-ba6a-415a-a9b2-54147de30712",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "168c153d-8b6b-483b-8e38-6d0a97ea076c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849c72a7-5a29-4ca3-affc-99f26d5ac871",
        "cursor": {
          "ref": "4d3bb507-cdec-4223-847a-3f17443c418d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1d81498d-026f-442d-9271-918933e2fc38"
        },
        "item": {
          "id": "849c72a7-5a29-4ca3-affc-99f26d5ac871",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ea7623d0-e19b-47b2-a8d9-8c80cfe5eab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2f6a9d-f887-442a-9b3d-63247f844a4a",
        "cursor": {
          "ref": "b5767b8f-d791-410e-a240-72d3af620a69",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "af55c0d2-5225-41a4-bbd1-e50a733ac632"
        },
        "item": {
          "id": "4e2f6a9d-f887-442a-9b3d-63247f844a4a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c32271d3-e15f-4b11-ae8c-5bd36125099a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3780abe8-4952-4f85-b3bb-b8fe5da02f77",
        "cursor": {
          "ref": "2b542647-c301-47cb-8fc3-87e801327cc8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8517a4f2-08d2-49ca-9291-1ce2e67c6e4d"
        },
        "item": {
          "id": "3780abe8-4952-4f85-b3bb-b8fe5da02f77",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "45fac90e-b48a-4572-9476-c624bce58952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b62f6a-0afb-4df2-b8d3-7b39ddde5c98",
        "cursor": {
          "ref": "5fb6fc71-06c0-4aa3-af28-4315a692edc2",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7af76d58-f6b0-46b9-98ce-e887cd750e96"
        },
        "item": {
          "id": "08b62f6a-0afb-4df2-b8d3-7b39ddde5c98",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "27062bab-6b78-4db4-ad8a-16f463c3a52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93997a79-4b7d-4081-bafd-0d3525e92fad",
        "cursor": {
          "ref": "b1802e03-f024-4ae1-a8c7-24eefcee8a33",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "02fd9e11-958b-4a5e-8756-56660bba965f"
        },
        "item": {
          "id": "93997a79-4b7d-4081-bafd-0d3525e92fad",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d815c97f-f5b1-4629-b1c3-2402db5311ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88e2d17-9875-40a2-8251-36a3431700ee",
        "cursor": {
          "ref": "7436a69a-e65b-41c8-b6d4-84f281c7d0b1",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "43b1253f-0dcf-4cf1-8f91-1f07d3c643cb"
        },
        "item": {
          "id": "f88e2d17-9875-40a2-8251-36a3431700ee",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "76f5c023-c511-45e1-b848-65969bae18d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf71bf8-9272-4aab-94b0-ddc392bb1f02",
        "cursor": {
          "ref": "40b16e95-9ba7-4b09-8edf-b6ebf9201816",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c0aa3593-4893-4287-bd0b-9a0fe0085819"
        },
        "item": {
          "id": "dcf71bf8-9272-4aab-94b0-ddc392bb1f02",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5ce61c24-ce8d-45d6-a80e-d94e769395cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec444ad-9be1-471f-bb92-d0789a806591",
        "cursor": {
          "ref": "30014af8-c24b-4b50-8fcc-5e1ecac97733",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f47dec8f-60dc-4c27-96a3-201fb691a7c1"
        },
        "item": {
          "id": "8ec444ad-9be1-471f-bb92-d0789a806591",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2c71258e-715b-4088-8d0c-2263dfa14bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbeebfc6-3a8c-4ff0-8f13-b911fb49f76c",
        "cursor": {
          "ref": "a6fe56dc-c57f-46eb-8266-8f5b4f6f0288",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e5ad7bf3-84e2-44b6-ac93-54202dabd5c9"
        },
        "item": {
          "id": "fbeebfc6-3a8c-4ff0-8f13-b911fb49f76c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2ede8871-166f-4a01-b267-e2c28b96561c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d325b1c7-e585-46b8-8914-fc4d3a4c229f",
        "cursor": {
          "ref": "b3370db7-b998-4eb6-88d9-805aa41f3dfa",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e346670e-b340-4214-a323-9ae91f019033"
        },
        "item": {
          "id": "d325b1c7-e585-46b8-8914-fc4d3a4c229f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b30a4987-cd16-4867-a831-0d356921824a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d199cf-0133-4787-9864-54deb7ee7ec2",
        "cursor": {
          "ref": "402d6492-b180-40d0-ba66-24b09381c60b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d6facfa6-b8e2-4292-91ac-0a57e78e3f63"
        },
        "item": {
          "id": "c8d199cf-0133-4787-9864-54deb7ee7ec2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "861476b5-58e6-4ff5-87e1-7cf7ad740113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d42c8c0-533c-4e30-a734-9b161b417ec9",
        "cursor": {
          "ref": "ca7ca382-5255-471f-a8f5-66a69d010363",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9f19756e-88ae-4a89-a44d-ae87adc60926"
        },
        "item": {
          "id": "4d42c8c0-533c-4e30-a734-9b161b417ec9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f4eeba1e-c6d5-4580-819d-9ee9d3cace6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f905b703-5798-4387-ac1d-751155c25e00",
        "cursor": {
          "ref": "7455b711-2c4a-4c4f-9ad2-931285842941",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "754841c1-4f0f-4750-bb34-2342cc5f46b1"
        },
        "item": {
          "id": "f905b703-5798-4387-ac1d-751155c25e00",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6b64f13f-3b8f-404c-96fe-d48c13a0a5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a534be54-5f73-4acb-b1d2-c108bb2559c5",
        "cursor": {
          "ref": "b430f6af-306b-499f-8fe5-5a3d3d29cf09",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e035a7ca-f0cc-4e71-a0d8-9d1701bdd7d5"
        },
        "item": {
          "id": "a534be54-5f73-4acb-b1d2-c108bb2559c5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "92fce4d9-b0d0-40f2-a07d-756cf5a73502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790ec0c8-44e3-43d8-bdde-9f0a15ed9898",
        "cursor": {
          "ref": "70a50574-e927-47e6-bc33-c7bbd8f14a46",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f50b1bb2-08f7-4250-960c-b9709b4e7c30"
        },
        "item": {
          "id": "790ec0c8-44e3-43d8-bdde-9f0a15ed9898",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d1397bfe-1665-4e79-ad15-180c3ddc4d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f844857a-0155-48ad-8bc4-458c4a55de2a",
        "cursor": {
          "ref": "7668f561-4e31-436c-b578-71b09591273d",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a73a69f2-67c3-4027-bb41-bf7814e3b32f"
        },
        "item": {
          "id": "f844857a-0155-48ad-8bc4-458c4a55de2a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "09a744c3-a5df-44ab-a769-1df9af7eb1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12378b14-2856-4d5f-95db-620349197587",
        "cursor": {
          "ref": "802a5593-cb6a-4f0b-971f-028f58511ee3",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "78ce1b7e-583d-42fe-bfcc-22dcc344a909"
        },
        "item": {
          "id": "12378b14-2856-4d5f-95db-620349197587",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "86bd4bea-2661-4db8-a2a5-707d2beab1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24264047-b263-4154-8b16-4fbc49aae9bc",
        "cursor": {
          "ref": "e6cfece3-11e2-4f34-a662-bce226976b1e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "69f31381-e887-47b1-ac3c-5d238ccdb0df"
        },
        "item": {
          "id": "24264047-b263-4154-8b16-4fbc49aae9bc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "35f3a8e8-e51c-4c04-a112-43594a88d0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c1641b-0244-4cc7-ba79-f8791e5fdd6e",
        "cursor": {
          "ref": "a3926d57-a394-459d-83da-551ca6082df7",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6dba6f08-4e39-432d-8237-ff7332742b02"
        },
        "item": {
          "id": "a9c1641b-0244-4cc7-ba79-f8791e5fdd6e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "823fd762-d028-4d9f-a4f5-ff7206ffaa08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4e081e-93d2-438a-b415-7a66f814e200",
        "cursor": {
          "ref": "56c36031-4aff-4346-a83f-a7534fbf1453",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "469ca025-f165-4b1a-8fba-41991ff08528"
        },
        "item": {
          "id": "1a4e081e-93d2-438a-b415-7a66f814e200",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "055cfb88-6f5e-4a77-81e5-f74db6b6ddc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdf08e9-5dc6-4e0a-a9fa-76e80aa2856a",
        "cursor": {
          "ref": "e6107fa7-ea64-4486-be37-8167aab576ec",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "23b7e2bf-5504-4889-9a92-1c72e395cde4"
        },
        "item": {
          "id": "ebdf08e9-5dc6-4e0a-a9fa-76e80aa2856a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7e6a9c21-503d-4a29-9b05-ea671e808890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84439092-01f6-4dcc-b6d3-0e446f4e4750",
        "cursor": {
          "ref": "ddfcbd64-1d98-4452-a6be-e3da32155ae0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "abd65dfc-af4e-4313-9cf0-84fa3b613b9c"
        },
        "item": {
          "id": "84439092-01f6-4dcc-b6d3-0e446f4e4750",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "464ccba7-c8c7-4c49-81c5-08fa019270ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d321a75-4684-4b22-9b9d-d726e57b89c4",
        "cursor": {
          "ref": "33610ffd-2cd5-4856-8c52-9c2be6605884",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a2694dc6-55e1-4ab4-be10-d94ee453d6af"
        },
        "item": {
          "id": "1d321a75-4684-4b22-9b9d-d726e57b89c4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "23fd25ba-2f7e-423e-9250-130a3c9538cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808bc2ae-1d30-4406-b57b-3e68666adb59",
        "cursor": {
          "ref": "2686b5d2-e768-4fcc-b2cc-d24f08845d77",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "06c69bc8-ca38-48e5-aa8a-39e418091e69"
        },
        "item": {
          "id": "808bc2ae-1d30-4406-b57b-3e68666adb59",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "235a4350-7e9e-44d1-882d-5be24966a895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503bbfc3-a155-40d5-93c9-e372f4ad4dd1",
        "cursor": {
          "ref": "fd6094a9-80a9-4646-8a7a-7497d81bbb97",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "062edacd-8b7a-47ba-b5fd-40e49cd101de"
        },
        "item": {
          "id": "503bbfc3-a155-40d5-93c9-e372f4ad4dd1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cf3928a3-ee24-47d5-841a-3908ee201e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e59308-5529-479c-869f-36047d743775",
        "cursor": {
          "ref": "9a23ca0e-1052-42e1-8133-ae6b7ee085ad",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7051fab2-4d05-426b-b7d2-e7f0a9b5cdb1"
        },
        "item": {
          "id": "55e59308-5529-479c-869f-36047d743775",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "65e78178-2057-44b4-9b66-b73db809b1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89430b40-0e01-4a9f-ac8d-f6571db08f20",
        "cursor": {
          "ref": "f1eda694-038d-4b8e-b605-4125ba5de64e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "761c89e9-919f-4b0c-b73b-ec609860708b"
        },
        "item": {
          "id": "89430b40-0e01-4a9f-ac8d-f6571db08f20",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c1e6408e-a047-4fde-91ab-2287089a89e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc33af0-2be3-4c02-a076-c218aee0c080",
        "cursor": {
          "ref": "3e53a3a7-048b-484d-8517-4ad4b29f64fe",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d1e48d4a-2d45-4b40-aa3b-66b3c224717a"
        },
        "item": {
          "id": "7bc33af0-2be3-4c02-a076-c218aee0c080",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "62197fbc-141c-49d3-b154-234987b9786c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dadb699-9cee-4ca1-922b-106cce4c63dc",
        "cursor": {
          "ref": "f9f34318-f4e8-4856-b528-5ba6c92f6ef7",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9574d9d0-65b5-4dcf-8173-dd37196bbd38"
        },
        "item": {
          "id": "7dadb699-9cee-4ca1-922b-106cce4c63dc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f8d0161c-58e5-4c20-9195-04be6ce4aec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0877f0a-2c0d-48a9-af1f-b93fe1fc46d5",
        "cursor": {
          "ref": "b300d3de-c97a-48f6-b8b4-461698661b6a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3616a381-22af-4afe-8c2f-87c2c520e927"
        },
        "item": {
          "id": "c0877f0a-2c0d-48a9-af1f-b93fe1fc46d5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "203f98ae-633d-4d67-9f29-586253b60731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb14135-320a-4da6-9834-6d18febcd854",
        "cursor": {
          "ref": "6ef72516-cff5-4eb0-9b6a-0294695f15e8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c4cf4ac5-ac9c-45e0-b4c4-d5f259675481"
        },
        "item": {
          "id": "1cb14135-320a-4da6-9834-6d18febcd854",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "591baa9a-d3c9-44a4-b205-4bc6c79f87a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf00ebf-29a6-49c2-823b-d5c8834090fd",
        "cursor": {
          "ref": "5283e5fc-80df-4e92-aa22-a87a3d7e9fea",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1856eb13-7e10-41b1-976c-39faa679e24e"
        },
        "item": {
          "id": "4bf00ebf-29a6-49c2-823b-d5c8834090fd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "40005090-fb41-47b9-976e-75c97773b288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f1dea8-e3ce-44fe-b384-3777c7be989e",
        "cursor": {
          "ref": "449c4140-2100-49e4-bb43-119c148804af",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "99c67641-3bbd-46c2-a92c-d7c0800262b6"
        },
        "item": {
          "id": "74f1dea8-e3ce-44fe-b384-3777c7be989e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cb67cca6-e3bd-4a07-a02e-ac611c2121c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0972393-1483-4c31-9cda-6eb2727db65d",
        "cursor": {
          "ref": "1cbe5c8e-f5f9-4528-9147-7f05de2075b1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e5d95d2d-b2f1-401a-ada3-dc087a597610"
        },
        "item": {
          "id": "f0972393-1483-4c31-9cda-6eb2727db65d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9db22814-d24f-4694-b703-9ccb080de3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e210cb-c189-4c83-a4b4-e0ffd8919e2f",
        "cursor": {
          "ref": "f14b3060-8002-4b6e-a3a2-73d31b027d25",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "442ced7d-4da7-483e-b243-962950e9ef93"
        },
        "item": {
          "id": "89e210cb-c189-4c83-a4b4-e0ffd8919e2f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fd63add0-a6a3-4a5d-afed-4ba93b728c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823aa158-9429-41d3-a981-a754faa75315",
        "cursor": {
          "ref": "7a2838b5-7c92-4e26-9f66-e7aa99ab49bc",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c26f1d0d-110e-4595-88c3-c60effc62731"
        },
        "item": {
          "id": "823aa158-9429-41d3-a981-a754faa75315",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a28bd5b5-fc99-4d4d-b168-07873bc61151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc8525d-92c0-4c07-9a2c-2c4c1ac575d8",
        "cursor": {
          "ref": "2e1adb8a-048c-472e-a407-e69e6f6609a0",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dd061efd-61f7-46e5-98b8-1ba502f1dff1"
        },
        "item": {
          "id": "9dc8525d-92c0-4c07-9a2c-2c4c1ac575d8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "acf7820c-07c8-4610-b216-bdd9da4ba499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2744ba9-23f7-4ac1-b689-eb0dea1aea86",
        "cursor": {
          "ref": "ff1c6990-d322-4d3b-a299-d4c511b8f4a7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f70b0f8c-3852-4874-b7ca-96452bb5ff84"
        },
        "item": {
          "id": "e2744ba9-23f7-4ac1-b689-eb0dea1aea86",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "95b77a62-6528-4665-9b5c-a8c105448822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a29446b-c3de-4915-86d6-e8abf8af981d",
        "cursor": {
          "ref": "83f7a293-9678-46d8-9160-db8bef193930",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "469495b8-dc41-473e-93a8-f41649c7530a"
        },
        "item": {
          "id": "3a29446b-c3de-4915-86d6-e8abf8af981d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a4cc6edb-43a4-443e-a985-c98de5e6bc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef28959d-b795-44f4-b94b-f0e54d7ad519",
        "cursor": {
          "ref": "78c57938-20a9-47e0-b4ae-0279e5a77b90",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c275b7dd-cb23-46b4-b538-abda48444e70"
        },
        "item": {
          "id": "ef28959d-b795-44f4-b94b-f0e54d7ad519",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "aac0d125-f332-4a6e-ad67-64e06afc3dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0b6104-c1f1-4824-91bf-960daef769db",
        "cursor": {
          "ref": "ddc1f6bd-3bd8-4548-83a0-a4202f29991a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9a02a6f4-84f7-4e21-a016-2f49a584bf2c"
        },
        "item": {
          "id": "8c0b6104-c1f1-4824-91bf-960daef769db",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "85639764-3aaf-4a45-9367-fd8d4038bcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82dad0f-486e-4b11-a169-28da0320d279",
        "cursor": {
          "ref": "47ad8cb4-f658-4b3e-adfa-76f114851478",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1e53baee-c0ba-4c71-984c-6681b1ad4494"
        },
        "item": {
          "id": "a82dad0f-486e-4b11-a169-28da0320d279",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bd812134-bdac-47ae-a710-33bb0b8fef06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ab19f6-58e5-4ca0-9d8f-a79d991d7213",
        "cursor": {
          "ref": "6df5ce13-3e65-4848-a882-ed75a2b8bc56",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2d4eb7ca-75c3-41e1-af34-0059947320ae"
        },
        "item": {
          "id": "e6ab19f6-58e5-4ca0-9d8f-a79d991d7213",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2cbc59d3-804e-4944-afa5-10dd2c2f6d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ff5efb-71e6-4a42-a6bc-e93246900c9a",
        "cursor": {
          "ref": "a77b0e62-77ea-420b-a8a3-2add0bdaefd9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "828545c8-320b-4d31-85a2-d0f32d36c559"
        },
        "item": {
          "id": "88ff5efb-71e6-4a42-a6bc-e93246900c9a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a2f209a0-0233-4c39-881f-93f26f52dee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294f8ffa-3837-45d0-9265-add39c809e2f",
        "cursor": {
          "ref": "42aa8c60-4714-470c-b6e7-2ee5cb84bc9f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ab43d359-902a-459b-8ef6-d921baf5d041"
        },
        "item": {
          "id": "294f8ffa-3837-45d0-9265-add39c809e2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "190cbaf2-c30d-40d1-9728-ff912e02cf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a95e196-7d3a-4f06-a8d5-4041e10a4002",
        "cursor": {
          "ref": "1ce0c7de-6d66-440e-a3c4-9b49e09f42c4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1b27f3e7-63be-413d-8b3d-ea5ad2839bcf"
        },
        "item": {
          "id": "4a95e196-7d3a-4f06-a8d5-4041e10a4002",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f88089ea-97c6-4789-9d90-2a990130c88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cd07fa-273f-4992-8b60-cbfc5d5189c2",
        "cursor": {
          "ref": "a7fee420-0610-48eb-ab3f-2ab54f25a002",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cdb07385-2903-46cd-8022-1aa59b4b05cc"
        },
        "item": {
          "id": "77cd07fa-273f-4992-8b60-cbfc5d5189c2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7e3b9772-784d-4879-920b-57b3f56c8c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fe3de7-8420-4f55-835a-2f602ca418b8",
        "cursor": {
          "ref": "e269eb88-f30a-4b64-82b1-19d89fbed167",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a1f6b079-cf9c-41ad-a51d-e7de65c35b87"
        },
        "item": {
          "id": "03fe3de7-8420-4f55-835a-2f602ca418b8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "20f46e38-31bf-4491-934f-85054d318eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727ec66f-229b-4b14-95d1-0730a018be58",
        "cursor": {
          "ref": "454fe437-4dbe-4411-9c94-9226c17e88eb",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ce1a0261-a951-4594-b0c0-3d795b37047c"
        },
        "item": {
          "id": "727ec66f-229b-4b14-95d1-0730a018be58",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cbc313f5-b897-4421-8b1a-6a2ea25e067c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2255074-a0a4-4a6c-bfe7-7490eaad3a5b",
        "cursor": {
          "ref": "46536ebf-b2b9-47dd-8129-7306ddeb0f7c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f4cad24d-88e3-4771-8423-a20640065452"
        },
        "item": {
          "id": "f2255074-a0a4-4a6c-bfe7-7490eaad3a5b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "643ff2f5-35a9-4985-af0f-fd413af6b823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27605f07-45db-4257-9800-41d863bb20b0",
        "cursor": {
          "ref": "c8e05e57-20f0-4f14-ab89-f315cff506d8",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6d1cc913-5d3b-4a18-9069-1135ca9ad129"
        },
        "item": {
          "id": "27605f07-45db-4257-9800-41d863bb20b0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "26c3d360-6ff4-4064-aef8-f6e0f1a195a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d562c9b1-9673-4714-a047-a05e2e20c90b",
        "cursor": {
          "ref": "a7fd560a-2478-4bc9-bd51-7c9752f04a22",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "40910d04-60b6-42d8-8537-8657fafa45f4"
        },
        "item": {
          "id": "d562c9b1-9673-4714-a047-a05e2e20c90b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b37fe3e8-0d83-4e2f-a07d-5b2bee2a0d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa84601f-07fb-4e5b-b8cf-8a80571e51e2",
        "cursor": {
          "ref": "af8da71c-cccc-4466-ac4c-41005366f6c0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2a9e9cc5-dcc7-4f39-9a62-737bae5f3392"
        },
        "item": {
          "id": "fa84601f-07fb-4e5b-b8cf-8a80571e51e2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e9d9f22c-ff7f-4ec1-b4c0-83c678143189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0768a9ee-7c03-4f70-bda9-c4453c6231a1",
        "cursor": {
          "ref": "b4f964b4-aeda-48d4-bc0e-40eff8837720",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "17394f39-a399-4513-b8c8-3b65ae36e1bc"
        },
        "item": {
          "id": "0768a9ee-7c03-4f70-bda9-c4453c6231a1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "92133f95-ad5c-4672-9716-5c00c2c5b8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18b271a-eca9-4c41-80fc-354d31e8fb14",
        "cursor": {
          "ref": "76e2944f-5eea-443e-bfda-c555c6f5db36",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "74d84f50-e232-4e89-b5ee-9668386cf3a8"
        },
        "item": {
          "id": "f18b271a-eca9-4c41-80fc-354d31e8fb14",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "797b4d54-9ec1-48bd-945a-81585518462f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca89d4e8-f5fe-4f73-bedb-a746af5c76c3",
        "cursor": {
          "ref": "98ee3e71-a2cc-4522-ab70-c429e8f38397",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f822a3f0-0f09-4fac-8511-56bc0969f99e"
        },
        "item": {
          "id": "ca89d4e8-f5fe-4f73-bedb-a746af5c76c3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "66759881-38bb-4a05-ade5-747a2e1f3648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0e670c-f8b8-4bf7-a702-6c172b2f11ff",
        "cursor": {
          "ref": "8e390781-d5e6-4a63-ad06-5ba71c9ac64e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6650e0e1-4c78-4b59-bff9-3634adee7495"
        },
        "item": {
          "id": "ee0e670c-f8b8-4bf7-a702-6c172b2f11ff",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6cca8ce4-51b2-4d42-b7fa-330891b78490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0cd2a1-81bb-44e9-b0df-f671d144e1dd",
        "cursor": {
          "ref": "2da50265-bfb5-411b-9681-4b394a65cb42",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d2ac36f1-5721-4eca-b7a6-f041ab31598f"
        },
        "item": {
          "id": "2c0cd2a1-81bb-44e9-b0df-f671d144e1dd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "39f37dea-b642-48bb-b993-d9e265c6cf54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26088776-653c-4273-a602-b6035b588876",
        "cursor": {
          "ref": "567bda5a-7c97-42f5-8eca-e9b9bc5fdbd0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d3fa4dbb-c968-447c-a04f-5deb6cf2c876"
        },
        "item": {
          "id": "26088776-653c-4273-a602-b6035b588876",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b4a04012-47cb-4bca-8b04-8ced4d46a40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2e765e-02c7-4d65-8f10-369772ff8a5a",
        "cursor": {
          "ref": "c04b28de-3855-44ff-9d54-5db5683a1040",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "15100847-ddeb-49b9-b8b4-85a7cac3bb17"
        },
        "item": {
          "id": "4d2e765e-02c7-4d65-8f10-369772ff8a5a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dc0de730-5333-4883-8622-0b06d447429a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb284feb-6a55-4885-b309-fed04dfbf86a",
        "cursor": {
          "ref": "518c99f4-311f-43b1-8dbe-d70db4ed9001",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7bba8885-5d5e-4d24-8531-569edb0d9a33"
        },
        "item": {
          "id": "eb284feb-6a55-4885-b309-fed04dfbf86a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "92c02ed7-ec74-4f62-8aee-ca4eb39cd5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46dd7b2-7500-4972-b8ae-df65d0fa9aca",
        "cursor": {
          "ref": "a31de687-67d1-4847-aade-cd5057050e2e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1660dc93-b31a-4289-9a65-0ea5515c0fe7"
        },
        "item": {
          "id": "a46dd7b2-7500-4972-b8ae-df65d0fa9aca",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "41ebb67c-2c2b-461f-b610-d2ccdfbc564e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852dee05-1586-478d-9a91-3e1daefb93a5",
        "cursor": {
          "ref": "92d73b6c-6dc1-402f-b11b-97717dd686c1",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a80fbec6-7f9f-4f93-9a68-fc6721341eb5"
        },
        "item": {
          "id": "852dee05-1586-478d-9a91-3e1daefb93a5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fc424d4f-a8b7-49b8-92f9-33576d529b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2385e801-a90d-4734-8f31-add867028ebe",
        "cursor": {
          "ref": "4dd07361-6770-4c78-963a-3042db6e8163",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f7fc21b7-949d-4be6-9fed-b9b008c594d5"
        },
        "item": {
          "id": "2385e801-a90d-4734-8f31-add867028ebe",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d59275e6-7b00-4b33-95d9-c670c39524bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5834978-e580-40d0-95e6-2028445679d4",
        "cursor": {
          "ref": "cc9b0ddd-92f5-4226-8a4d-3365f23be0d9",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c96a28ca-c37c-4740-a1e0-707700d6f766"
        },
        "item": {
          "id": "d5834978-e580-40d0-95e6-2028445679d4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ba6c09f6-7500-4698-8843-3a430a45eb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74a1a9e-5bb3-4900-b38c-3461ccd5f562",
        "cursor": {
          "ref": "90136d45-4e01-4cfe-a23f-06296a7c37b9",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5a5be0f9-27a8-4175-975a-9d1873bfc134"
        },
        "item": {
          "id": "b74a1a9e-5bb3-4900-b38c-3461ccd5f562",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "04d12533-9f7e-47d1-aabe-3e5f66c83d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90e222f-707e-410f-b5de-1bb3a03757f4",
        "cursor": {
          "ref": "869ece6f-95a0-4ad3-8698-9c49ce808ba3",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "68f33bc0-20cd-4a87-ab4b-5a12fe5c5474"
        },
        "item": {
          "id": "b90e222f-707e-410f-b5de-1bb3a03757f4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e02fe6c1-6a05-4684-80bf-353d0eb933db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18ce6a9-c651-44d3-9dbc-8708985f0582",
        "cursor": {
          "ref": "21a8a17e-5ef7-453a-bbdf-29d1072838fb",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "36c61bea-59ac-416a-a84c-5f91200942df"
        },
        "item": {
          "id": "a18ce6a9-c651-44d3-9dbc-8708985f0582",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e3b6be06-b538-4160-9943-5bcf38ff5621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689df946-e820-40ed-8e3b-d4868479825e",
        "cursor": {
          "ref": "bab054ba-b447-4fd8-9d9e-9fc6c709524e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2a68d0bf-d13a-41a1-84c8-f676315c3f23"
        },
        "item": {
          "id": "689df946-e820-40ed-8e3b-d4868479825e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4e4fa9b0-8b55-4208-bfbc-f9d05adb87ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ff99f2-9147-4558-9f34-e07799f5b566",
        "cursor": {
          "ref": "0552cddd-12df-4bd5-8dda-986fbcd48425",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7cdb3a01-e28a-45fc-b135-892310495e9c"
        },
        "item": {
          "id": "85ff99f2-9147-4558-9f34-e07799f5b566",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1e76499f-89d6-4c6a-8f7d-d67c57c7164e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2285392-a6aa-4937-9230-3cf9dc99bc32",
        "cursor": {
          "ref": "e6235e69-52b1-4cab-988d-acc08cfc48eb",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ad2c9a6c-234c-4db7-845c-159a566090ac"
        },
        "item": {
          "id": "e2285392-a6aa-4937-9230-3cf9dc99bc32",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b37155ac-e928-463d-a86b-dee3f068696d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66b605c-6405-4f7b-82ce-9eb7ae97fba6",
        "cursor": {
          "ref": "0e757d59-23c1-43f0-a0a6-26d6b7c4a676",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bd97754b-5536-4063-b06d-28504c464787"
        },
        "item": {
          "id": "f66b605c-6405-4f7b-82ce-9eb7ae97fba6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "457ef19f-8803-42b5-b85f-3b26c09d8a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3e8a6c-0c87-47b5-a0b2-986e2cf8bd74",
        "cursor": {
          "ref": "168c4c13-1d89-4aab-8dc5-154214b4f46c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "689b281d-2088-458e-8144-1f555d0c1f7a"
        },
        "item": {
          "id": "6f3e8a6c-0c87-47b5-a0b2-986e2cf8bd74",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "06e0abb8-c88f-4860-b8e2-e7e899e74921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd42382-03e3-4148-bb1d-09bbea29da11",
        "cursor": {
          "ref": "9c036132-e599-430c-906b-f0bb815122a6",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a874bd51-255c-41c6-8f66-c687c1846d6e"
        },
        "item": {
          "id": "ecd42382-03e3-4148-bb1d-09bbea29da11",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "45fdb20c-80eb-4fc3-a3ae-3cb33988732e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec8350a-c80a-432c-951d-556f915404ac",
        "cursor": {
          "ref": "94a6df57-0e8a-4d2c-bb81-df77f28210aa",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3a649a71-acbf-43c3-bbbd-99e5374e1e86"
        },
        "item": {
          "id": "6ec8350a-c80a-432c-951d-556f915404ac",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a6411d0c-efdc-410e-883e-645cf81793fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe53090-81f7-4d11-8ea6-79a979da8c2b",
        "cursor": {
          "ref": "ba99b3cc-e664-44d8-b5bf-b376de50a5f2",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "344bdb59-082f-45ac-b89a-09873b814488"
        },
        "item": {
          "id": "2fe53090-81f7-4d11-8ea6-79a979da8c2b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ab1ce72d-8057-4cef-bc9d-5108c9d86fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6cb787-4c0f-406c-8c61-7cca7650253b",
        "cursor": {
          "ref": "ec21f304-996a-4e71-8078-1ba64040124c",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "14d334a6-4e24-465c-bb87-72befde99ffa"
        },
        "item": {
          "id": "7e6cb787-4c0f-406c-8c61-7cca7650253b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "812159ee-b798-4373-b04c-02b18cada118",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31924364-f6e0-4895-9d0c-8beec4ea7b07",
        "cursor": {
          "ref": "de95edc1-3d9b-4718-bdb8-d3d4490ef00a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b163965f-aba7-4e90-8653-68039aedfe8a"
        },
        "item": {
          "id": "31924364-f6e0-4895-9d0c-8beec4ea7b07",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b947a06d-b1aa-473e-a097-a4d02ae252f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ebe2616c-06a9-47bc-8563-920fa4145e3a",
        "cursor": {
          "ref": "f7af5dd5-5bf6-4f9e-8b26-186e29415643",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "770fb744-b5aa-4bb2-9e0c-93c5c437aa0d"
        },
        "item": {
          "id": "ebe2616c-06a9-47bc-8563-920fa4145e3a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e8518b8f-ad1d-4c5d-8631-20399eab61e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4c8647e2-75d1-4fbf-b06d-b025eda75ce8",
        "cursor": {
          "ref": "19c78606-b9cc-4a81-8b7b-9fa8cb18b544",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2dec20a1-f95a-4891-85d9-5f47934de01f"
        },
        "item": {
          "id": "4c8647e2-75d1-4fbf-b06d-b025eda75ce8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d2484dc7-fe6f-41c9-a922-92b2f32ca6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fc361f3d-52cf-4151-8947-831f35219b68",
        "cursor": {
          "ref": "55227b47-05ca-4f93-8ccd-ec391303f31f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4532d397-614a-43d8-bc98-42d27d99ec93"
        },
        "item": {
          "id": "fc361f3d-52cf-4151-8947-831f35219b68",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0f6fc29d-f5aa-4ade-aa2d-3e5960611fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "91b974e5-9e54-4642-b066-fd051fd52c15",
        "cursor": {
          "ref": "e4d8eadf-1080-4973-9b76-2e0ae7b643aa",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dbcc213b-e59e-4f72-94e8-658579d3deaa"
        },
        "item": {
          "id": "91b974e5-9e54-4642-b066-fd051fd52c15",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c59985ec-9a29-4b9d-b3cd-85f2d6633baf",
          "status": "Created",
          "code": 201,
          "responseTime": 6748,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "555238e2-a3d5-45ff-aa2a-a04cd9c88652",
        "cursor": {
          "ref": "7afe28d3-9d26-4dc3-aeed-d210fba121aa",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "56c5b550-a024-49bf-b791-38652285ee4b"
        },
        "item": {
          "id": "555238e2-a3d5-45ff-aa2a-a04cd9c88652",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c1a39242-b164-4dc6-be48-4465ca541aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "322e5fc2-8e38-4496-9a1a-0a2fdfe922b9",
        "cursor": {
          "ref": "4f3f80b0-7054-4099-8177-cb635b738f0d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "97bc4a41-f168-4201-9fb2-7b74954d8a0d"
        },
        "item": {
          "id": "322e5fc2-8e38-4496-9a1a-0a2fdfe922b9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5295a286-0d19-4e94-bde5-1fc93ea7ddd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9fde7488-420c-40a3-b57c-8d687dda78b4",
        "cursor": {
          "ref": "e8fbf3a1-175a-4fcf-93c5-2b345ad998fe",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f7fb3196-70e7-41c9-a095-72b7512182f9"
        },
        "item": {
          "id": "9fde7488-420c-40a3-b57c-8d687dda78b4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1448c5a4-5209-4010-aab1-066e834a277c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b12add-4870-4fd1-b38c-1e459ff5dd92",
        "cursor": {
          "ref": "9be5c901-284a-4233-ac07-e3dc71aeaba7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6c8c3314-909e-4b5d-8641-547467ba6265"
        },
        "item": {
          "id": "a5b12add-4870-4fd1-b38c-1e459ff5dd92",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e90f79e1-b770-428f-b070-53056d1e1554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4ec50c-2169-4a86-979a-d0013dfa0b64",
        "cursor": {
          "ref": "4ec5b522-0267-4d39-8a36-48846b68aa21",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0620a445-d625-42c3-9985-d32d2d318653"
        },
        "item": {
          "id": "7e4ec50c-2169-4a86-979a-d0013dfa0b64",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0355d926-0b71-4f65-94d0-7cd1fadf4e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64eea4eb-33ad-4918-9d9c-91aa50b8096b",
        "cursor": {
          "ref": "14033a70-2cc6-4edd-b1b6-aa7fc463d33a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5aa7118e-4614-46a6-8813-4286549812e4"
        },
        "item": {
          "id": "64eea4eb-33ad-4918-9d9c-91aa50b8096b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d1ace8e5-dcaa-4420-9757-79f142e884b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed869ffe-3f43-44d2-a632-42fa8edee3c4",
        "cursor": {
          "ref": "154585d8-7820-4c61-8876-6c89fb5cc641",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3d76ca8b-6602-4d0d-a5bd-b966910cbc9c"
        },
        "item": {
          "id": "ed869ffe-3f43-44d2-a632-42fa8edee3c4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2b318b3c-1252-49ec-9cdf-4c55c5217963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dc4743-86b9-4349-82d0-a5675ddb200e",
        "cursor": {
          "ref": "5be092aa-1b96-4a78-8702-e84fc4a623aa",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0e6521d3-b149-42d4-9df1-eb26b457346d"
        },
        "item": {
          "id": "d8dc4743-86b9-4349-82d0-a5675ddb200e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0f396651-4aee-4175-a010-04b4c49041d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f78dd7-595d-454c-9a48-651d059453b5",
        "cursor": {
          "ref": "3e32195e-641e-4f2a-a302-b2866ca44fa0",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "645e8d6f-1c78-4244-940e-d8319b3a67a2"
        },
        "item": {
          "id": "54f78dd7-595d-454c-9a48-651d059453b5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d3b57e38-0eae-4ec9-b4f0-edcb244669bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13ec32d-70b4-4a79-b357-4f1f4c586ced",
        "cursor": {
          "ref": "d2ba45cc-6e5a-40e9-8eca-34234d09505d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7506bc79-1a57-4f2d-b245-86da4ce31761"
        },
        "item": {
          "id": "e13ec32d-70b4-4a79-b357-4f1f4c586ced",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "41000d3e-acfd-4141-bf64-1f59fdfffb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08780264-29cd-409d-906b-ea02679f5f99",
        "cursor": {
          "ref": "4ac70742-5189-4c9c-99de-ebe1e138e7e5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b488c04e-5d47-486e-8a4a-f81eaa72aa79"
        },
        "item": {
          "id": "08780264-29cd-409d-906b-ea02679f5f99",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b2c9c16c-d4cb-4b4b-8ca2-3c10d627c343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb593cd-30c9-4ea6-8c5b-05779dd00b26",
        "cursor": {
          "ref": "920107b3-005d-4112-83fc-342a4a4ad252",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b049def8-8646-448c-b57f-004f38a05511"
        },
        "item": {
          "id": "5bb593cd-30c9-4ea6-8c5b-05779dd00b26",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3fe6fef2-054a-4bd0-a208-ae49bf772cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46602eef-0aee-40d2-b494-2264661016aa",
        "cursor": {
          "ref": "88ce5a75-8a7f-41b3-a734-0e39b64fc3ca",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "42af6fb9-2db6-4d44-9ed7-7aea99c730b1"
        },
        "item": {
          "id": "46602eef-0aee-40d2-b494-2264661016aa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "722e1348-caa0-41b1-a1f2-ae5098fabc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774f1f18-20ad-457a-8d83-2150933625ea",
        "cursor": {
          "ref": "5b4ac410-a1c1-46d0-b9a8-ab43323f1db0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "579ebdc6-e85b-4c30-beae-4aa439dcce59"
        },
        "item": {
          "id": "774f1f18-20ad-457a-8d83-2150933625ea",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f26166ac-3500-4424-b752-3289b0bb394b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2822a7de-2eb7-425a-a463-d5235de55f3e",
        "cursor": {
          "ref": "4982ed75-08ce-4c7c-8cf7-c43dc03888f6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c9d546c8-406d-449f-95a7-0ddc54ff206b"
        },
        "item": {
          "id": "2822a7de-2eb7-425a-a463-d5235de55f3e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7ea43561-ec11-4839-8a6b-39776acd3d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b554660-1365-4f78-8d9b-c0120c14fa0f",
        "cursor": {
          "ref": "c2ed796b-66fe-4b27-a544-e6fdba14b403",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e71963f9-0924-4938-946c-bafbcf4321d3"
        },
        "item": {
          "id": "8b554660-1365-4f78-8d9b-c0120c14fa0f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e6f9ddc4-aac2-42c5-bc56-8493bfa4aee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe42790-537b-4b19-a5c6-34097737e845",
        "cursor": {
          "ref": "0847bedf-7040-414b-9bbd-55218c0b656d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d2e30393-6158-4e22-8dab-56b2cb1f2a1f"
        },
        "item": {
          "id": "abe42790-537b-4b19-a5c6-34097737e845",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "390c2844-3c38-4aed-ac3e-483bfce7838b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2569133e-deb5-49cb-b772-5d5ff015f42a",
        "cursor": {
          "ref": "c666fd2a-4d93-4ef8-992a-c0246c307906",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "27a01f1d-3ee1-4374-a32c-3773cdc9dba4"
        },
        "item": {
          "id": "2569133e-deb5-49cb-b772-5d5ff015f42a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5306bd0c-7de5-42a0-b2a2-7a3503de11ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c76685-c1c5-40a4-b653-68c4cb036a06",
        "cursor": {
          "ref": "a07ae084-95dd-47e2-a251-727299643391",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "364cf371-d604-429a-ac77-4e3e8dd75427"
        },
        "item": {
          "id": "d4c76685-c1c5-40a4-b653-68c4cb036a06",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d850d771-14f1-4730-8d36-bce67f580241",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 116,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "6470caac-1b14-4b1a-a0da-d83e20877e12",
        "cursor": {
          "ref": "6f16af4a-55ee-4af2-bf5f-4e66ae0b9f75",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "600bf7c5-785f-404e-b869-69523d017cf9"
        },
        "item": {
          "id": "6470caac-1b14-4b1a-a0da-d83e20877e12",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "30009779-bad3-478e-bd4f-449fc407b552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edecc80f-2672-470d-9a45-33d2c1bfaa79",
        "cursor": {
          "ref": "049c1c1f-1634-4233-91e1-e7affe0e2bd8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c632df3a-9d88-4962-a32d-ef5c89c3fcc6"
        },
        "item": {
          "id": "edecc80f-2672-470d-9a45-33d2c1bfaa79",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dda34601-77cf-4816-a259-0aa7882400a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fd8d9a-f4b6-4612-bca6-7ccbc738d7c5",
        "cursor": {
          "ref": "383b784f-e26a-4b82-8bd2-8abd6b54aec5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "97bf2c9f-f7ca-4155-89bd-8b40ff3e6c14"
        },
        "item": {
          "id": "78fd8d9a-f4b6-4612-bca6-7ccbc738d7c5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "13ed2f6e-206a-484f-844b-4b9fc9c4cbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5f60bd-20c3-4c18-9775-8ca44956339b",
        "cursor": {
          "ref": "faac845f-86cd-4451-a733-168ff6ab52b3",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f858db93-bbbe-4df8-8a3d-23425f5d21cf"
        },
        "item": {
          "id": "ac5f60bd-20c3-4c18-9775-8ca44956339b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e5ddf3a4-3784-423a-8bb6-22784db0bc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97abe6ce-ffaf-40c1-b745-404efc73a6a4",
        "cursor": {
          "ref": "0cb0b0b4-d4f3-42c0-8e20-9d3763df9d8a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dbc06fee-f98d-49e9-accf-465ca2656579"
        },
        "item": {
          "id": "97abe6ce-ffaf-40c1-b745-404efc73a6a4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2533772c-234e-4556-a16e-b5f75a129901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f806e068-7234-41e4-85f0-e53b9ed38aff",
        "cursor": {
          "ref": "40294b48-189d-4872-9c61-268829c0e2a2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cff447ce-a786-4b67-9ed1-ca516824356f"
        },
        "item": {
          "id": "f806e068-7234-41e4-85f0-e53b9ed38aff",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6736e932-f3f2-41f1-a17c-0e31ff94c05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736f1f60-6e1e-4e74-bfad-1e9bc29c2190",
        "cursor": {
          "ref": "c80b83eb-2931-4e59-914c-273f7ad56add",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c375c04d-5c81-454a-9128-d558ed8282c7"
        },
        "item": {
          "id": "736f1f60-6e1e-4e74-bfad-1e9bc29c2190",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "83e319e8-63fa-4f91-8310-2d40a48e32a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c501b057-3de6-4557-b7e9-79675e855961",
        "cursor": {
          "ref": "367be445-3966-4286-8eda-f01ee66940e0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2b6e4a16-0370-40b9-9c5e-869094bf14d8"
        },
        "item": {
          "id": "c501b057-3de6-4557-b7e9-79675e855961",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d1c31c1b-0ba2-4c36-93b8-4cea1e128983",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "7a743274-dff3-4ea8-9dc8-d0343d66697a",
        "cursor": {
          "ref": "6f2334b7-45f0-43a1-bb5c-0858caef83f5",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4b2c45bd-7a71-45e8-ae59-c42ab66d5a8d"
        },
        "item": {
          "id": "7a743274-dff3-4ea8-9dc8-d0343d66697a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "56b13157-c8a2-4f77-a528-9fedad7e428f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa10159-181e-4dea-8142-947e81410a70",
        "cursor": {
          "ref": "f78aa5d1-ab2b-4013-b97d-6d5626fcd633",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4cc0e13c-56d0-4eec-ae83-0f297076374b"
        },
        "item": {
          "id": "5aa10159-181e-4dea-8142-947e81410a70",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e0b1624b-c3d5-4713-9774-da77d2449d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef0c00a-e76a-4336-9960-61caa2d7d3fd",
        "cursor": {
          "ref": "7f7624f3-f62c-4977-8dc4-6274ffc88b25",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9f571a55-0b19-4792-b91c-2fea27a7b262"
        },
        "item": {
          "id": "5ef0c00a-e76a-4336-9960-61caa2d7d3fd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9d6872cb-851b-422a-a70a-e04e68009d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423d6f9e-7117-4b07-8848-3bdc79afe189",
        "cursor": {
          "ref": "489c7181-9115-4b20-a50b-c518638c0652",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a8fa9b46-8703-4542-8ed2-3a6a00fba7b9"
        },
        "item": {
          "id": "423d6f9e-7117-4b07-8848-3bdc79afe189",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d3443256-c86d-4bae-9e5f-c91486402caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d0a117-26d7-438a-9c8c-74fd47546d5d",
        "cursor": {
          "ref": "ae922300-457a-4cb7-96ad-e842b8b8e734",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fca58ad6-d207-4542-a70c-4947d42c29ee"
        },
        "item": {
          "id": "22d0a117-26d7-438a-9c8c-74fd47546d5d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e6480ead-894e-49eb-8d6b-0b58535256e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d2e601-3ec0-4c14-996f-9927b7fe618d",
        "cursor": {
          "ref": "1327e2a7-c4da-4c79-9711-19654c5774ea",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "df1e2e44-2875-401e-9f64-ccc6219b457c"
        },
        "item": {
          "id": "64d2e601-3ec0-4c14-996f-9927b7fe618d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b78a6170-872c-45bf-8176-43dfe16d1c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72511f64-6c3b-45a4-b8ac-5e954cdceaa0",
        "cursor": {
          "ref": "11d27a11-f5b3-4742-8edd-45967aa90058",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9f8cc8ee-0d2f-4c7b-8902-8421a2b71ef1"
        },
        "item": {
          "id": "72511f64-6c3b-45a4-b8ac-5e954cdceaa0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4d14c440-fcf2-4a58-bdda-18c0e87a289a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "09d273fd-a1ac-4187-a309-b8f83ffc5d45",
        "cursor": {
          "ref": "fc66c49a-0304-4c68-9999-61cb4f2f0dea",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3173055d-11a9-46ec-844e-b0d19c125ada"
        },
        "item": {
          "id": "09d273fd-a1ac-4187-a309-b8f83ffc5d45",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3e0cab87-524e-4854-84b8-bdb96de57d8a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "aa327cc9-869d-4f28-9d31-38c8f3f902be",
        "cursor": {
          "ref": "994d6864-40d0-4c41-87fe-d5222b2c909c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "34d88f24-8679-45db-9a72-13e3ab26d2a7"
        },
        "item": {
          "id": "aa327cc9-869d-4f28-9d31-38c8f3f902be",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fca8e4ba-8c83-4755-b24d-8a10f6b4799f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 57,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "c2d67e15-4fd6-435a-81f2-ad391407147d",
        "cursor": {
          "ref": "1a0ce516-995d-4d5d-b587-32e4a4b97332",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f91caa3b-2bdc-4270-9c18-b8a67accf3f0"
        },
        "item": {
          "id": "c2d67e15-4fd6-435a-81f2-ad391407147d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f2ec209b-bd59-47e7-9092-62ac51ac7e39",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "fe9448e0-15c9-45f3-8f18-0b02a3c6956c",
        "cursor": {
          "ref": "2afdf92f-94cc-45d3-ae75-6ba41c188b66",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "16cef1e2-ba28-486b-a446-e01f7c794b6c"
        },
        "item": {
          "id": "fe9448e0-15c9-45f3-8f18-0b02a3c6956c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "097ea837-c750-49e4-a959-6a87596b0a77",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "16f5a89b-51d7-425a-9b4a-b3350a1dc13d",
        "cursor": {
          "ref": "50835b89-81b5-45ac-980a-d47d5638046a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "77e5531b-fe29-4fcd-a432-5cdf959d8a54"
        },
        "item": {
          "id": "16f5a89b-51d7-425a-9b4a-b3350a1dc13d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a5a092cd-0fdd-4914-8606-9d7e28d39ec2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "b79fdc62-8a7d-4a20-a4ac-1dbc392ce098",
        "cursor": {
          "ref": "21549d86-cad5-4685-9524-ae32c2d4fa92",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a8f1e041-43ff-4be1-8907-c436a69a9c2d"
        },
        "item": {
          "id": "b79fdc62-8a7d-4a20-a4ac-1dbc392ce098",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7edeb163-4822-410d-bca2-d374222cccd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473613a7-f768-4684-818f-fdb13bda9f3a",
        "cursor": {
          "ref": "483ef528-bc8f-4f8a-bf67-d017006ade5d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "79c2d54d-366a-414b-9e88-3c9f847e9a08"
        },
        "item": {
          "id": "473613a7-f768-4684-818f-fdb13bda9f3a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d552a79b-1b08-4fd7-863a-2c3ccb00571d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa26d6a-80a9-44c8-aa5f-31cfaa43a338",
        "cursor": {
          "ref": "73d7b464-4796-43f0-94a4-2559e946bd42",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3abafaf5-4959-43f3-bca2-ca986e49a239"
        },
        "item": {
          "id": "efa26d6a-80a9-44c8-aa5f-31cfaa43a338",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "57f03a46-110f-4d6d-addd-bbec375eb679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1191c975-62e3-48a3-8f17-838fa97c73d4",
        "cursor": {
          "ref": "18918998-f722-4c79-860b-c9a2900892b7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "149ce7d7-3f1b-471e-990f-2095455447d8"
        },
        "item": {
          "id": "1191c975-62e3-48a3-8f17-838fa97c73d4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "491dfbb4-45f7-492a-989d-80a843d773e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f43b0a-b84d-4c69-81bb-4a340e9209a9",
        "cursor": {
          "ref": "8d2f4ac0-db7a-4043-8071-ec04a9488286",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "43081586-9da6-4a23-8982-e520a2c29554"
        },
        "item": {
          "id": "25f43b0a-b84d-4c69-81bb-4a340e9209a9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a423a5a8-c1ba-40bd-88ab-b471f6e79207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5061cac-ae1f-484e-8181-bf112e02f7a7",
        "cursor": {
          "ref": "96edff32-2387-49df-905e-8a7aa58ab1cc",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "66fa1257-b26d-40b1-9890-704ac821812b"
        },
        "item": {
          "id": "d5061cac-ae1f-484e-8181-bf112e02f7a7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "04abbd00-d02a-4f53-8e55-78556c80307b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ecd7f1-cf75-49e8-86b8-96e1079699fd",
        "cursor": {
          "ref": "e9c2fce6-ea9d-4388-8ca4-7ce0a856b264",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "645fe763-76e6-4ebb-bbbf-6d682142624c"
        },
        "item": {
          "id": "a3ecd7f1-cf75-49e8-86b8-96e1079699fd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7fe937ad-f953-499b-afe6-2782e7805110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fd843c-2d42-436e-8910-5c8afc7b2d41",
        "cursor": {
          "ref": "c13c8319-fa66-40b2-a9b0-5f637dd7a8bb",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "51858f1e-8ea6-4e5c-afb7-2bc8d7c30dd8"
        },
        "item": {
          "id": "c7fd843c-2d42-436e-8910-5c8afc7b2d41",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "66f8f4cc-999d-42fa-a719-3cac2594321d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc38f716-d421-4906-9a7a-7c505e39554a",
        "cursor": {
          "ref": "1694a3a7-078a-48d6-8635-8445b20aa4d0",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "73a3d9bc-3c9c-422f-9096-7043dc7d31cc"
        },
        "item": {
          "id": "bc38f716-d421-4906-9a7a-7c505e39554a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "da57bfe7-7805-4b35-8746-b972f99ab29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58064a2-ae93-4f32-8078-eea1cf24a02e",
        "cursor": {
          "ref": "ca2a214e-dd26-4661-8b5d-7d707befcb7d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6bdaddb6-2561-465c-b126-4e9ca88355bb"
        },
        "item": {
          "id": "d58064a2-ae93-4f32-8078-eea1cf24a02e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "12f17169-a300-4ce7-8174-2320aa2d1a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050ba878-49f2-4dcd-a106-ecda2dc8834c",
        "cursor": {
          "ref": "cfbee28f-d1b5-4702-b237-2ffb34894fc4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9a3f4e0f-9a65-47fc-ac59-12994159e7d1"
        },
        "item": {
          "id": "050ba878-49f2-4dcd-a106-ecda2dc8834c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b2c6bb96-45c9-4af2-b3c9-2033c6f5d0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c47d98d-806d-4828-8ccc-de97b77f659d",
        "cursor": {
          "ref": "000315ac-3a8f-46d6-9678-bc817e870d34",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1ce5fb51-9da2-449d-9e96-37029d3a8de9"
        },
        "item": {
          "id": "8c47d98d-806d-4828-8ccc-de97b77f659d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "56757360-8717-426d-9f79-39dd87720c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77abfb9b-8948-4c35-b030-1fc1f195ed3a",
        "cursor": {
          "ref": "7efb1ca6-74a7-4dd0-b394-c09ea936e5cf",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dd8e45cb-8521-46fe-a4e6-50f66e5b4284"
        },
        "item": {
          "id": "77abfb9b-8948-4c35-b030-1fc1f195ed3a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "74978bef-4c25-423e-9fea-255e2ce5c482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25421bb4-c009-4f8b-aa0c-b9ab81c29c29",
        "cursor": {
          "ref": "ee6e8e8a-a0b4-440c-95e7-c768c0774c62",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c40ee3a3-b716-408b-b453-f289982332fd"
        },
        "item": {
          "id": "25421bb4-c009-4f8b-aa0c-b9ab81c29c29",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "94b0abb3-714e-42c2-96f5-15f989b5566e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f14c504-637e-4735-bcd1-712b8712ad55",
        "cursor": {
          "ref": "f7d8cdb4-c327-4792-ac9d-0d4023cd0b9f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7cddafbe-a925-4f51-a609-4c175070e718"
        },
        "item": {
          "id": "2f14c504-637e-4735-bcd1-712b8712ad55",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "89bad644-f317-4186-862e-d784ee103003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684b3e84-3205-4cc6-a004-005e8821538f",
        "cursor": {
          "ref": "f9108e66-b793-4273-aec6-68670e381a03",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "195f706e-881c-44a3-9b25-799c04e0f0a5"
        },
        "item": {
          "id": "684b3e84-3205-4cc6-a004-005e8821538f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "18a2dab7-6064-4e07-a773-5f10ca0028d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2b4244-a095-4586-8a1b-6f4b91e7245b",
        "cursor": {
          "ref": "b33b90be-7011-402f-8dde-03bf3bc11dae",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "395765b7-9c68-46bd-b004-a48c820b3614"
        },
        "item": {
          "id": "3d2b4244-a095-4586-8a1b-6f4b91e7245b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "79459e26-682e-4047-b503-0a9134f27991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c43142-fc1e-4d72-8b5c-9c7ddf5f9eb8",
        "cursor": {
          "ref": "43959aec-80d6-4b73-8fbf-e6f47a561ff4",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "40bc74a9-8778-4bdf-baac-6c68276ba38d"
        },
        "item": {
          "id": "e0c43142-fc1e-4d72-8b5c-9c7ddf5f9eb8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "075574d8-8b5d-43b0-a63d-ef8a03a967b0",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "e2e99fad-0209-4084-b62e-1c15f894cf09",
        "cursor": {
          "ref": "e0d99dd3-a939-425b-9520-3649a8f22cda",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "be8d2ecd-5c8f-43f8-bd6d-3f739549bb2d"
        },
        "item": {
          "id": "e2e99fad-0209-4084-b62e-1c15f894cf09",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a3dd730f-43e6-4856-9abf-17c83cacf7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7956d038-33bf-49e3-a708-f6c0236d3a2f",
        "cursor": {
          "ref": "c754f1c8-0b54-4980-917b-933244672645",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8d9229ea-dd33-463e-9c29-4d092961f945"
        },
        "item": {
          "id": "7956d038-33bf-49e3-a708-f6c0236d3a2f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d7367108-f2ce-4e16-9a7d-34f3211a0bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af11eafd-28dd-406e-8220-25cbf84ae824",
        "cursor": {
          "ref": "ada57174-2c4a-4f5c-a2f4-791bb9aa1c96",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "84fed1d1-492e-48f2-932d-93a55507d279"
        },
        "item": {
          "id": "af11eafd-28dd-406e-8220-25cbf84ae824",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "402b57c7-3b01-46dc-9883-5e7b513fee94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52b43df-0738-4685-8ee7-2ad78995d62f",
        "cursor": {
          "ref": "136a86a4-bfbd-408c-85e8-2588f721a0a4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "10efdd8f-e475-4567-9702-63c1882a75e4"
        },
        "item": {
          "id": "f52b43df-0738-4685-8ee7-2ad78995d62f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b449bf87-27e1-4a1a-b118-4f9d12552d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c54dd7a-0b96-4c63-b9b7-9b5b7221743e",
        "cursor": {
          "ref": "599f5a3c-f38d-4d12-9b8e-a4f30f2e3752",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6e64b517-097b-4e11-a862-5bbaf41dcae4"
        },
        "item": {
          "id": "2c54dd7a-0b96-4c63-b9b7-9b5b7221743e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f9828289-c544-474b-93c4-d80f48ecf014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abd3222-a010-4dbe-9d56-9a6ef7660a95",
        "cursor": {
          "ref": "0085d038-dcf5-4607-9f89-a5faf786523c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "df39b388-accc-48d1-902b-afc66f6dd6d0"
        },
        "item": {
          "id": "4abd3222-a010-4dbe-9d56-9a6ef7660a95",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "77622799-8a1b-465e-8c3a-53bb19823023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c79b1a-8f0f-44ee-8e35-51b727f8f9c3",
        "cursor": {
          "ref": "788ffe23-e00f-4d37-b8db-df8a51a74e7d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0d32315b-7705-44ab-ba53-9279d364b6f5"
        },
        "item": {
          "id": "97c79b1a-8f0f-44ee-8e35-51b727f8f9c3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c67d3711-673e-49ba-9c97-0f65a60cafe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d22efe4-4c63-4ca5-9c90-d6cda4f2e556",
        "cursor": {
          "ref": "36dffe21-f9bd-4a6c-a4ae-2638548f546c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c2507430-9d19-4abd-92d6-55d87d3b8124"
        },
        "item": {
          "id": "8d22efe4-4c63-4ca5-9c90-d6cda4f2e556",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ee0deadb-2443-48c6-a6b3-fdaba00cadd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9341b8c0-7143-4e49-87c5-65d401c8e667",
        "cursor": {
          "ref": "5d0a712f-c7b3-4efe-9994-e75def807f2b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "417b707e-49ba-45b4-b345-588fab84d0eb"
        },
        "item": {
          "id": "9341b8c0-7143-4e49-87c5-65d401c8e667",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fded0596-aeb1-4c5d-939f-cd61c3e7aec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef515101-2bb7-4d06-a531-800e70ab7c87",
        "cursor": {
          "ref": "ed7ef867-4317-4341-a607-af4071c8056a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "46ff7e47-0558-4844-bb1e-a6383cd745e0"
        },
        "item": {
          "id": "ef515101-2bb7-4d06-a531-800e70ab7c87",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a2112a45-9029-416d-9418-a2a3a51dc357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bb0848-f4f7-4342-93ab-7b80178a9609",
        "cursor": {
          "ref": "ee3062e4-7e6f-4752-ac31-d6bbf785f042",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "19dad33b-6a6f-4743-b3bc-c5f33dd40284"
        },
        "item": {
          "id": "e7bb0848-f4f7-4342-93ab-7b80178a9609",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "29e82780-f678-42dd-895e-8d586985ffb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db732100-3e40-49ea-b596-6c108a99dfe6",
        "cursor": {
          "ref": "b3b50dda-d92b-415a-b111-a070e8ad63cc",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7b1245e6-ca02-4c61-8c9f-9f45a51cd0f4"
        },
        "item": {
          "id": "db732100-3e40-49ea-b596-6c108a99dfe6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "384246fd-9985-41b5-9d86-04fdd7631c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9612d1-4619-41f0-b9cf-d058e3b1d3a1",
        "cursor": {
          "ref": "b4ff9a7f-57a6-48d6-bf50-7cda0032c626",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "639ad87f-03ab-4fc2-b3c7-626786c5cf4f"
        },
        "item": {
          "id": "3f9612d1-4619-41f0-b9cf-d058e3b1d3a1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a15e167b-f41c-4b6f-97aa-f9b4962fcf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cab391-7771-4dbf-ae95-28e000cf8a9e",
        "cursor": {
          "ref": "d1389346-bdb3-458f-8215-56926d5d1464",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c6bee201-d666-428a-8581-98d84bdb0566"
        },
        "item": {
          "id": "b7cab391-7771-4dbf-ae95-28e000cf8a9e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c403dc6f-cd30-4f0e-b9c4-bc2716ae19a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249a34a1-6183-4484-ab8c-694829940998",
        "cursor": {
          "ref": "c43f9e10-acaa-48a3-80a3-b283c752ddf6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6989007a-ee8a-471f-8e1f-ecebb9dc146b"
        },
        "item": {
          "id": "249a34a1-6183-4484-ab8c-694829940998",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "244b15f6-6180-436e-9ece-43f1383a6607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64069efc-64cc-47a8-a6f3-f270111696f5",
        "cursor": {
          "ref": "1fb7cd56-9347-49e2-9e9f-091d5827d1e5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6977c946-b5fc-4f64-8c28-f40299edb661"
        },
        "item": {
          "id": "64069efc-64cc-47a8-a6f3-f270111696f5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8aaa9c83-12e9-44d7-a269-d0aa3e03c44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a1d2da-dfc1-46a6-be02-f90986b64538",
        "cursor": {
          "ref": "b22969df-e3db-46e6-9115-d40bff21a2ef",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fd9a3448-79fa-45a0-9bb2-f5bc4907e297"
        },
        "item": {
          "id": "83a1d2da-dfc1-46a6-be02-f90986b64538",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c7363e5e-3929-42d9-9c41-cb8940ab563b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017c73f3-6f5e-4689-b0a9-dbf8e695dd76",
        "cursor": {
          "ref": "d7e95f13-27cd-45b8-af0b-12ef6dc559ea",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2bc0dffc-56ff-4fad-b43f-6c46632c8931"
        },
        "item": {
          "id": "017c73f3-6f5e-4689-b0a9-dbf8e695dd76",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "813cff45-0bb8-4db2-9dea-55a27af31590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62785f14-a505-499e-a3f6-50fc969030a6",
        "cursor": {
          "ref": "b987e941-52d1-417e-85f1-d2ff2e0f78c5",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "788c49d8-4f32-4bd7-b518-9dc61892a9c9"
        },
        "item": {
          "id": "62785f14-a505-499e-a3f6-50fc969030a6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4e772a44-43f7-4c54-8ba3-87a31cbd6bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba45877-d4f7-4c08-ac3b-acdfea23fd4e",
        "cursor": {
          "ref": "dc96de1b-a4f6-468f-9442-60bfa666cdbe",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2534e4a7-547b-4f5a-8ffe-59f42bf4d598"
        },
        "item": {
          "id": "bba45877-d4f7-4c08-ac3b-acdfea23fd4e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8f8946ed-44bf-4c27-87b9-b0779d3a602f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccb4486-ab25-443a-a58e-a1a981b4544f",
        "cursor": {
          "ref": "229a44ab-fc4b-487c-b268-9151edee8d9f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7c8c5dea-24a6-4c64-996a-4b1a0e1e6b03"
        },
        "item": {
          "id": "3ccb4486-ab25-443a-a58e-a1a981b4544f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "39de3491-09f1-4113-8af6-bc3d89bc6888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be382e27-816b-4983-ac32-6d9e0dd8aaf6",
        "cursor": {
          "ref": "c21a6e9c-c732-4396-9b40-2014b5f3a796",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d158b322-481b-441a-ab56-abb6d8a63954"
        },
        "item": {
          "id": "be382e27-816b-4983-ac32-6d9e0dd8aaf6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "59662565-d66e-45b6-bf0c-67303db0aae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddae2454-aa4e-4250-998b-f8bfe80af1de",
        "cursor": {
          "ref": "9c175ca3-58b0-40c9-8b19-4784f9c627c6",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5a0466eb-20be-40f9-96ac-73b5f21412ef"
        },
        "item": {
          "id": "ddae2454-aa4e-4250-998b-f8bfe80af1de",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a6ed1e21-9438-4ccf-93e0-bae8ef6be253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11987f8-6a18-413c-80a9-e316144726eb",
        "cursor": {
          "ref": "a319110c-1249-4406-9c7b-9dc522410c07",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8b6817cb-a14e-482c-a2f1-7dbab18d6c2b"
        },
        "item": {
          "id": "e11987f8-6a18-413c-80a9-e316144726eb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "43b22abd-0cea-48c2-83d5-9b9ddb21f74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ea15b0-cff2-46b0-b253-76f40234cab9",
        "cursor": {
          "ref": "cd5ed316-bc14-471b-add9-d68780832575",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "09185ed4-082f-42a8-b061-31c92f00e30a"
        },
        "item": {
          "id": "23ea15b0-cff2-46b0-b253-76f40234cab9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b9e5de7c-d503-4e26-909c-ed5a9b321abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c995517-ae4b-49e1-bd8e-353a6065b709",
        "cursor": {
          "ref": "a9647318-7b80-49bc-85ca-2ea0705d6690",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "31747727-6667-4e56-9244-b6404e1ffe14"
        },
        "item": {
          "id": "7c995517-ae4b-49e1-bd8e-353a6065b709",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b9fa1f52-bd0a-4e18-b859-066769606c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fc2ade-77fb-4322-9b51-a966ae485154",
        "cursor": {
          "ref": "ffff5582-d796-456f-afd4-06b8cee16d94",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ce13a4b4-ab8f-4bbe-ad6b-e9024414556d"
        },
        "item": {
          "id": "16fc2ade-77fb-4322-9b51-a966ae485154",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "df8c438e-1e18-4ede-9c5c-f1f64e00cbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4498b4-0091-4730-9a76-bfa707d773ab",
        "cursor": {
          "ref": "905bb2fc-e6c6-46af-8cb8-87d5fe15ae8c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "37410f1b-d622-4321-9489-81028d204bd1"
        },
        "item": {
          "id": "5c4498b4-0091-4730-9a76-bfa707d773ab",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f32217a4-5d10-4098-93fb-0e208698dd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b6b6a5-48c1-4259-8692-8a04d86c44de",
        "cursor": {
          "ref": "f32df8ea-e54b-4021-928a-be31ebf33f4c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2435c853-58e8-4b9f-b623-dc514b6bdd56"
        },
        "item": {
          "id": "b0b6b6a5-48c1-4259-8692-8a04d86c44de",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "50c0ab55-264a-4389-845f-56a88c462760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b73084-fbd1-4116-8721-ff58804f2e0e",
        "cursor": {
          "ref": "f4bf4857-8242-4f0b-b3a5-3f4b7f9032ac",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "84698978-2c3a-4abc-9776-183ae20c835a"
        },
        "item": {
          "id": "04b73084-fbd1-4116-8721-ff58804f2e0e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "93a59e46-20c0-4b13-88b8-8cc390454328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6365c91-fe20-4a44-85a6-4cb9c1b61b35",
        "cursor": {
          "ref": "47d1bdb5-5ec6-4264-8083-8acd59d49894",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4de6f0bb-aa39-4fae-9126-9288d3fa116c"
        },
        "item": {
          "id": "c6365c91-fe20-4a44-85a6-4cb9c1b61b35",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "23edc861-1b92-4a49-8d5f-1d618b7d4ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c19f16b-1f8f-4f25-aaa1-d55577b27979",
        "cursor": {
          "ref": "607ba8cd-323d-4784-817f-2ce293ad0b18",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f3710210-83dc-4643-ad16-f42cfb43936a"
        },
        "item": {
          "id": "3c19f16b-1f8f-4f25-aaa1-d55577b27979",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1f186db9-5372-4205-97c4-291914c6bc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1bbfb3-e442-45d0-9c5c-e4e45f6fab4b",
        "cursor": {
          "ref": "aa1a8447-c91a-4b56-a6db-be10f0f4c6ae",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3203c722-7b68-45d9-961e-36dab4352401"
        },
        "item": {
          "id": "5b1bbfb3-e442-45d0-9c5c-e4e45f6fab4b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6921e49e-947e-4d59-bce8-b1f00fd678da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850ffe0c-1b04-4ca5-b52b-560fe9ddc6d0",
        "cursor": {
          "ref": "83ecbe51-e778-4e42-8881-2849972f7611",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "61b28f68-3f91-4f75-b2ff-107fe7a2620e"
        },
        "item": {
          "id": "850ffe0c-1b04-4ca5-b52b-560fe9ddc6d0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0ac032fc-7586-4170-8e06-bf2fee9b323c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d63d690-491f-44ed-9628-7a844b62a867",
        "cursor": {
          "ref": "9f6278ad-fc06-4980-b6fa-1713acad743e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bb38a489-f0e4-491d-9abf-da1ec270953d"
        },
        "item": {
          "id": "3d63d690-491f-44ed-9628-7a844b62a867",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e1e3ecc5-6787-4ee0-986c-c2b649824ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649f92e2-0e08-4eb1-b142-3e8fde346e51",
        "cursor": {
          "ref": "0fa5ba81-337d-4e61-ae8f-bc2274937bf7",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a4303839-bd85-4a4b-ac67-96f107443731"
        },
        "item": {
          "id": "649f92e2-0e08-4eb1-b142-3e8fde346e51",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3db76766-9864-4fda-a66d-ac22ff6894e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f484111-cc70-45f6-a3af-366c40a75eb7",
        "cursor": {
          "ref": "acacf5bd-a436-4f74-892d-cbe8efe62172",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "afa7a9fc-0264-47e0-89f8-cd48c82eb790"
        },
        "item": {
          "id": "8f484111-cc70-45f6-a3af-366c40a75eb7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cc07eaa8-a0a2-47a8-a418-29d90c64728d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091d4be5-28b8-4a26-aa9f-251f2cb5c5c8",
        "cursor": {
          "ref": "628642cd-6f0b-40cd-9572-76f5476a21b2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "45335ce9-368b-4f16-8f70-d83dfa8bf91b"
        },
        "item": {
          "id": "091d4be5-28b8-4a26-aa9f-251f2cb5c5c8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a1a29545-9702-4b3c-a351-2e7317960956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085de0c9-c24b-4121-a3e1-d77e4c273664",
        "cursor": {
          "ref": "590138e4-33fe-45b8-bfc9-c33631a0badb",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "02c6dfd3-7853-4115-a96f-9a65588b1c95"
        },
        "item": {
          "id": "085de0c9-c24b-4121-a3e1-d77e4c273664",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ee6b8516-a841-4c40-aedf-a896f9f081a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d40651c-4fa1-417a-8b0d-7aa644e92a31",
        "cursor": {
          "ref": "a66cb05e-e8bb-448e-b007-a8346b053fdd",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2b18cf15-eecc-417f-8282-4b0e17a7381e"
        },
        "item": {
          "id": "8d40651c-4fa1-417a-8b0d-7aa644e92a31",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bd1f1a18-ac3b-41ba-bb7f-40f9448a001e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bab5aa-c32c-4fe3-9d96-56d03ea57de9",
        "cursor": {
          "ref": "9934041a-af84-4356-962e-57398c7d1c4e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a9f00955-8422-4b66-bb9d-3f2a611a42a9"
        },
        "item": {
          "id": "09bab5aa-c32c-4fe3-9d96-56d03ea57de9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "73456bdf-3c5d-45dd-8e85-1358bf2192bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e35d33-3172-4040-a0f8-b8d5faf58b83",
        "cursor": {
          "ref": "76e369ca-5143-48e0-a5b4-9baf06dffc83",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d800096e-eac3-451d-95d1-3019da1e0360"
        },
        "item": {
          "id": "b0e35d33-3172-4040-a0f8-b8d5faf58b83",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "568efdc6-6b31-4f11-94f5-212d51fe2f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22752af-c73c-48ad-8fdb-f05909921d10",
        "cursor": {
          "ref": "07a2ac52-9527-4d12-ba88-c05ee41d6f7e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8742bbe1-179c-4d24-a83b-d2dc4f15aed6"
        },
        "item": {
          "id": "f22752af-c73c-48ad-8fdb-f05909921d10",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d03724c6-15c3-4c77-a6ad-1bebb1177eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd31d19-3043-4ce7-8a0c-b48761f12a0c",
        "cursor": {
          "ref": "8b058688-613f-43fe-9c22-dfa6815f6196",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "952d7dd5-6735-4812-81b7-f96595d60192"
        },
        "item": {
          "id": "8bd31d19-3043-4ce7-8a0c-b48761f12a0c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "836ac501-1527-486b-99b1-550873a81250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c968562-20ee-413b-b121-dfebd458b083",
        "cursor": {
          "ref": "dfaf0dcb-541c-4e82-91b4-08c2c0229859",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d429efd1-a4cd-4953-912c-277cb881fa79"
        },
        "item": {
          "id": "6c968562-20ee-413b-b121-dfebd458b083",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "59c76ff0-9e3e-48e1-9482-866563517e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac98b63-345d-40ed-bc74-c4b2f11add5e",
        "cursor": {
          "ref": "014fbd36-5739-4793-91e8-28f5ace1b17e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d2cc84ba-9496-4ad1-be9d-638d81f6b7b6"
        },
        "item": {
          "id": "4ac98b63-345d-40ed-bc74-c4b2f11add5e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c4c28fad-dcf6-4c55-95fd-39cf22b0dc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00077c1-a1ae-40ac-bab3-2d1493d4ba94",
        "cursor": {
          "ref": "f897fd05-1a08-4b85-8d00-9d90ab548895",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2e188fe2-b0c2-4fb6-9450-35631fdcd2cd"
        },
        "item": {
          "id": "d00077c1-a1ae-40ac-bab3-2d1493d4ba94",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "115287c5-41b9-4c0d-8264-065621c54c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e249d1-f2f8-4519-8af2-f3d2d459fc21",
        "cursor": {
          "ref": "edcf4b0c-f467-4525-986b-257bf7a0b7a7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "89a6baaa-6e25-445a-95d4-a48f593404d5"
        },
        "item": {
          "id": "67e249d1-f2f8-4519-8af2-f3d2d459fc21",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "47c76f4a-815b-434f-8bbf-3ef6cce07ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e103ed-07a1-4eec-a02b-b75871396edc",
        "cursor": {
          "ref": "9c4e846d-7b74-4ccb-9d49-7fca7b8ec34e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dbfc66d1-86f3-4c99-a6f2-371ac93592f5"
        },
        "item": {
          "id": "76e103ed-07a1-4eec-a02b-b75871396edc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "08b4b334-f2a5-4f39-8ded-a43f567ea73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459e67df-4e76-42b6-814c-fdd13ff8d547",
        "cursor": {
          "ref": "f6373f6f-8985-41a0-8a94-c52d726c3f3d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "28965e8a-1a76-4468-9c19-62e1cb4f2c22"
        },
        "item": {
          "id": "459e67df-4e76-42b6-814c-fdd13ff8d547",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d7162195-a1cc-44fe-9637-0a31696153fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f391e59-f174-46eb-8bf0-17e75c6229df",
        "cursor": {
          "ref": "19f89da2-58b7-4e4c-b8b7-297a2ad1e310",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "861e5c5a-847b-40db-8e06-685032f066ed"
        },
        "item": {
          "id": "0f391e59-f174-46eb-8bf0-17e75c6229df",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2372dc05-8eb1-47fd-8cbc-050c376089aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda544de-463a-42a5-be8d-b62d54b53b47",
        "cursor": {
          "ref": "3e9f8bd5-8676-488d-9183-e733d7ea6af1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9019d713-1890-482e-b74b-1621669542b1"
        },
        "item": {
          "id": "bda544de-463a-42a5-be8d-b62d54b53b47",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "537a2775-6d74-4077-afb7-041894ebe435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92835c5-6a07-4af5-b1d5-6e66e4a49c27",
        "cursor": {
          "ref": "45d548c7-9d53-42b0-8dd8-6f166a011191",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1f5b6aaa-90df-4a34-aab9-f7a20264f08f"
        },
        "item": {
          "id": "d92835c5-6a07-4af5-b1d5-6e66e4a49c27",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1f3b171a-2050-4e0f-85db-83592c0ff29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7990680-c864-48d0-88f5-19ceb3278ae1",
        "cursor": {
          "ref": "9f53e40a-ce08-41c8-b75b-8a20dfe0fc03",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ff44a3ea-7f0f-4b74-a39e-480d0dccded3"
        },
        "item": {
          "id": "e7990680-c864-48d0-88f5-19ceb3278ae1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2709e3f4-555d-4730-9ef2-5ce06f7ffa45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381cd1c0-45e9-4558-971c-3f8346910ab6",
        "cursor": {
          "ref": "5a2eea5c-3f05-4fa9-8c91-bf167a81ecea",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3cedbcec-9da0-4f6b-91e3-bbc5e6985c0f"
        },
        "item": {
          "id": "381cd1c0-45e9-4558-971c-3f8346910ab6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3bec7c70-fc16-425b-bb38-7a07f54bffd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29782823-99e6-4190-98f6-18b9359eb9d3",
        "cursor": {
          "ref": "06286078-7e46-4616-a749-8f20cedd1fd9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "019764b7-dfed-469e-9289-1b7a6312d101"
        },
        "item": {
          "id": "29782823-99e6-4190-98f6-18b9359eb9d3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c5f42b61-3e65-49f0-8137-50edff41c266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd81f33-90bc-4234-bc72-a0d2f889a9a6",
        "cursor": {
          "ref": "872fed3e-4627-4dc0-a467-4de64cf25a6f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "361efbf7-fe2d-419b-9772-cddcd105504c"
        },
        "item": {
          "id": "acd81f33-90bc-4234-bc72-a0d2f889a9a6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5011b943-973c-4b2d-a3dc-4dee5fcc6cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f072e40a-100e-48fe-85f4-afee2c757a0d",
        "cursor": {
          "ref": "6337ed25-9340-41d1-96fd-cb266da6486a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fe8251ba-342f-46b5-afa4-afd7deb78450"
        },
        "item": {
          "id": "f072e40a-100e-48fe-85f4-afee2c757a0d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2ef6b3ba-2fde-48d2-ad51-f63c44c2c926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df18a3d-0d32-466b-ad1f-cb9f9e772640",
        "cursor": {
          "ref": "ed1a8d64-2421-487c-aefb-4147691386bf",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e2e0bd89-8aca-4679-a8ff-fb55a962878d"
        },
        "item": {
          "id": "0df18a3d-0d32-466b-ad1f-cb9f9e772640",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "33f9eb6d-a961-40c3-98be-d2a48b0bbce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6fd564-442a-43d6-8ef8-f0d8f862d983",
        "cursor": {
          "ref": "c421d723-2096-4dcb-9e17-7c094ed807c2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dccbb68e-0cd0-4227-88cd-c493d050f03b"
        },
        "item": {
          "id": "cd6fd564-442a-43d6-8ef8-f0d8f862d983",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fd8f6ba3-bf99-4487-a1a5-86d835fdc0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef7c5e2-fb35-4919-b2d3-aa60eb262fba",
        "cursor": {
          "ref": "a008fc85-4509-48e6-98df-eb44c51171b6",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ada40a24-b089-400b-9e83-a9fd652ad244"
        },
        "item": {
          "id": "5ef7c5e2-fb35-4919-b2d3-aa60eb262fba",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9c724737-8aff-4fa1-95a9-a75cfb01ffc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2fb2f3-c045-408b-b537-a8299497ab23",
        "cursor": {
          "ref": "a80fc7fc-d9ef-4d12-b2fb-acb09d39996f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "74428840-17d0-49d4-a108-eb478e6a2d9b"
        },
        "item": {
          "id": "bb2fb2f3-c045-408b-b537-a8299497ab23",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "415890c1-97e8-430d-a2f1-c51ccf3bda04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2318b727-dce0-4243-a19c-4ac67d21ac46",
        "cursor": {
          "ref": "749c7703-58a1-4fca-89f6-ae33a4edf64b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "665c804d-d0e1-4ed7-bca5-a536e2597f0d"
        },
        "item": {
          "id": "2318b727-dce0-4243-a19c-4ac67d21ac46",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e88be282-4ab5-4f3e-95be-1fd789bfb8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1714127a-2281-4fde-bae2-b9006cbed5e0",
        "cursor": {
          "ref": "35224b1f-544d-40bb-af31-f64a0dc7c7f4",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "584320f0-eec5-47bb-b3bc-28cc25b7ad12"
        },
        "item": {
          "id": "1714127a-2281-4fde-bae2-b9006cbed5e0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6de3cc70-71b0-4e67-808d-e3fef1e9a7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a452da3-3751-4e95-82ac-b16ba01cf195",
        "cursor": {
          "ref": "1afd19f1-6b00-4e99-bea7-5b7ad722faac",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9c98ab6e-3a09-483d-96ba-949b17340816"
        },
        "item": {
          "id": "5a452da3-3751-4e95-82ac-b16ba01cf195",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "249b5367-42e7-4a4e-88f5-bc4460cce31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084a3e02-7964-4ede-b158-c732391a839b",
        "cursor": {
          "ref": "c096e3c4-1518-4816-ad97-53db46ecc469",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6539ad2c-90d8-414c-b1d1-5fe742a169f8"
        },
        "item": {
          "id": "084a3e02-7964-4ede-b158-c732391a839b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3c2b76ea-b86a-4287-9bcd-903b9f0bdb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fd41e5-64ba-4326-9c3f-ce75f273ed9c",
        "cursor": {
          "ref": "d1c5e075-9b7a-46f4-89c3-756e8793a06a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "54c6734b-f03f-434b-8eb5-0ec5685bb787"
        },
        "item": {
          "id": "31fd41e5-64ba-4326-9c3f-ce75f273ed9c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f6ae6eed-f25c-4350-9a60-82a95d1ec4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042ced54-5363-47bc-a5e2-4c40e6cdf48a",
        "cursor": {
          "ref": "14309130-f56b-4ca2-b33c-a1e2376245fe",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d3e72c7b-32be-45e2-8b45-37799cce287f"
        },
        "item": {
          "id": "042ced54-5363-47bc-a5e2-4c40e6cdf48a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "994e7d4d-cb84-4265-84ec-f15c858b092b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33060a3-a797-46e7-ac96-88e5ac60a381",
        "cursor": {
          "ref": "87377ad2-8620-4b69-98d0-4bc80290becf",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "59221fe2-5adb-4d70-b296-65a7cf7a1db5"
        },
        "item": {
          "id": "b33060a3-a797-46e7-ac96-88e5ac60a381",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cb3947ff-ce88-4e80-9c1e-6d97a0a44e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175851f0-551d-429b-9c4d-fa85b383a981",
        "cursor": {
          "ref": "ecfa5c1d-3dba-44a1-86bf-2e16d487e3f6",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1f80f5e4-2958-4b48-b86c-91b4bbaaa20e"
        },
        "item": {
          "id": "175851f0-551d-429b-9c4d-fa85b383a981",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "65c94fd9-83ef-41b9-9d3a-01dd8cd9a68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6553b68b-7fbf-48ab-b386-9685d2d4e660",
        "cursor": {
          "ref": "2a719be5-4d22-40e7-9cc6-d4e807f97ceb",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c5c237cc-2db0-449f-862c-5ac244794b49"
        },
        "item": {
          "id": "6553b68b-7fbf-48ab-b386-9685d2d4e660",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "568e7e71-806e-4151-bcf0-8259b0dc29c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3aa0ba-e029-4f2b-8026-c841114efad3",
        "cursor": {
          "ref": "8f344a8e-7aed-4ca7-821c-882019dbb326",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "91b7833e-ede4-42ba-8bd9-6fec31409d09"
        },
        "item": {
          "id": "7c3aa0ba-e029-4f2b-8026-c841114efad3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f29e640c-3079-49bd-aaa4-237902945714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd71c4d-c41f-4145-b120-86777c223089",
        "cursor": {
          "ref": "3bf5ce29-b574-4b3d-8c44-0ac1b8f03fa3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "770d5ea7-06e7-42d6-946b-30af2ad58503"
        },
        "item": {
          "id": "5cd71c4d-c41f-4145-b120-86777c223089",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "aed1abf4-0236-474c-b8e7-33e6ffd93c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7010c0cd-41d2-4129-b2d9-e75e1eda7273",
        "cursor": {
          "ref": "4ff818ae-4d3a-48e6-abcb-118f934806d0",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c18e375d-3bdf-406a-88e3-9b000f4960f7"
        },
        "item": {
          "id": "7010c0cd-41d2-4129-b2d9-e75e1eda7273",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "08bef672-8005-41ac-8f8d-3b6307c7ab1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59a89ba-b405-4cdb-a30a-c8082e7bdd04",
        "cursor": {
          "ref": "54af425f-b308-497b-b49f-a151e716500d",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "aae22966-715d-4935-9ee9-60dea44fc253"
        },
        "item": {
          "id": "b59a89ba-b405-4cdb-a30a-c8082e7bdd04",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fefdd076-3fc8-4cad-95f9-29f709c45e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e588fa8-d376-43d0-84c2-3fe2b1053163",
        "cursor": {
          "ref": "b89fa38c-85aa-448f-a473-37ec437dceb3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "63a38606-bae0-435c-88b4-1e5133f5f036"
        },
        "item": {
          "id": "7e588fa8-d376-43d0-84c2-3fe2b1053163",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fb9109b0-f30a-4c55-9ba5-2e9f9d8f37ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e020fa-9bad-47d2-b5be-bbd34b5e93b0",
        "cursor": {
          "ref": "bfd9f20f-2e03-43ab-84cd-7c9c0ed220ea",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2341bbee-8729-492b-aece-7a38bfddaffb"
        },
        "item": {
          "id": "f1e020fa-9bad-47d2-b5be-bbd34b5e93b0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0aba0af1-43fb-4935-aae3-9f89784b3c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04dd4e8-8550-41ff-a4f6-7187e42540d9",
        "cursor": {
          "ref": "574614da-79f3-4f49-ae9e-dfa50ec24889",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "326c668d-6e33-4083-92a1-aa5ade97d6c2"
        },
        "item": {
          "id": "e04dd4e8-8550-41ff-a4f6-7187e42540d9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5c0d0ff3-cbd0-49e6-b481-d25af5f10e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48967825-db66-47b6-942d-08e69a2add05",
        "cursor": {
          "ref": "a803a4a1-893c-49f4-9e6b-6ac7c9905a2e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c339e0ee-de7c-4c57-901f-9ed9790195e6"
        },
        "item": {
          "id": "48967825-db66-47b6-942d-08e69a2add05",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ccc959ac-2d4e-4892-9aab-005b732928be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762c060a-c49f-462f-92f9-dafaf8d09903",
        "cursor": {
          "ref": "898679fc-4566-4645-8d2b-2c8d32b7fce7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "208521ed-551f-4fcc-99fe-90109743c987"
        },
        "item": {
          "id": "762c060a-c49f-462f-92f9-dafaf8d09903",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "98b55523-cb5c-432d-92af-76194d761e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad28e54f-116b-4800-b8ec-9508e58f3d90",
        "cursor": {
          "ref": "2b1066ef-8722-4877-9e6c-71400692f444",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "501ec3b3-512e-4d20-812a-662607a62c81"
        },
        "item": {
          "id": "ad28e54f-116b-4800-b8ec-9508e58f3d90",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6ff931a6-453e-47e9-ba40-145b2bcbb756",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664679e1-f005-4e3e-b0f0-877405b6a6f2",
        "cursor": {
          "ref": "a3be1f20-657f-49c0-b9c1-a10d80b25073",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "23e99a8e-c54b-4908-bd74-cd6057ea6de3"
        },
        "item": {
          "id": "664679e1-f005-4e3e-b0f0-877405b6a6f2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "aff04669-52a8-42f4-99c7-93b2b8c1be6e",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97218a9-cc49-43b2-a60b-c72a7b7f5556",
        "cursor": {
          "ref": "64b3bf1c-db5c-4e27-b9a2-9f3520706cfe",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b9bea0de-6329-4644-9a5c-87aff652e8cf"
        },
        "item": {
          "id": "f97218a9-cc49-43b2-a60b-c72a7b7f5556",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bf80255f-eff6-4c26-9c02-0abb44b4adac",
          "status": "OK",
          "code": 200,
          "responseTime": 3304,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6931a82b-209b-46a4-afab-4411411f0583",
        "cursor": {
          "ref": "55f9e72c-9058-4ab5-9522-d7701488476f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7883aab5-c696-48cb-97f7-1ddd74552353"
        },
        "item": {
          "id": "6931a82b-209b-46a4-afab-4411411f0583",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "930f805d-767b-4e1e-952a-17cbb86350de",
          "status": "OK",
          "code": 200,
          "responseTime": 2631,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec3655e-8d41-4734-8206-9f52ab1a1cb5",
        "cursor": {
          "ref": "8dcc8029-e179-4793-a16a-89537471f8d0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c823a0f1-9763-429d-ac0d-bc30d905d9e1"
        },
        "item": {
          "id": "8ec3655e-8d41-4734-8206-9f52ab1a1cb5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6502c678-5319-4e7b-9971-9d52ff820890",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 350,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec3655e-8d41-4734-8206-9f52ab1a1cb5",
        "cursor": {
          "ref": "8dcc8029-e179-4793-a16a-89537471f8d0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c823a0f1-9763-429d-ac0d-bc30d905d9e1"
        },
        "item": {
          "id": "8ec3655e-8d41-4734-8206-9f52ab1a1cb5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6502c678-5319-4e7b-9971-9d52ff820890",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 350,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b62f3c-9716-43da-a81c-c005f35cc5ba",
        "cursor": {
          "ref": "05e3c50f-a738-4e4c-9beb-a0df85f87199",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c13dd5b0-8fa0-4aaa-b850-8cac3997c6cb"
        },
        "item": {
          "id": "e3b62f3c-9716-43da-a81c-c005f35cc5ba",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "41583087-7476-46d8-ab09-8c68957b3afd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3359b32-dcd5-45d1-b5bf-9c300b317826",
        "cursor": {
          "ref": "c7082430-318e-45db-893a-cb64ddb28527",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1ad1189f-719c-4f06-8cf7-922f1ef115f8"
        },
        "item": {
          "id": "a3359b32-dcd5-45d1-b5bf-9c300b317826",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8f7c94e4-e181-4550-b6ab-b3ead3f1ba41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}