{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d5c36623-c87e-4259-b449-96f6f5894a4a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ad2327bb-fc1e-4ecf-b90e-5e98b221c4a1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4c25ac5-b44e-4d32-96ef-4ce8cb85d88e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d8060bb5-d07a-4ae1-9c80-113a29571b81"
                }
              }
            ]
          },
          {
            "id": "cbed9bdc-86ef-4510-a4e8-97ab2db85bd3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b097fb0-999a-4a8f-8869-ed89ad0daa77",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4a29fe07-2e62-490a-8bdf-b21d1b9c3f7d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7ce96bad-67bd-4a2a-96a6-513aab8b5486",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "18372826-f80d-4eeb-b4ce-fba43f8681b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87366581-be63-42a0-9439-1bf60577d3a9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "750586ec-4414-4bf5-9402-4e017418ac8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "929bb958-5e66-4990-9380-f3cf09f4ff83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c84a373-225b-4b73-a876-795fb520df02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e38c41e-2311-4122-a193-947d219a4c17"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f2964bb3-9e00-46f9-8355-ede31f59583c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "080fbe40-88a4-4c55-b95c-cea238d35b26"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06e83a84-13c8-40a6-9d66-eb4be5c25f13",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "14cde9a2-be60-4e75-ac5f-bfed4d2bd0b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "079efe1d-7e62-472e-b51d-a69cc8d5815b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f5d9c9b-6958-4914-9178-af1ef4b1f62a"
            }
          }
        ]
      },
      {
        "id": "ba1581ed-c366-4cb5-a6f3-024ecfbdeac1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9ccdc6f0-cf12-428b-a48b-5788d836539f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60a03347-f14e-4ba0-bc43-0e57873b36e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d85bf131-6104-47b1-a587-883039d51d4d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f8fa9f-3f9d-4b0e-98af-d9a8183bce94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0aed28f3-8b8e-48f5-bc05-214e6ebcb7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d67688b-137a-4885-88bf-8cf3daf6f41c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93e811b-b7a4-4686-ab65-88a6c53f7887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf09d335-ad43-4bdf-98b9-e51dd75cc089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115682b4-b538-47f8-9fae-9514d6c5fe4f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5805fa-d0de-409f-bf0b-b035e936f772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96f58c7d-5efe-4aa6-8c19-47de57a5c763"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e4be6cd-15df-44ce-a5fe-74d9c04e52d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "761ba2cd-715e-485d-b95a-d078794e9d8b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9100a9-3b22-4a7d-b205-569baca8d403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2e979bd-2b4b-4c80-998f-a2640ccf4742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd02c19-0f05-4b2a-a051-f980a14b9ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73821c6d-110f-4c6f-bd2a-a0965dd16571"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0f5152d7-c1af-4bf8-b7ea-c3626065bb6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7cb5b0c6-c1ee-4397-8efb-7cfe8663600a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae781599-6da6-46ab-9173-2ece5ac72e41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bc7780a3-6455-44a9-bf6a-74111ec2b5d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a384df21-f269-4640-8545-b0822b52d951",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bd88b82c-a6eb-49e7-867e-3ff2e643e4c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79b23b21-fb85-4d94-9dd5-cc7ea720773b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4eb75ac6-71bc-435d-adaf-d9348591e796"
            }
          }
        ]
      },
      {
        "id": "5fdf3654-17bd-4a5d-9201-ac6d14cce4bf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "973ee576-52d6-45f3-b80f-e63462db381e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b31f1d84-09b9-4d2d-baf0-6633c1acdebe",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b8c9ddeb-ad87-4643-bb10-46949ac28f6e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfab2fb-7a0f-4d80-96a1-c05742770d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d66400a-e818-4f4d-89a9-6f733c4cc006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d978bf-2b2b-478a-adf7-609d4ba38448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92158f6e-d6d4-4e44-a590-3ee67b6a507e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9ac544-d9cd-4604-b4a8-5c3aa00305b1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d850d485-c3c1-48de-99cb-072d51060ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e932fa6e-a8dd-4de5-9894-35df61c2cb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15224bbd-b695-4129-9c78-0317ff5f5f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf365192-aecd-4643-97d6-73bce5ad368e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6721df7-17c0-4641-81f6-83777bf3cc49",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3686b65-bfed-428b-af41-733af30564b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5c4f05-06a9-4794-9a09-8a131ccd3833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bd4bf9-e09e-4c36-98ff-0c98dde98d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "848fd8ce-0eff-4253-9c3f-fd90dc69154e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89a2e4d-c5c1-4030-8796-a8246191d024",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1677d58d-209c-4871-87a5-83da669494a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc12c66-7115-45f3-975f-0ea03484caf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eda0b2-d370-476f-a011-fa999a3dec5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b7d16d6-4057-44f5-98ab-b8b266e91b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfaaec13-a4fb-485a-b29a-56ea022883ee",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e340bea-1d51-403a-8892-d6c063b14712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c91def-8491-4ee2-b5ba-88255f71f41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7bff9a-cae5-4cc3-8892-03e50ab43eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9199b86-2ef1-417e-aea2-5ef3325da1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98afd885-f11a-49b6-a25f-a24781b938ac",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe2371c-6340-4268-afbd-e89b7cd72f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c09a856-694d-44ef-88d9-326d0a2197f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ca1de4-544b-408d-9f41-b5e62186a33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca63abb7-b55a-4528-9b16-0a86fd64bca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c433ffba-fce8-403a-b0db-aec0e39ee81a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78537cda-912a-4bca-b9d8-46dc7d97bcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f80fcbb-f5b9-4fa5-935e-454f9331695b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981929f7-0550-4fbc-a87c-35bd1d70e6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "783d229d-cb36-485f-9030-d5b10d4d1a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba0d82c-88c5-4039-b606-f6e0087a95b2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b27130-8c47-4660-adb9-10d0c67f949c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf8eb7c-c2d9-4b6f-9e85-639d0f729806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578259a9-d561-42af-a24c-4423ad1a7b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cf57dee-ff49-4f88-9bca-642a9e266321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218ae380-fd4d-4e37-b6be-4f0284553d4b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6080829c-10d5-4d01-bbf9-bf26794ba09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dd64cd-351d-4577-929d-2da6910b065b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c076451a-d823-48f3-987a-c85205df513b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c4cc8fd-7832-4d44-a5b4-8540df014d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5d91cc-6a23-4cf6-b6ef-27c07f4ed9b0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1630d6e2-5dfe-4439-96a1-c8a30ce50928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11dea39-5e91-4ed7-8222-01cdce025c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd2deb8-cac2-46bd-b33d-21f7607e1418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b8f88bc-8199-4684-bf73-728f83e74e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeb5847-7618-4c0e-8e35-4dead517a982",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2cd7f0-d6af-4747-bc55-17cfb22ab591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd35bd5-a9ce-4eb0-9d1e-80a0afdbdd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3859874f-a3bc-4669-8d8c-bd2539ee9b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37026e52-5567-405c-8adb-f5b6b7c4d44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd7e08f-e173-40e7-878f-056de70def73",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c9a652-ac9b-4baa-8cbf-0acd17daba07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f908ea11-01a3-49b8-bb47-2f04efe1c3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5f20c9-97d3-4d61-90f5-589fe2f87bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "404a9651-aaa4-4d76-895a-d12cfb942ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f58b41-c830-401f-b278-5dc4e7367a6b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0702cf9c-ba05-40ad-a1a0-1b674cdaf1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e83d6c-39ab-479a-a66f-3fed4ff8d5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf14ae6-d463-4526-b028-dd97c5f083a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d18ede23-0cb9-406a-b8a3-cb639571b7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c023a6-890e-47b0-a75e-af936c0fa88b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0efe650-c7b6-4d01-bdbc-17af27a9a912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a95ddf-a664-4a85-a7c8-2c211303b8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f0e0a8-62b0-43df-9a08-3697bbf4ca19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "083e6d48-e600-4455-bffa-e1a77669b28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51286b31-4d91-41f7-be53-3cc4c20f4317",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68dcc02-13a1-4c80-8a4d-05c8a86fb9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d843b55c-2123-481b-b71f-78cb770896f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bda3e54-552c-442c-84e5-f27565efed96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04b1448e-3a0a-44d9-9144-008d6a0c1def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8701f2e8-67ff-41d9-a1ba-72086c9534c1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2855abfe-98b2-4f23-82fa-d90e1dbdcd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7f083b-e79d-42a8-83ea-2280d051ee9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b84d97e-beeb-4b0d-b83f-17d20be59a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2229fe4c-7d19-45cc-8dc3-d016a40e46af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20812e06-5e6c-4f03-aa75-119181b8cea3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f37f6b-9210-45a5-8867-8c29d71451e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bb9887-4d14-43b9-be2d-92467dda73f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8540834-f96b-44ab-8506-39c0b778b402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de34aa4e-bf79-4ef4-bda4-1a6b433e6d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f1f091-e4f5-4ce3-a53a-0a57fda5aae9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c57758a-a37a-4e47-8ea5-70759cfd7353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcb1f29-fbce-4dc6-b804-f9aecc781a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7933a045-8f59-4c2f-b98f-df08431fe9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5513a101-2551-48c7-b03d-82f43e57883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcc5ffe-97e6-4b9d-9e93-e88a20a9a15c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf13892-4f01-4bb2-b0e0-76d64ed39023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327e9716-f15d-420f-9e54-e4d334f2c5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290eb02e-39d5-4d8d-91fb-5b275bf29cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24702121-f966-475b-bed0-cbab7debe9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f831ed58-1ecb-411e-a520-0038383bc63a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdf8d77-181d-475f-8c76-31e1cdb9fce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3fa9a5-7b12-447d-8d92-b989759970d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333893c3-2bc0-48d5-b690-74042dcb11e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49ca355f-3b73-44a5-b030-2312f5e7b038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285dda4d-a1f2-4c9f-b8fa-440552168e4d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f321ed2-b52f-4ed1-b8a4-14f2be05a405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392e9ff9-5171-4926-9ee5-23a131e73565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b988a7-0228-47f4-ae19-09fe9d9f4e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b6a087-64f7-416f-a67d-a38cc8cb0cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c0cc4a-1e5f-4299-9923-eca9b85e2dcb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e891b00-e773-41e2-8798-20b96cb3f3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d8e81c-fba9-47d6-943b-f7510117d479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21249bbd-47ac-4911-ae60-01981512e1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4725aec3-2aed-41bf-84fd-da938046f3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8a96d8-f1df-4ad3-ac0b-484d225aa345",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17201c3f-e926-4bb8-b340-c5c0fbd4a131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e6017a-a614-414d-aac9-b9eb2a8ba132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9655e390-cdd5-441d-9d5e-c159ff96911f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aaed6271-be32-4460-b7dd-9d7122515839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a6f6e2-fdac-4ab6-aa75-7d459965dec7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca54aff-6f0d-471e-b415-6fc2e4969b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ad9d7f-fd70-4d2b-882b-a4480160f1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ee2c5d-8822-4b19-a219-ee6dc973e069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5624e2-c04f-4b88-b95e-b8f7cf670448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86519f5c-f159-43f0-a300-9ac2aadbd6ef",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3e09ec-536f-43f5-9065-1aaaaa886b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e66fe50-126a-4160-8d67-f2a6fa4620bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640db55f-e13f-4f91-9784-ca18ada08f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64a4d7f-67ce-403a-b1db-56e7a73ac57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd056202-f454-4c6f-bfc9-f068e51b7342",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d48180e-9003-4600-b5a0-1b8517f7ad95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8fa0c5-600a-404f-8c9c-e3f295e266a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb9d85b-be7d-44da-9770-3da47d59d9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b56917e4-a5e1-4a7d-bfe1-d87d785627ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52dc7df-b77a-467d-a438-7ca36f87d848",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1039d5-801d-4043-bc2d-c0f36335890f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4f31be-e730-4ba3-a5dd-8aeacc0bcc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513d8d9f-feef-4724-956a-522383588826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa92445-0f07-4c2c-9465-96cf842139fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7980a6-1a89-4bbf-95a8-54559660d9fc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09322b13-f32c-4267-87e3-da3827893476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81adc93-5d82-44c6-b8ec-06c0620d1662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b29417-4992-46a5-b10a-45e3d7f341ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a6a546-3e4c-43a0-91b4-4de5dd72436a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d4c225-bd24-45ca-950c-8c35940f8a52",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabcae3d-d765-4730-973f-9e80647dbf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99102d7-1f8e-489a-ac45-612dfa1ce1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2201c4e1-8551-4873-87ae-ec148a990a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b31f5f-3e26-4610-948a-f464a3220883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfe355d-0737-4b94-afc7-ea7d29909b95",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763c41cf-25c0-4d6f-bc3f-82ec9ae16548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3756e65-0c97-4f8c-98d9-4ffd2cfc1202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc4017c-024d-437d-8135-2e6419f0a3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1461c77-c3a3-45d6-9532-d07093003691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ecf0bb-2e16-4880-85f2-cddccd111af9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb7d687-b809-4c08-9212-8eb94c084584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510e8e2a-9341-4035-8480-84b38ff00bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccdbe42-67eb-4adf-953e-4cc2b7ee17ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef1d0a6-befb-4093-a55e-9dbf782d035c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13fb64d-6d00-4e50-a24d-389512d0b924",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a32e4f2-036c-4185-858e-c5ff2c181aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d884bd-2fdf-4cfb-9cee-f4aa505b11ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83aea6f3-06fb-4ff1-ac37-49745dcaeae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a748554-47e4-4b8e-b32f-67e0008db4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c685707d-2265-415a-bf69-c06d4f17cf79",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19397386-51cd-4137-b227-718cb951045f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18adb8b5-80b5-446d-8d1b-040abf6b4188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eca0c29-cb25-422c-9b6c-9c9117644a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "068e3d8c-b70a-4686-936d-38da94a84e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a0a4ba-bb55-4724-be68-de6478a327f9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa78cb85-72ad-41df-99e6-f6f4c6ebe422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c24832-c96b-4055-b1da-54c2797334bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57e9453-fde6-4f3a-95b5-fb60a5f1251d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "845bc3a5-be95-4517-a4d4-0c6498c7f9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b2041b-3989-4227-86b1-e2364d018827",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f766ca1f-6f3d-4904-8525-71d3a9122e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cf4c6c-a0a2-4bc9-9aee-12c4e042066b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3822f4bc-1387-4fca-887e-785ced6e8a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e31008ae-e5de-4f77-94a0-0c71639ae8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f100c2c-1d7e-4401-b0fa-ee7551f27718",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09134950-ed04-40fd-a9ec-a95e9206ff99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1142779-b5d6-4f6c-a355-f36e08ae7d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3aed55-1e66-4c65-aee5-59b9104e88e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "148109a5-1526-4d87-8d09-197f6146359a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4b4422-4140-40f3-8623-04c4438f3b29",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2eecdb4-7f83-4ed8-ac81-372348a5a169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a2e989-07e3-4632-a872-cd636530731d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d3dd91-dbf1-464a-9f41-355672a010f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c1bd90-612b-48a8-bd4d-534c2239df43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7343c15-f212-4dac-b901-da86195f9d7f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51af8e0-3d8c-4ed5-8f8a-c08b89a4a9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ca3789-abfd-4b56-9c7c-146eee6b1cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3552c3c0-973c-4834-abf1-fea608e7e7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cc172e-29e9-4cfd-b94d-e5ac8590bd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e3f85d-d2b1-4b80-915e-1ba4dfb50297",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb53085-eee4-4578-9bbf-e51da561d4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc4520e-d47e-453a-a1cf-5f6640771c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fa34b7-859c-486a-8f3e-982cba9752c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6048580-0197-414b-aad0-e01d0d03689e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6854b754-ebd8-440e-8d36-bef75fa94273",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3604c082-0590-4c24-b657-b0230baea72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fddb08a0-9630-47e6-a8c1-2ad247fe0255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370917b2-9094-4b60-867a-155a67caa2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9899e3-ac94-46e9-90ef-069e93539d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172f2f97-502b-46c7-a653-651b78b4f723",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bceab4c4-639b-4676-ab7d-f3755c052e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfbc826-c35e-45f7-8a69-db39de9accc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2685683-7dc5-44c3-9be2-949ff339f27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd2a145-ef76-4c89-95fc-8aa7ef1d80b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87bf939-ffdd-4c22-ba04-5a4bb93079c1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e018a9-59d7-4ba5-9a1b-a145392fded4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167226b2-5331-424f-9901-4774b99d5729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73076bb-168b-44cf-bec4-316fb1dd8c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a311c9-b588-4d65-9b7a-2e3f72e22e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b04ad5a-6d40-45c7-94ed-d5d4f5184995",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c497d4-11c1-4b7f-89fa-cd955b23df6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c37e40-e352-4715-aa23-5c0928427e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f06468e-ce7f-4312-8b28-7d1d19558cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "92807683-16b2-4df8-8722-896f8eb63897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc3f07d-6dac-4b4d-baed-f5db01c1b955",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54742217-3269-4438-b623-fb277fd75347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9f8f0e-6ec2-46f2-8a83-eb2e0926fde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f83c25f-834b-4e3d-a0b1-db969b0c91bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe7edc4-65a3-436a-903d-3593cd729712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44504d70-e860-42e3-9542-7f1be1ff4151",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e684f8fb-b50a-4f41-b4ac-044926f7e640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d060014-1a74-4ca9-aa3f-1f8a4d2f7d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc9b14f-d8c1-461e-b5b4-11ce28d8ad10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "605cf189-1ca2-454d-9c77-74734254dad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7e33d4-d58f-4b21-800c-15f44913259f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf3a480-6970-43af-a76e-1a783999826e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d56238-9258-4221-9105-d39e46088a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56d1c6f-1d91-4e99-8f1b-ade14e193d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33be2676-7d3f-4ea3-991e-d0244d128ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ab3619-f75e-4f76-b32b-d359da9077c8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabd3e0f-b81f-4cd0-88f5-10cceb02d171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49799d9-b037-43d8-a493-49221c4cfeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b4c571-ea34-4463-9fc0-336486b40fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ae23d1-7aca-479e-8ea2-511d89fd8067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080eb48a-b136-49db-b22f-f3838c7c8574",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2499f510-e87f-4581-be20-5ebebf03a72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca962b5e-7172-4aac-9d0b-bf5639603a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56144851-fcec-4d1a-bb29-f4b0e7b3a3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c511e131-e463-42be-8ce5-f1de2a877088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e225f9-7ad3-4128-9ade-731d3f70e53b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7071b7db-4638-4b51-b3a9-1216d6368439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa38d94a-720d-41d6-8bf4-f39f30b2cd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b7214c-8eb6-4dc3-84bb-e4fea33f9c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a72b188a-6cff-4cb3-9ea4-d813e1017c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c99e0e1-e5ad-462d-a1d3-cd3ef0564ae2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab80505-eab1-44c1-96e5-409f9b00604d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0a4796-28e5-4147-89f6-ab63d7a1b0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e44dc9b-101e-4e7b-958e-2a0470ccd6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b74f527c-5395-4a8f-9859-773caacdaf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8544aec8-f14c-46f5-b365-2ddceda20ac8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5d8e48-0138-40fa-91de-db2faea03f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531f9b88-cb32-4b23-b6a0-861320f85158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7bf447-a9d7-4ab9-a8e9-fc3a92be4b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "aac26e70-dcef-44df-a1b6-52178fccd248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2d86a5-9319-44ff-8af7-2c5812dfb975",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d687254-e6f7-458c-b46e-2c39dc0f4897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fccfe8-027b-4602-b01d-4fef794be167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f73efd6-0f39-4741-916a-b8dee708d14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a11dd0a-9c0d-4198-9d3e-81c968684655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6dc420-1bfe-4ca2-ab12-19a0de7d4164",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29645b63-bc24-4669-96b2-12fc1ae1f9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba926978-bb62-4c98-a5a4-2897e0dee17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7946218-57ef-42d2-8307-39e6232ff11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ba1a2e-87d7-457d-b65f-af61e6ed6f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818d85ae-0a35-4785-b83d-152fec504ba2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d757eb9-853d-4aee-948e-2868530a6c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d5fce8-d92e-4240-899c-07445a0b732f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0f21ad-9337-4293-9c35-8a22fbd4fb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "331dfb94-29e5-44a6-8b80-1220f9a89ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d688d4-17e9-4424-827e-426ce891ddfd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94db8560-5bf8-4bf4-8d03-ca16d2711f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b42d7fc-0155-4280-b384-c607b0b89e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f99f734-1de6-4a62-99a0-a1bf04393d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b71d65a-d809-43fd-8bbe-9be781a79307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2e12e7-1498-4b5e-bc98-38109db2a054",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f727185a-84b6-44be-bd05-e808daf8fa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b86ec1-da0f-4e68-b9aa-39fd13002c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29aadac3-e798-4745-b4c3-ffda8ae25609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e52a165f-408d-444b-8f07-e3a2db4a0fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d97f26-b280-4325-9cd1-aab10adb774f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eeacbdd-a69d-4559-9aed-9362c32c44e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc428c5e-6cb0-492b-a5f1-aa5446f4322d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e9c6ea-4a78-487a-b560-a1ad810834a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "34acc791-9b61-486f-a2cb-c012740d4386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ca5572-5a95-461f-a65e-c2b3de040ad8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9aee466-2d18-441a-beee-aa909b769379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e07486-17ca-4f34-90a0-5f68c2430cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd481195-71ed-48c3-8050-6e0658da0b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63531de1-8b6c-4f5f-8b05-8b66754d02eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b240d8fd-ec09-4c14-83cc-018b1c9388df",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687bb956-c148-4a37-bc53-323889d58382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a49b9a-54d0-461e-9ead-58b5d57161f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead4fd53-c0ae-4b2b-abf9-83c93ff04333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb82412f-aebf-40be-b05b-d5bf8037b4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af9a415-24e6-4c14-a289-bbdb3c2fcb37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a402e7-b310-4d60-87ed-966047d6e841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d4e986-22aa-46c2-b843-acaf32115956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8771dde-a353-4d1e-94e8-7967de7b51b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9316469-7bcc-4e7c-b98c-7aa8fd03baaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860c9851-cbcd-4aeb-8b2b-01cc1b56a1f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313c2a4b-07f4-45ba-a2be-cffbd343eb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff709f5-1784-4eb6-bb73-41faff8fbc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74560274-8eb8-479b-979a-01de324140d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8061cce7-bfd4-4085-b154-a1b19088c69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106e6f85-f8f4-473f-ae68-85f1bb797542",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e11d190-1856-45bb-b7a7-3edf1e4809ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f29269-b23d-4a50-8d0a-7dc1b290c3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c95763-36cc-4145-9b8f-3e4001436384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2db597ee-107d-4032-b825-ac0114a3d993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f164bc31-3d1b-4a8b-aaf8-c805c7379830",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cb9cc0-ea32-41f8-b5b2-9c8ecb0c23bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155e8653-e895-4b7c-873b-c03de13d29cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a12efa3-537d-4e84-8100-97d66ad4e347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f09acb17-7c94-4990-b481-f47c3164c23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dcd2a7-337e-4036-bfbe-fbbaa8afb4a4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2880c5e-fa65-4ef3-948e-e89fac6dfb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586e76c1-8c2c-4e6a-b4c8-0e645e044c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f639619b-3997-4862-b3c3-2201aaaf007f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a64f2e44-4db9-41c1-86ef-10380396926e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dbcb1d-1029-4a97-9116-3b36a26b81ac",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c148eabe-2a8b-4967-85e8-3b0967ad8c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4f93e5-0afc-4d87-8db7-2e2499d3bfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1676bf7e-b400-4d08-bec6-ded11e4b5642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3d670a-e2eb-44db-b119-8b8e712fbb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a42c7e-d1d4-489a-9385-ad5db74f691f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e99deb-2661-4cc7-8e95-a21281f1f4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad69058-a0ba-4863-a810-7c4051110261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516b2746-b8b9-4537-aca3-e9e18a94d093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51e9e6ee-4a6a-4b66-a3d5-920065ca7b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52ad508-3d40-415c-a846-5fc1868af31b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fb6897-73ab-49a8-9ccd-987cb1c3e964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e470f6e-751a-4240-9ad0-c960ed137219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892167b9-14cb-4e80-b4f7-e73945209ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61979963-bd77-494e-abf8-ed860df0a2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e58357-9cd6-40e4-8bdb-bb5cea400b9c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5688738b-256a-4cac-ada3-d4c82c5a5f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f1bed6-1fcd-46a0-aeff-fd16b81d3938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd5edc7-6b9f-4bce-82dc-0b1834bd1471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0590eae1-a47e-4666-ab71-78c4c35a77c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b9acf8-85d3-4ccc-8030-d6a8a3eb2012",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333227c7-2be8-4321-8d46-df641411370c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52f750c-2146-4785-b566-7b157af14ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9996f2-7557-4ee8-a2be-70ce0980ab9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b227d1e-5d9a-4b72-a165-84d41cfdaaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc3cab1-fd61-4ee5-9ef1-e15f7caf0583",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde1216f-cf53-4852-8ea1-02379a2bf9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d11e9da-bead-4acc-9d83-27b49093738c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743c05fa-5207-4954-b20a-9590d41edd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c896c6-86a4-4e59-a559-7a6c6287595e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd68c3d9-8a10-4947-85e3-f23ed5080c7a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978e9918-cb8c-4f3e-85ed-884328abf9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c56121-a24f-4797-99f2-bdae00ed6cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a27efd-c2ec-4d20-ae34-c850d56e5e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "569bcc86-8564-4325-9a5a-073d9fdefc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5689ac-165c-40c8-81fe-24deecff1390",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cc7ef2-5424-4054-a75b-41c95c9e1dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8848f0db-b81c-4b23-a3ea-982d98ed2bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5988e26a-22d2-4527-8b26-eb6ddedcaad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80946c27-1529-48ff-bf1c-4282c588ed16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095821c8-5b8d-481c-8a19-8db797e7d9a5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45941d6f-0c91-44c5-a486-9d80a2af141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15618679-1a96-4758-b77f-e3224e6f8285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb5302e-dbe4-4714-a425-2a1e7ee7e4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db2b10f1-3e7d-4fc0-aa45-437419c4a0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a9e9a1-7b86-45f7-aa8e-7e768d418e1a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054c74f4-fdbe-4ea5-8b53-4d870b1cb237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09a74e6-51ae-4018-8c6d-2db66d195f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9ebf24-038e-4d4f-8ae5-1bb84b1a0bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a633acc2-3189-4b88-98be-6be5ae4fce85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c9d7ee-e647-4281-82c4-9164b6cf4391",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e44b69-da8b-4a93-b96d-ea08ef9dc4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86f7000-ae96-4286-b34d-2c3b094701dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f0fb6b-5843-475b-a34a-638d07cfe80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd38143-1cc3-4925-977a-4de330b6423c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec0bd80-06f4-4748-9039-c6411a4cfde3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9028c92c-b0d1-44d1-a5af-c5c9ecb31a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7919afd0-63b9-41ec-be10-b1e677e30b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061b13d4-770f-44cc-a150-39202d189e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8babf24d-a960-4b34-b347-eef74446e511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a51f155-4808-4e69-9022-8078ac7bd369",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979d5a9b-4b9b-4e7f-a054-c9062c5cbf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d241634-d748-46cb-bf45-e9ab8e5db53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afeaceab-7c5b-4459-a18a-ecc6230c9c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4271e2-0f89-4271-bd27-870f27653040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4d9916-5107-4e91-a220-e9cb968810d7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d0591f-3be8-449b-947a-338b14df1a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7afa38-c8a0-4e90-9534-7827f89c87a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0875a9d2-8258-4c2c-9fd7-0e7558e49d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b383a49f-48f9-4494-b519-92ec9f1b4b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703011e2-144a-42ab-a623-55fb7acfade5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab1672c-e423-417f-9856-9c1a43442123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcf5d54-f5e1-4199-9ea0-0692d4883ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8ecb56-b5c1-4629-ba09-a0ee0fb75353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15af12b2-0645-4f49-96a6-3d2511ae8cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5a0c62-6b60-492b-87a6-0e7935553ad9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94faf002-e275-44fc-9b33-40416e72c114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c38e5e9-e25c-4b58-aba5-355697b426ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3097bf57-5cd7-4b87-bcfd-0cad1ae135fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d52c371a-95f3-446a-8c01-d49cce95c625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e9caba-2cd0-499c-95ac-cfed157edbb6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00e29ec-8cdc-4581-8146-581511358bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d0c4d5-0da8-429a-b8d8-1a4a5fca8481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c93490-6f77-41b5-8d88-31f3eb881129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1750f14d-b7f5-48b1-b8a0-1f361fce05d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a8712a-1f03-4884-8b3c-301401fa90a8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6b5c34-6059-46e3-b5e9-b1b833e5c30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423328c3-d399-46d9-8bff-c65e3386f2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eef006-aba1-4eab-9593-763aba579430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5523e7-4b69-4b17-a12d-172b15aedb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1972354-96fc-4ae1-b227-331db50ece3d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af8d91b-bfd5-4f2c-8671-bf26d732da53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e512e66-bfd6-4d3b-98c0-6614f0ac7a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb51f49-b59f-4624-b050-a4a9f56ffd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5def9c2-d255-49b3-bc47-cdb931cf814a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdec0fad-66e7-4890-a7e5-84959c0708e0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5199b553-c72c-47d4-bca6-d03757c41d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967609a3-6922-453e-8678-f17315253e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12aa1e4-ac05-44ed-9189-48d02e764611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dad6c6-76e3-4d45-ba14-98d8ab3ce4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16568eb4-f0bd-473d-a481-1b41472d6854",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045de348-0d6c-4907-9ea3-b0da6f8a1379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9218fc4f-7a8a-4138-ae57-b7283690277c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06ccb0f-b381-4415-9efd-e93729a59c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93308018-4388-466e-984f-4e90da86ed31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17793e2b-4524-46a6-ac60-57ec9e330a0f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7504c9c2-4580-4f4a-907e-7f05857546f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137c5130-eda4-42a6-86f6-e40db7d7e888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbdc3f9-c3a9-47d9-900f-2b08aa75b9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b42fe6-c39b-493c-b230-4051bfe8a3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37aba5e3-5594-46fe-afee-0132498f46e9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc488060-4218-4cab-aeb0-22fa4f59a998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ec92ce-83d4-43e0-99be-8ab2153330eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f8526d-1ddc-4596-9715-8adfc66923bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f25e233-f411-4a80-b996-3cdcdd464bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9189a67e-b518-41b4-897a-ba26c6f1c4c2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74823a29-1257-4c5e-b4b2-92717fea9921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fe3676-73fc-4102-8ddb-e8e7c37ccbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7efcfb-0e95-4b64-87ff-0e133da5fa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "80241660-d99b-4d00-8370-92a93e308558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca73a1c2-3ab5-434d-97d8-6bff3cde13ad",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8277b0cd-8f9a-408d-8ac5-706569a2e57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964973dc-9786-47cf-bb43-733235dee44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa93078-8bb0-4732-b8f7-176466870918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6db39a06-7e63-4d1a-ab22-52fa48af9333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f721348a-e057-4326-b50d-7b85e2da97bb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4403fd8a-e7dd-45bf-ac59-d2e2362fae94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036931ae-c785-4786-8473-c2ce835fc9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e77b1ad-93ef-45f4-b5bd-b90b805c7420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e925122-2f53-4282-9c59-9e215f5c7493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e4d523-7ce2-42ec-aaaa-0a0bc05288ac",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9a485d-9b2e-44d6-8f63-55510374262f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf2fb50-1cd8-405e-b3a8-534019478c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1702a6-66ba-4240-a4af-90a46244b6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc5093e-89b9-43a6-bf99-7b01064f058d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ea8609-7596-4e23-90f8-e9756c50521f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2994e5ef-d0e4-4693-806a-86079cc503f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1eb9bf78-7a7b-49c4-9128-8dd62dd49105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d4057c-1732-489a-a121-f823939ba5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7770c35b-a92b-4019-aa3d-55645096d428"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04b25941-ba3c-4f7c-b030-eba9a4bc2fea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "130531f2-c41c-42e0-90c6-b78bf89a812f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9364abf8-f988-48cc-8cd1-47e76b6dcf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adcfd96e-d942-4cb7-99db-cf5eb03a9159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5886d29-45bc-4014-b18b-a4a2655e531c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ed6d75d-934e-4a73-87c7-52d074054288"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59f3b98e-dd67-4842-a119-7b8298864e82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33ab8d8e-6dbc-4b26-89c4-aad9fcff6206"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2522ffc-1472-4410-9085-a693054fafc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c46b2d64-26b9-430c-b833-321cb9d1648b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88c3960f-c9a6-4b9e-8f26-dfd26686e4ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17fbd38c-30c7-4f1f-bbfb-0395bf51cf53"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c2c4373-7c77-4f58-bccb-b4ddb163aa9c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97c842e9-84ba-4d81-9a90-0e9097d5c499"
                }
              }
            ]
          },
          {
            "id": "03ad1063-f9f6-4fe9-a53b-0739c211ea31",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c98d1b60-173b-41c8-a667-b56ea0bf4f7f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "06184969-deb4-41f1-a9ff-e8248ff80816",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff430101-1348-4b21-acee-eb17b6adaf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c25e68a2-fe21-4c0d-be5b-36f01473ba53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827a07b5-36ca-4511-b4b1-0e097b3e3537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2ec398-708c-494e-be71-4d2b0e1858c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f7219d35-6d47-41bd-93e5-709ca0756a0a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04d2ba27-3503-4c20-89df-7b7681aa2cd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c42ebf4c-0222-47e6-86b0-bd6dd7d8b0ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "056b83fe-90dd-44ec-9ca7-87de3b1ac1e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5b409a77-030e-4620-b521-2dd25b773863"
                    }
                  }
                ]
              },
              {
                "id": "58cb5ff0-fb5b-480a-90fe-85128f61777d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ccf5636-06e6-410c-86fe-d6d824ed0390",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0447434b-4956-4d09-b9f4-7383adbe4d1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2d8a439-d7ef-4634-9af1-50dae66759c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d041ac63-d01c-4d58-a09c-84c39fc048f1"
                    }
                  }
                ]
              },
              {
                "id": "c5cb76a2-039a-4795-95ee-a37502b0a739",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c3c6cf5-3d93-4b6b-9b46-f3c9627bd883",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bfbc3de-fd39-4825-b6f0-d10fb0f624a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a08e74b-fc32-4929-86d4-b9f2bfaec950",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3aeb2a47-6d27-4feb-8204-31ecb73e2a7b"
                    }
                  }
                ]
              },
              {
                "id": "547c176f-4a29-4c39-94b3-04b0ae94efc9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52d1d84d-4872-4902-9b36-300491a843f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "725f7126-f0ee-4e2a-9252-b819728776db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de44b5d3-06b9-481a-9122-a9089c7e46e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "70ef17d6-7695-474e-9ebb-2aadbc649688"
                    }
                  }
                ]
              },
              {
                "id": "86f1ae2f-17a0-466c-a404-d9ed6139cce4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a823f830-759c-4d6a-a034-fa03ae8ceb38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c3fc625-b912-4259-a612-c924e55fb6c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f523df1-65ee-46a6-9b13-20eab6d981b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9df39322-e94d-42ac-a2ea-786c1b11f9e8"
                    }
                  }
                ]
              },
              {
                "id": "3b229d35-214c-4346-90f1-db9e093c1dcc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d81400b-aeea-46bc-b460-7961ee68d585",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8809e320-1e8a-419a-9677-14ce50286d07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ea1d166-fb0e-4f4f-996a-65dd849d9ebb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "526c7d5f-8292-4898-94cf-ae36a7c976f6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6d3cf97-66e8-48a9-95fe-f3910fd57a7d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94a5a170-f06c-4ce7-a8e0-a4ceec709de8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "790d7512-5366-45a3-a407-277a2db18bc9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7b94e77-3c15-4460-b573-ef53c065070b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "017dc94d-7012-4459-984f-2586012bfdd7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9459410a-16fa-4bb0-9d7a-6cc9f968a4a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "349aba61-e292-4f30-8ccc-0bd5b0aa4be8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4279ddaa-1e92-471f-8417-d0ea91cd3000"
            }
          }
        ]
      },
      {
        "id": "0dc64906-c73a-4d57-bc21-5e028f76d292",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6fde75f9-9854-47d7-81f9-19b4986d7df5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3549192b-5ae8-4571-bb0c-dc225d12579c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d1a404a-6e50-4695-a28e-9639b567af98",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eb4ca4-7294-4045-a83a-4d951c37e687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75c93a1-9f6e-48f3-98ad-9f3525003210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85925e43-c181-4ab6-83cc-572a5ef6bf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "13794bf5-704a-4714-af2c-9baac062afef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bfa5b5-665f-48fe-8bff-73117834c271",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366083e3-610f-4ea5-8802-5baa0a329cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d63fbf-5306-4378-94e3-8e7b34cb37c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8e28b8-bdf9-4c3f-9911-6acad21c74a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa9f90d-92f0-4c77-9bd1-5991349b3bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eefbe62-211a-40fa-ae35-1a687e79a9fc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33d36ab-4b0b-4156-9d12-0abe2a29d4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9491a012-8ad8-4a10-8cb6-759ea4de773e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167ada3e-c6c5-40cd-846d-abd298f880bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bda3225-319a-437f-b56f-41187b4771aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cb9459-a208-45fd-8d28-dbb68b021c7e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84d997c-a00e-4240-b1fa-7558f4e5fab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2433c9e9-a305-4347-b7ac-156093a28f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8912bc7f-5586-4fc7-baf4-c635781ebcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26294a9b-a6e4-4a9b-8e84-72acef17ac8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a96da4f-5dfb-465b-8048-f6eb104dbe17",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ddfe7c-a3c1-429d-8c79-d77e7ba69181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c044cff-d1de-41a7-a25d-e6ee466c8040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b03bfa-ac6a-41b1-96a7-0367aae42e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e857ed2d-7636-480f-ab92-93674284ea9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2c9732-435c-45dc-9dc6-4486ead7eb3a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6806a03b-efcf-41f1-826e-78ebf7cd676c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6b8fb1-05fb-47de-b641-5225afd3027f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61615edf-8453-4c6c-88e5-4dcef4fc6802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4248c58d-abcf-4ac6-aeee-dff1f6532b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4266098d-63d8-40d3-a914-54358eb28a6b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273cabce-7659-475e-87ad-63d4d7213bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8ebea2-3c29-4f32-9c87-1b4eda82e2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f4a890-6dd1-4eda-b7b1-a7b9ef6ac197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "91b63da8-115b-478e-8d80-598ab458e541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06325311-ab98-4133-b697-fd52d9cfbcc6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b754ca67-5c52-4276-99e6-f58d11d4add4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f78554e-00c8-4d02-9411-3e161d8edd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94dc96b-529b-4462-8fa1-eae67b02071e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c682f8a-5849-400c-8a3e-a8583e147651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d8cac2-f7f6-4d3e-a9bd-054f61e4edf3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca7d116-67fb-46bf-97af-4cb651ef75c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879dfb4b-975d-4389-aca4-b9a6d341cc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb47d35-0bac-4985-9d16-52439587dbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd9de5f-596d-47a0-a140-4878a392ed99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6818af1a-12ce-4dcd-81d9-dc1755b934fd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ab2840-bce5-4bc6-8a30-3687105920b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d7ef32-2832-4078-a100-237e1a490e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8344c601-3902-4178-aacb-804353e33434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f495080-3a11-4961-9cf5-635b6c0e4415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a06e30-e366-48ee-b7d2-b20c9a7188e9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d6fedc-ac49-48ba-8493-7839f038bcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5889c070-b2df-447f-90cb-72dce621eb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7850b7f4-1821-4286-82f7-473db4bc5190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfc978e-e172-4408-8927-fdea413e6ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f461b5b8-f1de-4e76-ad0b-7e4446d47794",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90674c5-dbab-42a5-b015-873ea557c1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64f4b30-7cb9-4302-a406-86b17b950bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7b6752-7deb-4bbc-b68a-5886ab125946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a669a1b2-3473-4ea0-bc43-19a48883892a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bf3b64-cf41-4ebd-afac-8b8dc792721f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4419c7e-bf94-483e-b7ea-2bf2f8a70782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35494306-1a39-48a5-ab87-9566a6abc0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb5d47c-3034-4527-850b-9dbc5fa12eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4638c0c8-60ec-4a0f-899f-ce57b29a11d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668bb5dd-4770-40e5-90f3-5707e6666705",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c774515c-33ad-40dc-8be7-df27a30dd00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a113d0a8-3a1e-4808-b462-8db34f17db49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51061190-26fb-4604-a9cc-a5aa2e43e9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4d188c-1f6f-4747-89d2-74866fbaff4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88933c2d-b7ab-40eb-8c8d-eb6ee5d3df35",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce692ec-ba8d-4b64-adc4-2eca697dfe0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7374d343-5de5-437b-b9d4-b4ee3273552b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1370fe63-5e47-45cb-be92-853c2b6b2bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd901c5c-1e88-4a01-8950-0a2b517ce4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e43d1e-8943-4a55-bd7e-546ebda86ad9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8e0e5e-2a1c-441f-80fe-b34b40549988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b818f02c-244c-4ebc-b103-9751d7770d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdde61a8-ac7c-4d43-af48-57ab29c29126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5885f5c6-14ce-4a9c-9abd-1f0bf3f4ebf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f532d089-6b38-4857-88ae-92fa9a21f67b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4571444b-a62e-4618-93b1-f00c9922cbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c315be2-948c-421e-beef-0456ff008efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba66627-8af9-4a19-8f8a-8273fc50b71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3bb8ea8-e7dc-43ca-9e05-9f63619f9123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97aeb8d6-0465-43d1-8203-678b11b2cac5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85653177-1939-4ebc-9b65-16a73bbe5f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a0efb2-b286-43a3-8d64-53bd47a6822b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e418e4-0615-4b4f-818e-8559f3733576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5327508-3d4c-49ff-aab3-763b2e8ad9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9e9be8-97bb-49f4-b088-58982c33485d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d9c88d-fd09-4e07-85f9-54921e406af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233c79a6-62b0-4043-bb20-7e3756ef97d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c79b8d-496f-4829-b42c-09504864ac1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e5510c-756e-455c-b344-4a56f0c9312e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa98cb8-3080-44e4-a51e-fbfc7ea9fc90",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852e2031-51ff-42c3-a7e2-08a484f0847e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2e97ae-debf-4736-8d7e-6224fec824f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f44f9b-8aab-4bb7-bc48-44e234accd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e505b5-0063-41ed-b00a-4ddf19ff90aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4375930d-443a-4d5c-8995-0a57c2f15aef",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c7bcc2-f82d-44b1-b6fe-c74eef76dc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f35fe7-6073-4493-9666-df154d92cbbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8627a061-353c-4da6-ab9f-dfb82425cac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5932cc25-fb56-44d6-af7c-d7bbd1dbdc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cb058e-8b7f-4fb7-aa5b-48b94ceb1691",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf375fbf-124d-47ab-9ec6-e8c02473ff9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9da3034-d743-4cdf-8355-4e4537b4e6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758965ae-a9da-4b9f-9761-407db844f8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1dee7f7-dc25-49f3-8822-b94368a45095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbb1921-5bf6-4f31-94b6-fda85a16e645",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596f5cc2-9aea-414b-ba36-bf8d55d3a90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f141512-81df-4c24-8eef-7a371953fa61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3df467-e454-4c9b-aa45-d2ecd4656b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5339f933-c6b9-4be3-ba63-c90e1695492c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be8aa20-0a3e-4215-af95-59a3f6997931",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d43cf3-928a-4c07-82d6-2f4d837ed944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3d76a5-06f4-4513-b784-bf05bbdec4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41405bb-9849-4c0c-9b93-a5db5fba1592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f2ad3c-b55d-46b5-8bee-58a1764badfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7529344-e30b-4255-a0c6-fd3b0c42f1f1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276908b4-ce80-42cc-b31d-7c6405969302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31443cf9-432d-43f1-b2d2-dae0a52e2a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd54db0e-c0e1-45a2-95ec-9b3356d542e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6fcf21-77ae-4057-ba8c-a53704b95cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3c2daa-7b0f-47f8-86ce-116b2fc16ff1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fe036f-0fcf-4c8b-8720-d1654f4d05ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6363b84-78bb-4477-a6bb-0defaffa5ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f83aec6-10e3-4f2d-bbc1-47a8f86098ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b638e5b-ab87-429a-851b-5f21eef249bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2a7cd7-8d1d-4b16-85e1-30931dd70563",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9151ffa-eb47-4020-9bc6-f5e1e0374e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbd524c-e976-432b-8eba-2ab9046e2c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16519ef4-8dd5-4de6-ac1c-73c0bf4fbc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b73e31ed-5522-43d3-9356-652621f5c016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d34268f-68e5-425c-9c3e-4a63d24dd334",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1feb205a-fd74-48c3-aca6-65e96bc8141b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524fa9e5-0d63-4880-9f8b-d6702da03b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4151ab-3453-45d0-8728-b8e3349e8696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18eb059b-5b33-4697-b25e-02f3af40a882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e94bc5-9e34-453f-86d9-f7601159779e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76e7d20-8e74-4dc3-ade1-1b2cd1465bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d896c8-074f-4a41-93a0-f0bb276deb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b55c372-2782-4789-9cc3-5d1ac67584dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57ada1d3-28f7-4af8-b551-286ffeb87767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e369b46-0127-4f83-920a-94a5f16fe12b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b734e78-c7d7-48a7-b7dd-2a9ccdf33dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4912eb4a-975f-4391-a084-c38be5181a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2989f8-09cf-4d59-a762-603a29606fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a4f7ed-c250-4844-becc-24cc5d0df9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24533ec-ca79-4605-9ae0-a324edbc5c64",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7515f63-64b6-4069-87ec-a6658e763486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68fc21c-d565-4bb9-a668-729998e93eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcecb9c3-7f49-4ecd-8e61-da3bb4943572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07d76ed6-002e-48b9-8232-29f7fe0a68ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ae447a-f9d2-4d85-b46a-f5044dd3f79c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff17105-4d2f-424e-8ee0-9f435cf98e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8e889e-7039-4a38-a304-c16dbb3ba35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdad83e8-f902-4522-a5dc-a79ac352932e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ea36e1-27cc-4e39-9cf1-5b8f2a404c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a520bab5-6c7d-460a-8a9b-ada0780a6445",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfc65e5-2d12-4960-96df-5f4bd39b73d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4c7634-05ee-44c6-96af-6a85c161d691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dffdb38-b9f2-44bf-aeca-b8e5a24b9879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3aeaa4-08d3-40ef-a777-8f81ecd443af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3a20a2-cf51-4656-972b-15249b462413",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbca3e47-833a-430b-8f2e-17d6f3cf1545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7fd98b-9a9f-4d5e-8771-686131fe7870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3248c87c-7724-4c53-9909-37a1fa09fa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64124919-9592-412a-bb3c-052f775a1664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fc1965-6a45-448c-b1c5-786be8efc104",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207aa87a-129f-4882-bf8d-ea55c90ecdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf8566c-531d-4be3-a55c-26c61c9a71b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c403e1b1-5fb0-4842-85cc-7d1c4783b6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e24a42-a2df-477c-9c9f-8b65675384b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da3dac6-36d7-4688-bad7-684644d2088f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd1c781-6936-4032-b15d-57994a7eb963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e56306f-7adf-4ea8-b6ab-411e892657ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fa53c6-054f-4b51-af2c-256eb657989c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60f784aa-71e0-46f5-8f98-522406ded9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28351bb-1678-4f1b-9bb5-df979cb43980",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a9d67e-c0ec-41a9-9b81-6c84ea83cf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c887f0ac-2fc2-47df-9270-991964ac1dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aceb8b4-8f64-4ec3-a29c-7125736ce613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "124884ff-9897-4c58-85bf-f5eb08933d9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "141e0181-d64a-42b5-a09a-83a2ec657036",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e27744bf-3199-4473-92a5-ac3ee5998bbc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b9852b-b315-4695-88a9-9c9e94251109",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0510994c-993e-4205-936f-fb02a9507835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7e0aeb-8d57-4465-b819-55bec101760e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5466c408-e3f7-4c17-bdf2-c4065b821811"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26fd5b43-9012-4d01-a426-01e06ee3f4d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8d89f69-e562-4983-82b7-ddbe96c48f02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fa5a68b-899b-4205-90a2-666ffbd0278f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52932218-c692-4fa1-8c3e-4dc315d5edb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e08a234-4a55-4eb4-93d3-842ee2053b11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ad7bc261-8e9a-4b06-9f90-449d665f9414"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a8ec635-aa03-4150-9b02-f7455e4b5923",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fd78c94-3f3c-41a2-841e-82719ffda090"
            }
          }
        ]
      },
      {
        "id": "3e8b54cb-08fa-456b-b152-97cf245487c4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "88275741-e0ee-4b6f-bece-433de1c1b9db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ae2f64a-180f-48e8-a687-a89cbaafa793",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "344fac47-7e5b-4d3f-bc65-056e4fb670e4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76814525-1206-4016-ba60-ced681bd83a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d668d778-24e1-44af-b1d0-3a36b0bed7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9615e85-fce1-4110-b24b-0d15af7609a5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b1d452-40c2-466d-baa5-a3a908feae78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d0a084-9cd8-4b74-8d02-a567bd8380c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e4857c-c56c-484c-9864-cf1783ad4bb8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21652bb-ff3f-4240-9137-4b4c5ef34616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc77be30-7ace-441e-9317-c702f6ee98a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a490ffae-a58e-4f2a-b052-cba4cde39fd5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301307eb-0753-40d9-9647-496f1d2a209f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4226df6b-ffb7-4565-84d3-30482ae87f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d441c638-fab3-4ce7-93d1-604dfc3dc2e6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4939b874-f666-420b-ae66-1f90ee54b6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01b8803-eafc-4e7c-ab57-0948fce8c40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac12bbe-1465-45ce-bc58-4ddb13fab3b0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3561cc79-c34f-49c3-9d01-2796e7980f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abaf3ce1-d4a1-4aa2-8435-f34ff2fd375c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04371d21-9076-4c54-a829-782ef597d5ca",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5b423e-303e-4b81-b6a5-df17a9efc1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea66b41-f2e7-497f-95e4-c3485730724e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8176e1f-c3c8-4238-b080-354bb3dca80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b85cfe-984e-4dca-ae92-b35e377a1c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29775532-0b4c-48a8-812d-f54bbfeaeb6d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72527720-efbc-4fb2-b38a-06864ad18867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f12d4a9-4b65-49c9-b7f5-fe587c25be53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7061bc-599b-4fd2-916b-1eee26bce7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf88854-61be-4e9d-975f-2e197230ea44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93a7649-081e-46b5-aa55-6f62b9ba401e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e343bc-49b1-40ef-8070-46810344b260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c4f3158-240c-4f6a-8b2c-615aa023a141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c676e9bb-c069-4471-9e5e-7652a9555b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d426403-a4e7-41b5-b252-e3ec215eba7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a850eb-27de-4c14-8250-7f4f94787dd5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbe28f2-4a4f-44d8-a2c8-1ac0c48818f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2aaa25-2474-4495-932d-d49104dbe8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6348ba-59b0-4c5a-b643-c67bcb0594ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523ebc01-516f-4abf-a416-a022f7455219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9477e65b-8c18-46ad-92f7-5d6a5a94f040",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2276f133-4b03-4ba7-8af1-d08c6c35eea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab122e62-5574-44e6-ab48-650afb33196c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acedce8-48b0-404b-a505-c9f1541e4a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df442f6-cde5-4fa8-9567-b8d957410c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9361d408-ed4c-45e3-8967-494a636b669a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfcd115-cbf9-459e-879d-92cd52027a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5953f66-69d3-4888-8ca5-c9c0358c78df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac43999-cae9-4f50-b6c0-43a02875b0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f51b29-bf34-4a39-a2d0-7b344e9b1d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98651472-75c4-4767-af3b-b51aa055fa69",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9da4ec8-39cc-4ec7-9416-19510555a6ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6889420-ab74-4232-8d22-e3faf1db46cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f3af8a-fcb5-4987-b53f-abaca78d7d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3f52eb-e1bd-4aa0-b6ab-3eaef3e242df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d5526f-bfe5-442a-86e3-3886063d38a6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44091767-ce61-4a40-a7e1-4cdb967ee8db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59f70ef-dd58-4dbc-a087-46a63f094b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322062db-8406-4d84-9692-9c56440da087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f17969-3316-4448-8625-b84ca830918b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8726f947-80dc-41e2-a3a8-8ea91f1ec892",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5636c4f-ffce-4c85-b7af-ce6c07603bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e617ddb-a8bc-44d2-b268-91b1d258dfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0a8d61-bf0b-496c-86fc-da66e697667f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72084718-4751-4765-ae01-49a4eaa84779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930c9d7c-b3ad-4673-bf98-08cd7970702e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5299dfd-dd09-45cb-8629-aa0141a1ce6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b63c3c7b-3afc-4cff-adf3-ae9984cc0240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6d67a3-e74d-402f-baa1-37eefdaae47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0496e77-2729-4a06-9f6d-c77be2b49fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329396bd-c225-4cf6-a627-eb1d519305b5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c42494-09b2-415a-9bfc-f522d4b6400b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9361004f-4079-4307-9d9c-449356058eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631652b2-3eb6-4b2a-a7c1-8ba48a7d0e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253f03a9-848b-41c8-8f6f-4da8e4351b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137fb793-8650-45b3-a315-d6f0c91a4511",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f644227-5b4d-403a-a8ea-3e566f1943c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123e5344-89aa-4d53-9561-64e3fe18a38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba022cd-6e4a-460e-acff-a507c6638df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8749e17-1e9d-4c4d-97ef-89712592b427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f174e03-586e-410b-b411-58b53177d4da",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708b66c7-98f6-49b1-a268-a898da68749c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cec0ca-cd69-48ae-8fac-88c819da76f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2013e2-902a-4baa-a372-a4210f6dbc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3c3943-0f28-4116-bed2-7634a3371b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc9b0ed-ae55-47b4-9633-65853e68c232",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59a99ab-237d-49c1-8549-0b08f9cc0e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc440e49-aaf7-4e22-9493-1fde36f8823b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4478d4-f13e-4d78-8c96-381a3cfee65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3098a3a5-a96a-4e19-9a63-308e50396999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f94478a-018b-4f78-9866-f379d83eeffa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b58834-d334-45ff-9740-328479ea264d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397a562d-b209-44bb-bf1a-f698a6531c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdd210b-4d0b-4964-8e2d-1af308453c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d704e8e-38b1-437f-b5a7-4d8a8d04d4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0c1ecf-7c70-4c05-8cc6-47063b4d8910",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91560982-85a8-42fd-8074-947a33010089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad32ec91-d5da-4b3e-9fc2-f88240851004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed9eaa7-9bce-4c06-9786-03e802ee09d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3791c33d-0d55-4e8a-b85f-29c238d70eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ada745-4486-4d0e-8dee-96165ed58c98",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6d4e35-472f-461b-b248-ff36108feb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20b3ff9-3a40-4013-9d26-d017e537610d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c57ff-6584-492c-8f83-42963d60ef5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29aecd0-1f05-4b83-8947-ae55d4410033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffd79d9-5284-49bc-a42a-06ac2a3f015d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1931d0-d69e-4123-9178-765fe7bb6f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b87d6a-aca3-4e11-9eee-ae00114f63e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac71c81-a680-4844-ae1d-a1e752dd0754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ef02e0-a412-4b19-9f91-0eb3f40c7a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6d633d-4b32-42f0-8911-800ced6717e0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8587ac-2463-4879-8c0e-6212a1cb221c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91150571-36f4-4796-bbfe-98a74b986330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020a540e-35c7-47c4-bd44-166af5361eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e873351-960e-4d44-9a4a-ca897cdd18be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc35512-b717-41e1-a677-44ef09daf63d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686cdf9c-0ca9-4515-8edc-3b445567b65f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "275cee39-3af8-4675-9e6f-1027e1242aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d056d591-94dc-4595-89bd-66088ced63e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0090cbcb-7e80-4032-b74d-98f631e2b6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6010a8fe-a45e-4b4c-984c-b937f0eb8080",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419c1d1e-cedf-4be7-b469-c9e8e3c5194a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a7a1585-b03d-4b3b-9096-4b29525724f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00db7bc-da78-4b0b-8cdb-856b1b44a028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188ed03f-6dbf-434b-a60b-dd4a0e37e70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790be2ad-bb40-4c8c-bdc2-b2e9caaf8b89",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9337718f-b2b7-42f8-be7d-4356d4b23fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25a0fa8-f227-4314-ba94-50c296d52483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450ff423-1f0f-429e-b017-fc4313945696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43924cb1-995f-4cf2-90d6-43e44ca2d481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1d7820-0684-4b8d-8397-0afb37ca7dbe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b8d0cf-9d6c-4ea6-bd6c-75c410414c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccbbf547-8ac1-4eea-a813-cd340ce03c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8f939c-bb81-40ca-bb03-b84f6f1267da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70efd936-048c-488d-9dd6-80b9cc041a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634a2746-99f4-4300-9abc-24d0155ca326",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2cbb66-3f31-4bd9-8a1f-a22cc17b7767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9ba029a-8f9b-46ea-9576-674a177b4e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b949641-ecf5-41df-bd2c-ca105eba0d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bec21c7-f1a1-4d64-a21f-341067d39fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13e3ccf-ad8d-480f-b8b1-2679b4148253",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21dfcbf-e289-4af3-962b-3921ed9c406e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3a94772-a2e0-44d4-b37e-bc81bd07c847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6fc572-d3e9-44ad-be19-4d4e5cecefde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dade27f-cf41-4f70-810e-03777f5814bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57b95fa-0ea8-411f-b954-95c85856570f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f340cd8-32d5-4cb8-9e17-4b2b82da6922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d33dcd39-70ce-4908-9134-baf0cfe10047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40f8dcd-2ed0-45fe-b88b-b624d7e7a075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf05077-ecfd-4656-95a4-b32081ba6089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cebf46-58b7-4c52-bf9a-c2558b1c6986",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a173f4-b4eb-4955-afab-276a1093caf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5191d968-70c0-44e0-b222-5b56a903ac3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce224a2-2c95-4d44-9013-6253fbad4399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36238562-9eee-4803-8f7d-4dbe5fe097fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c411e843-adf3-4d80-8504-e998c3974eeb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164b3c37-7030-4a7c-8bf4-b0aa7ccbcccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0528ef19-ad0b-4012-9b5c-eaa08689a5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db287a2-4d7f-4225-926d-00203ac42052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b51ba6-4efe-45d6-b72e-f04b5c676f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ae329c-c591-48e0-bf66-94c50c840400",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee8090a-5882-40d4-89c6-4acc1fe8c3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b190f821-e2a1-44f9-98e7-a59d1d5b8624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84d2e9f-c585-4698-a4dd-6d043260d15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5958a915-7693-44c7-9264-07afb15b773b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103ac229-13b0-4a2d-8b6a-38a7c2a03c23",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a218a5a7-f97a-4fe4-bb0b-fcb13bafe99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32a6bcf-4971-4240-9374-7a7fc4bc370f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddbf62a-0160-49a4-9f17-0cd3174bd923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d0caa6-12fc-479b-a9aa-7da2b2846ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9440388e-6103-4676-aa13-09e33d72ab4e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01636206-94be-474b-a884-8664ae084f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312987f4-16e6-43d5-be6c-0f6c980d3fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5256a187-c0f6-45f9-903a-671cd273d4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552ed71c-d3a6-4294-a9ba-17626b44bfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36d02a3-810e-458c-8801-140d876d1f2e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a199fa5-34ce-4f1b-bb74-25baafef4507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1663c51-9bea-4683-abab-f14a61c98c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34d7628-5763-4d02-825a-7a739eb93291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ea80cc-f5ad-447c-93f2-742176e3f9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ee60f9-41f5-4038-83c6-596d03b32b8c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241c6cdb-6859-4298-ac26-0447f80c11ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b37a64-4713-4165-bacd-b5370f24a5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b0890f-78cd-4905-b418-03a59aacbfc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49517983-c711-4638-b659-32b58088b582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421c100b-44af-44b7-ba01-3ea321748a84",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ff17ed-553e-443b-b4d5-0c55d819ee07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6969edcf-6209-4af3-89fa-fe16d391f833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d120c8-bcbf-434e-9e5e-893f69a81bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e26d886-8a75-4d00-be2c-8f15f074de2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be8f4e8-54db-490c-b7cb-8c90bcfa61f2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f03c09-69f4-4e0e-9e79-636f38a8b452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8d3dd6-90e3-4358-a978-07ce0e91f6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e48ad72-cc95-408b-9281-d8660a782bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1a3669-bde6-497c-8f9b-2166230ee8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcac857-482d-4541-886a-22e416da2482",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa85930b-a527-4e5c-985b-10b1d0470567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dce65a1-63c5-4d2b-bc46-7314677d49e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c910ea-2d62-4d45-ae9d-7c473846a0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9523b20d-e3df-4d30-8de9-bda86c231dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2006fd-392a-4310-a191-e6ff32b15e9c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21e96ca-c95b-4641-8bfc-604427c5cdd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37252786-370d-4c1e-810c-2aa7f6614392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b62dac9-c612-4b6f-82c5-e3d7e77aff36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d886538d-6079-4eb7-9e7e-f007e92d0034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b03732-f2bd-4205-b19b-06f8fd1b9e9c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f36243-2fbd-4843-8fea-f322375a07f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313673f8-fbf4-4501-856e-16d4e641a8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3f3816-a834-4de5-b129-d8bcaaedf6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b12cb8-2a82-480a-b4b7-0827c3aa571e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e843838b-f178-4268-a4ab-2896df2a419f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950da869-a225-45b5-ac10-b76da6e72f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a52b95a-003f-4cc2-b700-34f81511315e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19d40cc-7570-4ae0-8cf9-0f826575c5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633c48ad-0110-4e0e-a09f-aaa7e38d361a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1f904b-feed-4315-9d5a-094d5e961b17",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d7c074-c268-40ce-8a50-eb7dadf71731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0851a3f4-39c1-46b9-ad79-caa12e66759a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81104879-09e9-4723-b435-7b06e6caf8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9286ecb1-514a-425f-9ee0-3863e9cdedbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033ef60d-5cf9-4c38-b6cf-fd7bc1a3bb37",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5858e31-3e83-4703-b9f0-6b15bacc86a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a829857a-0294-48b8-a35c-03f5375fd601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca96531e-05e8-40f9-9b06-df652cacdda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88a4118-b1c7-47bb-bf7f-e59192bfc4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6adb058-1e6c-4e6c-aca8-a599678e0ac5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953e2339-3cb8-46b4-aa26-a4b2ee80f9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877bc444-84cd-4897-9970-1c237c082440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a647b5-6a07-4f83-a391-07fe82204984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19789cf4-8d86-46dc-b6ee-64f560d4cdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34edfc75-01c8-47ad-a0b1-0a641d1bac82",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e59891-62e6-47ba-97bc-d7c8b7807c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d153913-033e-4421-9157-47ce8baac672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7437e56e-ffcb-4ed4-9549-c4ec4df8c0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04dff6bd-7aec-42dc-8df1-42924d05d3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4d3c2c-6c37-41ae-a40f-81aef6fc1810",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3d689b-bd7b-4828-b2cc-db0776b3a4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd341f88-a47f-4dfc-bd10-9cb59eeb7c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13836bd9-2e4d-4fc8-8713-8aad181e3ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0feb67-7991-4146-9cda-93d95087e623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b1a873-c74b-4c8d-b27c-51b88e4743d1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e23916e-f774-4731-bd37-f58ad234ed05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d8dfef-51a6-46f4-96ce-48b67d186f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ced196-ca23-4fc6-ba34-662592ec9d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa986c9-d646-436f-a82e-2c948cdccbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3213e369-758e-4f8f-8e57-80aaf4378168",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c51ae98-3996-4930-92ab-1854b70b276c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055ac168-da4a-49a1-8012-c356202a98ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef0a3c2-1ee0-412b-92ea-93bbde5502bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efdd1856-7aba-45f2-a493-0fa13ac29d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ca895c-7ec2-48b8-b5a8-7e362fe13f20",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f8591d-6a13-4062-97e3-21464993fecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24004265-7547-4e82-ab04-f0eb2884a403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdba7646-676b-480c-9b49-6208957a16ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad2f29c-0230-42ac-b1e2-301d1c52a693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7323699-0832-40de-bba5-7fb4806f40b3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bab6f93-1692-4d0c-9871-7b9a2323ea59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ea4c1c-1f99-4b01-a59c-0c03d49a4172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05c184e-2940-448c-bd6d-f8244834cda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a75e21e-9d4c-4597-979a-f9c2bce6e5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7dcdb17-da71-44fb-8e25-968bfe783779",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d21a0c-113e-4aab-8595-7e08fb8b10a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35eab2f-675c-4a00-a768-83b9e25fcd0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724b2bc2-7aa6-4ce8-a058-d6d8bb116569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf04b4b8-f4de-4733-b891-3b50e444e064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54506820-b389-45bc-86bc-04a9d0f0d26e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de520a1-138c-458e-9a87-6f732ab8a2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a5768c-0187-4b41-abfc-95590529a3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab50172-726d-4f12-989b-be89d413d66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f4b195-50ae-48e5-bf82-af24b8c98eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db0a3d2-725d-44d1-9905-7887e6cda29c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ed1056-6161-4ad9-bd31-dce6ebe34c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33eab2e1-b45f-4c0d-8537-6df24a620b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523fe254-b2b3-4b53-a785-676afc21be2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af269ced-b8fc-4a8f-93ee-42347aefec97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d521aa0e-9958-46ce-986b-a08c05003375",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb5a246-5315-4565-90d2-87e63a1b7ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ca80c3-a0d8-4a9e-a281-11d7f7726ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b83c4e-c2f7-4ff6-bd78-88f0a65d6dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6ba600-e096-4322-9b7a-cd04e6a6c130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed4c91f-a150-497e-95c6-8d89a04e3a0f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe96a6e8-636c-4a0c-99f4-3b97f12f477f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe29d72-fecf-4c6e-a2d8-33eca09eeb25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a6250d-4ffb-4c43-9508-aa65d2ed8c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0004476c-6abe-4073-bc77-b9b4701b9346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43161a64-6454-4f21-8803-d2711db95c61",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5317b0fa-ede9-491e-bf3c-1622a6cbadf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2b9e9c-ac63-43bd-b4fa-a2ecb066e620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edfaf99-98d7-44b4-8621-2006c5091023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5606b6a-0308-4ded-a688-1b3aae1f688c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ef8ea7-4121-4dfb-a37a-ed680a05188a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20fb209-efc2-4997-bb56-ca64472e5958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f433a6e6-29a8-4cfe-a804-c428b01cdcdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f430947-1502-403d-88b2-d44f31dd83bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a022f6-eff2-4d9b-ba55-008276a2535e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9653157-2976-4d48-bdff-3c4929c346d8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede23094-5885-407d-9a94-4a3d5a1e1290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17adcc5-4e4d-498e-a998-ce3aedc8e04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28b2573-6594-4a0c-a883-96a0dee51ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db955ef9-af6b-4779-89e2-863e4d1f73be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26224fe-c485-4bbe-b454-af71bdef120d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4970a35-3be6-4bf3-a3ee-eb02fc9f0c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ef8bac-5aed-4729-a1b1-ec6d9047895a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0a5b1b-f5e6-497a-a1de-d9a0c26ab93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0bd19c-82c3-4807-b9a5-83eaf30074a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d57f10-36d9-4b5d-9d69-c56014ee99ff",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7c0603-5427-4b31-8ebb-7d5c5af72c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6902d8db-3ca5-4e6d-a1f0-932c1c5d9b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd9f87c-f66d-44e3-b0b9-6ecb9ab8f2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3476d8-2ac0-4792-9ceb-d9eaa1b3074b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f56891-899a-46fc-96f0-f6a4219f2f62",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5919cc43-0544-4b93-abe5-660d260da338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8f2775f-b7ed-4a1d-a427-557a1e9b42ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052e5664-97b6-4623-9981-b3ce870bed86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105b87d5-6198-465c-a1f5-5d202ab9d260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f380f727-2275-4aae-8459-6c84442a9c98",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9c8060-cd7e-49a8-bf28-3161b36f6def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47694e81-f8e2-494a-b8a2-f9735e3ad24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2484d502-4108-422b-9202-f89c3a2d15ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0f9d7b-1f99-453d-a28a-6f5d0d29a793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378ac59f-2183-447f-bdef-72f4448a08ab",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5318c20e-e4c4-4091-92c8-17901e2a3027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0020466a-3b07-4070-8d01-3b80c0a8853e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f195f14-94f3-491a-95f2-0f4ec31cc973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded69e2a-fe02-4568-a90e-9f6d2223e759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de56017-a36c-4de9-bf80-c1a9f6448869",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56310aa4-2f0e-4367-9956-fd662b087fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2207e906-541e-439e-87ac-e1a05c5ec60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd5fd0d-188c-45d1-a0ff-304fec1a919c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8260c7ef-a07b-4dd7-81f3-e6d7d30820ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f473e087-60ac-4754-87f4-ab2078928a05",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c42ef82-9c5b-4994-a26b-2e60f4d5f016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a7e3249-088c-46b0-83f1-429d034a5066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3d5f80-4d82-4f58-bb3b-67ca0e898c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420ea534-c166-4bba-ac5b-5073a7ec2324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5338de5a-74c9-4ed2-af5e-8e4b0895a062",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71b68b2-4fa1-46d7-8dfe-9a8a9624bf2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2ac7997-8e1e-470d-8df2-1337473e368a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9887976a-da77-4cc1-a9a0-9c46b120268a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9dcac2-8f2a-4701-a2e4-0c0bf0950735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58883ea-6273-4a1e-a38f-bfe19d3e3348",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9190693-a075-4ca3-8a25-d60c95ee5f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05d4e50-56ab-4bfb-87fa-797528fa6f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103dd03f-a8b6-421d-a8d4-dac376ea9460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ad0160-f2cc-471f-bf0b-064b86fd7fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a9283f-3671-4fc4-b6ac-3b3ad24150eb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a674ffe4-77b5-46f9-b0b4-e5c0b0fd125f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a38e8f0-58d1-4d56-a385-77956f8bfeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01e4afd-3fe9-4955-850a-142fedc9f265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c289d99-38f9-4223-b190-65ad6dd6b06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e163ff5b-8ea3-4693-a3bd-e2fb8e8263b8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b105392-fce0-486e-a41e-0c273d2d516f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb9e2abd-9bfa-4192-9d7a-3d02480c1a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf23459c-9c21-44ed-a3c4-a27819317467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78504f0-d655-45ca-aad4-f12082cc52f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf77d0f3-b446-480b-9769-b5a9fc50029b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2a56af-e84a-40a7-8bb8-59423d338383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b27d5f07-10f6-4ee3-a860-90bf5191de0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287c3816-3ab5-46d1-8bd9-ba5443beefb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b893df0-f78c-4470-8938-11f8761902b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d8b54c-63de-4710-9181-d859c90fff8a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9025eb67-531e-441b-8ff0-dc479fd395dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb35ffaf-7ddf-41db-9a59-ca991f7e3b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f56393e-4478-43d7-aa23-92c1cacc6759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004d81cc-9ed3-4b7c-98c1-a6c09380d000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5a78de-dc98-4627-a151-9ab5f1809065",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1283ea3-3e7f-4220-8535-6e10c076b9f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28ad7888-a986-4492-9b09-e01f274555fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68a4646-1d09-49ca-9126-d82de8734ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3320bb2f-e6f7-459a-86f1-f0dc9859e307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf4ea49-7102-473e-b03a-b1f0d244a1e3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7253520-e85f-4e54-b721-41c9e21d16a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9215567b-d291-417b-9708-40b36c40c642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747e4c57-9177-4c15-94f7-eddd2536529e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5624d509-a3f2-43e4-9bdb-10c20c1cad39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d19054-22f7-43b7-93f9-d3baefca45c7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5548669-ad5b-47d3-8e67-a8c9b353ca35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f59b953-9339-4924-bd58-161ea29bc93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e8e6c1-0791-4d28-9be1-f7a06aebd876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b41d22-d61d-4312-97b7-a046cf529329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9877c7a9-3a0b-4ee6-a41d-49f05d435572",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9bcf83-e3c2-47df-b1a2-bf0d82e40a41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf2e801-308d-4fc2-a272-7f25da0dc0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a9db7a-6391-4737-b01c-d8f60ef25d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12597c67-9aa7-4617-a54b-2ba17e7f67d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b4712c-b8f1-4475-b92d-a2368ac7d4fa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7167a4fc-709b-4800-9b4b-1cb84a40d1af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a263921-9872-4c79-a25c-9df634eb5c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76b1416-8f56-4a87-a7fd-383aea5198cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b561bd-5bfb-4059-adb8-8a22db05041d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfe15dd-6c2c-49e2-af37-8503777c953c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeea3ece-fc94-462b-9469-f0cfd411c7ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "258a0751-0be0-4081-a4fd-c6779a637e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b18a3eb-7492-458a-87f2-dd36e47449c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9da666-d08c-4e9f-a38e-d557e291ac86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49acec2-cc1a-4ab8-8fc0-3675b9ef6023",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7207b7c-a7ac-4a24-94cd-218de130391c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ab1ee1-f3b9-4adc-9e6e-38337359c638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77fc2b9-fed9-4167-a97d-1bc4081014aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0031fcba-7223-4cd8-b2b7-d120e2c6a6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7da36eb-9cee-4f67-b686-b84babf472bc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72421fef-c49f-4068-8d82-7fced06d5614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c83d3da-b9b0-4cf7-a27a-ba2c3ea20dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0451d381-abdb-4f4f-85a9-bdb33c541f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bc2a1a-f4e7-4d10-b950-34de4ed3cbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265b690e-b7c6-4599-98a0-ae41dac0d493",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a188ddf3-4d54-487d-a533-0b002f41f9e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a40978-d362-465e-825c-d0a7f78caf0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7a189a-6e37-4ce9-9de7-823e907091f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f8b5cc-70c1-4f86-8e16-685c538c2fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3576751-7f13-406e-9126-7858b0033f30",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b51ca0-4e65-4957-b5dd-d9cdb56d39cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e6f49e-195f-4fd5-8fb1-3f8248f82508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03ecdee-aa7d-42cd-a732-6e25cd99af08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5d90b2-9183-4eb7-b141-37ff15b9e054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01daec6c-0380-43e4-aa6d-23c294fb4bc1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5031f167-ef7d-4cc7-8859-f176b2de364d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97195639-6219-4886-a5c7-6ff55a149a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf4b1ac-ae71-43d4-88e8-6e8389d794c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f903e9-bb9a-490f-807c-21e072bacff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5779ddb4-a29a-45a8-a619-48a074da44f6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad35c6e-e33a-4f3a-990c-875b7a270831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee61d4f-fedd-46aa-b7c9-0814863d51b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16beae48-bd40-40d5-abb2-44ca1698223c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb22764-f620-4b66-a281-c323cfdde421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b70fa48-fe41-49ca-9a54-17a3126a281e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce1f195-a410-45e2-8dcb-1ddc5039b30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbef581b-ea0b-49ee-b9e6-fcd76add6875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e3dde7-785a-4e3a-83e1-13f267cd9fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c40619b-e238-4162-8eca-157ffd1461d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74785a3c-e894-4e12-951d-04975559f70f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e982ac2d-76d7-42a4-8467-3114347257a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b63388-5417-44e5-88ab-b36b1b60494d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "578d7890-fde4-445f-afa6-0b3777b32fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73266f0-75c1-4cde-a746-2ae310d44b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11392435-2f96-46ca-b609-1fcfb33e549b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040de02c-6ded-45f3-ae4b-e80aec197964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d1c96e-26d4-48e7-9193-ceb737593a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd2e28b-84ab-463e-a518-1bf9a557d169",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99ab021-7df5-4380-a17f-6491d4a4b4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385e03c6-e39d-45fd-9fbe-abe1aaba2ea2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b337620b-78ed-4625-b569-1cf9ae1d96a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1810ad-e24c-4500-91a8-1850e6f45d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d1db68-aa8f-42be-bb0f-fecab609872f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10750273-16b8-4810-b8c8-2be293bbc62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ab22b0-4aaf-4def-86c8-611d6d01c3f2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f9cf0d-2187-4fde-add9-f17b906b4fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c58d66f-259d-43a5-8963-73e921cf6f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4fb4cc-4626-40a1-a12e-a793228bf6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a2acd5-3544-47d7-8130-235a6236b1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac5df41-b35d-4c5c-b066-4c91739ba88a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6062a4a-79cc-40a2-aec0-128787d6bff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2696f20d-4e37-49a5-8da8-2e5b9ba6c48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802c940c-c16d-4805-a2a0-29fefb2d8b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9750e9d-ea08-46c0-b2b5-2729522590e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56a01e5-5fe0-4bc7-81d9-a5f63bc7dc2f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e76e055-4087-4222-ab5f-213c69f75c75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da90d23-ba86-416c-8192-dfe3ac8abaf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8725270d-9360-4a47-b68f-843a84b7ebdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ecec14-cf80-46ca-9f6b-76f7ba87eb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d101e66f-b2af-443b-aad8-1874f0c79580",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ab5611-f093-4e01-97af-dd6c63661ec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dc73abd-9e4b-42cc-a8df-2e1dd023b145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f52dcf-d8cb-493d-bd09-ceacafe7286a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d60a80-167f-4853-8094-19af5e23f071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9b7d49-1415-4888-98ac-a2571987a427",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11265cd-1231-4588-aca7-60471d7739b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ff876e-d17b-4468-b699-c23a5192b622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d41b428-07ae-409b-b2ba-83f050b3a431",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0c41f6-29e0-4d8a-8624-476ffdb32aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cf723c-52a6-43a3-9a98-6c8b44448b94",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4d5976-947d-4429-b73f-6aa168d4084d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9514e8-454b-4a12-9429-12af68554654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6766dabb-5e84-4058-93f6-bf1d3a1d63c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c034aa-d1c3-4365-974a-a5804d37ec0c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a271bc80-0d73-4a15-bd64-ef6a52f26d4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38401c54-ca15-417a-a614-24eeff5c8aff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a727ba98-a55a-4240-ad4b-5a70ecad1f83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b0504b0-5e04-4204-8764-16a6d09a98da"
                    }
                  }
                ]
              },
              {
                "id": "147661e7-ccc5-4c92-b2ca-17aea5c090c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a51da67e-a3a7-44d7-bc2d-5c3ca83c78fd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d5d140-3f77-44a5-b41a-067d8491f209",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "530ae614-32eb-49a2-95ed-b3bd43b5a711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646e8ee0-6b49-4a28-82aa-a1c7b9703ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "522adcd8-00e5-42c4-b13b-3ed74de55798"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30f8bbc6-7ca0-4dd5-aaf2-8e3471a0f7a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50b3e662-8ac0-4696-9c94-bf60466fb91e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "997481cd-b33f-479c-b2c8-fcad1df13ff3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6d84f9f-333f-4ba7-af0c-3411ba5ed543"
                    }
                  }
                ]
              },
              {
                "id": "139780f8-5a4d-4301-9d77-21fdd34bac94",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8c0c21e3-c6f2-45a3-a3b4-d088895cca19",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b11c0d-d493-49b2-9fdf-2da1f99cb47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "785fc007-380a-4d40-9c04-efeb9ce2cfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd10b22-ba86-498c-9011-d35445b1563f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ea4a68-1731-4f38-8e5f-e5527a6262ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "abb7bb2a-2222-4dc4-b804-79398e7b8e9f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "339df057-4bcf-47bd-b612-c70b1cdda0f0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2884d0b0-bbf3-4646-8032-70714feb2a85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f630b9c5-4ac1-4269-a012-b8f94086b4bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fdba4eb-5be4-472d-9153-5b05ea6994bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f07dac7d-9ec8-456d-80ca-a96f2a4c343d"
                    }
                  }
                ]
              },
              {
                "id": "e54f3d8d-7fb9-4632-baee-144ca721ccf9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aca8a4db-ecfb-44ef-b8f5-84edd06a3600",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "14681c58-34a0-4d73-b301-e951afdb7911"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "870b9a46-9f78-4523-80bd-351ee9fda748",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f553eb2-ee91-437f-9ec4-09f76362e54d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a76865fc-66ed-4a86-a72f-5051b294c59d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1b76581a-2c92-440d-b64e-0ded06952544"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb1a14f8-3452-4f83-88ab-2e55946ddf2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe7b9171-d532-47c9-a7bc-da437affd009"
            }
          }
        ]
      },
      {
        "id": "0654c6da-e645-4d5c-a510-c5159bf2bd01",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8428cc94-6fe7-472a-99e4-c73282af1081",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7ae2ff2-62dd-4636-ad39-83505baa3b1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d829ede5-e231-48ee-b2e9-625379240407",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97443e72-28cb-466b-9634-78bba194d472",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6ce2bde2-21b2-4db8-8191-3acdff3ce2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e54360-e96d-4a57-8b04-770e4b28d2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65fbf4df-37c2-435a-b5a3-5e8b4d2821e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ded45a9-bd03-4458-a39f-f5c0f744771b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71eea43c-f1c1-46f1-916a-b3f985b1d67a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c131793-534e-46d3-97ab-09c9b83d359c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c18dbe7-5ef4-401a-b5b9-57445cc287a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24069012-8714-4683-b527-8658fe4622c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "634a86b1-e375-47d7-98fc-93a5a452ea94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "398bf335-6345-469a-ac5c-c4a791fc755a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12d250fa-25d8-44af-84ef-148f9038ee5f"
            }
          }
        ]
      },
      {
        "id": "d377d956-6e1f-4e97-b435-cedada67dada",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "432de15c-6041-49e1-8449-2902fd3d89ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b4d1109-72f0-4a4a-b10e-ee13ae527c95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0bd91be6-7bc8-4d6d-96b3-4f617978094a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d9e206-ff26-4c26-9076-03a2b698c7a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b9aeb92-1035-43a6-b9eb-5b4fbf36ad1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b83d574-5942-4ae1-b711-d4f39308c36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dd4b6cd-89fe-421f-8f66-526814596bff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b795c4aa-b957-4166-8b73-bad73e4a8718",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "925d39cc-5653-4555-aced-0a545f6d13a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d55aeb9-255b-4429-bd09-cfd53995565d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3c56b31-acdf-4dd4-9426-ae849bfb0fda"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13a76428-f81f-4b81-990a-eebe43c5b50a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea2d4443-e8b0-493b-9837-463331c5caf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af08f358-9a17-4e99-989c-7751da8fa90f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "300e7819-e5c7-428d-831a-d4e4943ce32d"
            }
          }
        ]
      },
      {
        "id": "66f9d91e-a6d3-4bb6-baad-f3f4b6c585a5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8bca24ee-0d72-4e33-b851-8ac2492c52d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e55e667-805e-439b-8567-89df9d3c2e9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21ed82c9-c3e2-4cee-9a46-563cbedf5cdf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb051c1-0599-4475-9253-e6945a1abc47",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11ffa0a5-8cd1-42b5-9dd5-f077bb927a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443db9a8-503f-4aac-a9df-2c183946d1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e64e48f-b1eb-4ff9-85c7-43fcd4286479"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd11961e-a6f4-41e6-946b-cc960573e047",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "512a38db-af56-4ce1-9eb5-982bc462bc98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18be68a5-d3da-4af7-a2cf-8cd83e0b0c15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d374bfc7-bc2d-4f7b-b9ac-c4de0fff5937"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fff5f65b-2456-4a43-95b9-be519a8654b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7381909f-7a0e-444b-b882-900556c3cf70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ab8556e-4549-4f13-a781-905884d98f37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c057c99c-48d0-46f0-a797-7b48c3c55fac"
            }
          }
        ]
      },
      {
        "id": "749d01f8-f1f0-4347-8a6e-342cef4babaf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1944de6d-bdc4-48c2-a22c-a2249d4ae3ce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edb7f394-3a3c-4a6a-a682-9e2f69fd94e0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d91417fb-3129-455b-99bd-1c1e092a6b01",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8365db48-73b9-4399-8968-68b4c912479d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d1f4421-3158-4c73-90cb-05ca54addbd7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 171.89682539682525,
      "responseMin": 22,
      "responseMax": 11073,
      "responseSd": 871.933700601078,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725151892341,
      "completed": 1725151943929
    },
    "executions": [
      {
        "id": "ad2327bb-fc1e-4ecf-b90e-5e98b221c4a1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "53892a97-e744-4696-a3d8-a2900278ec37",
          "httpRequestId": "89062995-b199-4c9b-bd4c-1bec8bea10cc"
        },
        "item": {
          "id": "ad2327bb-fc1e-4ecf-b90e-5e98b221c4a1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "35f08755-d726-4208-a6c6-bf0cb902ae0c",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "cbed9bdc-86ef-4510-a4e8-97ab2db85bd3",
        "cursor": {
          "ref": "66b26141-4f27-48b9-9d7e-868288b977ae",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3757cc5e-9231-4626-91b2-f67cc847375d"
        },
        "item": {
          "id": "cbed9bdc-86ef-4510-a4e8-97ab2db85bd3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "88e3e1e3-f0e3-447b-b040-bbc58c80a38d",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "87366581-be63-42a0-9439-1bf60577d3a9",
        "cursor": {
          "ref": "04de30c8-59d6-4a73-95ab-5e613ffa1848",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ae8f9a25-d208-4595-8ff4-c85e1d164429"
        },
        "item": {
          "id": "87366581-be63-42a0-9439-1bf60577d3a9",
          "name": "did_json"
        },
        "response": {
          "id": "1a1dc52b-78ae-4e21-9cdd-b89117ec3e15",
          "status": "OK",
          "code": 200,
          "responseTime": 454,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85bf131-6104-47b1-a587-883039d51d4d",
        "cursor": {
          "ref": "c4eac766-495b-4103-a006-8deaad2ff398",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a69cca57-9866-43e6-a50f-66525a382113"
        },
        "item": {
          "id": "d85bf131-6104-47b1-a587-883039d51d4d",
          "name": "did:invalid"
        },
        "response": {
          "id": "307a6a2d-088f-4e39-af82-62cab74dd008",
          "status": "Not Found",
          "code": 404,
          "responseTime": 425,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85bf131-6104-47b1-a587-883039d51d4d",
        "cursor": {
          "ref": "c4eac766-495b-4103-a006-8deaad2ff398",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a69cca57-9866-43e6-a50f-66525a382113"
        },
        "item": {
          "id": "d85bf131-6104-47b1-a587-883039d51d4d",
          "name": "did:invalid"
        },
        "response": {
          "id": "307a6a2d-088f-4e39-af82-62cab74dd008",
          "status": "Not Found",
          "code": 404,
          "responseTime": 425,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d67688b-137a-4885-88bf-8cf3daf6f41c",
        "cursor": {
          "ref": "4a068eb3-59b1-4631-ad30-23c19ac6891b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "428ee780-8d88-42c3-8433-a13b2cb97af4"
        },
        "item": {
          "id": "2d67688b-137a-4885-88bf-8cf3daf6f41c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "934d6acf-d725-4e98-94d9-4c1602631789",
          "status": "Not Found",
          "code": 404,
          "responseTime": 147,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115682b4-b538-47f8-9fae-9514d6c5fe4f",
        "cursor": {
          "ref": "550f2ec3-bed1-48aa-8efe-1cd0cdff15df",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8484ef35-7d9e-4a48-a884-910197630581"
        },
        "item": {
          "id": "115682b4-b538-47f8-9fae-9514d6c5fe4f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7e5de1fa-8ecb-489c-8a9e-d6089ee78bca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761ba2cd-715e-485d-b95a-d078794e9d8b",
        "cursor": {
          "ref": "fbd9016a-270e-4906-b9cd-2f7bef10159c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "898e5857-0d66-40d8-8bd4-92c5e9b3858e"
        },
        "item": {
          "id": "761ba2cd-715e-485d-b95a-d078794e9d8b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fab85b99-2615-4b39-89aa-1eb0dcf6cf11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb5b0c6-c1ee-4397-8efb-7cfe8663600a",
        "cursor": {
          "ref": "646e337b-678a-4a9a-b72f-20d9d753c4b3",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f238e088-bf78-4245-976f-00a6d4e68426"
        },
        "item": {
          "id": "7cb5b0c6-c1ee-4397-8efb-7cfe8663600a",
          "name": "identifiers"
        },
        "response": {
          "id": "b18a8718-0f8b-46aa-81eb-07a3c855fc73",
          "status": "OK",
          "code": 200,
          "responseTime": 149,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c9ddeb-ad87-4643-bb10-46949ac28f6e",
        "cursor": {
          "ref": "92dae9fd-ba11-4a4e-9727-340b1d2302c6",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "58fce663-723f-4b45-a939-0f26aeeca59b"
        },
        "item": {
          "id": "b8c9ddeb-ad87-4643-bb10-46949ac28f6e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d4ec86aa-3cfd-487a-bddb-b42d9dd1c9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9ac544-d9cd-4604-b4a8-5c3aa00305b1",
        "cursor": {
          "ref": "4c62dc31-af9d-4845-ad5f-1d8e1517919d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "37b2eb13-72a5-45ce-bb12-533d1ddcc071"
        },
        "item": {
          "id": "ef9ac544-d9cd-4604-b4a8-5c3aa00305b1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bb10237c-fd26-4ef0-adc0-e4925f0c5f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6721df7-17c0-4641-81f6-83777bf3cc49",
        "cursor": {
          "ref": "0af1fe18-4e5d-458b-bd02-596fbedd9cb2",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9ca7a7a6-6f48-4f84-9203-b0b1ffb28325"
        },
        "item": {
          "id": "a6721df7-17c0-4641-81f6-83777bf3cc49",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "aff88c75-406c-4cc9-98b8-21a87fab9cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89a2e4d-c5c1-4030-8796-a8246191d024",
        "cursor": {
          "ref": "91a9c6f7-25d1-477a-bf7e-417337ff921d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1a2b3d80-6cba-4407-9556-e00716c446c7"
        },
        "item": {
          "id": "d89a2e4d-c5c1-4030-8796-a8246191d024",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "89c76157-0d1e-4984-b605-ec6d70ee70f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfaaec13-a4fb-485a-b29a-56ea022883ee",
        "cursor": {
          "ref": "d6a97066-5ead-4300-8f5e-9badafbabf2e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dc24d4e3-12ac-42ef-94fb-1e33e680132b"
        },
        "item": {
          "id": "dfaaec13-a4fb-485a-b29a-56ea022883ee",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a3e7eafe-b6cb-436d-992e-7fe572e4319f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98afd885-f11a-49b6-a25f-a24781b938ac",
        "cursor": {
          "ref": "c49c6d1b-4b41-41d5-a8a2-d11403bf911b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "99888b03-1371-4045-aead-f917e572866f"
        },
        "item": {
          "id": "98afd885-f11a-49b6-a25f-a24781b938ac",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f8553125-f8f8-4648-9ce0-23c0c483ba7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c433ffba-fce8-403a-b0db-aec0e39ee81a",
        "cursor": {
          "ref": "c1ade0d7-c23e-460c-bdeb-c59e775c2404",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3b194874-ca72-478f-a964-c31f60787bec"
        },
        "item": {
          "id": "c433ffba-fce8-403a-b0db-aec0e39ee81a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2ab58760-d381-49e1-ada7-07e2db2a65c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba0d82c-88c5-4039-b606-f6e0087a95b2",
        "cursor": {
          "ref": "a3fb58a8-5ea5-46ca-87bf-77ac4db96c5b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "02a71c54-3de2-4ca0-bc7e-82662fd89735"
        },
        "item": {
          "id": "0ba0d82c-88c5-4039-b606-f6e0087a95b2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9efb32d7-03c2-487b-af1e-f0e7f9f2626f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218ae380-fd4d-4e37-b6be-4f0284553d4b",
        "cursor": {
          "ref": "21d00a7a-8bf2-40af-b39b-1aae37f66e09",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b0bc1901-1720-4488-a598-d8cd4adfca9f"
        },
        "item": {
          "id": "218ae380-fd4d-4e37-b6be-4f0284553d4b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "be6758f0-9f33-4643-9d11-6c0866b2c6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5d91cc-6a23-4cf6-b6ef-27c07f4ed9b0",
        "cursor": {
          "ref": "7a967db0-0f9d-47e4-9ba4-1ba0cff10962",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "48b0290f-57ba-4732-98d5-1503074736d2"
        },
        "item": {
          "id": "ea5d91cc-6a23-4cf6-b6ef-27c07f4ed9b0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d17f0919-2356-4e32-9285-b5b1c490e795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeb5847-7618-4c0e-8e35-4dead517a982",
        "cursor": {
          "ref": "04ea25ef-ac06-4719-b3cb-875a3c601521",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4f4ac0ce-327a-4bfb-82ad-362405e17e42"
        },
        "item": {
          "id": "6aeb5847-7618-4c0e-8e35-4dead517a982",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "07b8b65e-790c-4a56-9623-73abf8dd0b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd7e08f-e173-40e7-878f-056de70def73",
        "cursor": {
          "ref": "786da7aa-dc8b-4b10-ab4c-aeb83d7e3340",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "346240ab-22da-4bff-b15b-876a570f80c0"
        },
        "item": {
          "id": "ebd7e08f-e173-40e7-878f-056de70def73",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3331606a-7008-4a0d-873e-4f384e140910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f58b41-c830-401f-b278-5dc4e7367a6b",
        "cursor": {
          "ref": "4d1f3d58-d6cd-4f01-912f-2d52eb31459e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3beebc71-f84a-46c8-80ec-7aaecafde62d"
        },
        "item": {
          "id": "d7f58b41-c830-401f-b278-5dc4e7367a6b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b309849c-c87a-42e2-8493-571de47eeee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c023a6-890e-47b0-a75e-af936c0fa88b",
        "cursor": {
          "ref": "12fef82c-2c84-47ec-bccb-30cb5edb3ed4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b4ee4821-70f3-41ca-ba92-4ecb72b92b65"
        },
        "item": {
          "id": "25c023a6-890e-47b0-a75e-af936c0fa88b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8e0adabf-c0e4-42e4-a818-ba8f2a5bceec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51286b31-4d91-41f7-be53-3cc4c20f4317",
        "cursor": {
          "ref": "ba0b27dc-5bc7-4365-b403-d89e4af0cf5d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "864d9b79-55e9-4f25-9884-e25303ea9e87"
        },
        "item": {
          "id": "51286b31-4d91-41f7-be53-3cc4c20f4317",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f2c5b37a-bab0-4228-9411-f70e072c34e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8701f2e8-67ff-41d9-a1ba-72086c9534c1",
        "cursor": {
          "ref": "a46f9291-e1ea-4c18-ac88-dc830c5e5298",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1dd5b14c-f4b2-4668-a191-3512f275b24a"
        },
        "item": {
          "id": "8701f2e8-67ff-41d9-a1ba-72086c9534c1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3bfc2851-182d-4d12-993c-64ac9a8c5ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20812e06-5e6c-4f03-aa75-119181b8cea3",
        "cursor": {
          "ref": "c7bc699d-fc39-42e5-b602-a50fb148dfd1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "174eefe4-9256-4c21-9ca9-45ceb5b9c468"
        },
        "item": {
          "id": "20812e06-5e6c-4f03-aa75-119181b8cea3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2ee1a487-92b5-4279-b3ac-6fac1b7bcb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f1f091-e4f5-4ce3-a53a-0a57fda5aae9",
        "cursor": {
          "ref": "e370e7f0-2046-4f40-928d-881aa4a7de7c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "de297290-258b-4e24-b89d-502bde7634d6"
        },
        "item": {
          "id": "b4f1f091-e4f5-4ce3-a53a-0a57fda5aae9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3e84c6d2-5577-4521-a3b0-e33ef9e9f9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcc5ffe-97e6-4b9d-9e93-e88a20a9a15c",
        "cursor": {
          "ref": "af11c493-be2e-492c-896f-9fe077ff8c03",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5e49a5a4-e22d-451c-8319-4726caef5677"
        },
        "item": {
          "id": "2bcc5ffe-97e6-4b9d-9e93-e88a20a9a15c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f2f3bc11-e180-49d1-a52f-e1e7a7708bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f831ed58-1ecb-411e-a520-0038383bc63a",
        "cursor": {
          "ref": "c31afa9d-80ef-4d3a-8167-7cdf7f3e13bb",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "48648c42-e98a-439d-82e1-03d34df80f38"
        },
        "item": {
          "id": "f831ed58-1ecb-411e-a520-0038383bc63a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c2c25759-5a7e-4654-b17d-a3b111b74ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285dda4d-a1f2-4c9f-b8fa-440552168e4d",
        "cursor": {
          "ref": "d1d97d1d-5ddd-4d5b-92df-3754df2a5174",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6e6c26e8-e936-43ab-b507-1243d268d0eb"
        },
        "item": {
          "id": "285dda4d-a1f2-4c9f-b8fa-440552168e4d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4d1885bd-5915-4fe6-9b3e-b003091635b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c0cc4a-1e5f-4299-9923-eca9b85e2dcb",
        "cursor": {
          "ref": "af6e8c69-51ac-4cb8-822d-704b92e8c5e7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5d853d87-097d-462f-9159-1a39ef88f3a1"
        },
        "item": {
          "id": "e5c0cc4a-1e5f-4299-9923-eca9b85e2dcb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "75d7555b-b1c8-40b8-9170-a4687a904384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8a96d8-f1df-4ad3-ac0b-484d225aa345",
        "cursor": {
          "ref": "1574fab5-06f0-49e4-94ad-efc25ea6e956",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c8a15ace-3b4f-477a-9fb8-b444f886a0dd"
        },
        "item": {
          "id": "cd8a96d8-f1df-4ad3-ac0b-484d225aa345",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d7f99534-79e7-438a-a983-db78a3a41c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a6f6e2-fdac-4ab6-aa75-7d459965dec7",
        "cursor": {
          "ref": "a25d84e1-8511-4904-939d-b4927586cbb9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "475c9e04-991e-4c95-8452-144985e3abe3"
        },
        "item": {
          "id": "a2a6f6e2-fdac-4ab6-aa75-7d459965dec7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2100d105-3136-4a5d-a38e-4611f65c3139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86519f5c-f159-43f0-a300-9ac2aadbd6ef",
        "cursor": {
          "ref": "1120b566-22e3-4954-a7d0-64904c3093ef",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4bcd8497-15dc-4179-b18e-82278c9aaaf9"
        },
        "item": {
          "id": "86519f5c-f159-43f0-a300-9ac2aadbd6ef",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "efff20db-69b1-4f27-b21f-f6c9b5861975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd056202-f454-4c6f-bfc9-f068e51b7342",
        "cursor": {
          "ref": "8338896a-bccd-441c-bc27-cf4327424f27",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "69e5ab09-2c5e-41c9-928d-bf7e3ac5e61c"
        },
        "item": {
          "id": "cd056202-f454-4c6f-bfc9-f068e51b7342",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d4fc123e-8fa3-4c2b-9ee0-567da865d28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52dc7df-b77a-467d-a438-7ca36f87d848",
        "cursor": {
          "ref": "311f437f-ab4b-4531-9891-d94077f6d5a6",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "981a0f0e-07ca-4561-b2f6-2deece341007"
        },
        "item": {
          "id": "d52dc7df-b77a-467d-a438-7ca36f87d848",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9134254a-ffb7-4e24-a3de-6fdd6499796c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7980a6-1a89-4bbf-95a8-54559660d9fc",
        "cursor": {
          "ref": "6ab38a65-168f-4eac-a04d-701839674666",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cbc7edb2-c5d5-4b4f-b2ed-b2293e8aa94d"
        },
        "item": {
          "id": "ec7980a6-1a89-4bbf-95a8-54559660d9fc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ce94fec0-395a-4d39-a003-b14cb522a75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d4c225-bd24-45ca-950c-8c35940f8a52",
        "cursor": {
          "ref": "47061389-4d73-483e-b04d-b60e82d0df36",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f9947f18-4122-4bba-864e-3c896f7a5fc5"
        },
        "item": {
          "id": "94d4c225-bd24-45ca-950c-8c35940f8a52",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4515a281-7318-46fc-9120-5386b2425db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe355d-0737-4b94-afc7-ea7d29909b95",
        "cursor": {
          "ref": "dcf1ff54-5263-4720-b7e9-de09d69dace4",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3372b64f-5d9f-4c61-bc8b-f987314f2955"
        },
        "item": {
          "id": "8cfe355d-0737-4b94-afc7-ea7d29909b95",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a2488ae5-0099-4c05-b5de-8084d0c17581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ecf0bb-2e16-4880-85f2-cddccd111af9",
        "cursor": {
          "ref": "9f1b0082-ef1e-4c62-b654-e633e4f61482",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e4ff4ace-b1ca-4760-83af-0e6ff71240e9"
        },
        "item": {
          "id": "e3ecf0bb-2e16-4880-85f2-cddccd111af9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a94022dc-09cb-4808-aebf-0f11060b3388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13fb64d-6d00-4e50-a24d-389512d0b924",
        "cursor": {
          "ref": "4edc96ec-6c2f-44f6-b786-49f4eb64e043",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b7b1b1f3-42ee-47a9-ae59-0e1a35fee359"
        },
        "item": {
          "id": "a13fb64d-6d00-4e50-a24d-389512d0b924",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f1798f22-12b0-4df9-a516-94eb62328729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c685707d-2265-415a-bf69-c06d4f17cf79",
        "cursor": {
          "ref": "c5f5427c-14a7-4c1d-b83d-1272fa886def",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0fcf8a59-918e-46e5-949a-c5c018d116ab"
        },
        "item": {
          "id": "c685707d-2265-415a-bf69-c06d4f17cf79",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a9521c73-3ccd-4142-8fbe-df577420ac87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a0a4ba-bb55-4724-be68-de6478a327f9",
        "cursor": {
          "ref": "92e53709-a4b6-49d3-af72-baed34640936",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d90e9c62-c95c-4063-835b-b6b82ec0d6cf"
        },
        "item": {
          "id": "86a0a4ba-bb55-4724-be68-de6478a327f9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8ed14a70-46a6-4ae6-ab39-e563036af459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b2041b-3989-4227-86b1-e2364d018827",
        "cursor": {
          "ref": "c9450207-5eaa-474b-b6ed-82e8ecaba13b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5fd09c87-262c-4591-8b33-61329b00c0ff"
        },
        "item": {
          "id": "02b2041b-3989-4227-86b1-e2364d018827",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8cb416c7-cb52-4bd6-83c0-b8640b1ece51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f100c2c-1d7e-4401-b0fa-ee7551f27718",
        "cursor": {
          "ref": "74bac37b-935e-4a98-8c22-346b409b9e72",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "32cc20d6-e308-4645-9121-cac4d08b9069"
        },
        "item": {
          "id": "7f100c2c-1d7e-4401-b0fa-ee7551f27718",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "83e41e5e-6d7a-4c41-ae51-dd96c8c20c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4b4422-4140-40f3-8623-04c4438f3b29",
        "cursor": {
          "ref": "1856f0a9-ad05-44b7-b7af-b1e8a06c59c9",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "30b42e9f-4bfa-422f-950e-e6c9bf702a06"
        },
        "item": {
          "id": "ca4b4422-4140-40f3-8623-04c4438f3b29",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "99cc83cf-ae44-4027-90b3-799219020982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7343c15-f212-4dac-b901-da86195f9d7f",
        "cursor": {
          "ref": "192bef54-482f-4f84-b6a7-e1343fe880f4",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "eab07fc2-06db-4b29-a9dc-2357e27032d2"
        },
        "item": {
          "id": "c7343c15-f212-4dac-b901-da86195f9d7f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9892ca85-70ca-4377-b87e-11a736f52b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e3f85d-d2b1-4b80-915e-1ba4dfb50297",
        "cursor": {
          "ref": "b1b460da-6e35-4964-878a-0b5adcb7d908",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "75e9e135-2732-4cef-940a-af6e57e3c7e5"
        },
        "item": {
          "id": "57e3f85d-d2b1-4b80-915e-1ba4dfb50297",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "77013eb1-b283-479a-b757-46208146d2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6854b754-ebd8-440e-8d36-bef75fa94273",
        "cursor": {
          "ref": "efe70cfc-1114-4bc7-bc48-4a46d5a7d43a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c8c64f49-78ae-401f-bb41-92d262588590"
        },
        "item": {
          "id": "6854b754-ebd8-440e-8d36-bef75fa94273",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "61ca4809-9c94-476c-ae1f-312709c0d147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172f2f97-502b-46c7-a653-651b78b4f723",
        "cursor": {
          "ref": "0ed3981b-9565-4d18-ba2c-50fdbae6a28c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "081d03f0-ee0e-460d-8d89-98083210996d"
        },
        "item": {
          "id": "172f2f97-502b-46c7-a653-651b78b4f723",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "22f08e6e-3e96-426d-9cc5-65e2f149dc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87bf939-ffdd-4c22-ba04-5a4bb93079c1",
        "cursor": {
          "ref": "3f98646f-be32-4df6-a31c-ba3c8eca70fa",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "80e2ee8a-45d4-4754-9829-a601896ae719"
        },
        "item": {
          "id": "a87bf939-ffdd-4c22-ba04-5a4bb93079c1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7351d7fa-c944-499d-9d09-a629afc3ded8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b04ad5a-6d40-45c7-94ed-d5d4f5184995",
        "cursor": {
          "ref": "511362d5-6a85-408a-9cf4-4a466f5977fe",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8cec75cc-6920-4a0b-af3f-6d4cf098c15c"
        },
        "item": {
          "id": "3b04ad5a-6d40-45c7-94ed-d5d4f5184995",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0af8308b-8757-430d-a554-d3fe4b8d24a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc3f07d-6dac-4b4d-baed-f5db01c1b955",
        "cursor": {
          "ref": "d00d1294-1819-4cd2-ae14-967cb82fb0c9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f286b2b8-8c6f-4229-bbf9-8b70eb85f6c8"
        },
        "item": {
          "id": "1dc3f07d-6dac-4b4d-baed-f5db01c1b955",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8894a6b2-0ed2-49a3-8785-ec78d953cd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44504d70-e860-42e3-9542-7f1be1ff4151",
        "cursor": {
          "ref": "fb24c6c9-f8f6-4f22-b6f4-be93b3f1ac08",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "40cef3f9-e2a2-4a20-8062-50197b287299"
        },
        "item": {
          "id": "44504d70-e860-42e3-9542-7f1be1ff4151",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "41a7ac11-3555-49ab-89b5-96659755d8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7e33d4-d58f-4b21-800c-15f44913259f",
        "cursor": {
          "ref": "ce9e0246-d578-4ceb-94e2-19420cb7cead",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a7781468-a782-4618-a139-24b9c33dd13f"
        },
        "item": {
          "id": "ae7e33d4-d58f-4b21-800c-15f44913259f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "27fa4146-ea03-4474-bc54-9efc56575c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ab3619-f75e-4f76-b32b-d359da9077c8",
        "cursor": {
          "ref": "29189420-ab2f-499e-bdd7-227ff0740e29",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f2f25ab9-0eae-4bac-af4c-6e7a5c8d5908"
        },
        "item": {
          "id": "00ab3619-f75e-4f76-b32b-d359da9077c8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2813d21a-6845-4ffe-bd5e-2a12a679d1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080eb48a-b136-49db-b22f-f3838c7c8574",
        "cursor": {
          "ref": "8a6bb97c-e807-4942-b1d9-2beb681f85c6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "72dafacc-dda8-47ae-bb7c-2627fed370c4"
        },
        "item": {
          "id": "080eb48a-b136-49db-b22f-f3838c7c8574",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d68ef363-fc63-418d-9b9a-5f937290acfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e225f9-7ad3-4128-9ade-731d3f70e53b",
        "cursor": {
          "ref": "15c7d617-6b17-4281-9589-52cc2ecb5a16",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f50aeacc-4fcd-4371-864d-72b06adb02fb"
        },
        "item": {
          "id": "66e225f9-7ad3-4128-9ade-731d3f70e53b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3aa6e394-50cb-4a30-aa4c-fd9220a40c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c99e0e1-e5ad-462d-a1d3-cd3ef0564ae2",
        "cursor": {
          "ref": "5dfb675e-0cc3-4089-a6bb-83ef4b05a76b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c4918d1a-1b53-4305-ab9a-c467a55c5414"
        },
        "item": {
          "id": "9c99e0e1-e5ad-462d-a1d3-cd3ef0564ae2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4b953ef7-afde-47c7-acca-332494eb5156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8544aec8-f14c-46f5-b365-2ddceda20ac8",
        "cursor": {
          "ref": "63e094b1-b29a-4003-a0fc-011603a08727",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "86629035-1280-4b11-99e2-3b4aad3bbfa3"
        },
        "item": {
          "id": "8544aec8-f14c-46f5-b365-2ddceda20ac8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "82a646e4-fa6b-412a-ac1e-b5593ca522e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2d86a5-9319-44ff-8af7-2c5812dfb975",
        "cursor": {
          "ref": "0de1070e-02e1-453a-b290-da15909e95c6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a7399ae5-3275-4372-a968-13e9e303d7fd"
        },
        "item": {
          "id": "8d2d86a5-9319-44ff-8af7-2c5812dfb975",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fbb88f18-4b58-4ba2-b868-d1bd640db529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6dc420-1bfe-4ca2-ab12-19a0de7d4164",
        "cursor": {
          "ref": "17cff1d5-57a1-47e2-b73c-a5108cce8e2f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "53c62030-ad2d-46c1-b6e3-c4a45b1da970"
        },
        "item": {
          "id": "fe6dc420-1bfe-4ca2-ab12-19a0de7d4164",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "566c80e5-bf38-484d-bb62-9d13dec860bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818d85ae-0a35-4785-b83d-152fec504ba2",
        "cursor": {
          "ref": "06eac214-b780-4665-b041-3d22eab6ec46",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3ef8c2d2-1fa6-4589-9c77-123d23a010c7"
        },
        "item": {
          "id": "818d85ae-0a35-4785-b83d-152fec504ba2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7b163e9b-e751-4ac7-92d7-ef28878ad00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d688d4-17e9-4424-827e-426ce891ddfd",
        "cursor": {
          "ref": "8da9946e-6d6d-4b11-87ca-b22ea3ea38ea",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b5bf77a7-00fb-441d-a608-17616cee0c54"
        },
        "item": {
          "id": "f0d688d4-17e9-4424-827e-426ce891ddfd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c082cf0b-0acb-429e-a0a2-2640fdd3fc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2e12e7-1498-4b5e-bc98-38109db2a054",
        "cursor": {
          "ref": "13ccb53c-de15-4d44-be57-865886e74b2f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "359ef50a-57e8-436d-b8ee-aaac65d07b18"
        },
        "item": {
          "id": "2e2e12e7-1498-4b5e-bc98-38109db2a054",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "07cd05fd-485b-47a7-943f-89c6370181cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d97f26-b280-4325-9cd1-aab10adb774f",
        "cursor": {
          "ref": "d8079103-567f-4110-9f01-bee9e9b196f0",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "512dd62c-9f50-46d3-8b5f-692537dbff8e"
        },
        "item": {
          "id": "e0d97f26-b280-4325-9cd1-aab10adb774f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "49bbdfd4-6356-4224-bc3d-cd02a5b8d753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ca5572-5a95-461f-a65e-c2b3de040ad8",
        "cursor": {
          "ref": "e28cef60-1c72-4c79-bc21-b7b743caa3b1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1a47807b-67e3-4f13-a879-f7f9402c25ac"
        },
        "item": {
          "id": "d7ca5572-5a95-461f-a65e-c2b3de040ad8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b434923c-ab1b-498f-8570-46f82fdbb052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b240d8fd-ec09-4c14-83cc-018b1c9388df",
        "cursor": {
          "ref": "bb252e75-7e21-46a3-9d7d-8ff181be84b9",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "27e8dfe9-77d0-47a7-989f-aa9c2f285f94"
        },
        "item": {
          "id": "b240d8fd-ec09-4c14-83cc-018b1c9388df",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fd743c08-8169-44db-8b4c-19435530b0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af9a415-24e6-4c14-a289-bbdb3c2fcb37",
        "cursor": {
          "ref": "de879552-2d98-4a31-9025-b49677139afc",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cd02b543-5d02-4a50-8d2a-745b676e63c9"
        },
        "item": {
          "id": "1af9a415-24e6-4c14-a289-bbdb3c2fcb37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4f87641f-d82f-4571-a80f-af1ac6e82bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860c9851-cbcd-4aeb-8b2b-01cc1b56a1f1",
        "cursor": {
          "ref": "b4679c44-18b1-4756-9b4b-fe18db9efc29",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2543867c-8e50-4291-989b-3731dc3723d5"
        },
        "item": {
          "id": "860c9851-cbcd-4aeb-8b2b-01cc1b56a1f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d8906a1e-877b-4231-a5c0-d2cac9afbd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106e6f85-f8f4-473f-ae68-85f1bb797542",
        "cursor": {
          "ref": "3f60d19e-b7a8-4634-ba9e-6c6812989fe6",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4e32456b-b952-4f9f-ab2a-3a37af593c03"
        },
        "item": {
          "id": "106e6f85-f8f4-473f-ae68-85f1bb797542",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9dd0557c-863f-4b3f-b188-03a0bf0f8e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f164bc31-3d1b-4a8b-aaf8-c805c7379830",
        "cursor": {
          "ref": "86454bd7-7484-4eda-a8a4-46dc62c9961c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4f974b58-e2be-4ab8-a486-e8174031bec8"
        },
        "item": {
          "id": "f164bc31-3d1b-4a8b-aaf8-c805c7379830",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7a7a9d63-7e55-4c51-96bd-9e286734bdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dcd2a7-337e-4036-bfbe-fbbaa8afb4a4",
        "cursor": {
          "ref": "17685d7f-1a94-402e-9592-3d891fdaf1c2",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9697c290-75ca-4e50-9eb0-eb812ecf923f"
        },
        "item": {
          "id": "d6dcd2a7-337e-4036-bfbe-fbbaa8afb4a4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b8fae540-f672-47d6-a024-8f17069c6034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dbcb1d-1029-4a97-9116-3b36a26b81ac",
        "cursor": {
          "ref": "96a7bb1a-3108-4c10-8140-1bdbfb6feffc",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "536aad24-fc6c-4046-a85c-8b3af3e27689"
        },
        "item": {
          "id": "c1dbcb1d-1029-4a97-9116-3b36a26b81ac",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4d290e21-a492-4b52-a73d-dc765a274ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a42c7e-d1d4-489a-9385-ad5db74f691f",
        "cursor": {
          "ref": "030ca6a1-a1a5-4d3d-a96f-6bc5960da467",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f8f7210d-7db7-4b3c-a464-fddfe6ca6b12"
        },
        "item": {
          "id": "30a42c7e-d1d4-489a-9385-ad5db74f691f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "27750f5d-a6c4-4191-b3ba-bbb45ae9a698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52ad508-3d40-415c-a846-5fc1868af31b",
        "cursor": {
          "ref": "f3c010df-0759-4922-88d3-f593d5df2f91",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a97eb404-57ce-4b62-8b15-f906f24effa9"
        },
        "item": {
          "id": "e52ad508-3d40-415c-a846-5fc1868af31b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c9d26e70-9fee-440a-a9a0-14e9f695a153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e58357-9cd6-40e4-8bdb-bb5cea400b9c",
        "cursor": {
          "ref": "665bf335-2f9e-40c8-82a1-5aa53d765dad",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c7e8cc52-1976-476e-9ad7-b0f79022dbc6"
        },
        "item": {
          "id": "82e58357-9cd6-40e4-8bdb-bb5cea400b9c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "702f34e3-a3b1-4fe0-9e8e-a19f46ab3e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b9acf8-85d3-4ccc-8030-d6a8a3eb2012",
        "cursor": {
          "ref": "9eacb0bc-699e-438f-b0f3-e6e05d64701b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "774884ad-0fba-46c7-b8c9-c01d77822709"
        },
        "item": {
          "id": "d7b9acf8-85d3-4ccc-8030-d6a8a3eb2012",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4a8f4718-c0ba-4383-bab6-662a485c3edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc3cab1-fd61-4ee5-9ef1-e15f7caf0583",
        "cursor": {
          "ref": "81732825-d4a8-4748-938e-b3d9e481200d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "12b5805a-9619-4a40-9f02-9d6a67eb1b6a"
        },
        "item": {
          "id": "edc3cab1-fd61-4ee5-9ef1-e15f7caf0583",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "af3bc803-7549-413f-938b-d40195e26201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd68c3d9-8a10-4947-85e3-f23ed5080c7a",
        "cursor": {
          "ref": "69ca5d92-fa0d-4561-823c-38541cedd67a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "95201492-0b18-4c53-8f3c-62564a252fbe"
        },
        "item": {
          "id": "cd68c3d9-8a10-4947-85e3-f23ed5080c7a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "26141239-8b05-4f11-ad21-1669197a3589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5689ac-165c-40c8-81fe-24deecff1390",
        "cursor": {
          "ref": "9b1a9a1f-64c4-4696-998c-73e3a2a97a6e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bae4b6ce-ac1b-4b6a-81c9-2287c3e05e06"
        },
        "item": {
          "id": "8b5689ac-165c-40c8-81fe-24deecff1390",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "07124622-0381-4263-9325-704b1e004d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095821c8-5b8d-481c-8a19-8db797e7d9a5",
        "cursor": {
          "ref": "f3c2304b-4c24-450b-a337-3a5df8559eda",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a3b3effc-2d08-420a-be3b-5dd48e713f28"
        },
        "item": {
          "id": "095821c8-5b8d-481c-8a19-8db797e7d9a5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5b0cc885-3008-43e6-91b2-4e36979cc86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a9e9a1-7b86-45f7-aa8e-7e768d418e1a",
        "cursor": {
          "ref": "2bcd7c39-2e56-445e-8fc2-a9b76047e54e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7743aa77-eeed-433c-8349-7c94877636b6"
        },
        "item": {
          "id": "37a9e9a1-7b86-45f7-aa8e-7e768d418e1a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "396e90b1-2687-4820-ab43-538879352df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c9d7ee-e647-4281-82c4-9164b6cf4391",
        "cursor": {
          "ref": "456f329d-dc18-469a-a359-8ba87aea7961",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5146d113-d8c1-4a41-94a9-e343394b5691"
        },
        "item": {
          "id": "d9c9d7ee-e647-4281-82c4-9164b6cf4391",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5c1aaab9-a5f6-4b78-ac43-8cdd41649aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec0bd80-06f4-4748-9039-c6411a4cfde3",
        "cursor": {
          "ref": "33319886-f48b-4999-b79a-90219c81adce",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e542c407-e2fc-4780-bed5-7f37d5506f56"
        },
        "item": {
          "id": "3ec0bd80-06f4-4748-9039-c6411a4cfde3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "51932de7-8094-4b03-806e-ebc7d94b00ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a51f155-4808-4e69-9022-8078ac7bd369",
        "cursor": {
          "ref": "6abcb783-c3f8-4165-9d54-087881f78678",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bf58372f-54ae-4ac0-b6b4-82c3a9c7856b"
        },
        "item": {
          "id": "6a51f155-4808-4e69-9022-8078ac7bd369",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e17c3aa9-268a-4c7c-94c8-115e259dc64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4d9916-5107-4e91-a220-e9cb968810d7",
        "cursor": {
          "ref": "1b73cea5-c024-4f56-80ae-f650f0e763cd",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e48c3b08-9757-4b0a-a8de-b570cf256833"
        },
        "item": {
          "id": "4b4d9916-5107-4e91-a220-e9cb968810d7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "76b72480-73b0-4a34-9b78-9aa60a6881cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703011e2-144a-42ab-a623-55fb7acfade5",
        "cursor": {
          "ref": "0255d3a4-9321-4266-af50-a935dd65316d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b65f2c7a-7c79-4f60-89de-f692926c7ca0"
        },
        "item": {
          "id": "703011e2-144a-42ab-a623-55fb7acfade5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9991b878-becc-404a-a29a-b6db6580d2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5a0c62-6b60-492b-87a6-0e7935553ad9",
        "cursor": {
          "ref": "c4aa0f5c-e6f8-4eb1-a8ec-434087380274",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e3b9ac0f-86c9-432a-850f-0b1a9cca27c4"
        },
        "item": {
          "id": "fc5a0c62-6b60-492b-87a6-0e7935553ad9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0ab06235-d6d0-40d2-90da-931368b42ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e9caba-2cd0-499c-95ac-cfed157edbb6",
        "cursor": {
          "ref": "68816dad-9907-4924-8c97-5a9407e6a7d1",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "58b0fda4-4b64-4faa-8f9c-10a34578df1d"
        },
        "item": {
          "id": "65e9caba-2cd0-499c-95ac-cfed157edbb6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "66ff7093-68ab-4105-b129-64001b86507d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a8712a-1f03-4884-8b3c-301401fa90a8",
        "cursor": {
          "ref": "a1292b1e-c468-4e24-aed4-bd7da123c6e3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a4f8c9c3-b7b5-4a8c-bb4b-884ea4d861e7"
        },
        "item": {
          "id": "c0a8712a-1f03-4884-8b3c-301401fa90a8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "443f342b-aff9-468e-a553-c90aee44ba8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1972354-96fc-4ae1-b227-331db50ece3d",
        "cursor": {
          "ref": "0f489d79-dd75-49d0-b8fb-11f41f0fb892",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "092d858c-a80a-4263-a44c-7942bbc31781"
        },
        "item": {
          "id": "e1972354-96fc-4ae1-b227-331db50ece3d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1e97a516-807a-47a3-a98d-d00e43f3da5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdec0fad-66e7-4890-a7e5-84959c0708e0",
        "cursor": {
          "ref": "f57f4c35-13b1-4288-ba32-783ed9927a48",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "893daa28-4f6b-4648-bce5-cb63df61a183"
        },
        "item": {
          "id": "fdec0fad-66e7-4890-a7e5-84959c0708e0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "65f686f5-c2cd-4d4f-bfbb-340b5bd1ede3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16568eb4-f0bd-473d-a481-1b41472d6854",
        "cursor": {
          "ref": "fe60400d-eb97-4843-ba5e-6bc13c93dc59",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d5a69ba9-9443-4911-96aa-4d27638d5835"
        },
        "item": {
          "id": "16568eb4-f0bd-473d-a481-1b41472d6854",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "31d0a1f3-231d-4a62-b243-7539254bcebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17793e2b-4524-46a6-ac60-57ec9e330a0f",
        "cursor": {
          "ref": "da00e014-2b87-460e-903d-338e8c645764",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f2794d52-15f1-4ad0-8943-49468e8ee4f9"
        },
        "item": {
          "id": "17793e2b-4524-46a6-ac60-57ec9e330a0f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0a1ac6a5-d99a-4afd-8de2-f8f3816b80d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37aba5e3-5594-46fe-afee-0132498f46e9",
        "cursor": {
          "ref": "e2e36390-6b83-4c71-8527-84d79d20e83b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cd06902b-7ad0-4964-b5ee-0b4e85924270"
        },
        "item": {
          "id": "37aba5e3-5594-46fe-afee-0132498f46e9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bdffa437-be9f-431d-8cc6-490a40eb2d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9189a67e-b518-41b4-897a-ba26c6f1c4c2",
        "cursor": {
          "ref": "29b5b9eb-7c20-40ff-8c85-6b2702a9bf43",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9e29cb51-c3f1-4bb4-b168-eac88e96d37b"
        },
        "item": {
          "id": "9189a67e-b518-41b4-897a-ba26c6f1c4c2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4de079a1-45d2-4ee0-ba86-6890d6dc889c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca73a1c2-3ab5-434d-97d8-6bff3cde13ad",
        "cursor": {
          "ref": "3b030a25-bc26-407d-991c-d022d1fe5f3a",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "57c5867b-6e3d-404f-9ad7-cade09b75d06"
        },
        "item": {
          "id": "ca73a1c2-3ab5-434d-97d8-6bff3cde13ad",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9b339c76-cc74-4654-beca-2d45331cac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f721348a-e057-4326-b50d-7b85e2da97bb",
        "cursor": {
          "ref": "d56b5221-b372-45c7-9792-1c2b0fd68e54",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7c4cfc3a-e2bc-4897-a997-2e01c84960d5"
        },
        "item": {
          "id": "f721348a-e057-4326-b50d-7b85e2da97bb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6d625567-8e6d-4003-86f8-96615ea02871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e4d523-7ce2-42ec-aaaa-0a0bc05288ac",
        "cursor": {
          "ref": "24de33e0-6497-4c9d-bd21-33ae85930f48",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4e670094-27d6-4060-b8e8-f83d4b05bccf"
        },
        "item": {
          "id": "78e4d523-7ce2-42ec-aaaa-0a0bc05288ac",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "538b8102-6349-4ee8-840b-99874cfc0916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ea8609-7596-4e23-90f8-e9756c50521f",
        "cursor": {
          "ref": "1f871ec9-152c-4744-96dc-6153724205dc",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "adc3c193-00cf-496c-9216-8b1751daa731"
        },
        "item": {
          "id": "b8ea8609-7596-4e23-90f8-e9756c50521f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bacdb608-3234-476c-bc60-1c051e41446a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130531f2-c41c-42e0-90c6-b78bf89a812f",
        "cursor": {
          "ref": "0dd55038-010e-4c75-8fda-aba67c4fba26",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f29c4e79-226b-47aa-9891-872ccc1779e6"
        },
        "item": {
          "id": "130531f2-c41c-42e0-90c6-b78bf89a812f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "04928479-d6f0-4823-a909-f025f2854339",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 170,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06184969-deb4-41f1-a9ff-e8248ff80816",
        "cursor": {
          "ref": "28158264-2db8-46ce-b97d-cba5b860d7f1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7965308f-3dd4-4a49-85c1-e283e042059b"
        },
        "item": {
          "id": "06184969-deb4-41f1-a9ff-e8248ff80816",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c4d38282-0ddf-4374-b79f-633bdeb09d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f7219d35-6d47-41bd-93e5-709ca0756a0a",
        "cursor": {
          "ref": "4b470ce7-af1a-4609-9292-7ed62892ae0c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ee6e4a42-6a8f-4858-9c0a-2266e5262d66"
        },
        "item": {
          "id": "f7219d35-6d47-41bd-93e5-709ca0756a0a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "68098381-4d28-41f2-990a-0c238d699149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "58cb5ff0-fb5b-480a-90fe-85128f61777d",
        "cursor": {
          "ref": "2f82339b-bf9f-4cdb-a39c-468b822aabea",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ff45d75e-adf4-4b7e-bc03-e3ba401afc87"
        },
        "item": {
          "id": "58cb5ff0-fb5b-480a-90fe-85128f61777d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6524eeaa-c97d-4295-ac24-7b4031343ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c5cb76a2-039a-4795-95ee-a37502b0a739",
        "cursor": {
          "ref": "2e6e1ee1-3006-482a-9650-22e5f804daa6",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "82637750-57d3-4411-b1fa-1d51e3ecb0ad"
        },
        "item": {
          "id": "c5cb76a2-039a-4795-95ee-a37502b0a739",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ba26b088-1048-4782-b4b0-4119c1d46f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "547c176f-4a29-4c39-94b3-04b0ae94efc9",
        "cursor": {
          "ref": "02a51d0f-b9a8-4647-b158-ea4fb6aba231",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e47a82b5-32ce-41ba-b34b-824b2eaecd10"
        },
        "item": {
          "id": "547c176f-4a29-4c39-94b3-04b0ae94efc9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "abb3cc73-cdc6-433a-b6fd-27e7e5cef037",
          "status": "Created",
          "code": 201,
          "responseTime": 11073,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f1ae2f-17a0-466c-a404-d9ed6139cce4",
        "cursor": {
          "ref": "d5f26dcd-0b65-4459-8c6c-9ba6b13faabb",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8774b9b1-4da7-42b4-8485-33f35d50a4cb"
        },
        "item": {
          "id": "86f1ae2f-17a0-466c-a404-d9ed6139cce4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dd1b93f5-19c1-4cef-9dee-4bf8aa3895f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3b229d35-214c-4346-90f1-db9e093c1dcc",
        "cursor": {
          "ref": "e5418cc1-bd7a-4eef-9be2-47eabb0e225f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "53cee22f-6d36-46f6-be51-ec03db5f00bd"
        },
        "item": {
          "id": "3b229d35-214c-4346-90f1-db9e093c1dcc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cc7ed167-65d9-4a7e-bf77-77d92013c668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9d1a404a-6e50-4695-a28e-9639b567af98",
        "cursor": {
          "ref": "579c58af-cd5c-428d-a73e-63554abad2de",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e9e58eff-19f5-4bc5-95a4-74e3c44c9862"
        },
        "item": {
          "id": "9d1a404a-6e50-4695-a28e-9639b567af98",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c3d69200-29c7-48fd-b3c5-c2820b8b67a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bfa5b5-665f-48fe-8bff-73117834c271",
        "cursor": {
          "ref": "eecf0efe-75dd-4913-a947-5163fa3431a0",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "331d5585-8508-4ab3-a37a-eee0f33a6d19"
        },
        "item": {
          "id": "a3bfa5b5-665f-48fe-8bff-73117834c271",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1abd131b-fcc9-40e2-9d6e-23a1ab18ae62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eefbe62-211a-40fa-ae35-1a687e79a9fc",
        "cursor": {
          "ref": "a6d1b7ad-86b2-41d0-b7fd-7bd0cd834e30",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "59a8e4a8-d538-4be8-a0cb-212007aedc49"
        },
        "item": {
          "id": "5eefbe62-211a-40fa-ae35-1a687e79a9fc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "464531d7-a3f4-4821-9520-8b81c7536ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cb9459-a208-45fd-8d28-dbb68b021c7e",
        "cursor": {
          "ref": "156c6101-e530-42bd-9d80-6b559ce73e80",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f9e35384-945e-4e41-a83c-040e9642fac2"
        },
        "item": {
          "id": "42cb9459-a208-45fd-8d28-dbb68b021c7e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ee4f42e9-a249-4229-9759-913a299a8123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a96da4f-5dfb-465b-8048-f6eb104dbe17",
        "cursor": {
          "ref": "7cf6ab20-ae78-40b1-a477-d3d044f1e7cc",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "565cde57-2bf2-4132-991f-c454b9c49fc9"
        },
        "item": {
          "id": "2a96da4f-5dfb-465b-8048-f6eb104dbe17",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "15bafb82-a864-48de-b9a7-8465578efebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2c9732-435c-45dc-9dc6-4486ead7eb3a",
        "cursor": {
          "ref": "20284b4f-8cc8-4daa-bc2a-a7589b5f9680",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "791f0589-cb7e-4f4d-a360-286ac3b3973e"
        },
        "item": {
          "id": "ee2c9732-435c-45dc-9dc6-4486ead7eb3a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b960e9ef-07bf-4097-8f4e-2c1cde6a28a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4266098d-63d8-40d3-a914-54358eb28a6b",
        "cursor": {
          "ref": "2b7a2b74-72a8-4bca-8c31-b9c779cca9e2",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "63346858-951a-46cc-a41d-7f2a207176f3"
        },
        "item": {
          "id": "4266098d-63d8-40d3-a914-54358eb28a6b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0dd0fac8-5e7f-464d-9939-84cff20c26c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06325311-ab98-4133-b697-fd52d9cfbcc6",
        "cursor": {
          "ref": "f7a606b9-0145-46d5-bd2e-3e868ebb7cf5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "516c1ca4-1acc-4ced-8f89-696a0f2e59e2"
        },
        "item": {
          "id": "06325311-ab98-4133-b697-fd52d9cfbcc6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cc86ea29-be69-4b4b-8b23-d480ac808acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d8cac2-f7f6-4d3e-a9bd-054f61e4edf3",
        "cursor": {
          "ref": "f9e585da-c890-4e36-956a-a366cf6dd436",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8faaa465-c4ef-4b20-ae9b-7b24294dd18c"
        },
        "item": {
          "id": "17d8cac2-f7f6-4d3e-a9bd-054f61e4edf3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "586c1929-e99e-4b0e-b2a7-b290dd781f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6818af1a-12ce-4dcd-81d9-dc1755b934fd",
        "cursor": {
          "ref": "49f78b56-2d40-4e3b-b1cf-3ef3ee188ce2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5aafdf3f-f756-497e-b021-a9811b9edf6f"
        },
        "item": {
          "id": "6818af1a-12ce-4dcd-81d9-dc1755b934fd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9d8eee27-da8c-429f-b27b-d219acb6687e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a06e30-e366-48ee-b7d2-b20c9a7188e9",
        "cursor": {
          "ref": "0357214c-d241-4f87-86ac-416c974a66f3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "439d43c9-69ed-40fa-9a22-91af5a9638d4"
        },
        "item": {
          "id": "56a06e30-e366-48ee-b7d2-b20c9a7188e9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "953e2f54-b29c-4c4a-97a8-8e347cc64c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f461b5b8-f1de-4e76-ad0b-7e4446d47794",
        "cursor": {
          "ref": "97c01597-cc48-48cf-ae8b-2e79ef7a8a35",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d91eaa7a-50fb-4d55-b97f-6108fa63a298"
        },
        "item": {
          "id": "f461b5b8-f1de-4e76-ad0b-7e4446d47794",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7afcf770-9e90-4b8a-a150-341e4682ac8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bf3b64-cf41-4ebd-afac-8b8dc792721f",
        "cursor": {
          "ref": "48564554-9ea6-4de5-b24f-afd5a78d9c4b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2e143a7f-f204-49dc-8247-738711bd35a7"
        },
        "item": {
          "id": "91bf3b64-cf41-4ebd-afac-8b8dc792721f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1e5cc7a2-a8b7-44c9-b053-ccfcf8e38afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668bb5dd-4770-40e5-90f3-5707e6666705",
        "cursor": {
          "ref": "0388da06-29a7-4d17-9061-8516b313409b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5259a334-f9ba-4277-b636-fbe2327e4254"
        },
        "item": {
          "id": "668bb5dd-4770-40e5-90f3-5707e6666705",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b4460486-f28d-489d-a70a-f6bec471b8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88933c2d-b7ab-40eb-8c8d-eb6ee5d3df35",
        "cursor": {
          "ref": "0c8e0777-4d71-455c-bda1-c609dbd7d607",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "258d5eaf-b3b0-4f82-b639-55792df8eb6d"
        },
        "item": {
          "id": "88933c2d-b7ab-40eb-8c8d-eb6ee5d3df35",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "398a6a66-81f8-42de-b28e-e0312abb2588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e43d1e-8943-4a55-bd7e-546ebda86ad9",
        "cursor": {
          "ref": "6a938da5-0310-440d-bff8-87a5f679095f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9e9e47c5-81b9-47e2-a694-83703fc89c7b"
        },
        "item": {
          "id": "e8e43d1e-8943-4a55-bd7e-546ebda86ad9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "83c58ff2-682a-494f-968b-ecdf65e4f1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f532d089-6b38-4857-88ae-92fa9a21f67b",
        "cursor": {
          "ref": "f8b17413-628d-4a38-a15a-576eebff850f",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f3d3f15b-cbbc-4125-a53c-aee69b7bdba2"
        },
        "item": {
          "id": "f532d089-6b38-4857-88ae-92fa9a21f67b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aad86706-178c-4d3d-a3b3-33d45d186cda",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "97aeb8d6-0465-43d1-8203-678b11b2cac5",
        "cursor": {
          "ref": "4a58f71a-70b5-4c7e-a157-7028d15464d0",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "54d9cd63-7e3a-4bc1-856c-15111e4cd02a"
        },
        "item": {
          "id": "97aeb8d6-0465-43d1-8203-678b11b2cac5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a5869c08-ef71-4fd7-b9df-823db3ef1131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9e9be8-97bb-49f4-b088-58982c33485d",
        "cursor": {
          "ref": "3358d9f7-2388-46a2-b402-15a16b7cfc48",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1605dbfb-4a25-4b7a-bf89-ea6c134d111e"
        },
        "item": {
          "id": "be9e9be8-97bb-49f4-b088-58982c33485d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3f07b53a-1c8c-4ead-9c88-16686595eef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa98cb8-3080-44e4-a51e-fbfc7ea9fc90",
        "cursor": {
          "ref": "28164e83-07d1-4bf1-9ce3-f7f7d6763404",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c27dfec8-b4c6-463e-8af2-47603d700ed9"
        },
        "item": {
          "id": "1fa98cb8-3080-44e4-a51e-fbfc7ea9fc90",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7640606d-0358-43ff-b370-19e7f415ba54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4375930d-443a-4d5c-8995-0a57c2f15aef",
        "cursor": {
          "ref": "168eac26-3d96-4bd7-8414-eebed5fef596",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f2041c7f-b59a-4402-af9d-1d5e562cd8e6"
        },
        "item": {
          "id": "4375930d-443a-4d5c-8995-0a57c2f15aef",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f6cdc584-fd00-4466-866a-4e2c858e9ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cb058e-8b7f-4fb7-aa5b-48b94ceb1691",
        "cursor": {
          "ref": "0d962859-76e2-4324-b775-c422f9ed0cb8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c15e483a-26ed-4ede-b865-1393b7044869"
        },
        "item": {
          "id": "f2cb058e-8b7f-4fb7-aa5b-48b94ceb1691",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "722ac456-7c02-4e24-8cd5-3f483bd6d56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbb1921-5bf6-4f31-94b6-fda85a16e645",
        "cursor": {
          "ref": "0c4d5c76-b90b-40e5-aa04-d9419fc957ee",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e5333351-fb37-41db-9d08-f1887731d9c6"
        },
        "item": {
          "id": "3dbb1921-5bf6-4f31-94b6-fda85a16e645",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ab2f3da1-9ebd-4859-84ea-6e850520a0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be8aa20-0a3e-4215-af95-59a3f6997931",
        "cursor": {
          "ref": "7b0a34b7-1a90-4457-a4c3-8aa1dbebb46e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e02e8d32-6427-426a-8c39-ce0b8fcc6c33"
        },
        "item": {
          "id": "7be8aa20-0a3e-4215-af95-59a3f6997931",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e2d0f69a-fd57-4a2e-9660-3fbda4715855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7529344-e30b-4255-a0c6-fd3b0c42f1f1",
        "cursor": {
          "ref": "2d984013-7482-4244-9b1b-603b70304496",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ceaabdc2-1b91-4f1a-976b-e01862dd352c"
        },
        "item": {
          "id": "c7529344-e30b-4255-a0c6-fd3b0c42f1f1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5b4e21dd-c708-4b30-a107-5c3f96e557ce",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "6b3c2daa-7b0f-47f8-86ce-116b2fc16ff1",
        "cursor": {
          "ref": "1c9ccd79-b4b5-4a3c-ba60-84dcd2a1c99a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "50c52516-8b33-49ab-9c63-12fa95cfa579"
        },
        "item": {
          "id": "6b3c2daa-7b0f-47f8-86ce-116b2fc16ff1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7086f022-79dd-403d-9745-7e5449b787fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2a7cd7-8d1d-4b16-85e1-30931dd70563",
        "cursor": {
          "ref": "98d92f32-eb39-4091-ac03-01bbf7ba8c00",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c828184b-b5cb-4de9-9540-d92ec0bf0dd1"
        },
        "item": {
          "id": "de2a7cd7-8d1d-4b16-85e1-30931dd70563",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4a2dc01d-f65c-4d3d-b474-886df1dafaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d34268f-68e5-425c-9c3e-4a63d24dd334",
        "cursor": {
          "ref": "77de4141-6c80-4616-a8dd-4613779241a1",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e80af912-22b7-4111-a394-1b35521b044e"
        },
        "item": {
          "id": "2d34268f-68e5-425c-9c3e-4a63d24dd334",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "83ce7bf7-d611-4f93-b05c-a1f5eeb70dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e94bc5-9e34-453f-86d9-f7601159779e",
        "cursor": {
          "ref": "c0331b16-430c-4d9d-8a60-450cd72e489c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e08a98b2-a530-4ecb-8835-5c7a4de1ee4c"
        },
        "item": {
          "id": "e2e94bc5-9e34-453f-86d9-f7601159779e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "109becd0-75f1-42bd-ae57-58e1648eb821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e369b46-0127-4f83-920a-94a5f16fe12b",
        "cursor": {
          "ref": "3a9acdfe-41bf-4644-bd82-48711eea0762",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d5f0b7aa-21a3-4d8d-8d31-db7f26b8baa8"
        },
        "item": {
          "id": "2e369b46-0127-4f83-920a-94a5f16fe12b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d1743d33-a92a-4804-a3a4-312a04a6f2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24533ec-ca79-4605-9ae0-a324edbc5c64",
        "cursor": {
          "ref": "33d71ed0-5e0d-4ab7-b0c6-202c1b5bedee",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8bca41e6-b987-4bb7-97c3-0f70c437a3a3"
        },
        "item": {
          "id": "f24533ec-ca79-4605-9ae0-a324edbc5c64",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e986f67c-de32-4a10-a199-648a4456c0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ae447a-f9d2-4d85-b46a-f5044dd3f79c",
        "cursor": {
          "ref": "1b54354f-c594-4153-b82d-5b5c610a1c5f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5b92f40f-73ce-439b-9513-6ab76f566e4b"
        },
        "item": {
          "id": "90ae447a-f9d2-4d85-b46a-f5044dd3f79c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "01357309-f3b6-4e64-8f76-75e07e9b7e0d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "a520bab5-6c7d-460a-8a9b-ada0780a6445",
        "cursor": {
          "ref": "365b2554-2763-4a56-8ef7-a1fd7091329d",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dabcb3f3-780f-4ab5-8ce7-9ee9c68c56b4"
        },
        "item": {
          "id": "a520bab5-6c7d-460a-8a9b-ada0780a6445",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c225aa1f-e54f-42c5-99cd-4fee639e628f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 146,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "be3a20a2-cf51-4656-972b-15249b462413",
        "cursor": {
          "ref": "469b5eea-94f4-4cd1-b6d2-10de57a8d387",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3753de1d-5924-4ba0-bd4d-1bb6259de0de"
        },
        "item": {
          "id": "be3a20a2-cf51-4656-972b-15249b462413",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3f20ee3a-23b8-4263-b0ec-fd137cb94de1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "51fc1965-6a45-448c-b1c5-786be8efc104",
        "cursor": {
          "ref": "b22cbc9d-8e36-4dda-b117-7f353bf85248",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0ffbb539-1daf-41d5-b513-a64bd21d130f"
        },
        "item": {
          "id": "51fc1965-6a45-448c-b1c5-786be8efc104",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6e90512a-80cf-4d0f-bebd-e09af73e9503",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "6da3dac6-36d7-4688-bad7-684644d2088f",
        "cursor": {
          "ref": "f70c553b-0568-496c-a024-fc4659c7aea0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "53d21eca-4ea0-4c51-91f1-940c28fa328c"
        },
        "item": {
          "id": "6da3dac6-36d7-4688-bad7-684644d2088f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3aae1968-135c-4c78-994a-be7cffb41dee",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "e28351bb-1678-4f1b-9bb5-df979cb43980",
        "cursor": {
          "ref": "6c675540-5a61-4c75-9543-7c8c44d6a8e6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cab36d5a-eef0-48b4-81a6-079dfab95fee"
        },
        "item": {
          "id": "e28351bb-1678-4f1b-9bb5-df979cb43980",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "aafc75d6-aba2-4b57-a82c-f082779d4d6c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e27744bf-3199-4473-92a5-ac3ee5998bbc",
        "cursor": {
          "ref": "6244911b-46e4-4b92-beb4-b53c4cf69c65",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "37dc3ac8-f83a-411d-a010-149213473055"
        },
        "item": {
          "id": "e27744bf-3199-4473-92a5-ac3ee5998bbc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e522d92a-5fcc-4282-a539-2f08b22262c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344fac47-7e5b-4d3f-bc65-056e4fb670e4",
        "cursor": {
          "ref": "05c66df1-cdd6-452b-ac4f-b45cdf72ae64",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3eae3d51-2bc9-403d-8fb7-0cd5ffd73083"
        },
        "item": {
          "id": "344fac47-7e5b-4d3f-bc65-056e4fb670e4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b467841e-f28c-4eab-8766-cf6aa0054598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9615e85-fce1-4110-b24b-0d15af7609a5",
        "cursor": {
          "ref": "513c46df-b4fe-40f6-95a2-1c89e26190bd",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6c9cdfb1-5558-4f54-938d-e944fff47bae"
        },
        "item": {
          "id": "e9615e85-fce1-4110-b24b-0d15af7609a5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "44e43442-d4ae-4a59-8b53-a03490e93d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e4857c-c56c-484c-9864-cf1783ad4bb8",
        "cursor": {
          "ref": "876eec26-5e44-40a2-bdcc-67ed242bb9b5",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e06799ce-76c6-46ce-9f3d-0fb48d515519"
        },
        "item": {
          "id": "c0e4857c-c56c-484c-9864-cf1783ad4bb8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "51df97ce-058e-4f43-97ba-aab0f826916d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a490ffae-a58e-4f2a-b052-cba4cde39fd5",
        "cursor": {
          "ref": "068ff7ae-1a74-45a0-89c2-0bf65ab366bf",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8cd06730-5575-4b3f-bcf4-f8c0041af95c"
        },
        "item": {
          "id": "a490ffae-a58e-4f2a-b052-cba4cde39fd5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c99cfc05-7520-47fe-b0b4-85d27ddd0c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d441c638-fab3-4ce7-93d1-604dfc3dc2e6",
        "cursor": {
          "ref": "a55c51df-c238-43cd-917a-dd478bfa77db",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0e156280-25d3-463c-bb65-60dd85620420"
        },
        "item": {
          "id": "d441c638-fab3-4ce7-93d1-604dfc3dc2e6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2e973fc8-3725-4a9e-b7f3-2562c76e5337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac12bbe-1465-45ce-bc58-4ddb13fab3b0",
        "cursor": {
          "ref": "70380b59-e94f-4f39-b1ee-c3bd27740efb",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fa41a5ca-102b-4dc1-a56b-5eebe91f9e7e"
        },
        "item": {
          "id": "dac12bbe-1465-45ce-bc58-4ddb13fab3b0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "21c8638d-8569-429f-bc2e-2aa75bac4eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04371d21-9076-4c54-a829-782ef597d5ca",
        "cursor": {
          "ref": "49916309-a9c3-4ad2-bf09-a81a16f6f53d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8fe90347-1e50-4ce0-8833-bab92b55bf39"
        },
        "item": {
          "id": "04371d21-9076-4c54-a829-782ef597d5ca",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1af0b7b9-8326-4a03-a6f7-d04e0b1faef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29775532-0b4c-48a8-812d-f54bbfeaeb6d",
        "cursor": {
          "ref": "f2a06f63-d5a4-4689-8edd-c84ca6ba33ba",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "39f294ae-3b6d-4b4c-b137-0bf1f0509cc3"
        },
        "item": {
          "id": "29775532-0b4c-48a8-812d-f54bbfeaeb6d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "04e2c673-0f3a-4a10-a917-91788fba2888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93a7649-081e-46b5-aa55-6f62b9ba401e",
        "cursor": {
          "ref": "6735b783-d9f5-4d91-bee6-16336d113269",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6b2bc2f8-5eac-49bd-8f19-610343104596"
        },
        "item": {
          "id": "d93a7649-081e-46b5-aa55-6f62b9ba401e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5b125534-abd5-4dd6-ad5f-c6c05157bf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a850eb-27de-4c14-8250-7f4f94787dd5",
        "cursor": {
          "ref": "8f1f682b-94e2-4195-b16b-7e9b10ef06f4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "17af5662-c711-4ebb-9a6c-3afd37871f3f"
        },
        "item": {
          "id": "45a850eb-27de-4c14-8250-7f4f94787dd5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fc3989ee-4bfa-4d0f-9d7e-bcf54ac0754d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9477e65b-8c18-46ad-92f7-5d6a5a94f040",
        "cursor": {
          "ref": "de0a6e12-f81e-4c65-93c8-f43d73e70499",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ed86b6f2-1c71-4634-81e6-b9db947935a6"
        },
        "item": {
          "id": "9477e65b-8c18-46ad-92f7-5d6a5a94f040",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b22b6218-8273-44f5-bd46-38f8dd6a88ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9361d408-ed4c-45e3-8967-494a636b669a",
        "cursor": {
          "ref": "424dcc7f-11fd-4187-ace7-2a1affa9c094",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8c834c4a-3ded-4627-963d-4c88aa2cb29e"
        },
        "item": {
          "id": "9361d408-ed4c-45e3-8967-494a636b669a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "feaaeddc-b5cf-49c0-9709-d393339fd131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98651472-75c4-4767-af3b-b51aa055fa69",
        "cursor": {
          "ref": "3641b18b-cecc-4d45-88af-dd1c05c88197",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cafe2539-9f53-47c2-b32b-9ce64203a465"
        },
        "item": {
          "id": "98651472-75c4-4767-af3b-b51aa055fa69",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3998a5f2-b35d-423f-9327-0bdac5d31630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d5526f-bfe5-442a-86e3-3886063d38a6",
        "cursor": {
          "ref": "3ebd4a45-1b95-4e1d-ab31-3b14229532ba",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "31b8e79d-c466-4d4b-9943-bf72c6f5be02"
        },
        "item": {
          "id": "99d5526f-bfe5-442a-86e3-3886063d38a6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ff729930-ef20-4adb-9d2f-d76f80a35a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8726f947-80dc-41e2-a3a8-8ea91f1ec892",
        "cursor": {
          "ref": "c0f76ac0-2c3d-4dfe-bd0f-6c464bba6367",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "19037f1d-535e-4c5a-83e8-60a52c5b4948"
        },
        "item": {
          "id": "8726f947-80dc-41e2-a3a8-8ea91f1ec892",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4249ad4e-2d0c-47a2-ac96-d57eb5cfe227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930c9d7c-b3ad-4673-bf98-08cd7970702e",
        "cursor": {
          "ref": "75a9edba-c2c0-42de-a57c-fe1242114af3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "62a54fda-157d-4e6d-a7f7-580553f93998"
        },
        "item": {
          "id": "930c9d7c-b3ad-4673-bf98-08cd7970702e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0f8a2845-6e1a-4c4e-a7b5-4767035f530d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329396bd-c225-4cf6-a627-eb1d519305b5",
        "cursor": {
          "ref": "4ddabfd8-469e-4135-ad02-b943e3496adf",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a156a3c1-9235-4566-a308-524c9b2e5fe9"
        },
        "item": {
          "id": "329396bd-c225-4cf6-a627-eb1d519305b5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0de39ad1-d3f1-4296-877f-b04ee4a7caf9",
          "status": "OK",
          "code": 200,
          "responseTime": 320,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "137fb793-8650-45b3-a315-d6f0c91a4511",
        "cursor": {
          "ref": "938ec96d-22e1-4cad-893e-73a57b8b91ac",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aea764d6-d354-4f57-ad43-7650f5b60a3d"
        },
        "item": {
          "id": "137fb793-8650-45b3-a315-d6f0c91a4511",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "da0fa1da-287f-42c5-9892-5ca82ef2bc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f174e03-586e-410b-b411-58b53177d4da",
        "cursor": {
          "ref": "406016b2-2d08-40a2-8743-51e8d9a60f0b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f76c143c-b311-46ee-81f9-72d1af3ba321"
        },
        "item": {
          "id": "8f174e03-586e-410b-b411-58b53177d4da",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a7e3442d-d950-4fb0-a33d-24120060830e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc9b0ed-ae55-47b4-9633-65853e68c232",
        "cursor": {
          "ref": "3daa0bdb-a62b-4baf-b690-3874e92a578d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7866e6b2-e8d7-4d17-a84e-637437bef7c0"
        },
        "item": {
          "id": "4fc9b0ed-ae55-47b4-9633-65853e68c232",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ebcad634-029b-430b-b87d-bc4e84d39234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f94478a-018b-4f78-9866-f379d83eeffa",
        "cursor": {
          "ref": "ab8fdd19-3f65-4588-83c3-ad6e8473a2db",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "976ee6ce-25b7-4686-93a4-2575e21d4f04"
        },
        "item": {
          "id": "3f94478a-018b-4f78-9866-f379d83eeffa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ec3770db-7313-4d6c-b271-09db86f06988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0c1ecf-7c70-4c05-8cc6-47063b4d8910",
        "cursor": {
          "ref": "4ef87aec-6228-4695-b289-d219782828d4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "915832e4-5d4b-4b7a-9ab8-70e07034bfa6"
        },
        "item": {
          "id": "5f0c1ecf-7c70-4c05-8cc6-47063b4d8910",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9691b613-1146-46c4-a1ce-c4b0645b1cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ada745-4486-4d0e-8dee-96165ed58c98",
        "cursor": {
          "ref": "651fa7b4-2495-4500-baf9-64446050b3b4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "abe46e3b-85c6-4b12-909b-f54561b4b122"
        },
        "item": {
          "id": "d5ada745-4486-4d0e-8dee-96165ed58c98",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cd3d74c5-0911-4e88-9611-d1c7479f40c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffd79d9-5284-49bc-a42a-06ac2a3f015d",
        "cursor": {
          "ref": "89b25b1b-2d5a-4779-8a86-afed5c318809",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6247b3fe-3efc-4d02-9d93-f29411860435"
        },
        "item": {
          "id": "2ffd79d9-5284-49bc-a42a-06ac2a3f015d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "acc57238-fd65-4937-b4b8-8624409023a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6d633d-4b32-42f0-8911-800ced6717e0",
        "cursor": {
          "ref": "0b36382d-65c0-4744-aad4-075c2d1407e6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ed18232d-418c-4534-8dbf-ffed5d073cb6"
        },
        "item": {
          "id": "4c6d633d-4b32-42f0-8911-800ced6717e0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "09aef728-3630-4507-bcf5-59d247a338a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc35512-b717-41e1-a677-44ef09daf63d",
        "cursor": {
          "ref": "50f78381-cdf4-4fda-a515-b7c934b345f5",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ce7ecf5c-79d6-4da3-8e64-ed4a1a751e55"
        },
        "item": {
          "id": "9fc35512-b717-41e1-a677-44ef09daf63d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "072c2b6f-a3d8-4f71-a41d-a937e39b6c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6010a8fe-a45e-4b4c-984c-b937f0eb8080",
        "cursor": {
          "ref": "e0106661-701f-4a08-9eed-a6f552e5e958",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7da739c7-1eed-4361-8408-854c803121b6"
        },
        "item": {
          "id": "6010a8fe-a45e-4b4c-984c-b937f0eb8080",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1f0e6391-27fd-4097-aaf5-0edbdd19c71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790be2ad-bb40-4c8c-bdc2-b2e9caaf8b89",
        "cursor": {
          "ref": "75089e84-d383-459d-bee6-cb0264987a45",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dcddf782-9136-4c80-9b00-0720c583ecf9"
        },
        "item": {
          "id": "790be2ad-bb40-4c8c-bdc2-b2e9caaf8b89",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "57f32183-8394-42ba-9eec-ee6a251a0af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1d7820-0684-4b8d-8397-0afb37ca7dbe",
        "cursor": {
          "ref": "969d3557-9434-4057-934d-0ca6a8b6f056",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a4588ed0-c9cb-4720-8d06-421e75b817be"
        },
        "item": {
          "id": "0f1d7820-0684-4b8d-8397-0afb37ca7dbe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "64a4965a-f33d-455f-bf91-0846758107c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634a2746-99f4-4300-9abc-24d0155ca326",
        "cursor": {
          "ref": "0c2dac64-602d-4dc6-a887-41dbf3e04342",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e72fcdd3-ac2f-4f8b-b4bf-9ce797d952bf"
        },
        "item": {
          "id": "634a2746-99f4-4300-9abc-24d0155ca326",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "592328c9-a604-449a-8b2a-61ade13cb028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13e3ccf-ad8d-480f-b8b1-2679b4148253",
        "cursor": {
          "ref": "fbd98bcc-3e35-4c8c-b6dd-67e81f5af9f4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "96d339a9-4f73-40c1-b24c-fc7db70b5aff"
        },
        "item": {
          "id": "f13e3ccf-ad8d-480f-b8b1-2679b4148253",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ef43928a-7bfd-4f79-af99-94d889ea022a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57b95fa-0ea8-411f-b954-95c85856570f",
        "cursor": {
          "ref": "cc5b9ac7-29d4-4376-a42a-f7a8b647db0f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "34bee444-88d2-481a-8752-545c04bfcaf6"
        },
        "item": {
          "id": "c57b95fa-0ea8-411f-b954-95c85856570f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "12164732-97ea-485d-aa50-9a719e569797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cebf46-58b7-4c52-bf9a-c2558b1c6986",
        "cursor": {
          "ref": "43b0f621-13ad-4f4a-845b-a4d9c58a6c70",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "17f5d02d-f079-4ccc-9b31-a2bb0e2e7b4c"
        },
        "item": {
          "id": "a8cebf46-58b7-4c52-bf9a-c2558b1c6986",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dab4fa94-0f0c-41e4-b97d-61d30c716529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c411e843-adf3-4d80-8504-e998c3974eeb",
        "cursor": {
          "ref": "1eb86ac6-4049-48c7-86fa-ddb5bb89e258",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a376ebcc-e582-4539-8340-da1b581c011c"
        },
        "item": {
          "id": "c411e843-adf3-4d80-8504-e998c3974eeb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "333a668e-0dfa-410a-a750-6baa287227ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ae329c-c591-48e0-bf66-94c50c840400",
        "cursor": {
          "ref": "215f4e5e-d125-4c8e-96c9-7362144d7861",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f6c1319d-82b0-4b66-b3ab-f815dc2a6d5b"
        },
        "item": {
          "id": "20ae329c-c591-48e0-bf66-94c50c840400",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "94789c94-7c12-4368-9d59-e41d0a44ce62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103ac229-13b0-4a2d-8b6a-38a7c2a03c23",
        "cursor": {
          "ref": "b938e171-d27f-48b4-a158-40f7d9fbfd97",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "96e4aba1-e20d-45e0-8dba-b0404f5135da"
        },
        "item": {
          "id": "103ac229-13b0-4a2d-8b6a-38a7c2a03c23",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "97d6250f-5637-4357-a15e-fe139b8187e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9440388e-6103-4676-aa13-09e33d72ab4e",
        "cursor": {
          "ref": "d724d50d-76e1-44a4-87ef-55fc2acd9eef",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "96e9d078-3c43-4e2b-b74c-a7a6f187fd92"
        },
        "item": {
          "id": "9440388e-6103-4676-aa13-09e33d72ab4e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "324ec6d1-8bc0-4d56-b94a-8b9feb15b870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36d02a3-810e-458c-8801-140d876d1f2e",
        "cursor": {
          "ref": "6473c483-0417-4a19-8c66-fd8fd3a0d05c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0fdd286d-b7a8-42c6-b693-433e7bc1a4ec"
        },
        "item": {
          "id": "c36d02a3-810e-458c-8801-140d876d1f2e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "304e1890-748f-42b9-b54d-f23cee9c9ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ee60f9-41f5-4038-83c6-596d03b32b8c",
        "cursor": {
          "ref": "0cafc184-1824-4c9b-b447-32479b004b57",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "033bf614-ee75-4df1-9af9-18b19dbbf5cd"
        },
        "item": {
          "id": "a6ee60f9-41f5-4038-83c6-596d03b32b8c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "84a1cde1-f6de-4148-a6c1-53cabe958ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421c100b-44af-44b7-ba01-3ea321748a84",
        "cursor": {
          "ref": "9c20fbe9-1017-41fc-8b1d-a566552a26c4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "798b6361-8409-4b7b-b039-d093ff7ef7e0"
        },
        "item": {
          "id": "421c100b-44af-44b7-ba01-3ea321748a84",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aee336df-d12f-471b-b75a-915b1359bc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be8f4e8-54db-490c-b7cb-8c90bcfa61f2",
        "cursor": {
          "ref": "9b4078d6-17de-4142-9c2a-9d3cad5b6e1b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "33bf0819-7d3a-4a86-80c4-89e9e8cc52be"
        },
        "item": {
          "id": "7be8f4e8-54db-490c-b7cb-8c90bcfa61f2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a60e618f-6093-4365-b3da-424fa8c65a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcac857-482d-4541-886a-22e416da2482",
        "cursor": {
          "ref": "7633d268-182e-4f20-a860-54e039461ae3",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "660293bb-49f5-4619-889c-e920e15479ff"
        },
        "item": {
          "id": "6dcac857-482d-4541-886a-22e416da2482",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d6288074-3c7b-4a90-9528-d630c70bda1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2006fd-392a-4310-a191-e6ff32b15e9c",
        "cursor": {
          "ref": "d5c3b7bc-cfca-4452-a459-591aecbd64ca",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "77ad711c-2f96-4b4f-9428-dea91da39fa8"
        },
        "item": {
          "id": "9b2006fd-392a-4310-a191-e6ff32b15e9c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3a0699b5-3c3c-40c6-96bb-5c19413aebfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b03732-f2bd-4205-b19b-06f8fd1b9e9c",
        "cursor": {
          "ref": "4cc9cfb2-5fd4-45a9-a0c4-e2099f3f5821",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8ec380dd-484a-4eae-a802-4ed87e0e6c4f"
        },
        "item": {
          "id": "89b03732-f2bd-4205-b19b-06f8fd1b9e9c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b5609ff4-1fae-48c8-aa10-ce8e867a043e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e843838b-f178-4268-a4ab-2896df2a419f",
        "cursor": {
          "ref": "6122fd37-9c22-4730-99bd-1bd8adb8030a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ddbe0fd7-a907-42b7-b9d2-3ed820613b7f"
        },
        "item": {
          "id": "e843838b-f178-4268-a4ab-2896df2a419f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4902245c-42e1-41ee-ab47-725d71dd1b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1f904b-feed-4315-9d5a-094d5e961b17",
        "cursor": {
          "ref": "ff01a0e4-0603-4346-b7ed-c63dae135ee6",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b8d27afa-9786-4e45-a427-2b77da78a6f7"
        },
        "item": {
          "id": "6c1f904b-feed-4315-9d5a-094d5e961b17",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cc905c2b-4c9e-462d-aca4-6b41eb8ff9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033ef60d-5cf9-4c38-b6cf-fd7bc1a3bb37",
        "cursor": {
          "ref": "fc3b26ce-45ed-42b7-b982-231d856f54de",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dfa1a8fa-ad53-4039-88da-f62dc951bc80"
        },
        "item": {
          "id": "033ef60d-5cf9-4c38-b6cf-fd7bc1a3bb37",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b1e5d7c8-20d2-4b6b-8b45-d1acaf0e2061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6adb058-1e6c-4e6c-aca8-a599678e0ac5",
        "cursor": {
          "ref": "204e6979-b648-404b-b8c8-1298bf4a130e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8f3f663a-e8e6-495a-94dc-6bea232c9a9f"
        },
        "item": {
          "id": "c6adb058-1e6c-4e6c-aca8-a599678e0ac5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7dae5f12-1497-4ca5-a9b7-e6609ce7a6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34edfc75-01c8-47ad-a0b1-0a641d1bac82",
        "cursor": {
          "ref": "732d4f51-8906-4983-bc79-2f2333442bbf",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "81aa38eb-731a-4e8e-8d80-2046ca0ddc4c"
        },
        "item": {
          "id": "34edfc75-01c8-47ad-a0b1-0a641d1bac82",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0d259eba-e627-4bbd-be95-c9bdd50c53d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4d3c2c-6c37-41ae-a40f-81aef6fc1810",
        "cursor": {
          "ref": "3ac5bf5e-58c4-4407-b7a0-211a55684720",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1ed696c9-38fd-48af-8ec4-c03f4840b896"
        },
        "item": {
          "id": "8d4d3c2c-6c37-41ae-a40f-81aef6fc1810",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e917f60e-58fd-4cf5-8d64-7fa419a7c8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b1a873-c74b-4c8d-b27c-51b88e4743d1",
        "cursor": {
          "ref": "00eec7d4-21f2-4c60-ade3-7f10420f30c3",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d8616faa-1068-44a7-8efd-c459a82388f6"
        },
        "item": {
          "id": "13b1a873-c74b-4c8d-b27c-51b88e4743d1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4a55cc97-ef64-4e2e-a044-b4e7ccbeb7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3213e369-758e-4f8f-8e57-80aaf4378168",
        "cursor": {
          "ref": "4c376e56-f4c2-45b9-b331-546c5ce34054",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "847020fd-59de-4174-9f20-06dccfbb9008"
        },
        "item": {
          "id": "3213e369-758e-4f8f-8e57-80aaf4378168",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "db070c93-f604-4385-8879-1a12f785c507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ca895c-7ec2-48b8-b5a8-7e362fe13f20",
        "cursor": {
          "ref": "20f8dd19-0432-43aa-b6c1-1444d0c98494",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3a834c48-165a-4414-abf5-59a2c3e7c3e6"
        },
        "item": {
          "id": "71ca895c-7ec2-48b8-b5a8-7e362fe13f20",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "83b59e3b-5e93-410d-9b62-34d45d2021f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7323699-0832-40de-bba5-7fb4806f40b3",
        "cursor": {
          "ref": "ff695212-a6da-40f0-bc40-a30d2540861f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c259b779-f91e-44e7-a227-e7c23ebb5157"
        },
        "item": {
          "id": "c7323699-0832-40de-bba5-7fb4806f40b3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "32d11f36-345a-4784-877a-8e52f1bf95fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7dcdb17-da71-44fb-8e25-968bfe783779",
        "cursor": {
          "ref": "54be75dc-f82b-4932-9d3e-69060156ca18",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "08860994-ee8e-4b31-847d-4eb7bf50edcc"
        },
        "item": {
          "id": "b7dcdb17-da71-44fb-8e25-968bfe783779",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9aad2083-83dd-411d-8b0d-288b6f7ef823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54506820-b389-45bc-86bc-04a9d0f0d26e",
        "cursor": {
          "ref": "c6dd4f9f-3dd5-47e4-bb4a-a99233a42072",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3cc7c740-10e0-4bb0-a571-47cf7a1a01dc"
        },
        "item": {
          "id": "54506820-b389-45bc-86bc-04a9d0f0d26e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "46361463-f3a4-4aa2-9600-c304b01d416f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db0a3d2-725d-44d1-9905-7887e6cda29c",
        "cursor": {
          "ref": "ce46e387-5f33-46c2-9ba4-55b5c2c803e4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2573827c-07a2-4f68-9967-e186af3f5e6d"
        },
        "item": {
          "id": "9db0a3d2-725d-44d1-9905-7887e6cda29c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8bb66451-b7e6-40c0-9ec5-39d7ff35953b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d521aa0e-9958-46ce-986b-a08c05003375",
        "cursor": {
          "ref": "8e27b55a-fffb-4227-a468-cc3ca88d80a9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "39180a7f-4aaa-4a88-8282-e0d95636aa01"
        },
        "item": {
          "id": "d521aa0e-9958-46ce-986b-a08c05003375",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fa910ea2-cb2d-4369-8ba6-af3d0bf0349f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed4c91f-a150-497e-95c6-8d89a04e3a0f",
        "cursor": {
          "ref": "4005af46-2ab7-45f8-a558-55ae65ad63f0",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dbc32b35-a71d-4ee1-9b77-3e70bf7d9184"
        },
        "item": {
          "id": "7ed4c91f-a150-497e-95c6-8d89a04e3a0f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "46ece687-37e5-48c4-8430-ee159cd1b202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43161a64-6454-4f21-8803-d2711db95c61",
        "cursor": {
          "ref": "b7e32369-f760-432b-8549-ed9a31cd0029",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "709beccd-bb35-43db-851f-7231399299ef"
        },
        "item": {
          "id": "43161a64-6454-4f21-8803-d2711db95c61",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "527686c9-ad89-4697-bcb0-309849f6b7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ef8ea7-4121-4dfb-a37a-ed680a05188a",
        "cursor": {
          "ref": "b24d5bac-5029-4ebc-997a-c5c688075813",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "61b1280f-2001-4c0a-8b93-b706f53adc6d"
        },
        "item": {
          "id": "84ef8ea7-4121-4dfb-a37a-ed680a05188a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "410b1039-28ae-4076-b03c-429db2a55bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9653157-2976-4d48-bdff-3c4929c346d8",
        "cursor": {
          "ref": "d3f565f5-d620-423e-a710-90aac2320e2c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6a897e37-ff85-4d95-a1f0-3fe5082060f4"
        },
        "item": {
          "id": "e9653157-2976-4d48-bdff-3c4929c346d8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4888f272-c6ec-433b-8128-ff3ae93229c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26224fe-c485-4bbe-b454-af71bdef120d",
        "cursor": {
          "ref": "d52bf425-bdf1-4583-bfc7-a8400fa5e6b2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5098886e-3637-4a49-b9a8-b7b2440b5698"
        },
        "item": {
          "id": "b26224fe-c485-4bbe-b454-af71bdef120d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7d39162b-f6bb-4af9-97fe-0e60a9afc8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d57f10-36d9-4b5d-9d69-c56014ee99ff",
        "cursor": {
          "ref": "dec9c90b-5c3a-497b-9d3c-ef428e9a30d5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ddcfb52-3a55-4b31-bc09-c1a0ca026e6e"
        },
        "item": {
          "id": "67d57f10-36d9-4b5d-9d69-c56014ee99ff",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c0e543fb-58da-4093-84eb-10613f8d5f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f56891-899a-46fc-96f0-f6a4219f2f62",
        "cursor": {
          "ref": "be7d6aec-d46c-4efe-afc6-1d293c830b6e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e1558bc8-9a6c-40da-b01f-c5603e1132cc"
        },
        "item": {
          "id": "60f56891-899a-46fc-96f0-f6a4219f2f62",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "76d81ba3-23b1-4159-bc5c-d24da0d65cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f380f727-2275-4aae-8459-6c84442a9c98",
        "cursor": {
          "ref": "22c0edb5-f787-477c-af8b-b05b22e04ee8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "19eb83eb-1607-4692-8b34-95bda5a32dfb"
        },
        "item": {
          "id": "f380f727-2275-4aae-8459-6c84442a9c98",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4f6429f2-182c-4129-94c7-81caedf5a2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378ac59f-2183-447f-bdef-72f4448a08ab",
        "cursor": {
          "ref": "84e7fda0-ef4b-49a5-a917-d6d8c7a3e56f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d44dde0b-42ec-4a8c-bb07-e3cce8a6d67a"
        },
        "item": {
          "id": "378ac59f-2183-447f-bdef-72f4448a08ab",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7d5eae62-5f61-44db-89f8-72ddc29c897a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de56017-a36c-4de9-bf80-c1a9f6448869",
        "cursor": {
          "ref": "93674b71-6b37-4961-ba1f-a7f0b50d88c0",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b2e5e64d-b2c2-4ef9-a985-2426e0276f84"
        },
        "item": {
          "id": "8de56017-a36c-4de9-bf80-c1a9f6448869",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "92443b20-23cc-404d-8d21-e1df5ec0c222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f473e087-60ac-4754-87f4-ab2078928a05",
        "cursor": {
          "ref": "392cc5b6-ca63-4f9c-a374-db8d2f212de8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a9939386-956d-41bb-962e-07b76f192437"
        },
        "item": {
          "id": "f473e087-60ac-4754-87f4-ab2078928a05",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5453387f-df4d-40c4-823c-30046df067d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5338de5a-74c9-4ed2-af5e-8e4b0895a062",
        "cursor": {
          "ref": "699f5d62-6890-4162-be2c-b7b74baeb9ae",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "996eb5fd-31f3-49f9-8226-491081f53138"
        },
        "item": {
          "id": "5338de5a-74c9-4ed2-af5e-8e4b0895a062",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1d714a4e-111c-4fbf-b219-013150886c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58883ea-6273-4a1e-a38f-bfe19d3e3348",
        "cursor": {
          "ref": "3492ed3a-7683-47e0-a030-6bf127f9376d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d22d499d-a33a-484e-866a-e3796a26a925"
        },
        "item": {
          "id": "c58883ea-6273-4a1e-a38f-bfe19d3e3348",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "db5854b7-597f-4390-8204-9c717df4bb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a9283f-3671-4fc4-b6ac-3b3ad24150eb",
        "cursor": {
          "ref": "bb2829a4-7ba5-450e-b1ae-49cf86f86171",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "98ebeb29-1c5c-4be5-81c6-e2b36a4c12f0"
        },
        "item": {
          "id": "c3a9283f-3671-4fc4-b6ac-3b3ad24150eb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6dab0d1a-bc5d-4127-bfe8-13a8258f22dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e163ff5b-8ea3-4693-a3bd-e2fb8e8263b8",
        "cursor": {
          "ref": "b02f9651-acfc-4d97-91d5-17bea7344393",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6f96363e-4abe-45c1-8926-456c973a2c68"
        },
        "item": {
          "id": "e163ff5b-8ea3-4693-a3bd-e2fb8e8263b8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c0a9d7dc-e364-4a5d-a2bc-e04157c8c5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf77d0f3-b446-480b-9769-b5a9fc50029b",
        "cursor": {
          "ref": "35f33372-f78f-4e50-a4c1-f253092e24e0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6155124f-028a-44e1-af74-df8a62ad7a99"
        },
        "item": {
          "id": "bf77d0f3-b446-480b-9769-b5a9fc50029b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "71520367-5235-4bad-ab7c-30297d679bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d8b54c-63de-4710-9181-d859c90fff8a",
        "cursor": {
          "ref": "be74c496-6079-42e9-be55-50c14635f006",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c164e086-7696-46fd-9aac-7c96c8fb5a22"
        },
        "item": {
          "id": "e8d8b54c-63de-4710-9181-d859c90fff8a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2f2880f9-8aa3-4b5d-abe7-30d6e57babe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5a78de-dc98-4627-a151-9ab5f1809065",
        "cursor": {
          "ref": "52837aee-0936-4a66-838e-61d7ad1a0a7f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "98001672-06a7-40b0-bf7c-7e388cd68ebc"
        },
        "item": {
          "id": "1e5a78de-dc98-4627-a151-9ab5f1809065",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a63278a4-2938-4070-a8b7-720c44d11a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf4ea49-7102-473e-b03a-b1f0d244a1e3",
        "cursor": {
          "ref": "61048685-caab-419f-aed7-8617bf78dd30",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "636af530-7d9f-4c24-a22c-d8bd8daed947"
        },
        "item": {
          "id": "baf4ea49-7102-473e-b03a-b1f0d244a1e3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "24be048f-0fb6-43cc-aebe-619e86529a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d19054-22f7-43b7-93f9-d3baefca45c7",
        "cursor": {
          "ref": "331915a8-ce7d-486f-a6ca-5152a5077404",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "aa8d577f-fb13-4466-aa77-7528a9b58071"
        },
        "item": {
          "id": "a4d19054-22f7-43b7-93f9-d3baefca45c7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bd45a46d-656d-45f2-90f0-b90a87c9b362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9877c7a9-3a0b-4ee6-a41d-49f05d435572",
        "cursor": {
          "ref": "e51b3018-32a5-42f7-9e41-27b8f0f70e6d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9dd78754-8797-4e4e-9996-a465c21d63d4"
        },
        "item": {
          "id": "9877c7a9-3a0b-4ee6-a41d-49f05d435572",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c058618d-0719-4d23-a5b0-696e906162e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b4712c-b8f1-4475-b92d-a2368ac7d4fa",
        "cursor": {
          "ref": "9678393c-6a3e-4c31-ac90-a55c7a257902",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "13e09799-131c-4117-bc37-78ed9721203b"
        },
        "item": {
          "id": "a2b4712c-b8f1-4475-b92d-a2368ac7d4fa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "59adf267-a33b-48bb-90b5-81b7f3441746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfe15dd-6c2c-49e2-af37-8503777c953c",
        "cursor": {
          "ref": "8746d027-f37d-4f2a-98c4-b1d385fca841",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1d4cebde-bef9-455a-9fd8-6fb9189e8af7"
        },
        "item": {
          "id": "bbfe15dd-6c2c-49e2-af37-8503777c953c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3c5eb9d9-beca-41ca-a16c-9d605d78ecab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49acec2-cc1a-4ab8-8fc0-3675b9ef6023",
        "cursor": {
          "ref": "480d48f9-a4a7-4d6c-885a-6503b0fae4f8",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "829fac42-9621-4318-b096-1a71d3a5c642"
        },
        "item": {
          "id": "a49acec2-cc1a-4ab8-8fc0-3675b9ef6023",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f8107a87-081b-404d-a21d-cdbba24e68ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7da36eb-9cee-4f67-b686-b84babf472bc",
        "cursor": {
          "ref": "af9563f7-d5db-4352-aa82-ec83081ca86e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4d4c53c8-fdf6-4887-b961-94876f5032d2"
        },
        "item": {
          "id": "f7da36eb-9cee-4f67-b686-b84babf472bc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7521503e-7a48-4ad6-a7be-dfb1f364edca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265b690e-b7c6-4599-98a0-ae41dac0d493",
        "cursor": {
          "ref": "2720ad3a-ce85-49d5-82f1-abaa23efd826",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5dc1871e-af41-45db-bb44-fce8fe36007e"
        },
        "item": {
          "id": "265b690e-b7c6-4599-98a0-ae41dac0d493",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "61d2f426-71b2-4f31-a50d-24caefe765fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3576751-7f13-406e-9126-7858b0033f30",
        "cursor": {
          "ref": "09a30519-257d-4084-ac61-aaa5a4b9eba0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "20e89dfb-9ef3-4a99-9902-b320bf91f884"
        },
        "item": {
          "id": "f3576751-7f13-406e-9126-7858b0033f30",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "370bc990-070e-4de3-a5ae-d7a8eea5273e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01daec6c-0380-43e4-aa6d-23c294fb4bc1",
        "cursor": {
          "ref": "52f38057-5707-4477-9be5-b95667a9304a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1b0a140c-96d8-472d-b61a-e2d40b6d1496"
        },
        "item": {
          "id": "01daec6c-0380-43e4-aa6d-23c294fb4bc1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6d8ee610-f226-41ba-b102-38672452442b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5779ddb4-a29a-45a8-a619-48a074da44f6",
        "cursor": {
          "ref": "58327cb6-d490-4f1e-926c-e127eeacfba7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "743c1f07-d52e-4742-bc80-c89a4668fec7"
        },
        "item": {
          "id": "5779ddb4-a29a-45a8-a619-48a074da44f6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "eadc3039-8147-45f5-a348-702b5a487a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b70fa48-fe41-49ca-9a54-17a3126a281e",
        "cursor": {
          "ref": "92171321-0ff0-4129-b8eb-9b336d590695",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b061ac91-ebbd-4777-b9c2-81c43500d276"
        },
        "item": {
          "id": "8b70fa48-fe41-49ca-9a54-17a3126a281e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c228fb1a-18ae-4b04-b744-900099513640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74785a3c-e894-4e12-951d-04975559f70f",
        "cursor": {
          "ref": "71625911-de1b-4fdf-9846-0fef61d1dba8",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8984989c-bbc8-4b8b-bfb8-775133bf2592"
        },
        "item": {
          "id": "74785a3c-e894-4e12-951d-04975559f70f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "230f36f3-d4d6-4427-bf73-d9952ce03535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11392435-2f96-46ca-b609-1fcfb33e549b",
        "cursor": {
          "ref": "50586fcf-01e5-4d12-8dcd-0d0abc6166cb",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7424da28-6c97-4a2b-ae6b-79bb423be577"
        },
        "item": {
          "id": "11392435-2f96-46ca-b609-1fcfb33e549b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b5a176f6-8360-4803-b33d-d2ef9eb25342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385e03c6-e39d-45fd-9fbe-abe1aaba2ea2",
        "cursor": {
          "ref": "e9889ad1-178f-47df-aac2-d1d33883a30f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "15d3463f-66df-4145-89d4-143bc3b6f55b"
        },
        "item": {
          "id": "385e03c6-e39d-45fd-9fbe-abe1aaba2ea2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4407f41c-9062-49a1-94bd-ee369075a6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ab22b0-4aaf-4def-86c8-611d6d01c3f2",
        "cursor": {
          "ref": "828e384c-a3b2-4601-b918-0e73306a6201",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "07ed4736-d15f-4f8e-8486-cc9ef5dc5845"
        },
        "item": {
          "id": "f6ab22b0-4aaf-4def-86c8-611d6d01c3f2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7299e259-edc2-4b82-b518-f25e7b8dd76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac5df41-b35d-4c5c-b066-4c91739ba88a",
        "cursor": {
          "ref": "0db82c6c-a65e-4728-9137-5a4b427cd53c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fe444798-38c8-4995-a54f-3c71d2ee58c4"
        },
        "item": {
          "id": "9ac5df41-b35d-4c5c-b066-4c91739ba88a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7b3d7748-b860-4a8a-bb88-0f861306fb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56a01e5-5fe0-4bc7-81d9-a5f63bc7dc2f",
        "cursor": {
          "ref": "14f11e24-77f7-4a41-96d3-9fb660a0d1b6",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bc0d6143-3702-4cbe-8bb4-221dbea2891e"
        },
        "item": {
          "id": "d56a01e5-5fe0-4bc7-81d9-a5f63bc7dc2f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "69135fff-6c3a-4398-a332-4e8ebe221a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d101e66f-b2af-443b-aad8-1874f0c79580",
        "cursor": {
          "ref": "74dc0bd7-653d-4a97-87e8-02e265ad4ce3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6d0bfd66-3f05-48ca-a5ee-2c06dabc4e7c"
        },
        "item": {
          "id": "d101e66f-b2af-443b-aad8-1874f0c79580",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "21eb93cd-8b22-429b-a166-b00c521fc32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9b7d49-1415-4888-98ac-a2571987a427",
        "cursor": {
          "ref": "1e01213e-e23b-42ef-8990-c5c76a59ce38",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cabd96dc-2103-4714-a845-d16a980b5e50"
        },
        "item": {
          "id": "7e9b7d49-1415-4888-98ac-a2571987a427",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c1c274fd-118e-4e5b-83d0-53031773a8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cf723c-52a6-43a3-9a98-6c8b44448b94",
        "cursor": {
          "ref": "987b69dd-597a-477c-82f4-fc090934e7d8",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b6067741-6928-4e5d-9b00-534f3bcd6ecf"
        },
        "item": {
          "id": "48cf723c-52a6-43a3-9a98-6c8b44448b94",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "71e0d6ff-17e5-464d-820f-e5bf79e1da76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51da67e-a3a7-44d7-bc2d-5c3ca83c78fd",
        "cursor": {
          "ref": "57a2af52-123d-4056-b089-8ee8b2d84f5b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4aede986-b55d-4c4c-8e9a-4b01170ffd42"
        },
        "item": {
          "id": "a51da67e-a3a7-44d7-bc2d-5c3ca83c78fd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d1da2600-d63d-4f44-a605-d9178ad53e5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0c21e3-c6f2-45a3-a3b4-d088895cca19",
        "cursor": {
          "ref": "a8aa6f0c-10d3-494f-82c0-d61aee384c9b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "35df3a72-6aab-47ef-889b-9784574076d3"
        },
        "item": {
          "id": "8c0c21e3-c6f2-45a3-a3b4-d088895cca19",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "86fffbb9-438c-4669-9224-26ee331d0658",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "339df057-4bcf-47bd-b612-c70b1cdda0f0",
        "cursor": {
          "ref": "370eea28-c2ed-49c7-b45c-113617b0b336",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "86912ffe-53b3-4cc7-b3ce-056a9db775a0"
        },
        "item": {
          "id": "339df057-4bcf-47bd-b612-c70b1cdda0f0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4b138060-17d5-468a-bc59-740b3d74e40a",
          "status": "OK",
          "code": 200,
          "responseTime": 4988,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54f3d8d-7fb9-4632-baee-144ca721ccf9",
        "cursor": {
          "ref": "5ce228c8-446a-4966-b859-1aa7d20a791c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "71f32b45-8abe-4311-8d3c-a5f7cbd0d9d4"
        },
        "item": {
          "id": "e54f3d8d-7fb9-4632-baee-144ca721ccf9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ba6617b8-3dfb-4bcd-ba2e-5e30eeadf49a",
          "status": "OK",
          "code": 200,
          "responseTime": 6934,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d829ede5-e231-48ee-b2e9-625379240407",
        "cursor": {
          "ref": "cb220db7-e85e-4b2a-ae79-04f9a7553d2a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9ff3695e-7729-45ef-b969-7f624deda884"
        },
        "item": {
          "id": "d829ede5-e231-48ee-b2e9-625379240407",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ce817e1a-2022-43a7-ab49-2ee035664c38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d829ede5-e231-48ee-b2e9-625379240407",
        "cursor": {
          "ref": "cb220db7-e85e-4b2a-ae79-04f9a7553d2a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9ff3695e-7729-45ef-b969-7f624deda884"
        },
        "item": {
          "id": "d829ede5-e231-48ee-b2e9-625379240407",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ce817e1a-2022-43a7-ab49-2ee035664c38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd91be6-7bc8-4d6d-96b3-4f617978094a",
        "cursor": {
          "ref": "b46723b9-0866-41d2-b4c7-2933b6ada6c2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f3b92182-13e1-4996-96e6-ddf3c2948bf1"
        },
        "item": {
          "id": "0bd91be6-7bc8-4d6d-96b3-4f617978094a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "39337a08-3b73-4c7b-a9a1-b253a67b7893",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ed82c9-c3e2-4cee-9a46-563cbedf5cdf",
        "cursor": {
          "ref": "8d32c6b8-9d8f-4ee5-9f25-cadaeb63c8dc",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f9ca41d4-c576-4075-8034-47c05029624d"
        },
        "item": {
          "id": "21ed82c9-c3e2-4cee-9a46-563cbedf5cdf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ed4be677-4195-44bb-8148-142fd006dcab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}