{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0a7e6473-e00c-4264-b67f-dbde0acee0c7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "80143eab-2de5-4993-b7af-2c2e1779e8e8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50d99005-8a94-4311-9725-9048ab917266",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1834a30c-f2fb-4410-b978-b4eabda60a66"
                }
              }
            ]
          },
          {
            "id": "473d9fe5-248d-4481-9054-5f7f9c55cc3e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "505bc748-2686-4f73-973f-0f56649070de",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b1bfa7b5-8f97-43b9-8853-e8d6af1a38ed"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8ceb9292-0093-4d62-8d80-e112be6a3971",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "38149587-0fe0-47dd-ae2e-8e113d8ef051",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27b14c1f-4f7b-4739-b6ca-8cbc14cc525b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b8ce286-ee22-4353-97d7-40258a8272e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3b7cfc6-d5f0-4bf3-bebf-1c6e3a829e34"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d94a6dca-2e49-4a26-a9c9-d88d4cf2cfc3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5511bd6c-4cc5-4d16-a3f1-def8d2ed7278"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0ecc4a3-02d9-45c6-86cf-c09bfb5194f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9c5b76c-9ab3-4b89-807d-b77500d575c4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13e83ac5-6e71-4c2b-9ea2-58c27be426fb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ac9febb5-b316-4921-ade5-d1fdf1d15fb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "138a8fe8-016f-4a59-84cb-ab24a3440dab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69fef4c6-0454-4bba-98af-26fca7d7a6e9"
            }
          }
        ]
      },
      {
        "id": "c90958cc-0aae-45f1-afcf-f70537a63738",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "786ca5b4-1dd9-419c-b67d-b1fa435ae5ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99da404b-f0ed-4eeb-b242-c7414e18fe96",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cf1044a9-6ce7-4dec-8ee1-bc9bee702ed0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87905d08-ceb8-4461-9ff7-52828d8da95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b861aff-29d0-4c89-8e84-27a0a22ab64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96248bae-c2fe-4dc0-9db1-a01845810487",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c890a89-79b8-4624-a2c2-fcd8c3ce7a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57168626-2567-4196-8343-393f2977d076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e4d70c-ea81-4205-b65d-cabac1a5cad0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904112ca-8966-486b-a73b-4eebbdb65f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ce15496-f2e2-446b-9819-38ed638df622"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5db75829-484f-4a8d-b570-73c1d5d3aa67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee70fe08-a9d5-43da-ab16-26376b46f500",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd797cfb-40aa-41db-9103-85474be5874d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dd8c53e-4a56-426b-b86d-21f2b44f0b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e2bab5-1544-40e0-a648-d85fee18065f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54cf6d7-b3cf-4c7b-9e9d-621f751a0745"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "149274da-f627-4ec8-b6b1-fb1ed72b7cc9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e228d7e7-db0e-47eb-ab92-923a5a124121",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b733bd97-e266-4f3e-aad7-5e6f4b3ea3f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d512e0a7-0df5-43fa-a7d2-0b283eec822e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "899c7e26-3d52-41dd-927c-bf8c0395fb2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3af308ea-a377-4f92-ace4-e0972fd836ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fe5a38a-491b-4816-b602-c7e3e3067054",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba665b40-752c-49ec-96be-8a5fe685212a"
            }
          }
        ]
      },
      {
        "id": "1999aae1-7df2-486e-b170-c97ab455f664",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b781fb01-6870-4ff5-9ef4-dbedfca6ceef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0483321c-9064-4fd5-ad60-547a0ab8c079",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a9044af2-2fbd-4e0d-8a5a-46536c5e9c3c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6e87d9-c7d1-4ce4-abff-aa3f724f78ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece81a4f-a2de-4874-b215-a0ae0d521a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1193a517-9bc2-4831-9a7a-727bc6cb63b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18127db8-ac7c-45cc-bb06-a6a395f9b4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806bfb50-4bef-4652-af28-be9d92a60d04",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7671dadd-3738-4ca4-91ec-d5ce6f6bfc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0433d9a-de8d-44be-be1e-471ad7f3213c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c93be51-338a-40ae-a791-3ec4d4a9326a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f983ef1a-cc0f-4e18-99c1-cb5cf396b8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8a6715-afbc-4d24-96f3-004ceb7efb8f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0a4049-0789-433f-b0d3-07818cc09347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804cc936-77dc-44bb-b432-324c19f2bb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d9d46c-6581-4e53-9114-c608a0a77fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d400f222-d58b-4222-b661-a86d1e6eb9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c880e6ad-753e-4581-b888-575e9edc8cb7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9833b995-468b-43c1-bfa3-b5fe581c567a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ce2c46-20c8-4596-84d4-559bae677327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a61b6e-9245-4717-a463-991d0e3365bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7c421dd-e2bd-4adc-b28f-fda44242a56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cf4d7b-aee4-4e8f-b4b2-d8e8dc59017a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf55e664-8367-4a74-a376-637599c08d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50694262-b967-485a-b663-ad2d3c46317f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbda32f-33a2-4387-be5f-245dac4ec5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0411dfcd-168a-448a-9012-4e51274ee424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2bbf55-77e8-4411-b89c-ac3113c2ef0f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775cc5c8-40ec-4d47-a6fb-0a7419565fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002dc248-5678-4a3c-aa56-467819ad7202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fea4232-50a3-414a-b10b-547180ad9d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eba4a780-2061-4161-8e2e-10222eed1d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be7bce6-b89a-40dc-a8c3-704dcdaabbfb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0cd6bf-faff-4550-9703-87184eb6e809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0220e3af-3109-460f-ae58-7b8a03a27d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d212e40-f463-4b5c-b6a3-220249b06d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96032106-43c6-474c-b3df-3568737af3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1226b143-98c2-45ce-b3a6-15a770dbd8ff",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97002e6a-85c3-4f8c-be78-4489793f2256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525cfaf4-93b5-4af0-a14e-3dfb157c985c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b3f05d-1264-4aeb-923b-e360999bf463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0ca1214-d533-417b-990c-eda78a04c2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d735784-9a17-42f8-a924-61b530513b4c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b91bd2-aa4f-4a99-8ac9-c4e7105d45c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeadc7f-e3dd-41e0-941e-340f69596988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fb82ac-9498-4a2d-b903-982a1527dd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "158299d1-2447-4d89-a693-1844fbb58186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f70d43-1f44-498d-8a5e-3557427ea70f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df134c5f-403f-4a3b-85dc-dea77fecaa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102cf232-e86d-49e0-ad99-e8befb42686e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f0a073-283e-4792-87ce-e60cbfb34b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28303564-95b7-4723-813e-2c39ee1f596a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fbd0cb-9bf8-4aca-a28b-dfbb05f7366c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940168d1-cf35-49ca-9710-ce225137e320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b35006-ec6f-4773-8540-650520b65fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0706fd13-5c2d-48df-b379-4b1b6a3ee1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b364958-5e16-4c05-9619-5986de483cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c787f1-1ca3-496f-8c8c-b35e4d6c5263",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b35a92-1d48-434b-9dc9-1c528ae8d663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28cef08-767b-42a6-ab9a-cd73c7ecf8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3145c73a-7da6-439f-9627-fdeee24f9ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c15662bb-a421-4915-a8bf-25bcfb12df1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59774745-17fa-41f7-b0c4-63f5067439a9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463d59b3-5c88-4d5e-be8d-afb88ca37c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5acb32-853d-4e9b-a729-2a22779173ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b31c023-8f1c-4f46-b94e-cb7435a121c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "740828bd-48d1-4726-a5fb-bb7afbb5cd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fab0443-a2cf-448f-99bd-6d7af87fd12d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459ab27c-25c0-4170-b3be-4985d41a34dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae43e50-e8e4-4f51-8c0d-5f8cc11cccfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81ab398-82d5-4a10-98e0-e827f3ae0285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce4826bb-b2cc-4ec4-a6e8-9a38ec916dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efc6c5e-b717-4973-8ac0-8b4c6b2d70be",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6d1931-b09d-43be-ae5c-8bf148a6a273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7970be9b-7e97-49d7-807e-b66893f3b2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad40604-0988-421c-8c2c-6545910b85d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4e621f7-cc86-4083-aaee-a38bb13c4b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f415c1f-6f2f-4f7a-8542-ef0ab4e35046",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee48960-d94c-44eb-9955-41a5d0ff0463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7d3cf9-0028-4370-b215-90763deb2dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e131d1e1-e320-403f-9f68-c242fb8df5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "437dda9e-2e2a-458f-9160-218dee17a3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1213961-51d4-4bc8-858a-94bfe46c3dda",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67b4a18-2949-4794-b24c-7a47b74aa4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372e2c92-b72c-4c36-a60f-c847205672bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88ad852-257b-4fcb-a86e-44faa6e6875b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "458329e3-3981-4ff9-8787-95d93b9306ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb47972-a32d-4c3b-aeef-a36d81dc9290",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992573be-390e-42be-ba32-a0adbc538eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7782a167-7261-4395-83c2-83dccf9f0d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557babd2-6d47-4deb-9fed-48ae169942f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "78323803-141c-4404-9f2d-ed20e00725c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d95692b-905b-4cf7-aa02-71c2850b4201",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5ed850-9eb0-43c8-af67-277328d08741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b70559-0ed3-4705-a74b-593d228925d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923fd0fb-b67d-4881-b17f-d66db8a39b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5789bbf4-80b0-44a5-a0e7-d84b5a81704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a825388-53e6-456e-9bdc-8ae87f6ebf08",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a180378-4c4f-4127-a95f-268605eeaf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e48d461-8c71-45cf-881f-b708e8dc9d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8adc23-1054-45c6-8be6-7a4da6424bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7967cb26-5abe-48e8-ac9d-62ee9273a74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0882a82-c898-4d77-928f-afbffd58f42d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bdc311-4191-450e-8dbd-d96f98a6bbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d74fc6-ad3e-4962-b04d-d3be2d88d865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff457b1-aba6-4ba4-8284-a6675ed3a40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7d2477-c7b7-431d-a115-0960f602e10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f05f542-2345-43b2-af2f-41a2bf754d78",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d7e6a2-e7dc-4095-b43d-d5eaca079ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b558eda-0658-4253-bf1d-4c81741c3ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46550d0e-9397-47fc-81c7-95e7288f6c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da9d1d9e-ed7d-45b3-945a-7699944aa4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1314e4-d419-4aab-9f65-445a7ba90832",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa33b1ae-cf27-49f6-8501-311a0f45e527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc52cd08-56d0-4049-b3c7-61c385fa4ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea49b4e-fda5-486f-8ea4-12a1ade2b996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "776054e7-49f1-4338-a5ec-8497ada3efbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508e56b4-6b98-4354-94c7-b847f693b973",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00eede5-9822-4665-a3e3-1e30829412c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ac0034-0484-40df-86b6-5f3844442f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82db62e2-0c41-4506-b0e1-6e0b3ba15efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca91fd1-24b8-4691-98aa-26703e0d0fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e476a0-0dd8-4475-b254-b12ef320b040",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38bbf3f-adb7-4533-8fb9-174522ab3c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173c871f-5470-446c-bedc-463350c52953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc7c728-d1fb-4e3c-b1fb-07484126a5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff10bb6b-c80e-4180-97d1-e31206774d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ae8ce4-07ef-4ae4-b008-34b699262276",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760355b8-431b-4c3b-a10a-abf5a002ed6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8639121-d791-483f-890b-4f5557ca63bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f341ecb-4e36-4e98-8448-81ea7ffdbbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29df4156-8ab6-49ba-89fd-e3f000c4c21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df22706c-a217-4753-bd0d-43bc9281f3a1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ec1b1d-d398-4ecd-9690-b699f6f6e40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6699fd9-6783-43a2-94cd-5cdb3dd88ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca232047-451e-4def-9fb8-26a9a727f867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83577e2a-f9b5-4a2e-9993-a2e8ba9f761b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0afe92a-d3b2-4d4d-80ae-e87a579633a8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3eae03-3e33-4710-866f-ab004f1a82e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fca83f3-aee7-4bee-92fd-7e6110ce86fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a16392-9652-47cd-86fb-df387bf7c0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38fa8ac6-23cf-4c87-8f4d-e077828adf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5cbdcf-3ec5-4a60-bb7b-0dc94774b732",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba02d00-4bc3-4db7-bdd1-26c6994339eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a380033-7e84-4824-b567-2f48e4246387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fca90fd-656a-4bbc-b72e-c1c341f6d13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b64d5648-918b-4e72-bcb8-244c2266bf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f493726-8c85-49a5-98db-51836eba485e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ab17ad-04f6-46d1-8d2d-bb8b110c958c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bd2301-fb75-430a-8839-6ea7bbf6bc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedaedd1-7841-4316-a2d7-d68bd4ed5d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b90377a6-dca2-4ebb-8c86-21c57f3249d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c103a6a-117f-4727-a22e-cb5112d95c20",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1370913d-4710-47d3-923f-98e88ccc0d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0654a9f-3266-4b2e-a5ed-09207b607fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a902101-b765-4acb-b330-2363104e4187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c06a0b4c-f9ce-47c2-a6eb-1884753f14cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a581b207-ece0-495b-833e-e642ee6cffa6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e3755a-2131-47d0-bae9-eaf5a41760aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce56c723-ae55-4ff0-897f-e2ae363bfc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe64fb1f-0deb-4a37-be79-6e8327799c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd8ec7b-2d23-4f25-a68f-ec5f6ea32de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c537438-2ab2-4b5c-af88-671c3b1dad4f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d11f49-0328-4252-a699-03f256a4e801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8e5d19-1743-43d7-817f-bea3b4438902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ee1608-ab6f-4583-b44d-c448221b0e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb563f4-3f47-47f9-9129-f077fded4df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b443430d-afa8-4b82-b7d0-5aa6eb19c2a0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2b5afa-4821-4122-8c9f-0dc150782ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36597a6-80f2-4b45-8bba-b60f2f6dbcf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e0bfa6-0f1c-437c-8daa-a111d6e524a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d403576a-9389-4e29-9ef6-5d808c78f90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4af323-ad37-4c51-a2c8-02eb623ca71f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1b4852-b91e-4719-8ba8-821ef14809c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd32467-cb74-426d-b4da-add2817d7489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0191b67-542c-4f97-b738-6ce842d74dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "58d1b505-1765-4c6a-bcb2-5070131ae7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586e75bf-b259-44f9-9e00-6f90aee1644c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60cc2ed-2cd2-4b75-8644-d233e79bde47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42b6b7fc-fb00-4bd5-9ca5-61503ac1a5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be284bf-06f6-4657-a5c7-54d828a360ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5046053e-c9b6-4d61-82b9-d6a421db535b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c895e5-425f-4c4b-a180-f64a99cfb2b7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25467d7d-646b-4c17-a98b-2a4b6ff780f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262def36-756d-44ba-8f9d-6cf0c859d9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3464c47-fddf-4ba6-b9da-7bf5164377b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19b6c0aa-2ff5-4db1-a322-58e4d54fb0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbfcab3-eabe-48e9-b56a-b4be2c214c15",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d212ced-5713-477c-85ad-0173babc80a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cb2cdb-5b21-4149-9159-3da079001d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb48c1c-5685-4da4-adf3-edcfb989e48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "de65e678-d504-46f2-b98c-7a5a1ad80807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f5e91b-12ad-4d89-ab4e-ab6434e9429f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2bfb8d-c17e-415c-abd5-0943f7921285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4367eb1d-4d4f-47ae-aee3-fd43848ca75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfda3f1-83b9-43a5-96d1-4298daf6b593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea677937-8ef2-48e6-b812-459ff42b71ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ab6be3-1a2f-426c-8b02-fea0600df589",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a024aa8-799d-4c69-bdef-bd4db2692cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643a10c9-6249-4dc5-9a15-61a1e284d1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9ff49f-4dc5-4b68-a5bc-6c6372cb59b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1ba0d8-58a2-4f90-a503-abe19b139b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331b7950-65b1-4898-afd3-b7df673036c8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001a4a50-dc0e-4fdf-b248-57598f095ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c10d2a1-6bd5-41ee-87d4-42b89c2c6418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0800b05-1d3e-4dcc-b811-5ce7943360fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0371a2a1-1ab2-4de2-8329-d0e8094685f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1fecba-8298-4b36-9937-5234cf163da6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7313a1d4-31db-4389-b523-960927aa707f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f015b2d-2db1-4208-87fb-e1b923897af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb116383-2ef6-49a6-81cc-8b89cdd219e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "399be685-4070-4c91-8c9b-cc769ab29e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856945af-bb00-4455-bb75-963d48c40c77",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b2a4ee-22f0-4445-83b7-46d30726ca62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989d37cc-cee6-48f7-9e1d-6f2408aaf317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2154b6-09b8-484b-8350-bfbc81e9e8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2348fc-2771-488f-862e-cc2e999df1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539e680c-9fd2-442c-a9f4-374d31fe8078",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26948b9-a579-4aa2-84d6-a93ab039418b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa1f288-c38f-4c28-be58-be847fb6d061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a928e1c-4440-4662-8dda-b7e92a644a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b9cd63-1168-4814-8e1f-b98d86571d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1185a61-f7f3-471a-a0df-7546440286eb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f793a55e-d63c-4595-be2c-3bcb0dc6db11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cca3b4a-86de-4935-95e1-a033ad26bcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d265db-1437-443e-b51d-8cd544ce084a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb172ead-5c8d-43b9-aa17-ace0e4851b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa16c865-8696-4d7f-82c4-817aa4f4b8ea",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28005a9c-0d38-42e5-8cc5-bbd61356c777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5559a3dc-dc60-4943-80e4-cb4a19b95856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28096f0a-bc0b-4f8f-9022-c3c2a95ce535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f0e9e3-27a7-4132-bb25-796c6f55e650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9721a82-5e0c-4b96-b9dc-c6c6415425fd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7854a8-3980-4b81-bd5e-65e62377bdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e33e486-fa0b-457c-bbee-968395980dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fad3361-e09c-4216-bd9a-c4491b760e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f776cc5-8998-4968-b21b-7750f2a6e6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7c15fb-e3b5-436b-a052-66dd7ade35c8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fa9a71-f0c9-49be-a771-5f1a17c1f342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbfa1d15-04d6-4424-a0e5-379edbb53042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477d12a7-e02e-40d1-b997-a061889bb720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a33b6b6c-25d7-4a45-841e-ebe5519a0f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7d6d6f-e99e-429d-804f-e490f794c00e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70de5ae-2d2b-4f24-b195-f7ed59600235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bc5b71-c3cc-4702-9a48-23c9f9d0c2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcc52d0-2992-4f0b-a7f6-bbc36376730c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6220bf-a407-42ec-b56b-691667a80338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a2d2d8-8626-4610-9115-27a1e6353ad0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b73ce2-a602-493f-aad1-1d2c10daba92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414b9f8c-ca13-490c-bcd9-0ab3940830e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0596f4d6-fa97-425c-adb2-07dc2dfda1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8261550c-4d12-4194-85f0-fd53dd499abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b6e489-6b15-469a-9f95-e39af2b6468c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4067ef9-b15e-4a33-b6b8-62394b7e6393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e4cc0f-308a-408b-b669-8e4885e279bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3865006-e32b-47ed-ba2c-ea798c1dd3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed220d72-b080-41b8-968c-b8823c25199d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c176a6-fe0c-449b-9cdb-7df66593a2c1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7ec08f-f4b0-46b0-8321-fd0fb13b8aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442c1c8d-cef9-4380-ab68-ea5eb6f33771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e6e474-85a7-495f-ab6a-f8c13ab9e6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ad4b02-940d-4a48-934e-ae8da645ab59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1eb0d09-91be-42e1-b67b-8cc89b6ac3f6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2712e0ac-a5ca-4181-b96f-23c16cab8750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6bf6a1-e771-4bdd-ba9e-e5bdd16e4632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c12d887-365f-4b09-8a5d-3b30f915f8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fba0aff-5bc7-4d6b-a831-137e586e005f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70755d73-8e97-4eda-af6e-13f9a16334fc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790cdc3f-63f1-4939-a82c-cef07ecfaf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0843a3-a758-49e6-84d5-85bb0a5066e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fae0f5e-42b4-4534-89da-0126c680a7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45023d53-a6d3-42a2-86a8-1d97785b84a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4035b9a-70f0-41a9-9370-12f0de37719e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45257f31-fd64-4d83-ac07-2b9432134db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05fd60e0-4b86-45ea-87af-be89c6def471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7255f0b0-0ace-46d9-9869-ae38eda0f7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0924eb1f-8d3d-43c0-816b-daf9d3a2d1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847513b4-07b6-471a-bbf3-cd697aa275cc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7463ee0-8217-494f-9dbe-7d0644dba086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4ea5a7-6747-4f81-aaac-bc22ad449282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20e6308-9ccb-45ba-b1fc-866a2aea316d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc990e3-9e53-4b52-93e0-29061a72e8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b8b44f-f8dd-47ec-b1c2-782d6063ade6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6175b56a-ac50-406c-87d1-86858e4c2208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31fe9470-af8e-4192-b178-2f7de6749946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d0c149-d8ee-4af3-9684-3bc32bdbd617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a13eb8d-af50-42d8-84a1-b69b19cff828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ee0059-5533-4c36-ab60-f5550ff09a16",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaedcd75-4918-4867-aca7-97fb5e6f5e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a7b79f-d64e-4c51-bcf0-c67e1096b643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379daf16-7169-460d-bcac-7a1708d08e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8be3ac2-9491-485c-85f8-e3b42803aecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d0007b-2743-4fc5-ad12-5e273cde0e48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbb3315-9fbd-4d0d-b495-d7cd2570c2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e369f188-a214-46b0-837f-2b6bc791f26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fbf5fc-de9b-4f6a-923c-96d49e3758fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a72d4f3a-d3e2-4eea-9103-19776ea78eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1d531d-b2c8-4ea0-b39b-8368e804ccf1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea423fe3-798b-4090-a4e2-3079265661d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70949170-817c-45f7-b9b1-5e012b85b721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dfa444-9b2b-4131-9f8a-a55423d60089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "11d27550-6164-4c2f-950c-85b907522c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90eba31a-8b2f-48d8-9d20-a795e7add309",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a88c92-5806-46d7-89ca-2d58a79b7bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447bc76a-bb63-487b-9ee6-4df560222791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f19d00-b5cf-4c6e-9b8d-25b284846ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fac536-654e-4a19-aedb-e4180781d0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ddd608-902c-4e61-9f34-75d50b08e3a4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3181c5f1-6a67-4720-8cd5-c1a7c7cca621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96718da-2b9f-4e94-ae4f-465f36c245a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fea15fe-2e0c-4c4c-ad25-f250bff22917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddb1def-ba5a-4cc4-ac67-c0a169d49a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356c5590-d0e3-404f-bcd1-07739c356c4a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e8717b-7b60-48d3-b0d4-beeac7397f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e712e826-8ed2-48a2-b975-c07d2bc8d93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad91dd5-ef7c-4a6e-8280-3e041a8670ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3999d96-7922-4d01-a5ea-c9ecee5ac121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5398bcab-db44-4215-a4b0-952096e6c3a7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f44e4b-4680-407d-8fee-77e6b91076e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c289ab3-6242-4b32-8948-6d9e34f26dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64177aa-a5bb-44a1-9dc8-87902e7c144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd37d8e-1555-46d3-a0cd-e2207a956b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b633925-fb06-4764-9d09-e524cf2042e9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ec644f-0248-411a-927f-4bfb981c4276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b079e17b-ac32-4932-9786-7178f7aecb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c98b71-d217-4102-ba42-135e5d06d605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "715874d7-dcc1-4f26-ab69-9ed71e429d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346b82e4-8ec6-40f2-bb7d-25b6ec94e978",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f550643-0751-4d0f-b503-b5715b9a64cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa37d906-c2fe-45ea-bee3-508396e7bd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abb9360-ef7e-4147-89ec-c825a6df5480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eac274e-4d2c-484a-a043-dded48a4f946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553f7eb3-a6b2-4725-b356-635693386b6a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f96c218-6f04-406f-967b-27b79ae2cfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac54610-8df0-493a-aa71-acc21c79ff95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b8e100-e233-414e-b824-940af5cc82de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2539ee-55c2-4dc0-9b4e-73c60e1fdc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4ca207-0ae7-4d22-a8ed-72993ad081b0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b7c837-6c18-43df-84e8-5f708e3eef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f982985-f44d-4f20-8ac5-d0969e6a920d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2c82bc-c996-4f7d-8f81-590f68ff22f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca8f67a-9254-4680-82ac-0aef200adbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be06af41-5112-47c1-b00c-dc15abea557e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0c3260-7849-4010-bafe-168b3e9e860b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1098ef6c-d405-4126-aa78-4ba16f879e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b20532a-b008-4066-9d6f-8d31ea782089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d76875e-f012-43aa-a50f-cc373c501da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fea397-d195-47a4-95a7-9d39b492fce5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d133fd-cc79-4eb1-9659-8e43da660d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5cade9-c116-4034-a0bf-6579d71034a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ba0dfc-6652-423f-aaed-5574aec86ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7041b374-0ca6-42f0-a980-00a861c8a70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f67804-4944-407f-9c71-85ad6aa2a19e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e768d7f0-05f6-4e84-8c9a-3c1058be648c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45bed37-9e98-484a-a461-cd9517071659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f18242c-cdae-4c26-8ba9-9e56688f9723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "135d753d-e7ce-458f-a0b4-402a460b6f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409204ab-47bc-48d1-a43e-1bd5e559a66d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a56e020-6e19-4bfc-8af7-98021437d5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04511544-f4f6-4b1d-9fef-47f83f005544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9777068d-1e09-4572-8fb2-1190f3b565c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "100e70df-9174-4799-acf9-c67179a20556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c76cd4-e96f-47ae-9361-b67956f89085",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c444d26-40f9-4d30-a7f0-b15576b3a4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b10117d-0e57-4f21-b7a5-3c6a1035f726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae0e1d4-6bb7-4965-9545-5e8875c3c898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd807c94-baaa-4749-96db-6144fd750205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cad7ce-905e-4d44-8e55-86450c5495bf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64b988b-ff08-4e2d-b6b0-214fa8520a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16d0d42-a8be-4bba-b1ee-262fcb9e325f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4caafca-9766-4540-aff0-7730b4d52f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8a6042-36fb-44b8-803f-8be0d19ec7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975f2028-761b-422f-904f-886262b28ed9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aa0418-4997-448e-b359-733e41f6a82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f56864-d016-4426-8510-75d960604491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec90669-e667-41b4-be13-bdc882ebd1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66bea9aa-cc20-4720-bd59-897f69ec1d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161f4883-01cc-4873-a896-64a75bb6697f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f71206-13cf-40e0-81c4-29bbe10a36f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0346212-e21a-4cdc-ad9d-45e9cae02ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdcd34e-a56d-4cda-9f1e-d54950aeb5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb81235-2c14-41c7-866a-1dbc16efdfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4c217f-886f-4b14-8812-7f4a0d44f231",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f46f848-3bc5-4e73-95cf-6e24a3573341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bdf51b-12b7-44d0-8991-cf5ef2f103d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383fb6ed-bc8e-4a47-bb68-7e0b94ddc1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "783dda13-bc2c-4a23-a57c-a494b612bd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf406d6-2c86-46d0-a43d-f981854e8f15",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04ec696-c496-41a7-9736-747150c81a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcb5456-8a53-4655-992e-51e265f035ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6eb76bd-d7fa-47a0-ab5e-f8b8fad808f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b652a5b-ec3e-4f0e-85be-56bd5c30f356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed01beff-88a9-42df-8258-0f78d8bb61a4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108209c8-2989-4886-9284-51f65c70adf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412c7330-c988-455f-923c-14c2c29510ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc80d827-aa0b-449b-a471-36de24b6cdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3482500-fcb9-45e2-8870-ba710473b5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e40d9f-5d64-4438-b73f-e50d6c7207de",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11cc97e-029e-49c2-83f9-1d365be8296c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4c2e13-73ae-4751-886d-a34263fcc479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3ea977-d71b-4550-b286-1f256ec9c1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0f4c04-3783-4679-81c2-0a241d68a5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9049078-0f91-4824-b761-749038fd895f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38fe9e3-af8a-454e-a6ee-72adf0bb9b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da386ad-3e3c-41ec-bf72-854a164f5690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f20e32c-e85e-46c8-ba0b-af4d1c359198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0f2826-a57c-491f-ac96-814ab34cdf1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677841c3-3781-4f9a-882f-fc0a04bb6de1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec96677-64c2-40ee-ba92-12ce8e29426e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6185d0da-cfd6-439a-902c-cba240940546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07317dec-54af-490d-86bd-3ee48080b1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf901f2-4016-4cfd-a35a-0a860482a3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e3e8fd-53ad-46f0-8a62-5b58d789836c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42728f33-7222-4c42-997e-8c2ab798abc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1d5633-ec90-4e9b-9052-3deca6fb9d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202ee6e3-0e8a-41eb-9cd5-1d6b8258dcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d18a43e-1ff3-4291-9294-e0cc3fcae0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e1f11b-527f-43a9-900c-cea1f6b08393",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655dd88f-a46d-4574-955f-1ed34876d8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3da7041-51df-4640-afd4-a1a694bf0229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdd108f-2dc2-4c26-9e8e-66dea125f5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36f4d4b8-6405-4345-96ab-c6c1324f15ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a46a07-0c95-405d-b069-be4595d18fb5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b861db8-9604-40d9-b699-b6a803c0f15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea407a4-318a-45c4-bcb1-06abddd41aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f64e7fd-32ec-4463-b09b-55b0a187ce50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c8160f-c220-4a04-b9e7-42cdd26bdaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fc4dd1-7c7a-466f-81ad-ab93cadae5eb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6697f8a6-4b1b-471c-bf41-15dab7675bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ab4af1-f96b-494a-aa8a-21c49519c1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b1ede4-a677-496a-8bbf-039e4ea72571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c46eb7-f52f-45d6-8ee9-a9b3802b1a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8538f4f-9a63-4a5e-81a2-4e217a0fd08a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337170d3-2dc8-485e-9506-cb5d80bcdb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902b1031-36ce-4a97-b56b-5c4e848b3113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7668c685-7b34-4acf-a094-e236be6663d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3815bd-6d49-4a0e-8ef7-3a68c30c97a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11303dbc-c4a0-4c82-b634-53da2d6fbf5a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900bf349-b66d-4211-85ae-012d87a8710e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25e1336-5372-47b0-acc7-0e672276ba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287ade0a-acf4-4cdc-8630-7613b199207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c662f90f-a195-4c9e-b1e8-d6f83656a8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1262f005-b84d-4001-93ec-3d70b7b05543",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b928512-78e4-40bf-8d76-c2ed3781ba26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d74f4b-e286-470e-b420-d5db0f41db31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d4934a-e1fa-4998-9ea3-274a06a9e633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2287c64-e89d-464b-99df-43fa1a742558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75520c31-51e8-4fc0-bf6f-59671bfa582b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbc1dde-efae-46f9-8f55-4f000af171b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6fbf61-ca3f-4849-8186-da7a575855c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2d7050-1ec5-4c72-92bd-f4cbcb31a685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c17464d-c217-470c-a2f4-e8388eff2aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f258d004-0777-4e4a-b34b-9f8861cd9655",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c3fd48-8f98-45e7-a368-b5fee5923d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4e7237-9ed4-4444-91ac-3ca973a95f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8490ee2-cfc9-4e22-b88f-6c2701ecc8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ace50c46-206e-48f2-9af3-3e4380156ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3da2519-46cb-4ea8-81fd-d20740803a30",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d06146e-0a43-413a-bd61-71e77f425c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cddd8847-5909-4827-8849-5925ca890501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbf387f-e3fa-4f57-89e9-d7ae81b77339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "79857e8a-1983-456e-bb80-17f497e3fe26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3df93ae5-8be6-40f4-9766-ae28abd91b35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "814e5f5f-6d01-47d1-a189-da7c38b3ef4c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c050e76-4ac8-4c5f-ade1-3e52c9c97211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7407769-f556-4e86-9fbb-5d3e44bdf9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca7ab1b-7371-46db-bdee-df85259a7575",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05306453-27cb-4162-8522-584ec76a1f58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d22c6e6f-7401-429e-a8f2-9b610674d0ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60cb5395-3597-494a-9b5f-724d95df93c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "491115f8-f6fc-4ce2-815b-c2a8f202e526",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bc1a8e1-d0ef-4394-9cd9-1e13d770eaf4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11cb2566-7904-4ff3-a1fa-6afc6e5453b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a38f5322-ad5c-406e-be03-d93ccdff1b48"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b12d6ded-7f1e-491f-a4e7-df055185c5e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90b4537e-6b47-432a-8f63-d085d7fc618b"
                }
              }
            ]
          },
          {
            "id": "98cee957-5fcc-4944-a9bc-b455a8e1b6cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3c6eec6-699b-41cd-9640-eadb93e52cef",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "84e73d71-abbb-4006-b8e6-5981348bc46a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69680ece-88c0-49e8-a8c9-3b952d424f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b24011ef-186b-431a-9377-9dbe032bb500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492ab56a-ef7f-41b9-b2f2-0fd38e0914b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f5a9f5-7051-4452-bf39-5d9065c6c47a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2e551c7-11b7-4240-9b60-46a8dae15feb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46652660-e65e-4af2-8369-b0b68d648179",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0061bff3-241e-4bd7-b143-489dce1a617b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5630e8f0-8a4f-4ca7-a4b0-4b6cfbd62432",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e244edfe-e9c5-412e-805c-3976fd7f23e4"
                    }
                  }
                ]
              },
              {
                "id": "4f1dd6ca-f5ae-43ed-8d81-12259bd4b814",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "852c2238-19c7-47dc-912c-449618d450c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "185261ad-68d2-4036-b526-a1c03a34fc02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4eb9615f-80de-4b3c-b060-80ff25183a69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0cc8d7b1-99c8-4c0e-bee0-0af434dc075b"
                    }
                  }
                ]
              },
              {
                "id": "700df81c-9e84-463c-92bb-87684cea22a9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d414539a-3f3d-46ab-b58f-d85ccda4b64b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b8f6303-f5f2-4c10-9916-966b0e6e304a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b578728-c2b8-4b50-8873-1d04d4ea1b27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23f725b8-4327-43ed-85fe-6ca104ea9e9b"
                    }
                  }
                ]
              },
              {
                "id": "fdaac425-323d-497f-869b-dd2230dab3cc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0ffa7bc-30bd-41ed-86c5-d71ee525b69b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d9d19e7-65f3-491d-827a-784492e910bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8cfe0bb-0be1-41ee-af86-63b9f17f933e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2ac91039-fd7e-4a0b-8470-887ea28533e8"
                    }
                  }
                ]
              },
              {
                "id": "d0128442-898d-4a51-be4e-bab5ea2638af",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0c3c701-3080-4007-94d2-a636f6ab09c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1eb928b-091a-4c88-b23d-d004002c40af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69127f77-9bdb-4350-9423-c0b634d2e781",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a208fb63-8e7b-45e5-8eb8-e7a846b1518c"
                    }
                  }
                ]
              },
              {
                "id": "bfdf9a36-dfd4-4c70-8c01-af0d26e2f7e9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d4e05b6-6a5d-4be7-aebc-45c8c11cce9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3830eb4-7322-4667-ba13-c9f520949a38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d8a9dc3-a378-44c1-87a7-bd3337cfa865",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d07698d-20fa-4f5b-abb7-fd0883cdac7f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62dc3eee-6bea-4f33-a30e-058a4554bf4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ffd892cb-671e-4a1f-b918-6497387e9a1f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b149f330-ad60-409a-8d53-9b53cb47ddc8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07d27137-6cac-4133-823f-c376f3e7a917"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62fdc928-ed52-4786-aecb-8c08b921a0ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c9668d98-586d-46eb-82ff-c748394827e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5861c99d-c37d-4bad-849f-36ff799cb631",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a49d2fb9-4a2c-4a29-96d6-48cef027cfbd"
            }
          }
        ]
      },
      {
        "id": "5862328b-7e35-42ea-a8ea-c840d2e2fcdc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e9c7bfa2-3a8c-40a7-b208-12a42b5b30a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3d34bde-2600-433f-bde2-116a49ef047d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "21db4b90-0239-450f-b048-8623ba54df25",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd7c29c-9b4d-4e21-a766-0a48edb2fb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550ee8c9-905d-479e-b4b2-16add25e7eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e9a117-5af1-4f9a-83ae-9c98da3c9aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e0a253-2796-4c26-acde-64be8cd1ff05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988ee1a2-01b6-4e97-99e9-9075a7327e23",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d758759-afb8-40e1-ae76-486ea5d65b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22288bcb-124b-4596-997b-43a650d59cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b42d7a6-0b11-4116-a103-0a4fa7735be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c04dc7-1ddd-4ec4-b4a0-795833a178cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935b5258-1a66-4301-82ba-9b61a0f036cb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3054f569-f8e4-4458-a403-3d3db61280cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1665d691-228c-4ec8-aed6-9542556b1e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c46916-80d6-422f-a8b3-dfc156979863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8190e9c-ab7d-45ab-be83-cd2591e99af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ad6b7e-9b8a-40c5-95e0-b86f18cbcd33",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178ea218-977a-446c-9300-14ee309aba9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061043e7-4a46-4043-a69d-6cfa4dcd3fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375f25d8-704c-4614-be5f-8f19e5a60983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb5efed-e423-49cc-9be8-ab91e042e891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b71c53-5828-4b90-844c-a2c655c4e106",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba8a939-553a-44b1-9908-6a94d1367f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5e7b44-08d1-47aa-af80-6e4254469f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d468bab5-fed7-4630-81ee-06c461faf8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b83d7be5-04b4-487f-8466-581c90bc22ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d682e5bd-0398-4f61-bc1c-1451ea6cddfe",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86208688-3ef1-4ad5-be5f-1ee903cb5734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a017e8-0966-440c-b2b0-3086f0be60ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e6bdf5-884c-46e0-875e-4d8d922fa0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ef0946-0ad9-474f-a1a2-7d084a8a9a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aed13d6-3e21-4b1f-aeec-66f9bcaa6a91",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adce2bc8-6329-4456-8930-f1c7b3ce0f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675fe467-f873-4e0d-99d6-d5111136212d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f92396-d01f-4a34-8b3c-143c934b63dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "62fc0731-886f-4036-bce3-e4022bca599a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda760b8-4145-48cb-8ace-3c842bf85ca8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca44efa-8d9e-4a81-a481-8e8ae7041ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a0a746-8267-455f-ae26-a44e8d569f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecdb23f-137d-46a3-af89-485008b9d536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f50f46-5c3c-4fec-81cb-d3d83f41631d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b33db59-63b4-4b63-8551-c7018c011b46",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cc29fc-ffd7-460f-b02d-c691664db647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9293fec4-3af9-462a-8452-3806efbcc678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d258a329-9acf-4a86-9ae1-ba297d5a559b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50112c38-7ea4-48d6-a5ab-1a2e9c83139f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2b6f88-c379-42ab-a3b7-10193d165947",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b937147d-abd1-45c2-9674-24f1b2aff391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23ecda8-f475-4ca1-ad48-752403667606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f27c0f-7b4b-46d6-979f-6fb139c7e9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47efeb00-4f14-4c3f-82d3-f965308ff49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03091441-0983-4f5a-ba0c-722547fd8835",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b96de8-b053-4cf3-bb5a-264d08055ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792cbc2e-3afe-4c9e-81c9-8bada10619b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e85ad7-1be2-42fe-8587-9d6c49702ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1819b940-ee3d-44c6-8f98-8d9a7c235c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d173af08-a187-449d-9214-ccfb2c224f6f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f7b743-e577-4d7e-bb9a-5eda3116ed1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7f7193-5fb6-4e6b-b7bd-0f8c4edc14e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b7b9aa-90f8-4073-8489-9f2699609c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c12be2-c863-4328-8c2e-a688dc5c139a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6532bdd3-d159-4f53-949c-510b31b0b939",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f693712b-33a6-438f-8d7e-18d34f46df4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ae690f-a55c-4298-a165-6a11d85a3ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e271bfd-fa73-4f3a-b06b-e2db0f719d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b10d05-87e3-4307-8f41-de31547797f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48deab03-6c94-44b1-85e4-9792573a61ac",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfb309b-ab14-4884-a6f1-7d7bd29999a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87f2907-bb67-4926-920a-5607240d4ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58774e0b-685b-48c7-b69b-2cd353594879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "775f2d91-2151-494a-a76e-79151a3be15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3d4c17-ff01-4ad7-b72b-a64c43ca9361",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f088573-e4ca-4c4b-872b-31fbff59adcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cbab26-64dd-480d-af1f-e5220262a7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99e595d-a590-4d55-99f7-b6b518d4ee1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "38bea5bb-a29b-41cb-9952-c527c983d5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20134603-98dc-48db-9ea2-2b47a75346c9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fadb25c-740e-48c2-9c30-b98d4cff13c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9263a7e9-c52c-439d-84b4-444a4e14e6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544a8232-4cef-4552-9da3-22a4fd03a5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe74cfa-a85e-4efc-b141-8ea350667190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665e38d6-7fac-4bec-b176-c32a7165b82c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22013434-fc4f-4232-b679-f7c889727f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d68d4f-7a99-4f1f-a183-01947fcfd6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb747c2-ca2f-4933-86ca-6df61f205c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b95a125-f188-4bb0-a848-d9029dde7550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddb5367-9a7e-401b-9e82-1a30207c63a8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d42a157-7fb2-48b9-a23b-97814778ab90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c53bf3b-9f34-4a7c-a25d-1b0bf8d3478d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d60c86-6114-4a40-8d9a-6d5a6598cedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b8b665-4515-44ed-a8e1-ba86de831c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3eefbc-f000-475f-a045-cadd04bad7c0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f75340a-4cf6-484e-9f6a-c3e2a6caed1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f86ce33-1bd0-4921-b4af-53a30dce34a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebb7dc7-239c-418a-86a2-ac822a30e644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28efc4ed-c39d-40fb-bd65-88d6f1c2d94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67c2c80-5b5e-47ab-af86-4d0f2230f22a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce08bbc-c43b-4d9c-b06e-a81512f09531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de2e480-c1a1-416d-90c8-ad0f9faeaeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e892dd09-78cb-4914-8744-741b4bee01cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feeb6f6c-6feb-4e68-bc91-d9592b12be31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a46471-e56e-4162-b974-bb74bf7c2ec6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9447fcac-670e-4bb0-af49-373f786675cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20917994-85b0-4c21-abb0-c9deb19297c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57492dd4-5295-464c-b675-e7f1348f9312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5942af51-e2bc-4b36-9f9a-ca6a41273f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee014a6-a331-447d-bdff-65ca4e498ae8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96681f55-e82f-47cb-aa5b-c58b80db410c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2434e7-f93f-46de-9b58-bd47ccdfd28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9b30a0-a056-4bac-a88b-5a9923cf54bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3a5b1c-75bf-405a-b787-34e9335951fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fb484b-abbe-4e52-b857-579162f768a3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c5f006-d678-45fe-858d-66d51578cb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161c9a02-2e41-47ff-8153-64740be62bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfd7752-047c-476c-94c6-acab5084b8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f46d24f5-279b-4b45-9a26-8fe0f8cdfec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e9d81f-e57e-43bb-a525-b5096ef775d9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579c6833-fae2-4262-b905-55ed27df2933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0703cada-7a95-4419-8e2e-8382c4adf066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02dcb05-c651-4b08-ae79-39ddcfb79f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7db0d57-eb48-4de0-808c-cd101fe8da5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e83a1b8-5372-4f76-b8fb-e100f3189398",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e24bdd-c361-4b30-bb18-3b12a6662bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54188b0a-f6f5-4342-a936-b808a8a1cb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eed5d4-ae3d-47dd-9870-7a327a602e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6266b6e0-7b40-4f40-876d-fffacc664fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc93e525-7d92-4013-ac08-db5e263a3684",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197439f0-b1af-4dec-9529-10c2eae5d232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1872720b-0386-4577-bf24-c601ab102333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bb1fa2-79c5-4d36-a413-da98a923dc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4908eb0d-a461-480a-b08f-7b2cdb345214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3de6376-b8aa-4030-b7dd-ba9c04b9ea61",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee56a00-1ecb-402a-9a29-506442e0e420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f366e57-bff2-4991-be7a-6c118817ba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3323ed-4634-4856-85d4-1abddf0dcbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "359daeb6-de47-40d3-99a7-51a6f78d4d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9fa90b-ac64-4bd7-906e-ca42fa8d85e3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0725da7-bd22-4134-9cb1-986fd76b1e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1eb79e-2924-4201-a77c-0d67fc3f0443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4db05f-e8f5-45f8-961e-825ba4bb3e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8a08ee-573f-41d4-8057-9e89d8e98e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bb7dad-49d0-474d-b8d9-c45ee0e387e2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd36dc7-f3d7-4227-aeca-fc0d4f860f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cd221e-dc9e-4c77-a7b0-1a7986fc938c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d709db5c-8da0-408c-ad09-358384341d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2d6a3e-257f-47c7-be7b-c2447d834a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1050f957-e19f-45da-9a74-56d1d9ded586",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62f6911-4f22-4b2b-aff5-d59f0ebc5da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a226971-66a3-47f1-ac30-5eaf36e32c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5458f3da-b7a7-4e15-9ac7-91b24258161d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e04eb497-708a-4aca-a391-29cf22741f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce001d4-0d7a-4b43-b7bb-ddf39c460243",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d51818-c382-4bba-a4c0-e406ad13dc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de851f0-2cc9-4196-a03b-5fee0665e62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c30a9d8-3708-4755-a6f1-269c7c2a7fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f04743a1-87de-4b53-b47b-cc0229fb72f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5781a49-fd24-4fb7-9d3e-da2156d60d4e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7db70d-9387-4aa5-a516-1d9f72be50ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c283ae4-4f06-4f50-aec4-862ffd29b8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f826ca8-c299-47d3-be44-ae5e63aca576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a25086-32cc-439a-8039-c7f78090eab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75094334-4d3e-4533-9f97-3cc9cdce5f88",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a29eb6-1d5a-48de-b708-866829721245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4dea89b-8368-4d33-8cf9-cc318b833acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3c24d4-9c88-4434-ba69-13bfe7b6f9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92036a09-11a2-4973-b892-cf0ed32bc12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46157f13-e029-4477-8458-0491a1ea9017",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f48c57-116e-4df4-aeaf-eeb5f5d139b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8855dc73-f2b1-4e1b-aefd-d9425f6dc471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1d2b7f-e4d8-413a-b0bd-06736924dae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e144dedb-4345-4bd7-88ca-87fd02a11caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a854bb-1fb3-498c-951b-0da2def743f1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e8c346-72ae-4230-aa5c-ce98ac7f6411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c59db5e-ec5f-42c6-ab73-e4c81e0b95f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176ec33e-0a3e-4537-abe5-599a7d761501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9df541df-fde2-4381-8f70-723b27df291c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc99f65-ef5d-40cd-ba42-c535ff4086ad",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d36db9-3123-4d2e-93fa-25cfb7bea533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18822720-e398-4ed6-9e45-8c9f8de5cb84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfbf080-3435-4edb-ad55-f52683c9227e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d1097b-132c-4a1f-ae6a-25ca5b3e74a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406a524c-92b6-4db2-b0ec-628314553737",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0d2a3f-9d91-4686-b737-6d9b533870f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0845f5-33b5-4ce2-8a1d-bf37a5811e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd61239-d515-4345-9795-c9eb56886c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a87f715a-ad2e-4cfa-8b81-7f2943cfa66c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e606bb2f-5943-46ca-b967-0de8a5dd9c0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "280758c5-6f2e-4549-a7df-03fa650fe79d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36bb7fc-99db-44f3-bf91-6668c5c09f73",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a27a26a9-57ca-4a2d-9aa5-fc5d1deac46e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae658ba-c7fb-4382-9540-fd79695fa173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c95ed24-42c9-4401-8e67-c1e0ceabba4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b180475-c803-4bad-b5cb-e0be212a3d13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee09bee2-0d08-4a96-93b4-b1a21b028716"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05d2f1c8-0335-4783-8f3e-dc4978b4f5dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35ff3b99-27ed-496e-83a7-ae9397977953"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a223017-e8d3-40f4-bc86-2771af08395a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4aa9a94d-eef3-4dd9-ae19-c8935112dc83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "986fecc9-7aa0-483b-bd58-6c0527be381d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b764c66f-4fb2-4650-abcd-e03d30d7354f"
            }
          }
        ]
      },
      {
        "id": "0cacf205-b3ea-4b21-9351-ccebb2717671",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8293ff11-7f35-4769-8617-98748be37e9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee6bdef0-6b61-4ebc-9031-14669fc3458a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9dee4b9-59b1-47c0-8080-035d7e99d443",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe27a7b4-90f4-4701-a4a7-392be4d033d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6b0a2d-eaca-4510-bcc4-7784af552561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb88763-19e4-4aaa-8e5e-5f2891fd07fe",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82830da0-a250-4947-8343-1685da70188e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c39f6dc-77a8-4255-96cb-0c0634870bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3d55a9-061b-4901-94de-9cadfecaac34",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57559fad-0016-4009-870b-62114f8819f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b84da35-9a10-4ecc-9395-c7edf6f02dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc3d7a5-86f5-47c2-86b6-dea5d2bcc3f8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d311cd-59f9-4fa2-99d1-dc0352f2e6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f46710d-620f-4907-a362-ad6b8e7b285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c93bc24-3ef0-4726-bf2f-11c1f4108bb9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b17e770-ca61-4353-bead-9f71c44a6711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e911b76-c416-43af-89c2-2e3b2d97bcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da469b7d-da51-42fe-ade1-9af1f773d7de",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57874642-022a-465f-871b-83d110bfefb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01ed7c9-7f0f-44a1-8fa1-7aa25e41f2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13524e74-8362-4225-a6b5-8aee6abf3b13",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b00c204-e0c3-4084-9324-dc25061d5585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f7f033-f17a-4a88-acc2-74866b28d334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415ba74a-f1e0-427d-b381-be6889e29aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81456580-0485-4edc-b93f-a5155d1e6e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b423ea40-4c4a-4f0d-afbe-d9acb7849db7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443b55de-d59a-4efe-bdd0-c95280e0250e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b886f9c4-dfa8-457f-9d8b-16677d97039b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b394a697-704c-425b-915e-549502e67611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64fc644-597a-4e77-b6aa-e12fb5f87fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a230f16c-131c-4751-ae7b-95ecee9aef3e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71592af2-862b-4155-bf5b-765711575222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "442d44a0-69dd-4c4b-8ebf-a1cbd49a1ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95a4b57-8720-4e74-ab33-108e1ede4d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a799d72-97f8-48af-825b-1b84d029c934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aed61e9-0dc9-4d2d-b11d-4947924e85d3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a19e173-f637-4339-8054-bec370240252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b74628a6-04c2-408b-ab28-c07e09510e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357d1d54-07fc-4488-93fc-551df5f19bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe462e2-31aa-4694-b954-caed452694e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041dcb00-8348-4838-b090-507f2eb97704",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a5ca36-d8cf-4d97-b096-e1459b28275a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2d803f-444d-4456-b52c-f0929831536b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089f74b4-2166-4709-9112-fded9c7bd46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7453d30-c61f-4a20-aa9b-feacb4e871e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec5ed9a-573b-4ccd-8c72-ded84064e135",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca4cad6-48f5-41f8-8c65-de8917e290f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f851a6-cce9-480e-8b68-7496a36cf982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "febb609d-554e-4b35-8aa4-637b9c008d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ab4d00-b05a-4fa6-b9ab-18168978afda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd46bdc-f94e-4202-86f2-23e923196a79",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ea2a0a-85dd-423c-9239-b83c7402d7fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b64b7fab-2d94-4ba7-9227-7a89fa07af7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acac2ba-86d5-4e71-8b85-d1f8bafbfd42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc9ca1b-aca6-4900-baa3-c97d63d77005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1e6912-0db5-49cc-98e4-c06805141633",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd4d5cf-d0df-4536-8baf-dd07bc51c8f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b70ef22-85b0-4345-a983-975ae435d350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ef3af7-8490-4789-84e7-0902b90e59f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9910ccb-06d8-45ed-9d00-2cc1c05332ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb86d80-5fbd-4e4d-87aa-e02a907ca69f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19146f6-9a05-415f-856b-b8a1d58ae604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88ec83cd-3736-421d-9bfc-5cdfd486e2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc832963-1a7f-463e-847d-db2a886b32ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384e19d3-76cd-4a2c-86c3-ee96cc6adafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01092022-48d1-48a3-9161-d25df953c9c6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415811f6-d5df-4462-a640-2d4e99f886e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23d39b6-ca00-4c15-a379-9c211012af83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c77f7d-fc4a-498a-b819-a62f922c58d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861d8f44-f7d0-421b-afb7-1135aa3cbc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b885d9c-394a-41ce-88bb-d3d77d78e61c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8826e7-399d-449a-afd0-7f23c04655b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7728f2f8-92dc-4839-bf98-4d9b29a35f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ccc4a0-cb78-45a0-812f-2036ab01d731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5691b1-d21a-4314-8987-e319e6cad36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98efa775-d89f-45d8-91c3-0d5699f3b6a8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf91b6a0-8603-48f7-8a3b-7bb9604e848a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbbce3f-f9be-4f7a-8e32-306d5c5dac8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79bb494-74f2-4da9-a378-1551e7f7e377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c41b8d8-de98-49de-ac7d-ff4d69161ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a6c9c2-62b6-4272-9241-e4add2232d46",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aceaf2d5-a850-44eb-9b98-eaa137be2c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2a8a4c-1bf7-4e46-b0ee-eb42e2b80934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c53e00c-7e28-4df9-9293-f42385dfa2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d4b28a-0d77-4a3e-8314-8fdb43c2f4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb8587b-a8b8-4060-a25f-c76f6d229cb9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5b67fd-0a57-4246-8b70-4f430e411698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051c90e7-5607-450d-8fdd-a98d66324e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12bd64a-85ca-4a28-a9a6-ebaa0b07074c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1eed28f-fd83-4480-9ecb-e8d4655c367e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692cb972-1ad1-4240-ab9e-eeb0e7732450",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d249d86d-9826-4b28-9bda-f837f70e64c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afbe570-b28b-4065-a5bf-036bc3a942ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859fdf2d-bc3e-4a6d-9cde-084a4d2c2570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb24b13-783d-460f-a573-9a70985b1a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a933ad55-02f7-429c-ac16-7eb9186adcc7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46418689-2a4b-4cc3-b619-8bcd8f8b4978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fd9cd8-d2c3-4cef-a9b1-5d3af61a53ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cdb4f6-dea2-4882-81c6-53dbbf123a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9e0af7-c04c-486b-b824-3cafd332fdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5167c2e3-11cb-4e0c-8c63-345c2d4e3ec0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88430f18-9ff6-4fc8-bb05-bfa265256732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0becdc-d53b-45f3-9373-43fb1becb98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f34050e-14d9-4a7f-ac1b-a4efb74690f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7f27f5-3ccc-4a70-9f32-35c956027c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3160930-d3a1-405d-91cb-a8189689dca2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfcef4b-d3d7-4942-bbad-365431b7e6f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba281d84-ad74-4258-8342-a69147f79f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1aa2a1-6175-4d55-bdca-2d5424098407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f002f2e3-1214-4a4f-835d-6711d48799bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a307bb-0992-4f67-a414-90c26fab599b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e6b794-ec82-46b3-81c4-be26ab09c146",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "345fcc49-0deb-4929-86e0-0d2b3222c538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac7c910-9cfc-484f-971e-9db63e28c876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdec61a-33d2-4ada-9b96-213ded972f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcfa838-4cb3-4323-967f-f12549ea302c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e171ede-4274-4fa6-99f5-8a474ed682ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17ce49fc-2352-473b-af54-fdb13fd2f071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba93a757-3ba3-4425-9538-34e2c3a26da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dddb81-6a8c-4e97-bd35-4f256c76054a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f93ab0-8922-419c-bab7-dba34ba7998c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c7003d-22e6-4ef3-ad84-51cd853d35cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad2c2de-0902-4f9e-870b-48c0e6f77d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2c84dc-28f0-4418-86fa-131ef36e8f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46796ea-c80c-4e18-a0f3-f772bf3f690f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be13956-0a1e-4b8f-867f-931b16d4e5e8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73389b26-2423-4cb3-866b-91a0082c6088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a4ac22-83b7-4196-b9ac-b15937476b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f87234-9866-4280-9c2c-b018608e5b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cff698f-b593-4966-998e-2e2f51d6a9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a24f55e-f8ab-4ab2-b837-43994c8817fe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4736c463-ea16-4896-860b-00bbef2d16ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e73b0c-7776-466b-80a4-860a1ccc6246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d83f3eb-0c91-4f83-9b4d-cc7d4d6e8416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48fc1ad-ccf2-4ec9-88b8-f84a69847aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc12b66-bf9d-4d90-8970-d749adae6073",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1fafc6-c483-4e21-99fb-c16c7887e7bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eec32d39-29bc-485f-b236-9754ef6068e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2833c7-0b7f-462d-9c33-f57d6fb46f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380400c8-e6c1-4fb9-a267-63a0d509f04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc9d33e-f1ea-4a31-876f-919899d88ebb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8632a5-be7b-4ee9-adf1-bf7917bfaa5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a5f65d1-103a-4ed4-a5eb-bf4e161749b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9a7ac4-1952-4b3e-815a-eea0ca14cb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd36eb13-3604-4286-8fad-3162e466ac99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306680b4-4a80-485a-a33b-f3589399aade",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f60a3fc-80e6-4385-9155-a528ff3c164a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1df50d54-7f96-464c-992c-9a00b34e94eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f77485f-fa3d-49ee-9605-795377ac9f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4652de1d-ebcd-4855-a89d-4c79d5e94fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e209e46f-9145-4cb0-8eae-87d7eb47c41a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d409ad-b522-4113-8603-9c7b3ed11278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f4fd4bb-f5c4-4f96-bd65-8559c53152e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee399db3-561b-416b-9cd1-ab01349dd92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44542d9-afc9-4483-ad0f-a705d74b9fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b52f5b1-7604-4445-9b67-a4ec3a3e4d93",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcbf7fe-a4ca-4d88-83c3-a535aa539288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68c60559-fc76-4fdc-be06-ffd41115fe90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4049a2-bad8-4a83-9355-1cb74910be79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc47db5c-65ad-4af9-b9fc-e6d66621ef61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cf2469-b28a-4277-8967-5b7dfcb46036",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6124db11-9697-4ef4-a9d9-2fd909ba6262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eee5647-a007-421f-9d4e-6bf6ad2c97da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401fc3c7-c629-4869-bc05-17d04fd12b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182e498e-a8d2-4ac6-b9c6-0a6eb2699a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bfb63d-26df-408f-b48f-235672100eea",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65135f31-1c11-4aab-85bc-166fa3990ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d403b61b-0f0d-4c47-b9e2-3250398de86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d7a56b-ca7b-4a57-b013-29dc69ab24a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b2e23d-2756-4951-8ec8-2f83847c36e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24dfb67-f414-4ff1-b8d1-80d946bacd25",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db049142-76f4-4f65-9ebb-92121a05edb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d80e81-043a-4943-920a-0594f87060fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b272366-60ee-44d4-a967-8a61a157455c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9947672-065a-4fb5-a5af-a030caed9369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e29fe95-6bbd-479d-ba8e-58d47f4e11c1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c34f950-de29-4a43-a81f-c178d93f58ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d11c53-2bda-4cd3-9ad8-b9bf90d9b518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf46054b-b52d-4440-96c8-ac7792b47a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41589744-1c4c-4b01-92a7-97d057463d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c1c681-4806-4281-a88f-f6ca359400c3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9258c39-451c-4055-93cd-8a012f254b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45b4689-9b11-4c62-bdcc-53f589f2a2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040225be-f214-4f9e-9fe9-a5091ea42387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8afadc-3330-48bb-8a37-e2e70006f426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da27fc1b-7031-47db-a0f2-d91e9e0e45f6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02623caf-45b1-4236-9d4b-5babeaeee5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc8ccf4-9a8b-4478-a8a2-5bcc7e41f5e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e5df5a-24b7-417c-a881-f6526cbcc653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5740e12e-cbe2-4f0c-b3d8-68a43da84fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c615e683-f344-4797-828f-41cb0803b67f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1638a70-c9bb-43ab-bbf4-ce24f91b2793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38132b4c-ca98-4326-8601-c4eb59754606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10754738-fcc9-4080-9ad1-3ca7d3a6028d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cb2f0a-7c48-40fe-b8f6-ccabcacd5480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc28cb71-8c13-4509-b0b0-e89b36882416",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb92743a-f0e3-4051-b7e0-86fe571c8612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2604d470-1b23-4229-8398-1866626af323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2238e52e-6b72-4ec6-b709-380f0874c391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b2cd77-eb78-46e2-b6ad-c9fa412a405c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b584c7e-2fa5-4434-934f-795c63097b29",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bc4075-dbac-4747-900a-6c9c259a3557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85852293-316b-48ba-b6e7-74e43e6433b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1a57ca-9b0c-4233-aa60-c726b0c1b3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948a102c-e94f-4ce2-8af1-4a9eadf7b389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7b9ba9-92a0-4e27-a06e-8a09be14e612",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c83857c-20ac-4e3f-a2fe-b8f42a09013a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a4ba27-5d62-4ce6-aae7-5ff9b520a2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf12c6cf-47bf-4aea-afd2-a71746e3bd65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e724b13-8734-454b-91df-e51c4b9507fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcc74c3-f0a7-40d6-9838-e671cf942451",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c149a7d7-9535-4c96-afc9-7d121dbbfe37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ab3f2f-d6c6-4edc-a7ac-9a3fbc9e9507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf30af98-baed-4532-ab7b-68a3a7a52595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5b017d-3577-4780-ace5-9c17517f8265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f67a0f-6201-48e5-86d9-935441b049ae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea448f6-8bb6-4e15-b367-f911bebc08cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e923d2-b278-4a8d-a5cc-23bb6ce68920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290ae26f-c927-41f9-8cee-436ed7a64ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539926fb-f82e-423c-ac9c-7f919f529601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c656dc-6adf-4b43-87e3-065a05ddd45d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7803f429-382f-4c5c-8a35-dac4122e35e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829753b0-ca23-4f9c-852b-58e41cb379ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16218158-8998-4a04-b11d-1b9f328dbc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be84e62f-0dd3-46bb-ad63-9126480e5160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e501f344-f587-4380-9c44-4995e48efdbb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ec68a8-7116-498f-a9fe-377ae6e8bc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfdaf3d-0acb-4beb-807d-490bb525d49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535780e8-7e9a-46fd-a998-49dd038b5b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67fd5a6-2412-41a4-bd61-1f55d4f2811c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debd27b8-f4db-495d-b96f-4ab0799b6354",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0a3ca2-916d-4e70-9483-1d6430808822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7828b3e7-5a5e-46f5-a6ea-6b06f7beaae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b8c22f-6d45-4a4e-9172-677ad8fc43bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38809e1-e9d1-4ce5-8dc9-b44480391708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e9ac7d-5313-4f60-a0bb-c3158b2fc5b0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36970f6-76f1-49e8-a561-9992ec97fba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bf86ab-4a7a-409d-bea0-d00b68b73a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ab08a0-ffb7-4e3a-b0fa-1c3e82380d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650a62bf-4b24-41f9-99bf-163dd246d951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d6452e-f4db-4283-86a9-07453fbfcf16",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bece7f-a9c1-4a1f-a154-ff9e4f9321b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e21f77b-be5c-46c1-a8f3-4a66029116a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b2a2ea-e0f8-4b32-a1d1-b135cd3c4e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a34aa8-213d-410b-b65a-d9867c791103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14c3974-c4c3-48da-828a-a0e5f70ca8c7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420e51e6-a9c5-4a50-8be9-6a750aed70a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab63e09a-e2f8-47c9-91d6-b6c99832d570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da2e17f-1447-4f68-98f9-ac72c208f766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88737bb-2389-4218-8dc0-c83b0c9148e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d1b629-d81c-4def-9668-ce95aeefc938",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50aacb3-c41a-4cfa-a730-27948c21b90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11f6784-5f3b-4236-ac4e-f4408745cd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93293b57-fd48-4932-96bc-b6957b23dfdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d77b7b-4c63-4664-a48b-1a838bf74077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79b8383-452c-4763-abf7-0ff24574cd43",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db6d90d-3a59-4679-a23c-f345d9622766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4c6dcb-4170-4b46-87cb-5565794feea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0ae84a-3e24-4aed-8643-da429d8e8e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b2eb5c-6337-4acb-b131-3aee08136fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162c744d-4bba-4250-abaf-1587418292ed",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5d055f-c257-4ec4-8783-dd9ea941d24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cce1bf-238c-483e-87e1-a9f83e55843d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f6c21f-6f06-437a-92ad-0f3179615fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aad9478-ac51-4446-b78f-99759de4f656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878782aa-00ac-4d1a-87e4-881e60690309",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9603945-caee-46e5-954d-1ef61d981198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0518b62a-7b3d-4540-962f-7c7b792819c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c6bf9f-2d8b-42f6-8b6d-9db35ef63951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb409bf1-2db9-4de5-8415-3832afe5418c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6d2fe2-c0fe-405f-a039-ab5f98bd7148",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f605ef-c225-473b-8fcd-8471379f2732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4f6047-763c-41b5-be57-7618681b11c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dcde22-0733-4a5a-8edf-82b735087b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfe61f6-0f78-44ca-a0f6-65bab9b00a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3b620c-f815-4d7b-95ac-f157dbebd2cf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6992c421-5bbb-471e-a35b-3b24d90eaa4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe6f98d-c4fa-467b-9c86-74ef58053010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909f773f-d470-469c-bac0-4b8c4066b475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3c5a81-192d-4e9b-8b62-ce862f01241a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e198fb23-48ba-4ac5-bcac-7220dc33dcff",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd51b74-e330-4b68-bf80-f5bda360b726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2481470-385d-45f5-b6f5-6515bdbc8fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6f656d-842c-4c13-8222-f7c8cef11f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ae3767-4ad9-42b1-a266-686f4db91767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0220dec3-543e-4a04-aff9-9d50e847835b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae94319b-b73f-49ea-a265-e3619d7dc6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de21cf9-7f78-471b-914f-602320d67f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19294ac7-9766-4f2c-a3bc-75799aa2c9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ce3caf-df42-4062-93f5-cabb8471118f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea1c3e8-2ba9-4372-9dd5-1399c505ad62",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82032434-87ee-4051-97d5-65b7d6ea8f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed0b10d-0ad3-4b64-8f65-ed2b79e8f7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737d1fce-8da7-4793-8358-19e0b2a1ba3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c5b8e6-1a48-496d-a003-d37fff856931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc02e90-9621-4059-a8ca-04614518b14b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252b3aae-caaf-46c2-85e3-14ff43e42581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3342f0-ab69-469c-9c84-aa3603cccc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b529593c-c33a-4edc-bfc8-5218be13f0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b0ac04-3369-4044-8587-c088aba03b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c2537c-1708-459d-9629-4cb270183c8d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b0bc59-e1b8-4940-8aa2-ff8ab0b49011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b2ac4e-b122-4447-8d1d-97680d16a344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b1c893-41ee-45cb-8224-4eb1e343c099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3691740b-d5b9-4372-8fe9-c7f61486dd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf08e845-d189-4976-bf29-eb7b9c4813ed",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc90c1be-ecf7-4276-80bf-a7cff4d5e5cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c50cd0e-c09d-4bf5-8907-8d4940279365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170ef3df-c0fa-4809-aba5-6ed8daab1a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22b1a68-ecb8-4b12-a463-9625b6b92d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc9f46f-9d57-4c53-a63a-fcafe6c23b56",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3c457d-ddb5-460f-aae9-b476f71f8651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdd8da74-f791-4312-917f-0ffb3bf55aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f87b5a-f013-41e2-ab61-27afbbe34072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4082cdb-d3c6-4dc8-a165-af094ea4144d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fd62b1-b795-4039-8fdf-35a80ae3a782",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75275d6-d4d8-4b87-9bf4-7ed9e9aec419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2978663-ee0e-4fd5-aacd-c70c039b7e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c952485-9b49-4536-9c79-2dca56ecb851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468fb131-8ee1-46f3-b022-55a0e2f69705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cd359c-04d0-4434-a74e-e20d5d3172a9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdc5c84-ec4c-4c5f-867c-51ac47e6e067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a668a6-90d1-4669-a784-2da7ff05a2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35f7f0f-fa16-43d9-9d29-581cc7acaff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b7516f-f8c5-4e93-8e4a-bd47f68e8ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361b3ba9-c1a0-4a64-bfd7-44bb450b84dd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb77159-4219-4d3b-90b8-e56937919c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a89621f-25bd-4f1c-bca4-03e9ec68e439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52529c3e-aa97-46b4-aa76-f5d05e8d5d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ae2c4f-f8cb-4f60-be28-d37d24a90529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebefb25e-b7d7-4b4e-b00f-a7b52136cffa",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db96eb37-8b71-4e1a-83b1-db0eb1230de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ab68da-7d4e-4ada-a95b-ced9d9d4367b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95558c8-21c3-4f28-91f0-f0ec4ce5858d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2ec573-2bcc-4ae7-9831-1ba9069e304e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e3c5af-9ebd-4ad2-84a7-d80f85d0314f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49df891a-3e64-43f4-bb42-0cded88093bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a35c2b-b28f-45cd-8235-b65e1d445f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240f5993-da16-4fcc-bbf7-19d01be971a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c320a68e-c4df-4983-b2d0-42d602e0282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c7180a-cd25-4fd0-94c3-e318db2ab3ba",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62ca71c-509b-47bf-8d72-245767734d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a773b319-48c3-4363-a1d3-44d4a2f2d95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0ad222-98af-4d4c-889b-908132131789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af32a8d3-bb14-4f89-93fd-f9bbbe4949ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76323f5b-d306-4ef0-9279-3120a2d6f6cb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff97bbd0-5a27-44b6-92ba-d82d79652793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a15f19bf-eda0-4d1d-8428-75150194557a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16d66cd-03b4-4a8c-8b5c-490998847875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f125bd0c-f8c0-4665-84ad-793385e3b5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a4738e-bdb9-4284-bfc0-845911053991",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4370325f-2a3e-4045-aae2-6ad71b6f6d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53c2a280-3bb0-4699-b7fa-cb9e38369c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c726bfa8-8987-4f32-b5f0-bcdb30784876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2c25a7-e2d0-4d62-b0f3-3b7a43008183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986c90b9-eed9-4461-b163-47084657d537",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7cf8df-8323-4ab5-907b-f2ca44f77859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11c224d3-5a83-4f6d-9f50-4ee7a71213a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984b9a6e-4e68-4fd8-b715-8becaf94d958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d15bc9-7c1c-48fc-93e0-ce8e8365e98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c13f37-471c-4db5-9e6c-f9ebf9f77711",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76052f30-6769-461a-b1b0-958427586318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9edbe463-3538-427e-ade0-ef52cf6079e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56639fbe-4e06-4ee6-86e6-fdca3d03bf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a637eb-87c8-4730-879d-4601151e4e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c9c627-c3a3-483a-8665-485ae0679f6a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c519ea97-2384-4d42-8d9b-27660f6dd6ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7036dfea-eecd-456f-add8-e9744fb1da43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42821ab2-5501-443f-9332-6a6f392f0c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe73f29-35e6-46f6-9334-1ecad290cb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b65e61-6b09-4e30-87be-38d4e8d22ade",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05178d1-cdd3-4321-a274-d2897a608a38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca3620c0-e0d3-43c4-9f05-841d8fbf24dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e70d552-aec3-438b-9aad-43a3118eaa02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66370537-5675-4b33-b7ce-1eb1f6b8619a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ee6a0e-8a37-4420-bee8-90caad6a07bd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9aebb67-0b4c-4499-833f-61d9ab8e19d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6cf750a-225a-4aac-946b-9af66275d6aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985641e2-802c-421a-bf0c-852fb3298188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed83327-8d0f-4318-9a7f-b0b522272b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d2e020-7ef5-450a-8272-d295e4f063d1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42289ff7-ba77-4677-a046-3cd2227ee155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a922b2-d255-4081-928b-a2cb809a7165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cadc520-c500-45ef-93bb-a0fa052e6d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f352b8e4-108d-44dc-a55f-33f4df673512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d398ee3b-b7d1-40f1-b093-651c0312f489",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4697706d-e2e1-43ca-9104-019cbb6ff6f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efdd6414-4831-4449-ad9e-1fc60d426f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a561b7-c554-4f5e-87b8-5af6577f4d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e68ef5-a13d-4fd6-92ae-c031cb3c237e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81998307-3db0-4045-afdd-6787cbbcaa9b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0391019-5d46-42dc-9459-cf9fcbfac989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8549d16-1826-4473-86f7-fec8166b77e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441265c5-dd25-400e-a3eb-7b290a314aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1b0e2e-ce4b-4b09-8dec-b24c742d369a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc43a0a-c33a-4b48-b549-aba473081659",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef8154a-63a7-419b-92d6-e477a7a0a86c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf22ea5-905a-4871-ab32-78267e8122be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d341f0ea-92cf-4ebf-a1d0-8cc837958ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5997013-9e64-423b-966d-217ddb921343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129a7d88-1727-4a8f-ac85-b0f6d9178c6f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e5cc39-6e60-428c-bdf0-6f68e08349dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd5b23c-3544-4af5-b95e-bb60c8ff44dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b89034-364c-4aac-a711-67680f6dec52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3760f550-3cfa-4d23-8a30-18f7e047fbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c9ce74-2654-4018-9d51-8fa2570e15a8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e033301d-a5f5-425c-8ef2-9de727cc191c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed15de4d-52bb-402a-9e96-90cc79983c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e903630-4721-4926-a537-a8f67312ea08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43aa0a9-a4d2-47d3-908d-c0bd55d58554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418fdad2-141f-42ff-8d40-056b057095ff",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cc3ea8-f0a6-4e82-bc68-970c33624ecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21689f7-8860-4664-976b-41f787ca4d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12149a8-ba97-43dd-a916-4be43ed92136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b97a5bf-40c7-4cf4-99f7-8cfd26dc4dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a296f46c-6dc3-41d7-9c4d-35b31625e9fe",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a6de62-5e0d-44fb-981f-760ecd61242c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50fe45fb-0402-437b-bb86-b74a1b6c9632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6245870f-3bd3-4f8d-b389-7761c56af837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc135130-82de-480e-b13c-55a3d04147b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba859d2b-0a7a-4acb-bfaa-ab16d11320d9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee70f71-81b1-4193-b258-feb36e0b0b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3af2ac-5f2d-487d-ae13-3ccf5a0e04fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6af624-8866-41ca-bb92-93c563cd4693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc0a9d6-bd4a-445b-96cd-40df8026039e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4493d68e-663b-41a1-b198-57e785b5ac66",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7dc1d3-4f79-45cc-a42c-acb728bf71e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16791cf2-462c-4997-a604-e511fc351ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1c5d74-b787-430e-8bc5-6e067958e930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383a70e7-0579-4080-98d6-7ab3d45f5b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3813cd8a-ace5-48d2-bdac-9f120186002f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc35f2ef-71be-41eb-963c-60827c5237ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137f1aa7-ca93-4ca6-88f6-24625b7b250c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255466ae-13c9-401a-b22f-6d065d0ae628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf03b4c7-891f-450b-b119-8c79980d743d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42027fcc-5f5b-438b-bc1b-9bbdd8ce2faf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557bab5b-55a3-4138-9b6a-5b12a9104174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3564377-bc83-4972-8226-3d4591e0a80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d96ef2-64e0-427f-9fb1-3e09e429c1fe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81919d0b-5e68-4a2d-9619-73e0e6c5924e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044dd3af-4fb6-409c-891a-c821481bb1d4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8834d493-6ba8-4563-b345-c1f6bf1b4f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91cff683-f031-4181-9bc8-5ec7301a4bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cb98f4-9686-481e-a2b8-47feac8efff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2ad872-41f4-47e0-bb34-64333c14adac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cad9719-a75e-4d77-a3d2-200234b8d7ef",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b91400-2c75-474a-ae7d-723c052c2839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc792b0-7954-4bf4-a244-7f0a05152d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a205fd-c391-41da-9426-d95e4b9be1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec86264-cc92-4efa-b725-8740a924883b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41b2ade-5f66-4f66-aa43-604dfb4356c7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3ba92d-136b-42bd-88be-fe18508b985f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d6162c-da27-4b85-b492-3155596c1fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23621b4a-9efb-49ab-8965-0ede742ce3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ec5582-ebb1-4f85-927d-9c4ff5e2a3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eda9489-52bb-462b-95e8-1868b783f8e3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c905f8-0f51-45e7-b55f-679d958b1092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b4964f-4487-4a3d-b384-6ae97244457d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e0d413-8bfb-4d13-ac12-e74daddd7bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da761929-6b0f-4dfa-a166-6a33dbc2edac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dc1747-b7ad-43ce-8791-f09ae36e9d71",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e237d04-3470-49ef-a13b-69064d354501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d94a76-c638-4906-afc4-a4bf66ffe79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9a222f-c49a-4782-be0e-1fd217c67e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefcb537-f016-4164-b7ff-9a88c4a75074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2832c4-6dea-41ec-b8d4-4349865b4bc1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d786d1f-c6c3-4f49-ac3a-5a4e6362d95b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99736417-7b1d-48a5-b932-d7f5bd4ebdba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fdc859-f339-4ba2-b783-d97797d03e02",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82db9283-bd39-4159-8156-a02c1ccc16e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4e833a-2c04-4fd1-be1d-44bca8cec50f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9fefdc-d8a2-4360-9abf-e55098501c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7b164a-6870-4205-bc75-449e41c6f0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cd16bd-16e2-4b02-9191-b3ef1e589d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493e65ca-a842-40fb-ae80-07f89ba0c8f3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "145d2446-ca88-4b55-814e-436573b5c419",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8880b27-9667-428e-b024-1265a19fe83e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5153c8cf-67dc-4deb-80ef-10b0c5e3831b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb84496c-57f4-4205-a024-473d4807d335"
                    }
                  }
                ]
              },
              {
                "id": "7c709d3b-fb2f-453d-b5d9-f2b18b6ac530",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d2ddab7-d1b1-4ced-9af0-c2c622c4a30e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f25bde-bf73-4938-a419-4ad02e72a478",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cb284a03-6dca-4c81-a6ff-562e550cde28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc59968f-83c7-48c8-96f3-09e2cbc33629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d9b41da-1a6c-4f39-bb86-29d684b713cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "106628ae-63a7-4474-a527-e80462463d5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a382dc74-e754-4110-aaee-415c318b766d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e0fc929-f033-4187-9684-d2f5cad298c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75a970d8-7d96-4b12-af6d-ea1ee6896ff7"
                    }
                  }
                ]
              },
              {
                "id": "e2a0288d-d0f6-4f0f-ae97-834b9b353598",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "39e76eca-842d-40de-adab-342e838dc6a6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d028cab-5e3f-406b-8f26-e9a586593c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ecbeb3cd-fbd7-4e1d-95f6-d9544b74415b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c61524-8313-4e61-8069-489642cbcf7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a50d61b-1857-4893-97cb-df8c30612ce1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a94aba64-f977-45ce-a1a8-0c4dc46c042f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1917cec-cf9c-43fb-a88c-66b2b80117b0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b6119ee-1f1a-4dce-90e3-0480c35f7feb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3c2ab160-f90f-44d5-9353-839fc3815057"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d525a6fc-8121-42e7-b4a6-f1e7daa4f225",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5937009c-a214-4aad-9031-14a96b045b83"
                    }
                  }
                ]
              },
              {
                "id": "f61846b3-75c0-439b-8efa-b7637d874772",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e49a58f2-3415-4c96-8903-219e4bd5014f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "503dd5a8-b61c-498a-b1cc-ac2e823558d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52c5317c-f866-43e6-8276-4bf08c5dcbea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7fc8ce6-5ef3-4b0f-90b1-e934191e7e1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d42bb45d-b5a2-407e-96d4-ac41cdadcfed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "09ab38c2-4175-4b9b-ac68-074b9e24594e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6591f783-f507-440f-aed6-ea556f90cfef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2a283e8-f96a-4fa6-8984-0c06dce885c3"
            }
          }
        ]
      },
      {
        "id": "f82f8969-2000-431c-9ea2-6e294d374f40",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "41a2a927-c014-4026-9dc2-7d9f22404f93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b83d4f2e-8e84-472e-a3a3-655cc7dda23a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02a6686f-8814-4762-a1b5-6c79cdb8f7a1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa90414b-4aae-47eb-8bf2-cd24ae0609d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "62717bfa-c534-4aeb-8196-5fd594af3730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073c1961-eea2-48f4-b007-173db0a00223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1471813-52b2-4aad-855d-25f4f0da9f69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b13c293-eca8-4b4c-a39a-8d79d663c39a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6b578d0-861b-410e-b528-0c7ed1cfa0e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a722d1d-5d48-414d-b4b7-ebd2715f72fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27db709f-62ff-4a27-bc54-675d66799252"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fc4eee2-6c76-4863-b9b6-990cd33919d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0e554658-f7f5-4149-922c-59e5fd2a7424"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c5d5a63-0ad9-4250-85bd-f593bc7fc315",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed15fc03-bea0-45a4-8ebf-6f732b09f616"
            }
          }
        ]
      },
      {
        "id": "dbd69f35-99a6-4587-9748-03d7609dc9d7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5bb8997e-3d74-467d-85a5-654a668f9e19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "039f1efe-b9e1-4e0e-b096-f98564a5eb8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d84f791-968b-44a5-a236-ff19b07960d1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2b99a0-198c-4392-84a6-727a9099f157",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6794e6a7-9318-4788-b5f7-2c78cecb63de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77868fee-8087-472a-814c-adfbccbb0cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c11320b-7c65-46c4-aebf-da7ebeeb5fbe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f51634e8-6259-466b-ac9c-657c240f5164",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd8659e9-0911-492a-a06f-fcbbd086819d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e67dc686-4b6c-43e0-96e3-d58e2a6d2e8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41ec482a-a665-4732-8703-bfa51ce6c35d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23abe76f-fb97-4789-b2e1-ebae13c6fefd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9d246852-f199-4ba9-819e-f75d9e8fbf5b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "291cfc73-3f55-4900-a113-e9ac822b341f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d69a9b42-7c30-48d0-a871-f9a40bdb4566"
            }
          }
        ]
      },
      {
        "id": "8aa67a63-f7cb-4ff5-80f6-49c0d23f3ce2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2c07fa5f-1201-4993-b616-a44698fb7e77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f2867a3-6708-4485-9c6d-b140f00ed4e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f868ddc-4382-4dbb-8c26-a2b6f8240c34",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fbd35a-4d91-4693-b810-421419e53a2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b48d17af-c55f-45d9-8f08-92f00c54602d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa57f5df-d360-4cad-8538-26d6c4888990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8dcebe0-4131-49aa-a042-ecab47b76834"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bca814c-8e79-4262-b750-d8b3d0cb808e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e0d5136-ac65-4165-8f9d-7119f6da2f01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "741beb4b-1a1d-402e-a245-9e06de7fc2cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e1d59e3-9865-410f-a0b9-1a025c352ce9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4668afaa-6e00-4e79-9f63-ca3a98829b18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "256ca5b9-2aa0-4f3b-87ab-975292b46469"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fb567d0-5b3e-4a18-9d2e-62046fd07ef0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0e6fcef-d2ab-4ba7-b55d-3e6ee4086d0c"
            }
          }
        ]
      },
      {
        "id": "5750ab63-7e77-480f-aaf6-7e2028d785e9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe55db07-b387-4422-8627-37cc29e2464d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f6e41c9-0e65-4333-9a44-6f849fa40a4b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "97eb97c7-91ac-4f6a-8c05-95a5403093da",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a9aaced-347c-4ce9-8d94-be2b3f79d295",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fe93687-3677-4b76-8370-8b5fffbd9ec3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.075396825396824,
      "responseMin": 7,
      "responseMax": 250,
      "responseSd": 21.091219818065497,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722732224123,
      "completed": 1722732235497
    },
    "executions": [
      {
        "id": "80143eab-2de5-4993-b7af-2c2e1779e8e8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "54950a05-f817-4920-a9da-0fe475ade0bd",
          "httpRequestId": "4f9066b6-a2d1-4c75-81ad-775c42b66d0d"
        },
        "item": {
          "id": "80143eab-2de5-4993-b7af-2c2e1779e8e8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f0d7f7fc-1d68-48b2-9a91-91b5321ea480",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "473d9fe5-248d-4481-9054-5f7f9c55cc3e",
        "cursor": {
          "ref": "5d63758b-6626-4ca2-b40a-620e2baf249d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "92653971-f459-4118-b790-bc8e10118869"
        },
        "item": {
          "id": "473d9fe5-248d-4481-9054-5f7f9c55cc3e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ca5aea8b-9e9a-460d-8167-ad3677d384cf",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "27b14c1f-4f7b-4739-b6ca-8cbc14cc525b",
        "cursor": {
          "ref": "e379e460-cb89-432a-9982-0a2285f23307",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "83f7368e-365c-47d1-8334-b27a2fec0923"
        },
        "item": {
          "id": "27b14c1f-4f7b-4739-b6ca-8cbc14cc525b",
          "name": "did_json"
        },
        "response": {
          "id": "51bf10dc-85f9-49d0-907a-8a99338e7996",
          "status": "OK",
          "code": 200,
          "responseTime": 231,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1044a9-6ce7-4dec-8ee1-bc9bee702ed0",
        "cursor": {
          "ref": "37f8a975-b38a-4fe0-ba97-6288ee336e93",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "93c2b61d-2335-4c16-bbb1-05655fc25220"
        },
        "item": {
          "id": "cf1044a9-6ce7-4dec-8ee1-bc9bee702ed0",
          "name": "did:invalid"
        },
        "response": {
          "id": "aa81b00e-f1b2-42bf-ab86-dd871b4390a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1044a9-6ce7-4dec-8ee1-bc9bee702ed0",
        "cursor": {
          "ref": "37f8a975-b38a-4fe0-ba97-6288ee336e93",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "93c2b61d-2335-4c16-bbb1-05655fc25220"
        },
        "item": {
          "id": "cf1044a9-6ce7-4dec-8ee1-bc9bee702ed0",
          "name": "did:invalid"
        },
        "response": {
          "id": "aa81b00e-f1b2-42bf-ab86-dd871b4390a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96248bae-c2fe-4dc0-9db1-a01845810487",
        "cursor": {
          "ref": "b29c56a7-bea9-4fb7-af85-ea4d7a5ea296",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6bf4363c-a76f-4ce7-bab1-c884c59e4955"
        },
        "item": {
          "id": "96248bae-c2fe-4dc0-9db1-a01845810487",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5610d2da-cd3f-4853-97cd-59fb29465ff1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e4d70c-ea81-4205-b65d-cabac1a5cad0",
        "cursor": {
          "ref": "2f2798b4-dcd3-48ff-b670-3aa3e0c8fc03",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f4d68cf8-14e2-49e8-9ec6-e4655639fcaf"
        },
        "item": {
          "id": "c8e4d70c-ea81-4205-b65d-cabac1a5cad0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "37550a12-66b6-4bd5-9b9d-7d1202f0e61e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee70fe08-a9d5-43da-ab16-26376b46f500",
        "cursor": {
          "ref": "524ff77c-79f1-4cc8-be41-ea2e9ff263bc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6a71b0b2-1dd6-43d2-b9a8-37cf4fc83463"
        },
        "item": {
          "id": "ee70fe08-a9d5-43da-ab16-26376b46f500",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e21b0ec2-4e85-451e-b9de-36d8578d5daf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e228d7e7-db0e-47eb-ab92-923a5a124121",
        "cursor": {
          "ref": "f773f5ce-085f-411b-b715-1ba1c36606f2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0019e0ff-9958-4797-b25b-4983725cd5de"
        },
        "item": {
          "id": "e228d7e7-db0e-47eb-ab92-923a5a124121",
          "name": "identifiers"
        },
        "response": {
          "id": "893a8f19-9dfe-44bf-b461-f657be1a3ad6",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9044af2-2fbd-4e0d-8a5a-46536c5e9c3c",
        "cursor": {
          "ref": "11d2c25b-4688-4646-9165-659d669974f2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "68cbd425-1f1e-426b-a834-9b9c196bab1d"
        },
        "item": {
          "id": "a9044af2-2fbd-4e0d-8a5a-46536c5e9c3c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7cc0b73d-3fae-4691-8afb-6112f207a2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806bfb50-4bef-4652-af28-be9d92a60d04",
        "cursor": {
          "ref": "a4b27f7c-7acc-4a29-90ad-c6c86700c2b5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6fbc5bd5-72c6-4cf7-a18f-0740bf2aa8d6"
        },
        "item": {
          "id": "806bfb50-4bef-4652-af28-be9d92a60d04",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "accfe245-dd4c-42e1-b8a9-a87635ee058f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8a6715-afbc-4d24-96f3-004ceb7efb8f",
        "cursor": {
          "ref": "99294350-2d21-42d7-8f31-4109be2d6bfe",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "538a4677-4fd1-4b0c-ade2-8cb64f8e4b4b"
        },
        "item": {
          "id": "1f8a6715-afbc-4d24-96f3-004ceb7efb8f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3526f4b4-dd89-40bb-83f8-f987803dcc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c880e6ad-753e-4581-b888-575e9edc8cb7",
        "cursor": {
          "ref": "078c4bf5-0983-4ae4-98ba-3385a2cace78",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "989b4c53-b4cb-43f9-9ca4-6596b9dce06a"
        },
        "item": {
          "id": "c880e6ad-753e-4581-b888-575e9edc8cb7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "87c9d1ab-f2b3-4779-88e8-7a3bcc9f0a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cf4d7b-aee4-4e8f-b4b2-d8e8dc59017a",
        "cursor": {
          "ref": "8932a8a8-d67c-46fb-809c-f1dd9670169d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "15386651-b17a-4eec-a103-3445053176bf"
        },
        "item": {
          "id": "36cf4d7b-aee4-4e8f-b4b2-d8e8dc59017a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "76f264ea-d022-4626-9acb-74c8475aecbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2bbf55-77e8-4411-b89c-ac3113c2ef0f",
        "cursor": {
          "ref": "c663abcc-5199-4971-a219-56bf03a7436e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9c3dba1e-b8ce-476c-98d6-7811d3c48ad1"
        },
        "item": {
          "id": "ab2bbf55-77e8-4411-b89c-ac3113c2ef0f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dd945cfb-2828-4bee-aa23-7ebc58dc0ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be7bce6-b89a-40dc-a8c3-704dcdaabbfb",
        "cursor": {
          "ref": "0e893767-1859-43d1-b87b-0e9d2d82a688",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "70c32190-23b7-4a82-98bb-e23fddba4909"
        },
        "item": {
          "id": "6be7bce6-b89a-40dc-a8c3-704dcdaabbfb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7d5cb021-33eb-451b-8994-a026cf41c50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1226b143-98c2-45ce-b3a6-15a770dbd8ff",
        "cursor": {
          "ref": "1ab65c50-f28d-41b6-8ebc-fb8025a22b13",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e71ab616-0bc0-4dc6-a578-226ef81707ad"
        },
        "item": {
          "id": "1226b143-98c2-45ce-b3a6-15a770dbd8ff",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b0b0a7c2-2ce3-45e2-8576-15364b7c3372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d735784-9a17-42f8-a924-61b530513b4c",
        "cursor": {
          "ref": "35b04721-5681-4290-a725-8183f24ac347",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "abab7136-d580-4e7c-9dc6-fcba3487ae62"
        },
        "item": {
          "id": "6d735784-9a17-42f8-a924-61b530513b4c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f8f31763-5e77-4812-b5f1-192e978b6b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f70d43-1f44-498d-8a5e-3557427ea70f",
        "cursor": {
          "ref": "68fe3478-da90-479a-aecf-3608951e3557",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d0872349-9470-4ca9-9515-1ed28b7a5a54"
        },
        "item": {
          "id": "e0f70d43-1f44-498d-8a5e-3557427ea70f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ee8eb395-2a99-4a0b-8d6a-0824fe33e3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fbd0cb-9bf8-4aca-a28b-dfbb05f7366c",
        "cursor": {
          "ref": "34688a51-8abf-44d3-ae01-721a65284a2f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "91653d04-0408-409e-90e1-9b4865d079e2"
        },
        "item": {
          "id": "b8fbd0cb-9bf8-4aca-a28b-dfbb05f7366c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d4740829-ac0a-4eca-91cd-a121f103ae5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c787f1-1ca3-496f-8c8c-b35e4d6c5263",
        "cursor": {
          "ref": "44581a6b-4290-4a7c-9c7d-9c726c027c44",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ddc7f1ae-ce41-4012-805c-e3cd463f142e"
        },
        "item": {
          "id": "a6c787f1-1ca3-496f-8c8c-b35e4d6c5263",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ff63a910-fb81-40c8-b52d-fa595c85a647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59774745-17fa-41f7-b0c4-63f5067439a9",
        "cursor": {
          "ref": "06deef32-2f4d-47bb-b4a0-4a942d49ff37",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b9b884ed-9fda-4774-8b67-57007e2c2bbd"
        },
        "item": {
          "id": "59774745-17fa-41f7-b0c4-63f5067439a9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4d1d4fbf-5b2c-449e-a4bd-6c20a7bbcb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fab0443-a2cf-448f-99bd-6d7af87fd12d",
        "cursor": {
          "ref": "cb980c89-b304-4a34-9b56-7723abf1f2a8",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b4615615-81b8-4870-a00b-58229dae0747"
        },
        "item": {
          "id": "0fab0443-a2cf-448f-99bd-6d7af87fd12d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d14b1c7e-a897-4e98-bf52-5fc7f1ad549e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efc6c5e-b717-4973-8ac0-8b4c6b2d70be",
        "cursor": {
          "ref": "7c87a56b-bd83-440c-afd1-79c7f7672b2e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "95665508-8f65-4760-9e62-c207c26ad27e"
        },
        "item": {
          "id": "8efc6c5e-b717-4973-8ac0-8b4c6b2d70be",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "21888b9c-7c49-4dd1-b107-990bcb9dfeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f415c1f-6f2f-4f7a-8542-ef0ab4e35046",
        "cursor": {
          "ref": "f8441e04-54cb-4f22-abb2-bed662e1e5da",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "eedca6cf-1ad9-4f7d-8812-b614b5cbba19"
        },
        "item": {
          "id": "5f415c1f-6f2f-4f7a-8542-ef0ab4e35046",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "427ef38a-ade2-4b07-8d49-7ad77ffd0c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1213961-51d4-4bc8-858a-94bfe46c3dda",
        "cursor": {
          "ref": "14d917a5-3ca2-4939-87b5-de6ab1f152e8",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2458b645-f547-420d-9e96-cfd89bebd0ef"
        },
        "item": {
          "id": "e1213961-51d4-4bc8-858a-94bfe46c3dda",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a82469cb-3eb9-40d5-a06e-a6b9ee64c8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb47972-a32d-4c3b-aeef-a36d81dc9290",
        "cursor": {
          "ref": "1c4ba681-697a-4d2c-a683-943d3c29f3bf",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5aa4cb35-96f8-49c5-9aef-ed853acdcdc6"
        },
        "item": {
          "id": "9fb47972-a32d-4c3b-aeef-a36d81dc9290",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "837d3e0a-1d66-4f00-b5df-a9d381402620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d95692b-905b-4cf7-aa02-71c2850b4201",
        "cursor": {
          "ref": "ea080dc2-20fe-4c36-bbc6-08c158b69305",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ae08f237-476c-42c8-8931-960153826484"
        },
        "item": {
          "id": "8d95692b-905b-4cf7-aa02-71c2850b4201",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3d4be752-35a6-4967-b641-716bc9aa5e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a825388-53e6-456e-9bdc-8ae87f6ebf08",
        "cursor": {
          "ref": "e67dff5c-3328-4ba8-aebb-f68f0fe9d999",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "03d99b0b-e840-4df4-be6d-3ccdf1d2b0e9"
        },
        "item": {
          "id": "6a825388-53e6-456e-9bdc-8ae87f6ebf08",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "60c6700e-8fb6-4e94-a97f-81a92e6329c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0882a82-c898-4d77-928f-afbffd58f42d",
        "cursor": {
          "ref": "00d61eef-88b8-47de-b404-45515e12e83c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "35a48e57-e85e-4fd8-bb56-b2c7cdd60006"
        },
        "item": {
          "id": "d0882a82-c898-4d77-928f-afbffd58f42d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8fdcb5cb-2c6a-4df6-85a3-caf22857a789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f05f542-2345-43b2-af2f-41a2bf754d78",
        "cursor": {
          "ref": "5e01abc5-8f3f-4d09-943e-f71ca2cf2410",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8dd7b1b0-59c8-4ccd-b990-87b115a44c9d"
        },
        "item": {
          "id": "3f05f542-2345-43b2-af2f-41a2bf754d78",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "55220247-643f-4f23-920e-915820802c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1314e4-d419-4aab-9f65-445a7ba90832",
        "cursor": {
          "ref": "b14ec35e-d3b8-4a91-8195-6af167ddcf49",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e7fe9918-68ec-47e3-9d92-b8d344614845"
        },
        "item": {
          "id": "4e1314e4-d419-4aab-9f65-445a7ba90832",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a4848d1e-dcda-4d0d-a7cb-798348533bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508e56b4-6b98-4354-94c7-b847f693b973",
        "cursor": {
          "ref": "f5d328c5-8792-4601-80aa-30475e24ba35",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "35427880-9836-4254-b371-d76b89f2a511"
        },
        "item": {
          "id": "508e56b4-6b98-4354-94c7-b847f693b973",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d523e0c3-c04d-4d71-b4a8-c42d38d420db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e476a0-0dd8-4475-b254-b12ef320b040",
        "cursor": {
          "ref": "ce91ef2c-1dc9-456b-afc0-594eccde37c1",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2643667c-8aae-450d-a032-ee40062f671d"
        },
        "item": {
          "id": "f5e476a0-0dd8-4475-b254-b12ef320b040",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "70f02157-5f54-412e-bf3b-0acb50c552e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ae8ce4-07ef-4ae4-b008-34b699262276",
        "cursor": {
          "ref": "21d611a8-4a33-4d8f-85a9-db2d278d5d1d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "34251cc2-7f12-4d53-ab68-b008a3caee8d"
        },
        "item": {
          "id": "58ae8ce4-07ef-4ae4-b008-34b699262276",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4eb29c10-16cd-4d31-b594-fa13e4184e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df22706c-a217-4753-bd0d-43bc9281f3a1",
        "cursor": {
          "ref": "e562fce5-9ad8-45a3-8c5a-6b38bf6078bb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3314b9cc-19f0-4d57-8fcc-c6eeeb81f3db"
        },
        "item": {
          "id": "df22706c-a217-4753-bd0d-43bc9281f3a1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1bc886d2-13b2-436f-9384-8fef9e54cc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0afe92a-d3b2-4d4d-80ae-e87a579633a8",
        "cursor": {
          "ref": "1abc2681-d5e7-4ba8-b7a1-9d29f2e2b441",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7867015e-32a0-450f-8a06-c64796633a21"
        },
        "item": {
          "id": "e0afe92a-d3b2-4d4d-80ae-e87a579633a8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7e406c97-3daf-4339-a5ae-65d0ff49f2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5cbdcf-3ec5-4a60-bb7b-0dc94774b732",
        "cursor": {
          "ref": "b77ba33a-36f2-4d23-aa10-0f56e919ef75",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b4dabfd3-34b6-43e4-9110-69883a3fe42a"
        },
        "item": {
          "id": "3d5cbdcf-3ec5-4a60-bb7b-0dc94774b732",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "98ee431e-628d-4ddd-b290-6367a3829881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f493726-8c85-49a5-98db-51836eba485e",
        "cursor": {
          "ref": "f66a991f-22ce-4164-a641-b9a614350c26",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8d597360-313f-4983-9d34-7ca17d507915"
        },
        "item": {
          "id": "8f493726-8c85-49a5-98db-51836eba485e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2d51c562-f1ed-4801-825a-b985c40fc75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c103a6a-117f-4727-a22e-cb5112d95c20",
        "cursor": {
          "ref": "9ca44b32-0d25-4307-afb5-2b3fb03fe730",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6e53eb9e-105b-4e00-a710-f1a14f9e4c6f"
        },
        "item": {
          "id": "7c103a6a-117f-4727-a22e-cb5112d95c20",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "326d61b1-e171-4995-800a-2f1162804eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a581b207-ece0-495b-833e-e642ee6cffa6",
        "cursor": {
          "ref": "73fb242e-e15a-4300-8640-29b993a2168b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "28124cc7-da96-40bd-9d4e-359fff5d620b"
        },
        "item": {
          "id": "a581b207-ece0-495b-833e-e642ee6cffa6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "07df1bbb-e751-4c3e-b8fd-07d18211f890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c537438-2ab2-4b5c-af88-671c3b1dad4f",
        "cursor": {
          "ref": "3c123193-c3d5-4260-98fe-a2632e197a71",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8f9300ca-e631-46e9-a32c-acd258befbeb"
        },
        "item": {
          "id": "6c537438-2ab2-4b5c-af88-671c3b1dad4f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fc7b639d-8e5d-4a92-b5b3-c472c24508f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b443430d-afa8-4b82-b7d0-5aa6eb19c2a0",
        "cursor": {
          "ref": "930dd7a3-1035-49d9-93fb-f1ccbb20312f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2645886c-ac7e-4fe1-99f0-5c46f8da1a9d"
        },
        "item": {
          "id": "b443430d-afa8-4b82-b7d0-5aa6eb19c2a0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3a5c5857-0e5d-4262-b1b0-889217dc2cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4af323-ad37-4c51-a2c8-02eb623ca71f",
        "cursor": {
          "ref": "806eee23-90fc-4ca0-af4b-d041297dc476",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "30fb00be-1e2c-4750-8160-3f3b10e3a4bb"
        },
        "item": {
          "id": "2b4af323-ad37-4c51-a2c8-02eb623ca71f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "afa9690d-e8f2-4357-939c-d51f82df6304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586e75bf-b259-44f9-9e00-6f90aee1644c",
        "cursor": {
          "ref": "5b1cabfd-74a0-4801-9030-4bc5948e1bef",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1fcdf594-e37a-4a2d-a8cf-1a7e091e51f8"
        },
        "item": {
          "id": "586e75bf-b259-44f9-9e00-6f90aee1644c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ba1a3bda-85e8-422f-9391-a494922b6fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c895e5-425f-4c4b-a180-f64a99cfb2b7",
        "cursor": {
          "ref": "69ead128-4856-4cba-bd57-9ec677ebd22b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f844179c-9001-4a71-bac1-4a43d068980f"
        },
        "item": {
          "id": "77c895e5-425f-4c4b-a180-f64a99cfb2b7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6649bd3c-4e93-493d-8c68-7791ab036c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbfcab3-eabe-48e9-b56a-b4be2c214c15",
        "cursor": {
          "ref": "0f77e98a-d23f-473a-8887-1f6cdbbd759e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "becf632f-8a49-4e7a-8d6e-353d092680e0"
        },
        "item": {
          "id": "ddbfcab3-eabe-48e9-b56a-b4be2c214c15",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bf70e87b-ea27-438f-9a70-740d542e0a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f5e91b-12ad-4d89-ab4e-ab6434e9429f",
        "cursor": {
          "ref": "85b16052-75dc-4f6a-b4d8-ecff7b46b694",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a3b2b2a8-6928-46cc-995e-b433f647a9a3"
        },
        "item": {
          "id": "47f5e91b-12ad-4d89-ab4e-ab6434e9429f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9fa24b2f-246c-4c39-9314-1ac8cc5157c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ab6be3-1a2f-426c-8b02-fea0600df589",
        "cursor": {
          "ref": "81a22df6-a3d1-416e-9278-b5019cad08c1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2093a153-bc92-4033-a82e-dd812cdeaf1e"
        },
        "item": {
          "id": "39ab6be3-1a2f-426c-8b02-fea0600df589",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "75183834-00fe-427d-8a7c-9fd37c3c157a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331b7950-65b1-4898-afd3-b7df673036c8",
        "cursor": {
          "ref": "f2660fe9-caaa-4476-b6df-4446225a34c8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6bb3e39c-3ab9-48cf-a33b-da24249e0632"
        },
        "item": {
          "id": "331b7950-65b1-4898-afd3-b7df673036c8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ef8cc964-ffc5-41c3-8992-1e4dbae2cd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1fecba-8298-4b36-9937-5234cf163da6",
        "cursor": {
          "ref": "c07c4528-fafb-4d4d-8cc2-e0f258bbab23",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a47d2144-705c-4d48-a53e-384b7726496a"
        },
        "item": {
          "id": "1a1fecba-8298-4b36-9937-5234cf163da6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c924813c-de37-40d2-a704-79cfddb13dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856945af-bb00-4455-bb75-963d48c40c77",
        "cursor": {
          "ref": "0a112b05-c527-440b-a2a3-908cdc449c33",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ca8e8f94-de2f-4513-bb55-f88f95a3dfa6"
        },
        "item": {
          "id": "856945af-bb00-4455-bb75-963d48c40c77",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f9f51e00-3cfe-44ef-8e3c-97efae774f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539e680c-9fd2-442c-a9f4-374d31fe8078",
        "cursor": {
          "ref": "2774317f-d3d4-4859-a826-7e669952ffd6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a2bb7f7a-0715-4b94-8210-146974ebf98d"
        },
        "item": {
          "id": "539e680c-9fd2-442c-a9f4-374d31fe8078",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "552ef195-d897-439a-a0ef-60b209c28a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1185a61-f7f3-471a-a0df-7546440286eb",
        "cursor": {
          "ref": "f95dd6db-04c6-4f62-b3ef-6b64d45a76d4",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a0222f71-19e0-4261-8e56-251b088d2c08"
        },
        "item": {
          "id": "a1185a61-f7f3-471a-a0df-7546440286eb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e61a9746-8222-41af-a656-303bd514eb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa16c865-8696-4d7f-82c4-817aa4f4b8ea",
        "cursor": {
          "ref": "a3845ebe-2de9-43d3-9efc-4103bb96fa43",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e6e064df-aada-4e80-a125-4f6bc1dc8d93"
        },
        "item": {
          "id": "aa16c865-8696-4d7f-82c4-817aa4f4b8ea",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "10b456af-8a6b-4f56-93bd-07c0031df0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9721a82-5e0c-4b96-b9dc-c6c6415425fd",
        "cursor": {
          "ref": "2878a1bd-5f30-4b6c-a256-92f4f3794240",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5821c569-7eba-4265-8131-fd172916b965"
        },
        "item": {
          "id": "e9721a82-5e0c-4b96-b9dc-c6c6415425fd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "855277d9-c3b9-456f-ba41-fb0433d78060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7c15fb-e3b5-436b-a052-66dd7ade35c8",
        "cursor": {
          "ref": "60152d53-185a-4709-ac94-d4b94b4bb7f2",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "25834d14-d21a-4d16-b4fa-22656eec8d65"
        },
        "item": {
          "id": "8c7c15fb-e3b5-436b-a052-66dd7ade35c8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "37250913-7f9c-4215-933c-f10e3f6eb519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7d6d6f-e99e-429d-804f-e490f794c00e",
        "cursor": {
          "ref": "5d6c97ea-e5fb-4c9f-bf3f-b0485edd3fbc",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9c545bb4-32cf-4d59-ab7a-0f0bde3e0e83"
        },
        "item": {
          "id": "2b7d6d6f-e99e-429d-804f-e490f794c00e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9a32945b-18dc-451b-bf00-f00a718b5441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a2d2d8-8626-4610-9115-27a1e6353ad0",
        "cursor": {
          "ref": "568a4ea3-ecfb-45b8-935e-e4b02eea47cb",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "86613929-4050-432a-9cf7-4c83d66658d5"
        },
        "item": {
          "id": "b0a2d2d8-8626-4610-9115-27a1e6353ad0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6aac31be-24fc-4a11-b355-69384df5257f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b6e489-6b15-469a-9f95-e39af2b6468c",
        "cursor": {
          "ref": "8e616b03-fa06-4419-82c7-1330cac7356c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5e2eabe1-b458-4b61-b3fe-1d690c4d3f52"
        },
        "item": {
          "id": "d8b6e489-6b15-469a-9f95-e39af2b6468c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ff7b77c2-93d8-4408-8915-2b1f8020df15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c176a6-fe0c-449b-9cdb-7df66593a2c1",
        "cursor": {
          "ref": "91cedfa2-4cad-4462-98d9-4f8e23f81993",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b586cad8-5af6-4cae-beba-d09329f5711d"
        },
        "item": {
          "id": "58c176a6-fe0c-449b-9cdb-7df66593a2c1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7501025b-4cb4-4ddb-99d2-632e6aba8d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1eb0d09-91be-42e1-b67b-8cc89b6ac3f6",
        "cursor": {
          "ref": "a247dc37-f4de-4b8b-8d7a-a143cffaf61e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a5b3a7a2-10f0-4380-af42-bcb855ac5aa5"
        },
        "item": {
          "id": "d1eb0d09-91be-42e1-b67b-8cc89b6ac3f6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ee0b73f0-4992-428e-bd83-e72c42695cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70755d73-8e97-4eda-af6e-13f9a16334fc",
        "cursor": {
          "ref": "6c798ae2-4713-4096-9c9e-65c3ceeedd81",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "54e5ffaa-4a91-46cd-8359-d8e5053938b7"
        },
        "item": {
          "id": "70755d73-8e97-4eda-af6e-13f9a16334fc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d5b5f1a0-b45a-4560-ac62-efcef80444b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4035b9a-70f0-41a9-9370-12f0de37719e",
        "cursor": {
          "ref": "d24add68-c779-4b34-ad1b-e1a338c501c2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "92d09d9f-5774-4d04-8ecc-f4f9936266dd"
        },
        "item": {
          "id": "e4035b9a-70f0-41a9-9370-12f0de37719e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "592e288a-91a9-4db4-87b4-db62927f372d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847513b4-07b6-471a-bbf3-cd697aa275cc",
        "cursor": {
          "ref": "46be6ec1-1268-4d56-a3b0-fb8322ec2e8b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b3050ae0-1ab3-432f-bc8d-b8f5b9a663ea"
        },
        "item": {
          "id": "847513b4-07b6-471a-bbf3-cd697aa275cc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2e16f8ae-8a51-4948-a85f-974a94963648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b8b44f-f8dd-47ec-b1c2-782d6063ade6",
        "cursor": {
          "ref": "7ad72b66-3865-494b-b01b-0a42927d43c6",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "34ce13e5-2ac2-4534-ab23-40ec33b9e731"
        },
        "item": {
          "id": "37b8b44f-f8dd-47ec-b1c2-782d6063ade6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c5bd94f9-0524-4c6a-a944-a6aef834d147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ee0059-5533-4c36-ab60-f5550ff09a16",
        "cursor": {
          "ref": "0678c972-899a-4faa-8b07-0809d0b1e5b6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c66f88ac-e4b7-40f8-94c2-d4c12c614e0c"
        },
        "item": {
          "id": "29ee0059-5533-4c36-ab60-f5550ff09a16",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9059fa8c-1751-45b9-89af-6955b2e1e3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d0007b-2743-4fc5-ad12-5e273cde0e48",
        "cursor": {
          "ref": "791ec027-0929-4a5d-9d12-9b2bb72b71b2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d708ff10-19a1-4cca-a014-c0850b9818bf"
        },
        "item": {
          "id": "f7d0007b-2743-4fc5-ad12-5e273cde0e48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2bef7ee7-076d-495a-8def-bac34aa4fa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1d531d-b2c8-4ea0-b39b-8368e804ccf1",
        "cursor": {
          "ref": "1949b5a4-fb4c-467c-989f-c33a24298108",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "60f790b1-bb09-4ca0-b72d-51307dff5254"
        },
        "item": {
          "id": "ef1d531d-b2c8-4ea0-b39b-8368e804ccf1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "787d8fa5-7e73-44da-a931-f7e35f2f3039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90eba31a-8b2f-48d8-9d20-a795e7add309",
        "cursor": {
          "ref": "1747f26e-17dd-480b-8335-206edaaf0a64",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "296adc19-8006-4d4e-a4cb-8d693f74365d"
        },
        "item": {
          "id": "90eba31a-8b2f-48d8-9d20-a795e7add309",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0480de17-cb97-4f0f-a8b4-bdf97c8145fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ddd608-902c-4e61-9f34-75d50b08e3a4",
        "cursor": {
          "ref": "2668a0b8-a3b8-45b7-be95-c936f68fcc84",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6c064932-e5de-470a-8ce3-a5afdf522730"
        },
        "item": {
          "id": "31ddd608-902c-4e61-9f34-75d50b08e3a4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "189ec1af-e591-42af-ac15-977cdcf05ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356c5590-d0e3-404f-bcd1-07739c356c4a",
        "cursor": {
          "ref": "22b127c5-e9df-43ca-b877-6112e69f6c7c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3ccb12cf-d2b6-4ed9-ac4b-4cd201ab0ebc"
        },
        "item": {
          "id": "356c5590-d0e3-404f-bcd1-07739c356c4a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "abb7e33a-8e86-4a0c-8909-7467c285b28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5398bcab-db44-4215-a4b0-952096e6c3a7",
        "cursor": {
          "ref": "6ac9399a-2d49-4a4e-abe1-c9f06a4ad7af",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dda471e1-35cc-4fc1-9e95-813933ea04b6"
        },
        "item": {
          "id": "5398bcab-db44-4215-a4b0-952096e6c3a7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "68a26b4b-98fd-48bb-9242-c3ea02d4679e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b633925-fb06-4764-9d09-e524cf2042e9",
        "cursor": {
          "ref": "2e942f67-620e-4dfd-97d8-7765de536fb2",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5ed537d5-f5ac-4002-8bc7-08b750154190"
        },
        "item": {
          "id": "5b633925-fb06-4764-9d09-e524cf2042e9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "deaf5596-e3e4-4549-8add-7428d34c9efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346b82e4-8ec6-40f2-bb7d-25b6ec94e978",
        "cursor": {
          "ref": "f4301e1a-2883-4d82-984f-e625c736bcbc",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "becefb68-ef35-4257-992f-c5aa7d923766"
        },
        "item": {
          "id": "346b82e4-8ec6-40f2-bb7d-25b6ec94e978",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f3911dc3-3953-45d9-9f48-6be1247ceb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553f7eb3-a6b2-4725-b356-635693386b6a",
        "cursor": {
          "ref": "a28513d9-99eb-4eae-963d-5b1c8bdf5e7f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e1c2ad98-13f9-4684-9c93-714b5ef7a2a3"
        },
        "item": {
          "id": "553f7eb3-a6b2-4725-b356-635693386b6a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "09194a45-7231-47bb-9c2d-ac9eb421f2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4ca207-0ae7-4d22-a8ed-72993ad081b0",
        "cursor": {
          "ref": "a63e7a8a-a93e-474a-8c7a-d1e09fa693d0",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "be2b5ae3-dce2-4f98-9743-df14fe6f0459"
        },
        "item": {
          "id": "9c4ca207-0ae7-4d22-a8ed-72993ad081b0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1021d349-3f74-4b4e-93e0-329a5523584b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be06af41-5112-47c1-b00c-dc15abea557e",
        "cursor": {
          "ref": "51ddb8ab-bdd5-46e5-8ee3-b602d415c4de",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "afe8a0b0-fec0-412a-8180-fbf230471e9d"
        },
        "item": {
          "id": "be06af41-5112-47c1-b00c-dc15abea557e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "95697527-2cde-48fc-9704-1c887750a201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fea397-d195-47a4-95a7-9d39b492fce5",
        "cursor": {
          "ref": "1a619f85-1345-48ad-8725-cf38149a47dc",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "48466cef-7a89-4d7f-862e-1dbeb1be8643"
        },
        "item": {
          "id": "10fea397-d195-47a4-95a7-9d39b492fce5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "59f2a661-c53d-4af8-9188-0dbbafabe61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f67804-4944-407f-9c71-85ad6aa2a19e",
        "cursor": {
          "ref": "b44e7ec0-6f7c-4dd3-b1ed-4ee81d832379",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "da23af55-96ca-4207-91e5-8f206a3ecc1d"
        },
        "item": {
          "id": "78f67804-4944-407f-9c71-85ad6aa2a19e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7fbb71d5-b80f-4d1c-ab3b-eead6e0246ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409204ab-47bc-48d1-a43e-1bd5e559a66d",
        "cursor": {
          "ref": "205e4ef3-8a43-40b9-8ad6-c19b310c86ed",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1c681b79-334f-4258-ba45-6b1dc55bcb9e"
        },
        "item": {
          "id": "409204ab-47bc-48d1-a43e-1bd5e559a66d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f25248c9-954b-4d76-9abd-65ac90a26fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c76cd4-e96f-47ae-9361-b67956f89085",
        "cursor": {
          "ref": "33154f72-b21f-4688-9a02-8cf7e99d04ed",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5492da24-120a-469a-a701-debdc33db270"
        },
        "item": {
          "id": "44c76cd4-e96f-47ae-9361-b67956f89085",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "afc79f6a-b640-4181-990a-e5a30506a73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cad7ce-905e-4d44-8e55-86450c5495bf",
        "cursor": {
          "ref": "4216924f-735c-4cfa-873c-6b12036932ae",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "df9c4bc0-a047-417e-9d89-bead95a3a3a5"
        },
        "item": {
          "id": "b5cad7ce-905e-4d44-8e55-86450c5495bf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3e2cb547-f85d-4940-83ff-fce7ecf22b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975f2028-761b-422f-904f-886262b28ed9",
        "cursor": {
          "ref": "5590e1a9-53d4-4007-afcb-ad1f7b832c13",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2f81729c-db94-49a7-801f-a5e64bb1011d"
        },
        "item": {
          "id": "975f2028-761b-422f-904f-886262b28ed9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2829cce3-e4d9-450f-9880-76ee28a08449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161f4883-01cc-4873-a896-64a75bb6697f",
        "cursor": {
          "ref": "b3d1ab66-15cb-4f28-876f-aaf7685c68c9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "18119f71-d225-4faf-8d27-6502d23871ec"
        },
        "item": {
          "id": "161f4883-01cc-4873-a896-64a75bb6697f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "93b15847-340a-42d9-8ef0-c702d9e06cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4c217f-886f-4b14-8812-7f4a0d44f231",
        "cursor": {
          "ref": "5088aa3b-657d-44cd-9854-c781946893ce",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2582710c-32a0-4ea4-8225-9ceada781595"
        },
        "item": {
          "id": "1f4c217f-886f-4b14-8812-7f4a0d44f231",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d6ded00e-c99f-430b-bbc9-28e555609fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf406d6-2c86-46d0-a43d-f981854e8f15",
        "cursor": {
          "ref": "0193f2a5-c9ef-48bc-b98c-48c952245bc2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "26fc0bd9-d3f8-4628-aa1a-1c1d9272c6ba"
        },
        "item": {
          "id": "ecf406d6-2c86-46d0-a43d-f981854e8f15",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d965927f-18db-446c-847a-f1aafd0348bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed01beff-88a9-42df-8258-0f78d8bb61a4",
        "cursor": {
          "ref": "6512528b-9503-49a8-99ff-c3ad4e83f789",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c97caafe-9efa-4b24-b438-d13a997c869b"
        },
        "item": {
          "id": "ed01beff-88a9-42df-8258-0f78d8bb61a4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9a26c99b-1cf1-41e0-ad39-3ba1cfceff99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e40d9f-5d64-4438-b73f-e50d6c7207de",
        "cursor": {
          "ref": "d2f643f4-b190-488b-9970-60555b8325b5",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "512ac433-aadd-43bc-98e2-3926a00c6f88"
        },
        "item": {
          "id": "e9e40d9f-5d64-4438-b73f-e50d6c7207de",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f00e495d-4047-4105-b28c-f3dd2e8fc05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9049078-0f91-4824-b761-749038fd895f",
        "cursor": {
          "ref": "477c3add-13d6-4c0a-8ea9-828ada3aef5b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bf0a666c-b04f-4638-96f4-34cf4a4fdd3b"
        },
        "item": {
          "id": "e9049078-0f91-4824-b761-749038fd895f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b5909d23-7715-4e4e-b205-6ea73d919d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677841c3-3781-4f9a-882f-fc0a04bb6de1",
        "cursor": {
          "ref": "d0f6870b-f9b2-4e12-a474-894dec0bb928",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cf8b9c3b-3931-44a8-85e8-878515fb0482"
        },
        "item": {
          "id": "677841c3-3781-4f9a-882f-fc0a04bb6de1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "213cd631-5b24-49b3-85f9-119a016f1939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e3e8fd-53ad-46f0-8a62-5b58d789836c",
        "cursor": {
          "ref": "70bad2f6-1fc5-43ac-96b8-125257960cbb",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "27a1fb7f-db29-4611-be3d-43dbf67f159f"
        },
        "item": {
          "id": "d3e3e8fd-53ad-46f0-8a62-5b58d789836c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "92edff6e-a266-49d3-acff-92894fc5d6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e1f11b-527f-43a9-900c-cea1f6b08393",
        "cursor": {
          "ref": "3688f780-ac2d-4b0d-a7b2-8c1306dc22b9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2de3ab5d-34a6-4611-865e-a8da01e72508"
        },
        "item": {
          "id": "66e1f11b-527f-43a9-900c-cea1f6b08393",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "03a16a55-93dc-4f66-a41b-f82f7de2b2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a46a07-0c95-405d-b069-be4595d18fb5",
        "cursor": {
          "ref": "4a74b7bf-9786-43b7-b939-cf8bb586f495",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "44a04674-a132-4920-9a00-b1a05a83023f"
        },
        "item": {
          "id": "b1a46a07-0c95-405d-b069-be4595d18fb5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9f321ef6-110b-4c12-bf6c-8693ac530886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fc4dd1-7c7a-466f-81ad-ab93cadae5eb",
        "cursor": {
          "ref": "0e869ac8-e13d-4688-a2e6-3af8e4bf34e4",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "435177d7-aa98-4639-94a2-006c7092fa06"
        },
        "item": {
          "id": "c5fc4dd1-7c7a-466f-81ad-ab93cadae5eb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d13ee730-f6fe-4091-9554-db9aa048e3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8538f4f-9a63-4a5e-81a2-4e217a0fd08a",
        "cursor": {
          "ref": "24171e5e-d9f4-472b-8df0-d0b0cb63f27e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "746a60bd-e778-4442-9a7f-b0e896fb6861"
        },
        "item": {
          "id": "a8538f4f-9a63-4a5e-81a2-4e217a0fd08a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bfbd3ec8-32ce-4513-911d-6e53d6643139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11303dbc-c4a0-4c82-b634-53da2d6fbf5a",
        "cursor": {
          "ref": "313ff40c-0eed-42a1-9aa4-0c7e5bc4c8d1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ba2ff2ab-f6b4-48dd-af26-410081c36f02"
        },
        "item": {
          "id": "11303dbc-c4a0-4c82-b634-53da2d6fbf5a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "49108245-72b1-4942-907c-1d56456f0dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1262f005-b84d-4001-93ec-3d70b7b05543",
        "cursor": {
          "ref": "567c66d8-5749-4313-b16a-fe960d9a3948",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9adc4a89-9e12-4d70-bd70-46c909d152bd"
        },
        "item": {
          "id": "1262f005-b84d-4001-93ec-3d70b7b05543",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "507da695-b1bc-464a-b5ba-df4cb54d29ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75520c31-51e8-4fc0-bf6f-59671bfa582b",
        "cursor": {
          "ref": "d556045b-50db-47ed-9353-59cca10c164f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b6c12385-5454-4687-a2ed-ecbe04731854"
        },
        "item": {
          "id": "75520c31-51e8-4fc0-bf6f-59671bfa582b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "74c849bf-dd46-4924-a2d3-8024fd6f1ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f258d004-0777-4e4a-b34b-9f8861cd9655",
        "cursor": {
          "ref": "7c3bd21c-3785-4f71-8095-059c757a0633",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ec956fa2-f99b-4a1e-9c0f-734b9c0a1a87"
        },
        "item": {
          "id": "f258d004-0777-4e4a-b34b-9f8861cd9655",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5461aaba-8684-4829-87fa-5c5316a2924a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3da2519-46cb-4ea8-81fd-d20740803a30",
        "cursor": {
          "ref": "d48d09d9-72bf-4498-9139-961fadd9cba1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4303e5a4-0141-4ea5-8940-02dd1ee40220"
        },
        "item": {
          "id": "d3da2519-46cb-4ea8-81fd-d20740803a30",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "35407784-8670-4bcb-a6e0-e6c15a9d0c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814e5f5f-6d01-47d1-a189-da7c38b3ef4c",
        "cursor": {
          "ref": "12ff1edc-a840-4fb4-8f82-609b46d1c34b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7297ae27-9152-41c6-9826-ba48e561eb94"
        },
        "item": {
          "id": "814e5f5f-6d01-47d1-a189-da7c38b3ef4c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c1e0a207-b9e1-4a1e-850a-f2ad1fb533c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e73d71-abbb-4006-b8e6-5981348bc46a",
        "cursor": {
          "ref": "becad7a7-ad2c-4d16-86d2-d26c1014eec6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5ff59956-54eb-4d24-b908-a6d0fa22db3a"
        },
        "item": {
          "id": "84e73d71-abbb-4006-b8e6-5981348bc46a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cb719870-33cf-41b5-8a0e-1d746a3b75db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a2e551c7-11b7-4240-9b60-46a8dae15feb",
        "cursor": {
          "ref": "62266e3b-0de1-4de4-bfff-5a139fcd5a2e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8070758c-aebe-4cd5-b09c-6e9b7e931755"
        },
        "item": {
          "id": "a2e551c7-11b7-4240-9b60-46a8dae15feb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "53063880-f270-4576-84c0-8032fc81778d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4f1dd6ca-f5ae-43ed-8d81-12259bd4b814",
        "cursor": {
          "ref": "0b50bff5-0de8-422e-ad1e-9b872e86b30e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4bb8d873-cfe6-4209-9341-c73b2b89adeb"
        },
        "item": {
          "id": "4f1dd6ca-f5ae-43ed-8d81-12259bd4b814",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "89792fec-6218-41f1-b44e-58aedcbb2ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "700df81c-9e84-463c-92bb-87684cea22a9",
        "cursor": {
          "ref": "90249127-49e3-46c5-8a6a-f75228f9a54c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "62da2365-ecc5-4876-bd4e-028361d50c18"
        },
        "item": {
          "id": "700df81c-9e84-463c-92bb-87684cea22a9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "79b6e9b2-18e9-4f72-a6c1-eee974cec789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fdaac425-323d-497f-869b-dd2230dab3cc",
        "cursor": {
          "ref": "c50cf469-c41a-4977-ad31-a826930321c2",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "805f60af-290e-44c8-a053-5ac80c0ca27e"
        },
        "item": {
          "id": "fdaac425-323d-497f-869b-dd2230dab3cc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d929211f-49f6-454d-8dfd-c488ae3490e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d0128442-898d-4a51-be4e-bab5ea2638af",
        "cursor": {
          "ref": "180f7749-b73f-4d49-bc99-2e4c3d268bc3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c12c5be7-49ea-448c-826b-b648d3314971"
        },
        "item": {
          "id": "d0128442-898d-4a51-be4e-bab5ea2638af",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "904ec765-d7e3-4645-b71b-aa025a2f99b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "bfdf9a36-dfd4-4c70-8c01-af0d26e2f7e9",
        "cursor": {
          "ref": "65f3e8df-9441-4ed1-b95e-30d0bbb154d7",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "48302489-5c71-4dd6-97f0-121a72928ae2"
        },
        "item": {
          "id": "bfdf9a36-dfd4-4c70-8c01-af0d26e2f7e9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "176008ba-4e8d-405c-a4d3-0adbf9072ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "21db4b90-0239-450f-b048-8623ba54df25",
        "cursor": {
          "ref": "25fbec8c-549d-4c57-9f52-f2b69b9ed850",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a26a9af6-3620-4a06-bdd8-5e904a14ede5"
        },
        "item": {
          "id": "21db4b90-0239-450f-b048-8623ba54df25",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "04d94ccd-2f0b-4740-93d0-ffb3511d4c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988ee1a2-01b6-4e97-99e9-9075a7327e23",
        "cursor": {
          "ref": "cf35aad4-a319-4cfb-845b-b497adfc1aae",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8fa5fa9a-7d62-48f4-9a1a-a4261ec75082"
        },
        "item": {
          "id": "988ee1a2-01b6-4e97-99e9-9075a7327e23",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "935b2f7a-c2a4-47c8-80ab-983907c25ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935b5258-1a66-4301-82ba-9b61a0f036cb",
        "cursor": {
          "ref": "72e1a9f9-62fa-490f-8b2e-fcc3256a73e5",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "41d21526-effb-46fa-9af7-242f39cc6f07"
        },
        "item": {
          "id": "935b5258-1a66-4301-82ba-9b61a0f036cb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c9aa124b-555e-4f30-ab4d-b0252c307815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ad6b7e-9b8a-40c5-95e0-b86f18cbcd33",
        "cursor": {
          "ref": "9867204c-61d6-4541-8916-df4e0047e08a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b96bd6ff-53fa-42ac-a7ee-fdef8c415550"
        },
        "item": {
          "id": "78ad6b7e-9b8a-40c5-95e0-b86f18cbcd33",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "551e6977-d0af-45ef-822e-68a0bf42e6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b71c53-5828-4b90-844c-a2c655c4e106",
        "cursor": {
          "ref": "d969c672-5aef-4547-9dd0-f6595e021c74",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "734dcf37-ef36-4461-a1f2-7c60ac26bae4"
        },
        "item": {
          "id": "76b71c53-5828-4b90-844c-a2c655c4e106",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b594e729-7c5c-4bb3-a90a-24c5de0f471c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d682e5bd-0398-4f61-bc1c-1451ea6cddfe",
        "cursor": {
          "ref": "393812a0-9ceb-482a-94ac-b631a7588d4e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ce4fd77a-de15-4e45-a8e4-a448a8c01694"
        },
        "item": {
          "id": "d682e5bd-0398-4f61-bc1c-1451ea6cddfe",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "48237280-3b31-49ff-90bd-aa348fa8733c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aed13d6-3e21-4b1f-aeec-66f9bcaa6a91",
        "cursor": {
          "ref": "4657bbf1-88e3-49cb-8980-d70a1f8e6148",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c8fd04f0-61ac-4f34-9bb7-45004dc5bee4"
        },
        "item": {
          "id": "6aed13d6-3e21-4b1f-aeec-66f9bcaa6a91",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3da9849c-bdb7-4e52-9b49-b31b270162af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda760b8-4145-48cb-8ace-3c842bf85ca8",
        "cursor": {
          "ref": "fa983355-92ea-40df-a739-7df0fde8ade0",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9012d639-d872-47b2-a43b-1dbc1d89f50d"
        },
        "item": {
          "id": "bda760b8-4145-48cb-8ace-3c842bf85ca8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ae216e8a-50b3-4a19-b2f2-4bcd3bf96b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b33db59-63b4-4b63-8551-c7018c011b46",
        "cursor": {
          "ref": "da9e7afb-10fa-49f0-a9d2-f9fbdc59a32c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0b3dad7d-e6ee-4254-b5db-beaaf98fbee2"
        },
        "item": {
          "id": "6b33db59-63b4-4b63-8551-c7018c011b46",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9c9b2745-b57e-4391-aac2-0861c4196302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2b6f88-c379-42ab-a3b7-10193d165947",
        "cursor": {
          "ref": "42810896-a9a8-4711-8d73-fb1bde872d8b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d8950c9f-f50e-4fac-88df-463fb2f63e9d"
        },
        "item": {
          "id": "0b2b6f88-c379-42ab-a3b7-10193d165947",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "18a94d3c-c97e-455c-b758-43ca59fa8e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03091441-0983-4f5a-ba0c-722547fd8835",
        "cursor": {
          "ref": "b27b026f-7866-467d-8714-53a558e7c88e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "095fe7da-a5e9-4271-bb73-60ceb3290203"
        },
        "item": {
          "id": "03091441-0983-4f5a-ba0c-722547fd8835",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "850c07c1-ebaa-40a9-aac9-10137616a226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d173af08-a187-449d-9214-ccfb2c224f6f",
        "cursor": {
          "ref": "5ae72e0e-0907-4c97-916d-5f0b527f4d2d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b012a31a-a060-4f6e-806e-c9d926269c14"
        },
        "item": {
          "id": "d173af08-a187-449d-9214-ccfb2c224f6f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ce06a3bd-7857-49fc-829f-2d5fb70b52c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6532bdd3-d159-4f53-949c-510b31b0b939",
        "cursor": {
          "ref": "3840b982-d4c0-4126-a67a-c764aaa48107",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4b92de32-225a-4a52-adbf-7fa11abdd2f8"
        },
        "item": {
          "id": "6532bdd3-d159-4f53-949c-510b31b0b939",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c2a352ce-dabb-437f-a055-5361f13c9a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48deab03-6c94-44b1-85e4-9792573a61ac",
        "cursor": {
          "ref": "6dc7c7ff-3cb9-4bb9-b883-3cadfd84aa16",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f968a8eb-360c-409e-bc05-9fbe957d84bb"
        },
        "item": {
          "id": "48deab03-6c94-44b1-85e4-9792573a61ac",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "11678b5a-1909-4383-919f-70c7eee015c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3d4c17-ff01-4ad7-b72b-a64c43ca9361",
        "cursor": {
          "ref": "50f73e0c-89d2-46ed-9ba1-5a1160db61fe",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "407b9956-d530-4934-92b5-c3b2ef366dc2"
        },
        "item": {
          "id": "ca3d4c17-ff01-4ad7-b72b-a64c43ca9361",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "98fc0a2b-7801-4931-a93a-ece87a25130c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20134603-98dc-48db-9ea2-2b47a75346c9",
        "cursor": {
          "ref": "4877d877-f4b2-47a9-9d39-b124714e53a6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "44f42187-f0f9-4ae4-9b01-0ce5d097dfe0"
        },
        "item": {
          "id": "20134603-98dc-48db-9ea2-2b47a75346c9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a4f04195-7c0d-46d7-984e-3d6ddd5b5a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665e38d6-7fac-4bec-b176-c32a7165b82c",
        "cursor": {
          "ref": "3a55e89b-18a6-462d-88f4-8b539b05ca0f",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1bf972ea-c00e-46da-bfa3-74f08e2ee6f5"
        },
        "item": {
          "id": "665e38d6-7fac-4bec-b176-c32a7165b82c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cb5dc148-1cc1-41c2-b519-0d75831a2a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddb5367-9a7e-401b-9e82-1a30207c63a8",
        "cursor": {
          "ref": "a7a23b51-95a5-44cf-8ed2-8a4fe1f1138f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "29b59c80-eda5-4f9e-9bac-7c4110ad5ff4"
        },
        "item": {
          "id": "4ddb5367-9a7e-401b-9e82-1a30207c63a8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "50d657c6-284c-447d-b6fa-d7f876c1ef6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3eefbc-f000-475f-a045-cadd04bad7c0",
        "cursor": {
          "ref": "f2b74def-255d-4d53-a4c3-d895519bae67",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9da9356b-3c63-4a5e-a02d-ba2961356ed9"
        },
        "item": {
          "id": "da3eefbc-f000-475f-a045-cadd04bad7c0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "08300cca-1cdf-4951-b584-e34ce0735b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67c2c80-5b5e-47ab-af86-4d0f2230f22a",
        "cursor": {
          "ref": "4665bf19-ebc8-4217-bfa7-08a499de2bc9",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "59f63b1c-7377-4836-8493-220dacad0c0b"
        },
        "item": {
          "id": "e67c2c80-5b5e-47ab-af86-4d0f2230f22a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "677aaca7-4833-4700-9a43-663142eeba6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a46471-e56e-4162-b974-bb74bf7c2ec6",
        "cursor": {
          "ref": "8b1a3da5-a463-4d05-8944-f815dfdd3ca0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b791c589-da95-454f-942e-deea34bffdfb"
        },
        "item": {
          "id": "e5a46471-e56e-4162-b974-bb74bf7c2ec6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "93032c16-b328-40e2-9b46-c0c7de53bf0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee014a6-a331-447d-bdff-65ca4e498ae8",
        "cursor": {
          "ref": "b91c3dd7-4ffc-4a24-9e86-73a5e6e4ef56",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b59f4ebc-65e3-408d-b786-13d5f8844370"
        },
        "item": {
          "id": "aee014a6-a331-447d-bdff-65ca4e498ae8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d962809f-a7f0-43cd-a48c-de527b28e91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fb484b-abbe-4e52-b857-579162f768a3",
        "cursor": {
          "ref": "1a56f0a3-4d8c-4b14-80db-6a6726735275",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "642a3a2f-3a28-44f4-9bce-165d32dd51d6"
        },
        "item": {
          "id": "12fb484b-abbe-4e52-b857-579162f768a3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "efcbe369-4a9a-45ba-8392-107622c12394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e9d81f-e57e-43bb-a525-b5096ef775d9",
        "cursor": {
          "ref": "4f080137-d798-4230-860c-a564214ff6a9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c9f96521-6326-472e-a294-f52ac4eed668"
        },
        "item": {
          "id": "95e9d81f-e57e-43bb-a525-b5096ef775d9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9b15f07e-f38c-4164-83d0-94caed88f142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e83a1b8-5372-4f76-b8fb-e100f3189398",
        "cursor": {
          "ref": "61196a3b-98c7-43b8-94c1-a27e277bcc25",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "797174ab-e854-4d43-ab00-a6aa36120e88"
        },
        "item": {
          "id": "7e83a1b8-5372-4f76-b8fb-e100f3189398",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d30e2dc9-0a69-4f8a-b442-d2d50392d2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc93e525-7d92-4013-ac08-db5e263a3684",
        "cursor": {
          "ref": "7999a929-e1ed-4435-9168-74ec5aa23d67",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fff27f33-4a0c-4391-b24b-e405c09c9e99"
        },
        "item": {
          "id": "dc93e525-7d92-4013-ac08-db5e263a3684",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0ffe272d-d88d-4d2c-8303-ef21067eb662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3de6376-b8aa-4030-b7dd-ba9c04b9ea61",
        "cursor": {
          "ref": "771eaed9-c55c-4f68-a1b3-31ad30921f77",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2af5809f-ee52-42b9-b9af-b788e1046aee"
        },
        "item": {
          "id": "e3de6376-b8aa-4030-b7dd-ba9c04b9ea61",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4701df7f-8d09-4e21-96e1-c40705a70c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9fa90b-ac64-4bd7-906e-ca42fa8d85e3",
        "cursor": {
          "ref": "09b03154-13ad-4f1d-af93-4b25acc1dbd1",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7a988d9b-8bd2-4a89-93e5-1954bba238b5"
        },
        "item": {
          "id": "1e9fa90b-ac64-4bd7-906e-ca42fa8d85e3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ef3b50c5-73ee-49f2-8085-2d684a054db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bb7dad-49d0-474d-b8d9-c45ee0e387e2",
        "cursor": {
          "ref": "7675b0ca-7795-41bc-9429-4308d1cd69ec",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c64720c2-783e-4b36-a357-c07aaca30b3f"
        },
        "item": {
          "id": "21bb7dad-49d0-474d-b8d9-c45ee0e387e2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "039d3cc0-423a-4f61-9cfe-9015f70f7c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1050f957-e19f-45da-9a74-56d1d9ded586",
        "cursor": {
          "ref": "9de8be67-70c6-4d5a-aedf-ae1bf8638e94",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6c1a93c5-2ffd-48cc-ac46-d2880a531f18"
        },
        "item": {
          "id": "1050f957-e19f-45da-9a74-56d1d9ded586",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3362437c-1641-4a64-9554-ed5b3f0a04d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce001d4-0d7a-4b43-b7bb-ddf39c460243",
        "cursor": {
          "ref": "c960171a-41dd-429a-a2dc-8c360baebae4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1ec82e32-153e-4f65-a6d9-5a816f513ad4"
        },
        "item": {
          "id": "1ce001d4-0d7a-4b43-b7bb-ddf39c460243",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4e76291a-602a-479d-b386-7f0b32cd8e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5781a49-fd24-4fb7-9d3e-da2156d60d4e",
        "cursor": {
          "ref": "22cd9fc2-8a7d-447a-9908-8ab487ec79f8",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c40a589f-3c00-4779-89a3-bbbdf2752560"
        },
        "item": {
          "id": "f5781a49-fd24-4fb7-9d3e-da2156d60d4e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3d71d284-6e42-43c9-8307-586a34a270cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75094334-4d3e-4533-9f97-3cc9cdce5f88",
        "cursor": {
          "ref": "e513b66f-2019-4944-a0a4-d612ae461dea",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1f6289f6-7a3a-4e53-89f9-7a3939cfdc89"
        },
        "item": {
          "id": "75094334-4d3e-4533-9f97-3cc9cdce5f88",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "37e204be-09b8-41b0-b577-88dc1c838863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46157f13-e029-4477-8458-0491a1ea9017",
        "cursor": {
          "ref": "4e0e3c5a-0174-41aa-a0e5-a41c33b56c77",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6dfd8619-a406-4d18-a049-8483776afe63"
        },
        "item": {
          "id": "46157f13-e029-4477-8458-0491a1ea9017",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "82a860ab-6dc3-496a-adb0-bf2177f97bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a854bb-1fb3-498c-951b-0da2def743f1",
        "cursor": {
          "ref": "e1a36fb0-0757-4c27-aecc-b3794e2d143b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0e8b56c8-7eb3-4cce-8901-37daee6c090f"
        },
        "item": {
          "id": "42a854bb-1fb3-498c-951b-0da2def743f1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "157c2d98-9a4c-4dea-bf06-eedb00b136eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc99f65-ef5d-40cd-ba42-c535ff4086ad",
        "cursor": {
          "ref": "73c0f88b-f224-45c5-bd64-0d04eae2b6dc",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2c182eba-667d-4643-901f-e1bd2ab35c3f"
        },
        "item": {
          "id": "6cc99f65-ef5d-40cd-ba42-c535ff4086ad",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c8fab13f-2e09-4838-a5ca-b77a664f98ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406a524c-92b6-4db2-b0ec-628314553737",
        "cursor": {
          "ref": "5b392de1-a0da-4aaa-b04c-006e2397faba",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f8937531-77b9-43ef-896a-2996d17b4519"
        },
        "item": {
          "id": "406a524c-92b6-4db2-b0ec-628314553737",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "612572df-3f8f-46e3-af0b-9537fa9b1302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280758c5-6f2e-4549-a7df-03fa650fe79d",
        "cursor": {
          "ref": "119910f3-f97c-4e24-906a-d1cd90e5c308",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a6dd6d3a-683b-4325-9814-504358c82e61"
        },
        "item": {
          "id": "280758c5-6f2e-4549-a7df-03fa650fe79d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "898c5e88-1d55-4e48-888d-20d8cfb9c009",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dee4b9-59b1-47c0-8080-035d7e99d443",
        "cursor": {
          "ref": "0c31b20e-c174-49a8-bed9-105d89affea5",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "243a8976-4287-4829-9842-67d660296409"
        },
        "item": {
          "id": "b9dee4b9-59b1-47c0-8080-035d7e99d443",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2df9cbdf-b16d-4d11-8723-7f6d12d12d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb88763-19e4-4aaa-8e5e-5f2891fd07fe",
        "cursor": {
          "ref": "302b3034-ffdd-4035-b5b7-211581809fee",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a3d42b12-05c5-447a-960d-cf542ac73d02"
        },
        "item": {
          "id": "4fb88763-19e4-4aaa-8e5e-5f2891fd07fe",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3122432c-377f-4c43-b776-a4cd26af5c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3d55a9-061b-4901-94de-9cadfecaac34",
        "cursor": {
          "ref": "0167ec37-75c4-418f-84f2-ee9de31a16d0",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "739e10e9-b0a8-432e-ab00-5f8e7d330f99"
        },
        "item": {
          "id": "2e3d55a9-061b-4901-94de-9cadfecaac34",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6358a012-ec6e-4a17-ab55-d308a5a1f054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc3d7a5-86f5-47c2-86b6-dea5d2bcc3f8",
        "cursor": {
          "ref": "17f4595e-9282-4f79-800b-b415f905eb87",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9eecd278-8aaa-4d38-b27d-ff5cb131e4e3"
        },
        "item": {
          "id": "5fc3d7a5-86f5-47c2-86b6-dea5d2bcc3f8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a2df21ae-3c2a-4370-8c43-dfa332c105fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c93bc24-3ef0-4726-bf2f-11c1f4108bb9",
        "cursor": {
          "ref": "21b037bb-74a9-4259-8bdc-dca4f932d6d2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dfc5d8eb-eced-4999-a9ae-06265ef28763"
        },
        "item": {
          "id": "2c93bc24-3ef0-4726-bf2f-11c1f4108bb9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6c1f3bae-b1da-4615-b468-b1b897323512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da469b7d-da51-42fe-ade1-9af1f773d7de",
        "cursor": {
          "ref": "28018a9c-684c-40bb-a1b3-a4028de3d284",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d2f6d72b-a573-4bab-a4fd-a65e83559393"
        },
        "item": {
          "id": "da469b7d-da51-42fe-ade1-9af1f773d7de",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2a29b798-aee0-4a76-904c-c15e5d560698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13524e74-8362-4225-a6b5-8aee6abf3b13",
        "cursor": {
          "ref": "5365c4a4-3a54-4094-b908-b27529dc2172",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e6458bde-bcd8-44a9-9414-d90433f70e93"
        },
        "item": {
          "id": "13524e74-8362-4225-a6b5-8aee6abf3b13",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7baa47a5-d6a6-40cd-92cf-a7f49bd43c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b423ea40-4c4a-4f0d-afbe-d9acb7849db7",
        "cursor": {
          "ref": "18e61ce5-3fc0-496e-b4ac-318a5028a44d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cb3278a1-715d-4fc6-9471-bc8385dfe21f"
        },
        "item": {
          "id": "b423ea40-4c4a-4f0d-afbe-d9acb7849db7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f2ad5449-18a1-48c7-9e60-a3a68dacc433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a230f16c-131c-4751-ae7b-95ecee9aef3e",
        "cursor": {
          "ref": "5d433ae2-109b-4031-9957-dd6b8dfc576c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b9c2b2e2-c68e-49de-93f2-ea293ea3e6d6"
        },
        "item": {
          "id": "a230f16c-131c-4751-ae7b-95ecee9aef3e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4981de17-33fb-48d0-ade8-137eab9033cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aed61e9-0dc9-4d2d-b11d-4947924e85d3",
        "cursor": {
          "ref": "2ee33fe2-ae18-41e2-9166-5ce271f6cb22",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7276c645-8a75-4869-9591-ab682fef68e2"
        },
        "item": {
          "id": "3aed61e9-0dc9-4d2d-b11d-4947924e85d3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9c4c6f8d-5721-47cf-b406-e778206b229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041dcb00-8348-4838-b090-507f2eb97704",
        "cursor": {
          "ref": "4afa8f8b-0a34-466c-bac0-bc075c00da01",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f0f406e2-051c-4a1f-968b-fd4f277cd4c9"
        },
        "item": {
          "id": "041dcb00-8348-4838-b090-507f2eb97704",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "58788070-ccab-4c0f-a725-7c792013a7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec5ed9a-573b-4ccd-8c72-ded84064e135",
        "cursor": {
          "ref": "6ece67b1-a889-4686-b964-6717ba6b616c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3734351a-3fe2-4498-ae86-c58366bebf39"
        },
        "item": {
          "id": "fec5ed9a-573b-4ccd-8c72-ded84064e135",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d11983ab-4ae4-4306-ba92-2db48c9a0160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd46bdc-f94e-4202-86f2-23e923196a79",
        "cursor": {
          "ref": "6235ffe2-ab1c-4c70-ab50-bac92b80fe16",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c54a5cf9-718e-452a-a47a-82c85aef985b"
        },
        "item": {
          "id": "abd46bdc-f94e-4202-86f2-23e923196a79",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5fa669c5-a751-4962-bf5d-a9a24f7a96b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1e6912-0db5-49cc-98e4-c06805141633",
        "cursor": {
          "ref": "a34fb279-43f2-4b5b-9e53-50540eb1b592",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "724e7423-a1a9-42ac-b900-8faed1a9b072"
        },
        "item": {
          "id": "fa1e6912-0db5-49cc-98e4-c06805141633",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "40c87ce6-d018-48b7-b68d-b213c28edb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb86d80-5fbd-4e4d-87aa-e02a907ca69f",
        "cursor": {
          "ref": "65d20593-3dae-4b8e-ba1b-8480b10b69c7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fd63770a-6630-4ab4-894d-4c53a7fa9139"
        },
        "item": {
          "id": "edb86d80-5fbd-4e4d-87aa-e02a907ca69f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c1c8ca7e-d934-4bdb-a964-dc10b7737809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01092022-48d1-48a3-9161-d25df953c9c6",
        "cursor": {
          "ref": "1af642dd-d750-412c-b55b-4902ef2b9c70",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "db1955f0-0293-455c-902f-32c5835707d3"
        },
        "item": {
          "id": "01092022-48d1-48a3-9161-d25df953c9c6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "67d9b613-45a4-46d3-a540-a238c84ceb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b885d9c-394a-41ce-88bb-d3d77d78e61c",
        "cursor": {
          "ref": "d0207556-acf5-43bb-a189-40957b5ef360",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3a96ee7b-9aec-423a-aeee-619dd8565dae"
        },
        "item": {
          "id": "3b885d9c-394a-41ce-88bb-d3d77d78e61c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6af6811a-b5a0-4e22-acc4-aa77f494c0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98efa775-d89f-45d8-91c3-0d5699f3b6a8",
        "cursor": {
          "ref": "bd4dd360-7568-4d76-a5f3-045502692dfa",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f6e56b97-3434-4079-8df5-b0157be7c183"
        },
        "item": {
          "id": "98efa775-d89f-45d8-91c3-0d5699f3b6a8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "72cd0ae4-1b96-42b6-aa31-be72143fc29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a6c9c2-62b6-4272-9241-e4add2232d46",
        "cursor": {
          "ref": "e58f8761-292c-49e9-b140-e306a24c8dcd",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8104bcf7-36a1-4d47-a7de-b53634295262"
        },
        "item": {
          "id": "d8a6c9c2-62b6-4272-9241-e4add2232d46",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "71b8ee94-d274-483d-a198-63e7db57f43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb8587b-a8b8-4060-a25f-c76f6d229cb9",
        "cursor": {
          "ref": "66e75417-88d8-46ac-9354-be81b7858ef1",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4c0e036c-6268-4f39-a907-b2292771a310"
        },
        "item": {
          "id": "9cb8587b-a8b8-4060-a25f-c76f6d229cb9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1f78401f-dce4-4f6b-aa43-aff049bb2527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692cb972-1ad1-4240-ab9e-eeb0e7732450",
        "cursor": {
          "ref": "1ed75f22-ac3a-4e69-a80f-89655807a784",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "51a11a2e-b46c-4025-b28c-10adffbaa869"
        },
        "item": {
          "id": "692cb972-1ad1-4240-ab9e-eeb0e7732450",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5eafadf3-e21c-4a11-89c5-240cf8557461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a933ad55-02f7-429c-ac16-7eb9186adcc7",
        "cursor": {
          "ref": "5f4ec57a-306e-4d01-862c-9f727f5647ca",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a8e021ac-a541-4f8b-a51f-9635288bf1b5"
        },
        "item": {
          "id": "a933ad55-02f7-429c-ac16-7eb9186adcc7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "de5cb33e-d1a5-4bbf-b263-589799faa60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5167c2e3-11cb-4e0c-8c63-345c2d4e3ec0",
        "cursor": {
          "ref": "256be358-cdd2-4ecc-867c-ae2368888e6b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "36d7eeb6-83af-4141-9f21-74dd763fc04b"
        },
        "item": {
          "id": "5167c2e3-11cb-4e0c-8c63-345c2d4e3ec0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d8d77aea-2356-4ae9-9465-e4bbd1af1d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3160930-d3a1-405d-91cb-a8189689dca2",
        "cursor": {
          "ref": "b533c1c7-5294-459c-8544-2f16aa1cc891",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "186f8491-9028-4c56-a01c-006ad5278bda"
        },
        "item": {
          "id": "a3160930-d3a1-405d-91cb-a8189689dca2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "28981440-73d1-45e0-8bc3-12e4da6db815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a307bb-0992-4f67-a414-90c26fab599b",
        "cursor": {
          "ref": "099dafb3-9a1d-4142-b4a4-93f5d60933a5",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fde7d1c6-1b92-4ec3-8090-4fd80d2e9dd8"
        },
        "item": {
          "id": "94a307bb-0992-4f67-a414-90c26fab599b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cd03c240-6f6c-4090-8a6a-b9ee90173284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcfa838-4cb3-4323-967f-f12549ea302c",
        "cursor": {
          "ref": "045376f4-fc91-4d5f-8316-17afae3b717b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "dcce8752-7af0-4d2c-94fe-45a6fd339ed0"
        },
        "item": {
          "id": "3fcfa838-4cb3-4323-967f-f12549ea302c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "eed2f20f-a568-44e6-b3ab-abcdb50eb6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f93ab0-8922-419c-bab7-dba34ba7998c",
        "cursor": {
          "ref": "1e934773-00b1-4e54-aa55-05b08deb6c0f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b03598c8-d161-43e7-a66a-38d3910aa942"
        },
        "item": {
          "id": "31f93ab0-8922-419c-bab7-dba34ba7998c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "77fbe00a-3ad2-47f9-96f7-307901ab0771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be13956-0a1e-4b8f-867f-931b16d4e5e8",
        "cursor": {
          "ref": "21cca81d-2fa3-44c7-bc0c-372e99bf6132",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a4a2986a-f0b9-4585-a20c-0b89efe5ea64"
        },
        "item": {
          "id": "7be13956-0a1e-4b8f-867f-931b16d4e5e8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c79530ac-bd18-4b47-968a-96af95a94367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a24f55e-f8ab-4ab2-b837-43994c8817fe",
        "cursor": {
          "ref": "449f18ac-d4f6-4564-a31e-372529ee1bf7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7c2a2828-dcde-41e0-a356-e7fec0d6265d"
        },
        "item": {
          "id": "1a24f55e-f8ab-4ab2-b837-43994c8817fe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "679e0920-7dbf-4a92-8059-f9e7fcfe52c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc12b66-bf9d-4d90-8970-d749adae6073",
        "cursor": {
          "ref": "486f1290-13d3-44aa-8415-9d40de08a94e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7035690d-a19f-4ba7-8bef-d11e703cb0d9"
        },
        "item": {
          "id": "edc12b66-bf9d-4d90-8970-d749adae6073",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "306fba52-6de9-474e-9f4d-2e197125f68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc9d33e-f1ea-4a31-876f-919899d88ebb",
        "cursor": {
          "ref": "c410d1a2-52d1-4e2f-9880-7885598d2db1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6e09d5d0-5d26-4861-b170-68046edc5e53"
        },
        "item": {
          "id": "9dc9d33e-f1ea-4a31-876f-919899d88ebb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b43128af-4b05-499c-9b7a-16fe037f078d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306680b4-4a80-485a-a33b-f3589399aade",
        "cursor": {
          "ref": "e6bce236-ad56-4167-985a-7b8f8eb63215",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bcffd866-051d-43e3-9817-f470ae63dac5"
        },
        "item": {
          "id": "306680b4-4a80-485a-a33b-f3589399aade",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b69e2b5e-1e8b-4105-99ab-531215489394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e209e46f-9145-4cb0-8eae-87d7eb47c41a",
        "cursor": {
          "ref": "87e1ffa3-fa6a-45a9-b7b6-849395ca970a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c28e7010-b1ea-4321-8c20-ffd878ff879f"
        },
        "item": {
          "id": "e209e46f-9145-4cb0-8eae-87d7eb47c41a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "52580c0e-7ded-41e1-92b1-0034d4b9e634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b52f5b1-7604-4445-9b67-a4ec3a3e4d93",
        "cursor": {
          "ref": "f51d2166-61e2-4284-8b9e-37bedc58ebe5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e669fec2-42d2-4a43-92aa-d0fa24ab9dd7"
        },
        "item": {
          "id": "2b52f5b1-7604-4445-9b67-a4ec3a3e4d93",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9dcae048-0551-4c70-adc4-df554a37f7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cf2469-b28a-4277-8967-5b7dfcb46036",
        "cursor": {
          "ref": "05630b11-d9e3-4565-9945-e4931ea0970c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f8c96144-b1d9-46da-b557-d0e2639dab82"
        },
        "item": {
          "id": "d8cf2469-b28a-4277-8967-5b7dfcb46036",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e175ddde-a2d5-4f08-b69f-6c2d73da1c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bfb63d-26df-408f-b48f-235672100eea",
        "cursor": {
          "ref": "c03edb5e-4fd4-490a-83b0-8a6f5f95a47b",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "398b6ec9-0264-4734-9e2d-871ae5b795b9"
        },
        "item": {
          "id": "12bfb63d-26df-408f-b48f-235672100eea",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b12be682-45b5-4b31-b3af-23f80baf7501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24dfb67-f414-4ff1-b8d1-80d946bacd25",
        "cursor": {
          "ref": "0172cb2c-8c9d-4ef8-9716-3e182fbd0ece",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "442c39ec-f387-45e7-afa9-5d6861d0e78c"
        },
        "item": {
          "id": "b24dfb67-f414-4ff1-b8d1-80d946bacd25",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cbf46d87-9fff-428d-ae48-ff9ccb817c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e29fe95-6bbd-479d-ba8e-58d47f4e11c1",
        "cursor": {
          "ref": "f555b0b8-9045-4398-8fe4-1fb3365c8603",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0fc11463-75a0-408b-8ba4-0496a905ea57"
        },
        "item": {
          "id": "8e29fe95-6bbd-479d-ba8e-58d47f4e11c1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5d275d57-f359-47ea-94ed-23b05229ed22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c1c681-4806-4281-a88f-f6ca359400c3",
        "cursor": {
          "ref": "f62c0456-fd37-4d70-9d37-0590fa30f309",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d410141a-b46b-499a-a1c6-58ebdca86373"
        },
        "item": {
          "id": "75c1c681-4806-4281-a88f-f6ca359400c3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "89fe2162-39ac-40bf-b548-7fefd5987659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da27fc1b-7031-47db-a0f2-d91e9e0e45f6",
        "cursor": {
          "ref": "ba83e6e1-289c-4e2e-be81-10bbde3d1737",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "98fae64a-806e-420f-a4f2-ee79dfeb0a43"
        },
        "item": {
          "id": "da27fc1b-7031-47db-a0f2-d91e9e0e45f6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "356a0d04-e487-4366-8b13-0ca182b2d924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c615e683-f344-4797-828f-41cb0803b67f",
        "cursor": {
          "ref": "c3cd886f-26d5-4d37-9918-c76b4f5e06ad",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "51e305b0-45a0-4230-88bd-6c9e6fd5e1ad"
        },
        "item": {
          "id": "c615e683-f344-4797-828f-41cb0803b67f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4b76a419-c46a-4a76-a4ce-fbc5b293cc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc28cb71-8c13-4509-b0b0-e89b36882416",
        "cursor": {
          "ref": "7114b899-8061-4a11-8223-4c606563e8fa",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3fab90f1-f06d-4718-953e-99c30618bfdf"
        },
        "item": {
          "id": "dc28cb71-8c13-4509-b0b0-e89b36882416",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "13b26cce-cbfb-41ff-b9cb-608477b6d5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b584c7e-2fa5-4434-934f-795c63097b29",
        "cursor": {
          "ref": "fa668462-df1f-4d3f-9228-1e685c7b0863",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4dc66abc-df12-472d-a636-ee04ec1bcc48"
        },
        "item": {
          "id": "3b584c7e-2fa5-4434-934f-795c63097b29",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "eb177ee5-ee18-47a3-829f-83ccbc4956e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7b9ba9-92a0-4e27-a06e-8a09be14e612",
        "cursor": {
          "ref": "5076d1ea-ba71-430f-83d7-83d67d21fd43",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3a1ead3f-72af-4489-91b3-1f4c4637ec36"
        },
        "item": {
          "id": "bc7b9ba9-92a0-4e27-a06e-8a09be14e612",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "05d89fd4-16f5-45fa-9d79-6cd5b73e048b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcc74c3-f0a7-40d6-9838-e671cf942451",
        "cursor": {
          "ref": "3b21b1ad-2360-4947-b49b-ae1e2fb25e7e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "54f3421a-b8e1-4b9f-b182-b2a4d03ddf45"
        },
        "item": {
          "id": "0bcc74c3-f0a7-40d6-9838-e671cf942451",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dbf4a2aa-2135-4584-a673-e07b5c17478d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f67a0f-6201-48e5-86d9-935441b049ae",
        "cursor": {
          "ref": "d4c8c4f3-7301-4bc4-803d-870a1bb3cb2f",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "79e025b8-e0f8-4f36-84f5-15389e3fec22"
        },
        "item": {
          "id": "b7f67a0f-6201-48e5-86d9-935441b049ae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "983f3806-b244-405b-992a-d23a655d34b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c656dc-6adf-4b43-87e3-065a05ddd45d",
        "cursor": {
          "ref": "76b27c15-af87-4453-afdc-71cfba627bf4",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3acef6dc-ce43-4caa-9ff4-92099346fc2f"
        },
        "item": {
          "id": "d5c656dc-6adf-4b43-87e3-065a05ddd45d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "07eda359-7a50-49f2-8bbc-78fd89cb2779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e501f344-f587-4380-9c44-4995e48efdbb",
        "cursor": {
          "ref": "71307d79-5042-4706-bb2c-ebf3ba7b9927",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "60c15e7a-bec1-42a0-a7f4-fd05dc5addde"
        },
        "item": {
          "id": "e501f344-f587-4380-9c44-4995e48efdbb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c08fd4ba-3893-484a-9071-05d1a84848f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debd27b8-f4db-495d-b96f-4ab0799b6354",
        "cursor": {
          "ref": "92661ffb-84df-4216-8e09-90c0838e425c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c7e63cf8-494b-4c19-b351-9a5d4ce0f7ab"
        },
        "item": {
          "id": "debd27b8-f4db-495d-b96f-4ab0799b6354",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0c335f33-aa83-425c-b902-6dfa27c793d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e9ac7d-5313-4f60-a0bb-c3158b2fc5b0",
        "cursor": {
          "ref": "92cd5cf4-e582-46cc-a9f5-8b8afc362931",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4e08670d-37a4-4ecf-9322-0f8c33f7dddd"
        },
        "item": {
          "id": "f4e9ac7d-5313-4f60-a0bb-c3158b2fc5b0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ef8d0fbc-0ede-4a07-bd4d-5a7660d15097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d6452e-f4db-4283-86a9-07453fbfcf16",
        "cursor": {
          "ref": "443dd5af-1ab1-4193-af1d-7fe3d95b2008",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0123b037-dd70-4c7e-9ebf-899c2c6bdfa1"
        },
        "item": {
          "id": "88d6452e-f4db-4283-86a9-07453fbfcf16",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "064daf47-fd71-4058-a566-dfc5f0e6aa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14c3974-c4c3-48da-828a-a0e5f70ca8c7",
        "cursor": {
          "ref": "1968783e-071d-40bf-8394-bc5f47b37ca3",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3ff9386b-4d26-4bdc-a636-8224694b56f4"
        },
        "item": {
          "id": "e14c3974-c4c3-48da-828a-a0e5f70ca8c7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d9677494-68bb-473e-b15b-c283519f0db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d1b629-d81c-4def-9668-ce95aeefc938",
        "cursor": {
          "ref": "a2929b89-d2f7-4c92-8d15-470d858e2cce",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c2ac8057-43f6-4287-8391-74fd30ed8cb9"
        },
        "item": {
          "id": "13d1b629-d81c-4def-9668-ce95aeefc938",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a8475a44-0697-479c-9d2d-5bf6d815562b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79b8383-452c-4763-abf7-0ff24574cd43",
        "cursor": {
          "ref": "c0fbd395-25b5-4217-9265-fc4471f93c31",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7007b3a0-b709-4b9f-972d-734d0f6d0c79"
        },
        "item": {
          "id": "e79b8383-452c-4763-abf7-0ff24574cd43",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f206df0d-9670-4b72-aa74-d6083bf6668a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162c744d-4bba-4250-abaf-1587418292ed",
        "cursor": {
          "ref": "cd415d24-4a0d-40cc-8432-fd14d7f920d8",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e94597ef-3465-4925-8b53-576d4b6161d6"
        },
        "item": {
          "id": "162c744d-4bba-4250-abaf-1587418292ed",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5f3b9039-f3ab-4997-8ccb-ca37a536033e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878782aa-00ac-4d1a-87e4-881e60690309",
        "cursor": {
          "ref": "bd5cf138-2fd8-4d16-ae73-6e189b51c4d3",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "76187052-3ad4-4a5c-b3a9-2e6c86c2ca81"
        },
        "item": {
          "id": "878782aa-00ac-4d1a-87e4-881e60690309",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3f665122-82c0-4b68-a41a-90ef4c5474e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6d2fe2-c0fe-405f-a039-ab5f98bd7148",
        "cursor": {
          "ref": "3944dc48-0857-4fbe-ad03-dbc00ce16128",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b3f86610-5de3-4063-85f3-a203e7cee1c6"
        },
        "item": {
          "id": "9b6d2fe2-c0fe-405f-a039-ab5f98bd7148",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8abbc1d6-ca80-4c2b-8093-3064344d1942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3b620c-f815-4d7b-95ac-f157dbebd2cf",
        "cursor": {
          "ref": "fb8ef8e7-6caf-4935-bfb8-9cf54a8e36d7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cae561de-c949-400a-9ca1-3e5a57f4700b"
        },
        "item": {
          "id": "2a3b620c-f815-4d7b-95ac-f157dbebd2cf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1bc9cbbb-152e-4726-abc3-a312cd6c08b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e198fb23-48ba-4ac5-bcac-7220dc33dcff",
        "cursor": {
          "ref": "80c4191e-695a-4b93-819b-683cf2883ff9",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "662d61de-1ae7-402a-8bdc-18175cc4d85c"
        },
        "item": {
          "id": "e198fb23-48ba-4ac5-bcac-7220dc33dcff",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b779f72d-6bf0-42ad-8a59-a51220e731ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0220dec3-543e-4a04-aff9-9d50e847835b",
        "cursor": {
          "ref": "56de9d49-55a5-4eb7-ab59-f2dffd29a196",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "70662e41-c26b-4f57-9660-400dc5afc575"
        },
        "item": {
          "id": "0220dec3-543e-4a04-aff9-9d50e847835b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "79ae7d1c-b6dc-43c4-b2d5-61d14715abe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea1c3e8-2ba9-4372-9dd5-1399c505ad62",
        "cursor": {
          "ref": "0582f082-5a5b-4b2c-9aa4-161a2879858d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fd0350c8-5b51-4782-8acc-d08c9a3ec1ff"
        },
        "item": {
          "id": "fea1c3e8-2ba9-4372-9dd5-1399c505ad62",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "836f1ec5-78b5-4def-af76-ce0b9f460e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc02e90-9621-4059-a8ca-04614518b14b",
        "cursor": {
          "ref": "c6353d32-8af4-4ae7-bf08-407008338a29",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cb41797a-a31d-4a34-a9d9-18314da82608"
        },
        "item": {
          "id": "2cc02e90-9621-4059-a8ca-04614518b14b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8cbcd66a-711d-4fa1-a511-e81e778b3b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c2537c-1708-459d-9629-4cb270183c8d",
        "cursor": {
          "ref": "30785537-c0d2-48d5-a6ee-3ea0b8716451",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "50a2c6f2-034c-4e3b-bba1-b376c8d98c55"
        },
        "item": {
          "id": "15c2537c-1708-459d-9629-4cb270183c8d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7bf0b438-ac47-4079-be5d-d9cca73cf9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf08e845-d189-4976-bf29-eb7b9c4813ed",
        "cursor": {
          "ref": "f2aafd5b-c144-4241-af84-e0d476e57544",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4e13b04f-ded2-467d-85de-b642ff511470"
        },
        "item": {
          "id": "bf08e845-d189-4976-bf29-eb7b9c4813ed",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8424f634-7208-4228-b2b1-1931c6088cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc9f46f-9d57-4c53-a63a-fcafe6c23b56",
        "cursor": {
          "ref": "9fd36e7b-38a6-4b36-a046-f908ab73af54",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dddba3f7-725d-4f57-b8a3-b3dde6bcfee6"
        },
        "item": {
          "id": "8cc9f46f-9d57-4c53-a63a-fcafe6c23b56",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c6bf33c9-1136-445d-8626-e71bd56575f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fd62b1-b795-4039-8fdf-35a80ae3a782",
        "cursor": {
          "ref": "fcd09e99-87d2-442e-9c95-5ec766b7f909",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d3a471ab-9d88-4038-ba78-041ed8ff8b74"
        },
        "item": {
          "id": "90fd62b1-b795-4039-8fdf-35a80ae3a782",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3d67b5dd-17ac-47f8-a1a0-8ba21b0073ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cd359c-04d0-4434-a74e-e20d5d3172a9",
        "cursor": {
          "ref": "aa1a870a-ea8b-465e-8300-9c4d052e8f43",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "754764d5-09b3-4fad-a805-975aa4449cc5"
        },
        "item": {
          "id": "40cd359c-04d0-4434-a74e-e20d5d3172a9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4da778fd-0509-4e6f-ba4b-56495d876d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361b3ba9-c1a0-4a64-bfd7-44bb450b84dd",
        "cursor": {
          "ref": "aa510a63-1d6e-40ad-b97a-f1fe97e97f3a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2df493f2-2957-44e6-9332-a5d81fb25822"
        },
        "item": {
          "id": "361b3ba9-c1a0-4a64-bfd7-44bb450b84dd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e41a5319-2d89-47d1-bb13-b495f0c06258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebefb25e-b7d7-4b4e-b00f-a7b52136cffa",
        "cursor": {
          "ref": "34293c57-92d1-4810-98f8-8d958870f7ba",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "820ae019-f9ed-41f3-b9fd-7bc8cad1c0bc"
        },
        "item": {
          "id": "ebefb25e-b7d7-4b4e-b00f-a7b52136cffa",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c7429af6-c614-42e7-8ac0-269515763d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e3c5af-9ebd-4ad2-84a7-d80f85d0314f",
        "cursor": {
          "ref": "055d9252-480e-4a34-91c3-3d6d2fce9811",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9f37f846-aa60-4e45-bf82-c0fd34f88a20"
        },
        "item": {
          "id": "97e3c5af-9ebd-4ad2-84a7-d80f85d0314f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e5cdb9ea-aa31-4ffb-ad89-5060773dc568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c7180a-cd25-4fd0-94c3-e318db2ab3ba",
        "cursor": {
          "ref": "9d86148d-2e7c-4b59-b086-49385c2014b1",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e39eccee-0ae0-44d7-9731-597f5c93b0dc"
        },
        "item": {
          "id": "96c7180a-cd25-4fd0-94c3-e318db2ab3ba",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "702f593d-c8bc-43c4-b2b5-3f4194b34b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76323f5b-d306-4ef0-9279-3120a2d6f6cb",
        "cursor": {
          "ref": "86143b06-30b4-470d-a9d7-6bfe5926133d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "19ee6b4c-561a-4be7-bf3a-cb5d987a65de"
        },
        "item": {
          "id": "76323f5b-d306-4ef0-9279-3120a2d6f6cb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8d63f0e1-42d5-4d3e-91c0-7d27a3651f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a4738e-bdb9-4284-bfc0-845911053991",
        "cursor": {
          "ref": "49d8d30a-b760-4ff5-beb8-caab581fffd8",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a188f4f6-94ed-4230-92f0-96e52582e38d"
        },
        "item": {
          "id": "78a4738e-bdb9-4284-bfc0-845911053991",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "35df2a41-1788-4969-9c64-002bbac1340a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986c90b9-eed9-4461-b163-47084657d537",
        "cursor": {
          "ref": "3c093880-12a2-4ed9-b5e5-d95d6e475f71",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "736817ca-ef8f-4d48-aa6c-9c56236438a0"
        },
        "item": {
          "id": "986c90b9-eed9-4461-b163-47084657d537",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "503e0bec-43c2-43db-ab9e-5c3f6128613e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c13f37-471c-4db5-9e6c-f9ebf9f77711",
        "cursor": {
          "ref": "badcfedd-b120-484a-be97-fe4faa692d7f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "87c2f24d-e736-4bda-8b5b-b14e26eee5e6"
        },
        "item": {
          "id": "b1c13f37-471c-4db5-9e6c-f9ebf9f77711",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "973f554e-6c56-4bd6-9f2e-da523273f797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c9c627-c3a3-483a-8665-485ae0679f6a",
        "cursor": {
          "ref": "44325dcf-12bb-4a2d-b021-bc4ecaa9ec3a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e43017fd-b5f7-41e1-8cd0-eef262e39421"
        },
        "item": {
          "id": "b7c9c627-c3a3-483a-8665-485ae0679f6a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "062e35ab-2df4-4f5a-8b6d-a42906047a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b65e61-6b09-4e30-87be-38d4e8d22ade",
        "cursor": {
          "ref": "f7eb5eda-2190-43fe-9fa3-17e147912514",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "56d3cc4c-0152-4a5c-b14b-1a35d59fc0c2"
        },
        "item": {
          "id": "d2b65e61-6b09-4e30-87be-38d4e8d22ade",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "053485ae-22ff-48f6-a001-fd913a00e54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ee6a0e-8a37-4420-bee8-90caad6a07bd",
        "cursor": {
          "ref": "d1c5860a-eaef-47d8-ad1d-862d55ad2cca",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "186147df-4427-4bc8-b53d-04b8895ca68b"
        },
        "item": {
          "id": "14ee6a0e-8a37-4420-bee8-90caad6a07bd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4f2f0e31-e513-4a60-8c77-6a09d3652c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d2e020-7ef5-450a-8272-d295e4f063d1",
        "cursor": {
          "ref": "618ba21d-4240-4af0-8c05-0998e8fdece2",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "af04dd32-4e83-401a-baa6-a2c1feed8c84"
        },
        "item": {
          "id": "89d2e020-7ef5-450a-8272-d295e4f063d1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2c905123-c015-4d68-86e0-086b5470d381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d398ee3b-b7d1-40f1-b093-651c0312f489",
        "cursor": {
          "ref": "423e02d9-2927-46b8-92d7-5d26975f6199",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "98c9e77d-630e-4555-9f76-c79c0624025c"
        },
        "item": {
          "id": "d398ee3b-b7d1-40f1-b093-651c0312f489",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9d660c44-5af6-4e88-bff4-fa9498ea8bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81998307-3db0-4045-afdd-6787cbbcaa9b",
        "cursor": {
          "ref": "2b4ced47-9157-469b-b8b9-42169a892627",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1802b6b6-c400-4cd9-8e08-af46f434066e"
        },
        "item": {
          "id": "81998307-3db0-4045-afdd-6787cbbcaa9b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0e2115f3-d2b9-4c95-902f-3dbc62195d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc43a0a-c33a-4b48-b549-aba473081659",
        "cursor": {
          "ref": "3f939f21-1c00-44aa-b08a-344b8e70afa3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e2e7d43f-98bc-4925-8c5d-ffe1e50ea0ad"
        },
        "item": {
          "id": "afc43a0a-c33a-4b48-b549-aba473081659",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9d649920-8e9c-4bbb-abbf-4ccf63e7d66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129a7d88-1727-4a8f-ac85-b0f6d9178c6f",
        "cursor": {
          "ref": "40cc5171-e1ef-402a-90de-263e97019392",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8badfeca-8d41-4a40-8e72-a5e224aaa064"
        },
        "item": {
          "id": "129a7d88-1727-4a8f-ac85-b0f6d9178c6f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "60abfe41-eb74-4fc0-ba12-729c41642b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c9ce74-2654-4018-9d51-8fa2570e15a8",
        "cursor": {
          "ref": "c3324e80-4d37-486a-8bf8-ff137abb583e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e2eb3452-fae0-4fc0-8835-326bc9f2bd1e"
        },
        "item": {
          "id": "b9c9ce74-2654-4018-9d51-8fa2570e15a8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f4d1b4a9-4c6e-4037-abf9-9f10a2cb15cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418fdad2-141f-42ff-8d40-056b057095ff",
        "cursor": {
          "ref": "2c59a4cf-6ac2-40b1-af4d-70f2726da3da",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "46841359-3783-42c8-8594-368424850bd2"
        },
        "item": {
          "id": "418fdad2-141f-42ff-8d40-056b057095ff",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "97c39adb-d889-4623-829f-b41f9774efd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a296f46c-6dc3-41d7-9c4d-35b31625e9fe",
        "cursor": {
          "ref": "cbf110ad-9f1d-491d-b263-1e0ea35838ab",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "70b331ea-6aa8-4275-ad02-35b9d2ecbd12"
        },
        "item": {
          "id": "a296f46c-6dc3-41d7-9c4d-35b31625e9fe",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "494acfdb-1314-4da5-9804-805b5bde60e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba859d2b-0a7a-4acb-bfaa-ab16d11320d9",
        "cursor": {
          "ref": "abcd39d1-5667-4398-a0e1-cf26bc24d406",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "207ed051-675e-462b-bc46-d68548c772dd"
        },
        "item": {
          "id": "ba859d2b-0a7a-4acb-bfaa-ab16d11320d9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9030c990-c7e5-4785-b56e-9db54cb4a44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4493d68e-663b-41a1-b198-57e785b5ac66",
        "cursor": {
          "ref": "07483b3b-2357-48a9-9934-810fc584cfdc",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a183d413-c3dd-4a8a-aec5-66ff9c3e6042"
        },
        "item": {
          "id": "4493d68e-663b-41a1-b198-57e785b5ac66",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2cc0f99d-fe99-428b-b0e8-d880faf9e964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3813cd8a-ace5-48d2-bdac-9f120186002f",
        "cursor": {
          "ref": "152dea99-d6d4-406e-af97-94472ce132dd",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ee5114ee-29b7-4dcd-a0fc-91d3d33cc751"
        },
        "item": {
          "id": "3813cd8a-ace5-48d2-bdac-9f120186002f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7b3522d5-9417-4e6c-a72c-aa3309ce4f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42027fcc-5f5b-438b-bc1b-9bbdd8ce2faf",
        "cursor": {
          "ref": "36cbdf23-216a-4d79-99cf-c594de3d7845",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8cd78373-7768-44db-96db-faeec5899658"
        },
        "item": {
          "id": "42027fcc-5f5b-438b-bc1b-9bbdd8ce2faf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b87b2a6c-ae9f-476c-8ebd-75d29f069991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044dd3af-4fb6-409c-891a-c821481bb1d4",
        "cursor": {
          "ref": "78080526-3cd5-418f-89a3-346897b46a95",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "115ad984-55a8-40a2-8240-de25a3420c8c"
        },
        "item": {
          "id": "044dd3af-4fb6-409c-891a-c821481bb1d4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4f321ed9-b7cc-441a-b82d-b4701e57531a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cad9719-a75e-4d77-a3d2-200234b8d7ef",
        "cursor": {
          "ref": "8350f72d-6b50-426a-a368-4bcc1b7afab3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "42aa02c3-7ca5-40d0-99bc-716bdcc31e26"
        },
        "item": {
          "id": "1cad9719-a75e-4d77-a3d2-200234b8d7ef",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ada1c74a-b455-43e0-b418-c9756a852e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41b2ade-5f66-4f66-aa43-604dfb4356c7",
        "cursor": {
          "ref": "573d9111-c950-4c3c-9906-1d503a46cc1a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d6832ef7-65db-4e41-9912-f6adbb1fa1d9"
        },
        "item": {
          "id": "f41b2ade-5f66-4f66-aa43-604dfb4356c7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "349593ee-e605-47d2-a608-9957a406d6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eda9489-52bb-462b-95e8-1868b783f8e3",
        "cursor": {
          "ref": "d857e693-b79b-4720-9c1a-2e966c343e38",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cb4e1aa2-e2b2-4a78-afda-36bd8e8f97f2"
        },
        "item": {
          "id": "7eda9489-52bb-462b-95e8-1868b783f8e3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c439b8c9-49d9-4a47-b786-dda51a437611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dc1747-b7ad-43ce-8791-f09ae36e9d71",
        "cursor": {
          "ref": "929aa1b9-8f06-4ae9-be9d-2bfc9225e889",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f4e8e93b-602f-4bad-b751-a00bb46f9efa"
        },
        "item": {
          "id": "e6dc1747-b7ad-43ce-8791-f09ae36e9d71",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a553dbf1-be13-468f-af47-35753b81c651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2832c4-6dea-41ec-b8d4-4349865b4bc1",
        "cursor": {
          "ref": "be8a197a-e441-476b-8d9f-18a9d02653b6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4627089c-6290-4e40-b48b-7e44cacf8556"
        },
        "item": {
          "id": "ca2832c4-6dea-41ec-b8d4-4349865b4bc1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8d061c2a-9272-4e2e-af31-5f3e35bff909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4e833a-2c04-4fd1-be1d-44bca8cec50f",
        "cursor": {
          "ref": "4e376c3e-999e-4446-a7a7-7dd673ce22fd",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "05c35a3d-99b8-4949-8a73-2e240fa70182"
        },
        "item": {
          "id": "3c4e833a-2c04-4fd1-be1d-44bca8cec50f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5575e117-78b2-4bb5-acf1-9b5982d518a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2ddab7-d1b1-4ced-9af0-c2c622c4a30e",
        "cursor": {
          "ref": "825933b9-3ebd-4174-9164-5c593452d03a",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d44e452d-95b7-4c6b-96b2-5360a3888bf1"
        },
        "item": {
          "id": "8d2ddab7-d1b1-4ced-9af0-c2c622c4a30e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4115feaf-a809-4d7b-92bf-83447be8ba75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e76eca-842d-40de-adab-342e838dc6a6",
        "cursor": {
          "ref": "0b607954-b48b-4a49-a444-b83b7d18581d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "22a7addb-884d-454a-8f6d-bd812f207402"
        },
        "item": {
          "id": "39e76eca-842d-40de-adab-342e838dc6a6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "943e5386-9d9d-434b-ba7b-0ff5567f06f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "a1917cec-cf9c-43fb-a88c-66b2b80117b0",
        "cursor": {
          "ref": "5b80a231-8df6-4624-ba54-3fea4a0b47ed",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5a86037e-25a3-4ee9-928e-6a75195f1e93"
        },
        "item": {
          "id": "a1917cec-cf9c-43fb-a88c-66b2b80117b0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ed771dad-e250-4465-8ab8-25d235a5fb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "f61846b3-75c0-439b-8efa-b7637d874772",
        "cursor": {
          "ref": "1e07f5c5-1c3b-4826-b68f-2f2a403a428d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "57ae9c9a-c80b-4e00-818e-add731fd11f1"
        },
        "item": {
          "id": "f61846b3-75c0-439b-8efa-b7637d874772",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d16a5681-db44-4449-9dad-c62393045efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "02a6686f-8814-4762-a1b5-6c79cdb8f7a1",
        "cursor": {
          "ref": "5d7e4180-1a5e-41b8-81dd-b16e2db8e7e9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "db4ca21a-e5b9-46a2-b3e5-6174ca2a61e2"
        },
        "item": {
          "id": "02a6686f-8814-4762-a1b5-6c79cdb8f7a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "93bf2966-d419-41f5-9db5-39e076b149f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a6686f-8814-4762-a1b5-6c79cdb8f7a1",
        "cursor": {
          "ref": "5d7e4180-1a5e-41b8-81dd-b16e2db8e7e9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "db4ca21a-e5b9-46a2-b3e5-6174ca2a61e2"
        },
        "item": {
          "id": "02a6686f-8814-4762-a1b5-6c79cdb8f7a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "93bf2966-d419-41f5-9db5-39e076b149f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d84f791-968b-44a5-a236-ff19b07960d1",
        "cursor": {
          "ref": "59753b59-c4ac-4839-852c-097b5592de9c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "864db19f-07a3-4852-b85b-bc2273380719"
        },
        "item": {
          "id": "6d84f791-968b-44a5-a236-ff19b07960d1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e014b89d-bf8d-4cef-8e5b-e664ab185812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f868ddc-4382-4dbb-8c26-a2b6f8240c34",
        "cursor": {
          "ref": "7f10d665-19f6-449c-bb84-8359a20ebcc0",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "352c67df-44d7-416a-8e6f-30b9906e4477"
        },
        "item": {
          "id": "7f868ddc-4382-4dbb-8c26-a2b6f8240c34",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a2423357-b39b-4eb1-aba5-aba43324e8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}