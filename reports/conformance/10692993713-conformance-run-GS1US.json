{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5417d882-40b5-4466-a11c-f82220f30955",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a606f57d-c537-44a0-8d45-a634cc9f3bb7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e0526f9-f688-4a08-8e86-7679eb2d49f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "27b34b63-d461-4cb2-ba18-b1072ea4cf04"
                }
              }
            ]
          },
          {
            "id": "0b511d43-33bd-4561-822c-42535bdfe1a1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd088da6-04c3-4772-ab34-ca4706e5887c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0a0e5f0c-728a-42d0-a955-9bc356455a55"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "34b1a421-c8da-4231-bf45-9e52925cff0e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a6863c15-ac36-488c-9018-c0993adb5960",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9a2acec-fcad-433b-9d80-547e96459997",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7201eea0-11ef-4be9-9a4a-4ba671a2336c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4dcfe30-0ea6-451a-87e1-b869670eeefb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2cecffb-de80-4c4a-98d2-787f46381ca1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0e04f77-1a15-4286-8d96-648ac258caa8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92abf15b-79cb-4c75-8eb3-82c611b0f01e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59ff8e4f-d00f-41e6-8e09-88fd983e7a5a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4876eaf-5f95-4fec-9b64-85cdf5507cf3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9daf5d7b-ad22-4d14-84c4-bf91394b38d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fdfd458-d7d2-49d6-8148-e8c5bba23eaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02bc2af7-55bc-4ee4-9822-450a53d10b86"
            }
          }
        ]
      },
      {
        "id": "6aee2711-c312-4eb0-b690-23bc8b12082c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "05ca8a7f-5229-45d4-bcab-8b440efbb298",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7538b0d6-3a7c-4859-a298-1acc953c349f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e0e641c8-9e72-4032-b3d6-a94054a3deac",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98e0ac2-03ea-4646-8783-d3451e5a4e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ff4981e-d66b-4cd2-82aa-514a2a246802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76376364-c7bd-4ac4-940a-2a77768a6140",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ec0dc9-0589-4248-b026-54f85672ddde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5ec2088-93c6-4eca-bd44-5e90332362bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9a8889-b31a-4267-81eb-f2ae48ceb9bd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a809bfaa-8859-48d3-b2ae-6dd615ee1435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5489f822-768a-4637-9619-411ce789b060"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad5a87e9-05f6-47c7-bc7f-c218480c6b06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfca554b-a9a0-4389-8449-bb2714218658",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8490b105-9c23-4c4a-a011-5097afb36891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9028252-81b1-4d4c-b8a9-0c7a58911dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10eb8f63-6fe7-4bd0-ab5a-335e1fef67d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72481f61-5fa6-4771-9402-5e7af2c8a6fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "479393ca-abd6-479e-84fe-1f47eb233115",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4832e33b-caea-4f40-81a0-acc2faa6392c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "752942b9-831e-44a3-8f41-deb25d43baea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c226e7de-695e-483c-a8b9-84309bcd14f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81eab69e-a7e7-4962-b387-f1dfe2e923ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c5efb777-0960-41ee-8789-42c3493f84b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60af007f-6d2a-44b7-9f8c-fbe88ec24346",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bff9a08-cfac-4d66-9bd1-ec5c9c33f3ad"
            }
          }
        ]
      },
      {
        "id": "0a958ca8-3e87-4320-ad85-cfe8e8233769",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4f80aa6c-aa8b-4b6b-8828-13a40af04983",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bd06a8a-4f77-4a45-852f-e483ef31cc70",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "55064c04-0be1-40d3-8adb-d7188d1bdeec",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed901c3-5fd6-41af-85cd-f78cbf737406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fb5fcb-f3e2-457f-9128-39b62e26eb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1be268-e104-4030-8e66-ee4e378006c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31004177-b077-4730-9f45-4672745abf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960291d7-4df9-4183-8c4f-485c88e673a3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70e3c7c-ea96-4034-8548-518d059342be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63266725-e5c3-47f1-af38-aef6de324006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9872191-308a-4816-bf17-60c53bcd0350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "739524b6-2ab0-4e9d-91f5-847401fc8eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b852bf0-9a40-426a-91eb-223faff24671",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390f58e0-3186-4703-8e32-048c11546aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b69967a-c611-4c7a-a8fe-d20213c25eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2ef337-7607-4056-9766-7ef827b2d9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a94a6d50-6c48-48f1-8fb0-2db9786f9815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636fe057-7f51-497f-bb27-1c334ffd0407",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7adc83-69b5-4a03-a047-f7d8af33b06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02574124-e98a-4469-a418-514e2046df0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b788726-32f6-4a7b-ac8b-79a942c4a637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "652eab22-d7d2-409b-824a-5f537605c2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265a4b92-2956-40e6-a3c2-dad9293398d6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4804de3f-21a4-436a-9367-15e498e7aa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8856155c-1453-4d5a-95a4-334c28bdc2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0341b4d8-8e5f-426b-b6d2-cfb11733545f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81fa2586-9112-452c-9d0c-2ad7c0002ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ef8676-5306-48ca-a200-ceb13941f2d7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ed02f3-86d4-4dc2-992a-dcfcc741f99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfae30f0-1699-468f-b027-d03856474ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5b3b87-1f9e-40a0-9bf2-c749158d299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01c2cbfc-1ed5-4327-b3de-94dbb3c6ec0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee4a0de-7833-47d4-add4-2c3021b25bdd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa75ae1-6d9f-444c-b79d-73efb7f0b4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a200afe-8ec2-42f5-b8ea-0cf2afb202ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9124e1-e314-4a04-82c9-b7fff145b391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35145627-79b3-4f1d-a47d-f3b2e205e8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09eeee8-6196-4d79-b67d-d7dd39d65a5b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e07aac7-18f5-4c9d-b9c5-66610e82cf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3706642-9ea9-401b-b7a5-ed7f29d4d9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be3092c-c9a4-4f63-8b4a-9ced7bed9563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8c11cd1-7a8c-42b7-a5ba-a4a79ab7cf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98831390-8231-47cc-b812-ef37a93f578f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f484d3-18f8-4948-97a4-bfe0a5a5039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283dfd6f-4c35-4b22-abf2-e07e0f260f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8422c648-53fb-448e-ae57-fb13015183c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c79b88fc-01f3-495a-bf33-bea46aff5b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa887ca-d423-4a0e-9bfe-ad6e80d64188",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cb0129-1330-45a6-9ffb-3d56ab87d059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b64c6e-fc5c-44ed-91df-dc4916480d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea7c2f7-edec-4976-8392-36253922b45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efe9abfa-07e2-49a5-adb2-a6aa71eed454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12f3e8f-7733-44ac-b33f-bbcc48ef5526",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab0904e-e26f-4595-96e6-f99b4ab02f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38fe8b0-ee17-4eb0-819c-95d33578d5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4beaa23a-568d-4684-bd64-7b3f0401afeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2a2ecdc-64ad-4b81-9f44-0e108b2425ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c761a991-bedb-4892-9230-72b40fa0f5df",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8681b40-866f-453e-bf34-e6728f64ba6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd21c3b-2678-45cf-86a6-6d6cc15cbb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe2ab4c-77a8-4a05-bd42-d05ff6725bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97066cd4-86cd-4ece-995a-8d7a9c762a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc69e030-3659-4080-bf2b-25a1966a27e0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ebbacd-e06a-48fa-9f63-f82c886d51d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a95ebc1-b043-44ec-83aa-e33c53405336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c0b01a-0f7d-44a8-9269-7099bcbefeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fa9c902-3fca-405c-befb-2ff6544affe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc24b38-e7b7-47dc-8069-4b4a24400586",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97026e8d-639a-42a6-8426-cc04c056e34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c3d35f-9c3c-412f-9f74-1805ef121d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0140923d-5be1-4f44-ad4d-8d87178d63b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9602302-9db1-4155-8ee6-df9ebdb9b380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb18331-1455-48bd-98d5-6ba3f4753b41",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23ec95f-e491-455b-aa3a-85a855aa9cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678585e5-addf-47f6-8e8e-4760115997e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba882aea-f232-4177-9d59-915d242a4844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12159586-40fc-4d69-abe9-8b2f0f43a35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f2f7bc-9495-4975-ac5c-0d4e4a25de98",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a104fcca-5ba6-4159-b5a1-1e6f945cb6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd67dde-87ae-4a3e-bef8-dcaf69177ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea3111b-6968-4775-a1c0-0a9370858381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b350d24-2794-4877-b232-de15b04f92f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4b724d-e31c-4a4e-8895-65c18b7cd631",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9352e6-0e65-4ca3-83b6-ac668339a6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98490fc2-5f65-4882-8300-ca2804f2cc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a4eb27-8115-4cba-b242-10fb465bad94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df4130b5-2d3f-4176-ad6f-92251167b653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c87c9f-b3c0-4544-b23a-132d48e00906",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed0c528-c698-4420-9827-157fc3e6717e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db72ebaf-1907-4681-bae0-595c0aaf7219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585574f2-e285-484a-aa28-ff9d8c487405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "70125d1a-da67-42a6-8dc1-42b91c3c3516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3057152-2ea7-4eb8-af4b-6ebd60c3ed63",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a3012b-c978-4fb5-8b5f-0e4f59bfa8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845d37fd-48bf-45d3-b4e6-647745a48c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c0ed09-4977-459e-9037-012f0ea35b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0f489c-76b8-4107-897a-a573362d754a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff6074a-1d67-4828-b051-41e661a675ca",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c4fcb2-8dc6-4ca2-aa36-5533ff680af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7a656e-b393-4e61-aae0-a69e3724c07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00133fe-8535-478b-a81c-5894495d9cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39ea1d13-1967-4151-90e4-910848a82e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc03a64-83fa-4c76-89ae-6a06429c2259",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4c9d11-8adf-41fc-a1ac-a60e8d5e02a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9115fd2c-d1bb-46e3-a57b-dd875a9d22d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2a2c24-760f-4d9a-ad62-c32a403788be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8bec0b-08ac-4cf0-a756-480f96784a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66f85ff-a904-48e1-a644-a9ee6860d867",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7d7802-8a31-41ce-866d-5a858dcea502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e241e4f-0bc9-4a64-9a7d-8f89686528c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c56dff5-7d7b-41d7-aa4d-fae4bc353fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4ce621-1cdf-4715-9944-6256a6d5c828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b227450-c0ef-4394-b83b-3c4de3a0d67c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606fe2c4-781f-4f01-92f5-40e710f9aa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3812bc3-c390-431d-8374-2549c8e15c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af24267-0c24-4181-b6db-7496227aa5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c792230c-bc9c-4687-bf45-b5d43b498351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b9b3c4-06f2-4afd-82ac-b5c087b7ad05",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c035db5-58d5-415a-a019-759a57e5c625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300d142d-b56b-46d5-ba8f-cd1e4f4ce263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045a0cbf-515d-410c-8caf-185c26720d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4dfcd3-9812-4e38-b7dd-7825ae811d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5237b528-fd6c-4a50-8628-c7bc69db0716",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ebcea0-a8a6-4b29-916f-fe6b8f99b134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4b0756-7a3b-4b24-a88f-a752bd7f8588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fca8b3-06df-4f4e-b3d6-afdfc39191e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e41829-5260-4757-8e1d-98711c1650f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b79336-2a4c-4a43-98b3-2a0a892da7fa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9be02e2-8b4b-4acb-86ea-aa4d52b4687e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38240c6-d231-46e3-b848-43a16ffe6bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bd588f-4cd6-4aeb-bcf4-79b525d29a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3a1043-36d9-4237-b31e-412877dc238e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43a5161-8887-40a2-9a13-a0490e4da02e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1072c6b-dad2-454f-a1ed-e1e0c0e81411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d219cb61-d8fe-4d44-92df-52a7b35eb056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7db4ee-2aa3-4534-afdd-b3cc44328dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3ec03e-c10f-433d-863a-630d96156f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273923ea-f098-463d-8e5d-db6c66893567",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2bb90d-61e6-4ede-bdc0-08f1ff8124ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370b4ee9-743e-4b57-a4cc-910c2587cff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2a60a8-8e6a-4543-8d04-af363915fd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d4d380-d2a4-4d9d-92c2-21f9ed26dfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b955c9e5-e503-4e5a-8ab1-73454944ffcc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135d9b50-ae3d-42c2-a29a-0b5980f97d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230c5c0e-87a6-42cf-a8f1-3f9f9d26ec88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578ac04a-e276-4e95-a395-e61026b4d760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2d7ba1-5c31-49a8-b85c-0f6cd7a5313e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e6ebf8-d9cd-4c2f-90ce-32d018f69634",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290e76c1-b42e-46fd-be86-2666fe5117f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bee206-fd0d-4827-8242-09bbd776c94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2530f93-1afe-4650-8614-b29959f8f973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cee4942e-9d74-473a-aa56-038319a5fcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd98aa0-c4b2-4141-8f3e-76623aa3e3dc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d9c34d-8784-43ff-ac3e-c012eb165f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce97d6d4-ed81-46af-9560-ff2f424c2410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd16569b-e8de-4e8a-aa88-2e8a5097a419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cee80b75-8c0f-44ff-a2b2-e226280e4c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe713c0-599a-42c6-9faf-6ff8ab7addef",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c9a944-c569-496a-a736-9211a89527f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d4a91a-febf-4b14-a1ec-b8b3f7a706f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc890b4c-c9b2-488c-9b83-a0ef7156e4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f4ceea-eab8-4eb0-b210-ef139f2eef92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b881b81c-568e-42fd-bdf1-5c1babe61c55",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5178470f-c035-4fd7-8547-54696e6c11c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9335e958-253a-4148-aaff-18b5e2705a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558316de-a465-4c11-8cd1-5cc58c97a16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52d0c397-90bc-403b-9669-ece0aa774185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b90553-8b7a-4707-aff6-5a49ef2130ca",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da980c0c-69e4-415b-ab21-d81a7523c578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa86256-9cb6-441d-bb52-5763353aa359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88973200-d9f7-4c29-9769-d2df2e363790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67efb3c7-d7f2-4826-bf20-83bbc872fca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dc2080-98e1-4d98-98f8-285a950d6cae",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4ce2ef-af43-47f2-9c5a-8186fcd64e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9834e5-6870-493e-a3d0-cb50ca0dd9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f718c67d-6c19-43b1-93dd-b2db9aedbc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b444d66c-a316-47d1-b99b-94fb3db9627b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e1c392-d6de-4b60-b5eb-ba009ef0e9c6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83aa1ec-0bef-4aac-9577-2b726f60173f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a8f34b0-5f42-4ab4-b001-7b215f31c87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62446753-35d9-4ff4-bd15-6282702a04fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3e738e-6c9c-4b22-9879-8990f709b7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdeb441-9d06-42d7-a724-30d381847860",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded52976-ae40-45ac-b7a4-aeb7b46fa413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414a0e34-78b3-4a12-a166-dd281c13e26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2422d66-328c-4563-959d-73bbe07c8eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b13514b-7352-4b62-980c-3b0b17aaf44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec655d94-1481-4614-952f-0022adbd7e6f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23bd627-6c7e-4f4c-967c-dcaa58818dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bca4d8-a3fe-4dbb-8806-015230f860f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5ae3c5-8adf-4051-95aa-f15e3c74db6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "85dc5c88-9807-46f8-b49b-000135d7e364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9205c0ba-1fe0-4151-aef3-eb05c26a7644",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde1789a-0eb9-42d8-b4fe-049da305856a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffff89cf-b99d-48b0-b89e-109867608b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c80e17f-80de-423b-8743-8662f6e39cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eabfe24-a725-440c-b2e2-ecde270be08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5945d6e7-0df6-4aca-96e9-94206bbf17da",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fc63fb-d013-4c3d-8492-9ce11d80983c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c514fe-4da1-4825-8b7e-028cd32bf128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac52333a-67cc-4448-b5ad-8aa1befc8e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5538e394-b553-48c2-817e-b5986a1b2816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4199e046-558f-4cc2-b5ba-b2bbc8abd47a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8d1c2b-7177-4f43-8687-bd095fefcfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9d11d3-d103-4c8e-8b2c-7249a0ec789d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c4d345-a206-4d47-83c1-25a37140c2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf3c547-d6df-4f9a-bb4d-60c7c6335409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f63aab-9a91-426f-8e90-a4986500d6be",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e906d3-25ce-4b47-b3fc-8e5c0e7d6447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72b1671-bbed-47b5-bde8-e4c17d35749c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed89c7af-5817-43d2-82b3-f6cf2c8d7ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "26ba497a-f464-45c2-b95d-414c43e4f7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595cc09b-3981-4c36-bbb1-3fb483f9bd61",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8bf932-a41f-46ed-aabc-b26908a43820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bb485d-6022-4ac6-9c7a-64ee5549b342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d6aa19-26e4-4907-8b40-7baf58a80dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "807ef5e2-d6e7-4c0a-a2c4-13821c92295b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441c4877-ee2d-4ea8-9146-c04dddf3cbd0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc243b0-989b-4084-a86b-bfc898f62811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9cd971-87a3-4d9f-a3de-4311c2c17fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf87eb72-4e2b-4ccf-b6a7-4aca908f4b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c807f6db-4d89-4487-a621-c5ef818ee8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4158bdb9-3625-45f4-a3cc-c4debf710f5a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cfcd92-82c3-444c-ad7a-69258d10b452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d36a0dc-6c7f-40bc-a0e0-e2fe71cb8802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27591e5e-25ce-4991-b006-db0b837c1167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ac670c-3997-4994-a24e-68e51e0eca1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1f888a-d857-4d7d-8a61-d2fa036fd37c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff35f03-b0a1-4321-a7e4-11115ebef85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d48e6ef-a37a-4fcb-bd57-4d449763537c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6653f623-776e-4afa-8285-8e82b47dc6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4711f252-2586-4611-85a8-7072479d74a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe18dfe-3714-4b89-91d2-47ea17258c95",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fa5c6f-8642-4202-8fc4-4b85783366a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1ea334-69c2-46f2-80be-7016417c5946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0fbfab-f081-48b5-8d9d-215674b0f0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b876e49-1aab-44f9-b1ec-b30191b7367e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d37bb8-6e76-496b-b9f7-153aae82f3b3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f4b83b-ec52-415f-a4a8-317b8c562d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea82621-77ae-4041-82f5-7d54774b3089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe290a8e-6bd0-48cf-872f-ec9ea9d13754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed20fb9-4822-4cd9-8fc9-3480dc7ec497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049b85b0-9de1-4061-b67e-e1ef324c38f4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b511d0-6338-452b-80e6-551a0ed7f127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813ab6fd-3baa-49ba-90de-f3bdccd68f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5bc5df-c40b-4b77-acb1-b7eca73ad6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8115a9d0-ed45-47dd-8481-c859fabbf9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fc93ed-3577-418c-8cff-8e35a017815f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6be8f50-e7a2-4416-ae47-ad0fb5633a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf8d9e0-e0ef-4055-b004-3e6462f67c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd84c15b-7fa6-448d-b3b2-86bb0701291a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b859a5-9452-4efc-afb7-7c935ed7b467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5608890-2a9a-4d47-a436-d65e2fc2fbf1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ebb0ba-7cd7-4b50-ba3c-1fcc617d1ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71964e94-a729-4d73-a37e-0b61c09d1218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da9bd6a-ae25-4f6f-bd9b-7d551b6fb8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb30010-9729-46d4-8d9f-1e3fe1448cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ff3303-cdc3-40cf-adf2-2ab5227f4c80",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a03c08-c6b8-4752-94aa-6fd364ec334e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4550c1-6e9f-41c4-a503-7abac67a69a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c23b24e-6875-468e-a66a-30480fca209d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2046dd3-73d5-4206-8a07-f4e640e138ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a7ea1f-124a-4b92-af3a-a74b9fa6bc2a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f272f5f-7766-4314-8e63-211a6bf9e530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e80f92-e697-4a38-b3d7-36f2be5516fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdec4d9b-4dd9-46e7-86a7-05315321b618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9f7fb2-b082-4ac8-ad79-5624716ac6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850590a2-7b92-4401-9fe5-c1241dddd8b8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f6e485-a787-4789-85c0-92ceadb3ffda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867d1693-b8ca-46dc-83d1-a3c28b0394a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dda6bb9-8188-4023-809f-082b4582e174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6dda5b2-f7d2-43ca-89c6-ea52da78f12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0a5941-50fd-43c9-a300-53e141d0a3b9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61434f83-fe13-4919-9a09-ccdd31f8f741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0954019-0354-4cf3-8952-1ccad039e41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64432f6-5581-4cbb-8f4f-247a03057e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1115dbf-fd3e-4edd-807b-ae33d46a6964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03945b7-2203-4ac3-9e9e-446719bc7d8a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8c80b1-6ae2-4e76-aca5-2e366ffdef8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbabd8e-6835-4c96-aaa5-df0809b9931e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724960a9-c2c4-4ec7-8ca1-cb583d13efd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c820e52c-6317-4f82-9633-127610edf81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e2a17e-5c42-409b-a504-5820754a1209",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44eddb2e-dd04-400d-8120-68179508604f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4e9b93-83dc-4166-98c5-b92607452a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96964303-8423-464b-b7e6-83b412b3004d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8556e193-3d90-4391-a6ec-1c46fa7129ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84114c19-dcc9-45b3-bcb4-4786b581d9c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412a327c-4524-4582-be52-093e82c395ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3b678e-d62a-4387-a91d-32bd40a9f5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c06be7-ff77-4919-8edd-8c6b686f2a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "810867c0-8742-43c5-b2a2-8fc5732eedfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549f65f5-bc9a-4305-a407-a737dc9fb16e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc808437-fce1-4874-9345-8b1c7463c758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9858d4c4-d9f4-46bd-8030-ed89a86e33b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd927e41-2842-4ec3-9731-fe0aee8aa98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "65561390-e1a2-4266-83c1-458da189b738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d738926e-9417-41ca-91cc-2a483f5b4b7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3b90cc-9661-470a-8ade-7b096feedb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af273794-a0de-4b28-98ae-19cfa2bba697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3dd036-e94c-4c5f-a734-4646743e7953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70162412-76cc-400f-aeda-250cbae696e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9718e39-b979-40b4-abfd-1e0b65508c1b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366ef001-9667-4550-8895-2bae95c9dcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02eabf2-6993-4364-be03-0e0a4f695852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89a8ead-5366-4ca2-bbdf-4f07f57b3519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7952994-f810-4129-934a-a8b7a4f2fa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fe5bc9-b3b2-43ea-940b-b37b38cb0089",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5e39d0-1446-4cb2-8637-7b6c10051bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e00c92-4cbf-4ee7-8aa6-5839d800041e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7703d1-6a1a-4ee0-a251-241403032371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "561e3a3a-91fe-4f04-b285-49a8d4812727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0245b268-5403-4452-be65-ddfec1442ed4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14099733-06e7-446f-9132-591442d2e102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aed398f-02c2-4444-a4d5-625f123de447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3dd74d-418f-4098-8a7e-82cb02e535a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "524c78ca-a2fa-4807-8103-357b3591314b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87fe8e9-a2d1-48c9-a495-e35ffc9e524d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42770af6-332d-401b-8794-d2543878f2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4d39d5-5ae7-4a36-be7e-92e971947d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d85c84c-49ec-4356-adce-4325aa283ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb77ea6-4e1b-44d6-a02c-25b3d88029df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347a52b2-68f8-4e7e-bddb-c5c7045b7187",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c29f7d-8518-4838-8305-5cfa2b389d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c8f9fe-9e5c-415f-b160-cb1d1959e9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852d50c2-264c-4add-b583-19483e8a240b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a328da0b-da10-41a8-8432-a3d378eaf00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16677821-4217-465d-90b9-82e7f9ec29e3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5161110-7ad1-4296-be24-b85ddaebbc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9082016b-57ec-452d-8bd6-d4eb20ffdc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958e696a-70d2-4baa-a5fe-bda8ad4ebe34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "486fcdaf-4cbc-48c5-9a20-d683f4ecfcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e634be6b-7a4a-4fd4-bb6e-ef8088cc154b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d5bc93-2ebf-4c8b-9eaf-8fed60e41828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e44d485-818b-4a6d-8e23-aa8f1d8b99a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257c03ef-bd48-4427-a4f1-adcb6b766a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "153cda11-d505-4448-96a6-444bd361f559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d9caf8-be9e-4028-8602-cf311b895ff8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683b48a5-69cf-4195-bd1d-2fba84df2394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fb259a-1107-4430-9abe-9020a1d5ed74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbe7b0c-d070-46e9-beab-49c200b8d8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a50cff-78db-4d94-b0a0-e76beba56764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8c8181-51b3-4c68-bd17-bba0e8c52882",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd87a624-c20c-42e8-89e2-c89fe11ec294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1143d1-e426-4ba9-8c39-ed87090720c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c46453-bcc0-4781-b14d-06225c58e255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ef1600-9e75-4d8c-b8ef-c5a10e6a1ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7190fb-5800-4fd9-b6f5-44156c3889ec",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b494d99-262c-4eb2-91d2-3ce2da9d2a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b812b5c-3e53-47d9-a291-da6e1e7c005c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af20f37-da9f-4cef-9cde-1594c74f091e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "444b12ed-b618-4340-93c4-259bc3fdf435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f30a34-0a8b-44a8-9a6c-8e8d256cf368",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6548b9-ec8e-4c08-aaee-54c5e60f836e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180371f2-bfc7-4aba-83f6-c72f76257cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d44eb6-b33e-44fa-ac82-5bbfa45e1361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4485a305-7b8b-4f99-9bfd-55dc878b1b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13da8916-36f0-4860-9468-dd0950bc70b4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5e553c-660c-44e2-a39d-93122611b26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c23176d-65b3-424b-9dc3-776af5b82ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6855304-4f3f-4f9c-a17e-d67c48b0c546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca22cb3-974c-4b74-ac7b-3bff93a13996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7138d90-be4d-4867-b182-5bb894fd7a3f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afddc95a-8ad9-4c32-9d3e-7ffe22d428fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e96be5a-974f-483d-8653-61f5998c758c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02930e5a-9902-4df1-a9ef-2e0af06b0f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c31944f-3333-4c4d-b699-523279bbefd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f84082-bfda-4a52-a963-bdf242a4e476",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4366437a-dd89-40dc-a751-b9448354033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37c3723-3eb5-4a0b-a28c-6a7a931b5478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c719775-fc01-4b8c-a2ee-e28121463de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e6bddc-e363-4c2a-b35a-6463bf40a8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0704e5c-0d67-467e-891b-966abb9a4cb7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1ccc7d-6cf3-42cb-96be-9a05e417232f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527060d8-6c28-4e9c-909d-a621da09aa7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7c0d9a-77d8-4563-a859-e79641d6c56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b34784-18a7-4dbf-a129-f3d26937feba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5984ea-33b3-447e-976a-3fafaad3eb7e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da30aac6-8b65-46a2-8393-6f008cbc460b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe74e0da-0918-44a1-b95e-742fb3090cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93754fa-8d3d-4aa4-ae88-39112ce7bd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5f916a-2229-4130-a59d-67b389211b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9dc334-eaaf-4326-9bf8-3a303a880a5e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e51c500-a6af-47dd-a4bd-6f56af1838de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9077df-98e8-4f5c-bbf5-b94152836fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab9fb30-f53b-4a64-b6fd-01b7603c69cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f01e8e56-2d52-4271-8f0e-33e27d689964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fba46a-ab2b-42f3-baf6-03cfec64f80b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98c09bd-089f-49b8-84fb-b109aae5dc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880544b7-5013-428c-925f-5e5c914f42c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597b485e-9527-4bc6-8f25-bce97018a495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc24ae0-31b8-46a6-8226-02faa288e894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a45f0a9-8f2b-48b6-9fe3-9518c1c90f96",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934e60bd-27ce-4654-acc9-4f8e0f958753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660826da-116b-484d-a315-60065d054b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6649fe3b-c1f6-4d49-b064-150535c67cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3828cc18-6646-4967-b497-8ccca868999d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0168d1-abb0-4a6a-8bb6-de8fd4329b91",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f95a531-9160-4ac6-b4e9-3dd552e89b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4986841f-25fb-40f9-8eb4-830bc7c8edb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49cb7d5-30b1-4ae4-8934-06341142184c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1450d6-5a96-4356-9c15-0a5fd0d7aea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbd11ba-5deb-4727-84cb-c12730c71a72",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b183ee06-aaa8-4325-80bb-e19b6a61b7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff93506-e667-43c0-b0c2-f8d1a2410dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534741dc-7f4f-4b02-8cb8-0f6a525a6eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c9dfb1-c327-4ba3-a848-ded845bc9f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f866a010-392b-4317-89d5-d6dea3698d1a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13892bb-a2a9-42dd-a411-30bad8238db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e678efd1-fb02-4f9d-97e6-4bb2efd144ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5a5755-6ac5-4580-ad16-e0031512cd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d97571d3-389b-483d-ac13-d464a50a15d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d01bb1e-fa04-4cc6-9e9e-4ade762b806c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea935a2d-445e-4e0c-a5a4-89b33926a549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0150218a-bec7-4d69-9dfd-d5c438de2d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677193f0-ebec-47ea-adc6-34c127f5e0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c50d11fd-ca88-4b1d-999f-71947dc339c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3eaf5c4-8fc5-4ff9-89be-4ae00ebfd70d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc6ded5-b4b6-4d11-9922-24fcad287efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aebaf04-dee2-4dfb-9603-e414897c14e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc41dd28-9d4e-400c-bf53-3fa0c250c307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3175f958-aa29-4d2a-8d35-14a538aacc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc88feca-a9e9-485e-bd35-7518166dbff1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aee73d5-ff12-4fde-a0f1-95c5f0f76d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138a36b6-baa2-4336-acb2-4da9e6485bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87f1cc8-9d7d-4834-a34c-a4bf186f68df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "894b7d38-4ff9-4769-988d-0e9000234cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc61db25-c24e-494e-b0d2-dad5d011604a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070a89cc-9801-40b5-84d1-94e4e4e137d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b60566-b472-4da4-a134-e2dd0a24d641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1eb514-b362-45da-9484-b011dff0a38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8822726f-266b-4824-a8d9-3d4c26c61fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8d2466-4648-4243-a4e2-d7ef3cbbe29c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1821fcd3-17a4-45cd-94ba-9880e1372dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047d5453-16d1-4285-95e8-528200d62b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7727d126-82e8-4d72-a021-2cba7d906e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1580a5-3974-4eed-b335-57189cd17319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c4b93e-cee2-4f6e-b932-6f78d239c5c4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d89e31b-d544-4bef-a8e6-7ff62ad79fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3191f77-13cb-4586-96e0-c8df8de88077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae2ee50-80dd-4b60-bac6-392b5f56832f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a517383f-0ad8-4009-bc87-24bf1a909918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532400ec-dc59-4e97-9866-ce97e9b10801",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c03539-c5dd-4be3-97ab-a48d3cf1a54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8472a521-3bef-4449-a95a-6d3ce96b887d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfe4aa0-fa73-4f6d-b8b5-6118b4e7564e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc92b2f-7a1d-4dae-9f2b-97a2b1b8ea7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a874a21e-abbc-4955-86ad-c6832e4ac3d3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf98b48d-2d33-4344-a593-9b4990bf05bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7f05c5-7e08-4b27-8c9a-8dedfb1d7a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb715122-ddb8-44d8-be44-6b6bef359ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3c2de4-492d-4f49-a276-e40e653c99bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1589805-1cb2-49cd-b56e-1f77996d6a2a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e956c02-fec7-4e34-bb06-62f3a610a257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91abef08-5efe-4799-aee0-2cab41529136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e09b20-67bc-4757-a41e-3217629effc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0feaf9-31ae-4776-8a00-909d6a1e550b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7686e8-7429-4d4c-a3cf-9d6015e866b3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57e0389-6dbc-4503-9c6d-e7098ba53db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8fb25010-ab16-465f-935b-fa251fa8470b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6277527-40b2-4651-8603-383160859d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7357f7f-8a7b-4394-86f1-088cb579e551"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "574ad9e0-24a0-465e-8e67-d7fbee0d170b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa992d14-043e-46d6-9386-da020e1b906c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2a2b67-4796-4a38-b2ee-bfde59879644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cc9f486-7372-4887-b088-5f6d2dae7ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe58d628-d277-4fe9-85de-09b0cfe2c111",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97989068-cb87-41cd-af04-5dbfce3cc82e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f181996-1ad5-441b-9edd-9ab936f8cc0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfb7bde6-ff33-4a87-8e2e-214e8d2567c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15525483-2770-41f7-9051-0ff8326410d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce7bedf2-cbc9-4a4c-b9fb-d381369d3876"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8b52ecf-d687-4cb3-8d92-829dcedafce9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c639aeb-fe3c-440a-8216-43979e6cf75a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e68eb40-5ee7-41cb-977f-2e92f6c9bfb5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62303d28-30f5-44c9-b77f-d3433b93f86d"
                }
              }
            ]
          },
          {
            "id": "65d1241f-a9d9-489d-9de7-6e72259e6264",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a2b2a860-a873-4f2e-aad6-da4cd71ae12b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "078854b1-235a-44cd-8c9a-8b858ea7bcb1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2d4ff5-79e8-42dd-a746-261ed0c4bdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "174a62b1-bd4a-442f-8e40-c4e9321cbb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e00bcd-1d68-4f67-a45b-f9986f6f877c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7bfc612-62b7-47b1-85f1-82010c40cfe8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c403e71c-4647-40d2-a7ca-826baebc4dd6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48898e54-ad4c-45e7-998e-b3ddcc94f33c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e5c5170-e7ca-4f6d-a405-f3176efb29ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc5bfeab-1d78-41fc-97ac-28a2c681ba42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "da465576-73b9-4b06-bbb1-a1e229fca832"
                    }
                  }
                ]
              },
              {
                "id": "dfa35932-a643-4bb6-b215-edb9255b36d3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55bca04d-46cf-45fc-951b-7a6eb5ee6dff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37494efe-662c-43ca-86c8-73fb543c23e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cad0c5c-e048-4351-9d47-71876e1d8b0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61863dce-f43d-451b-81d5-61869bd84646"
                    }
                  }
                ]
              },
              {
                "id": "2b34f635-30fc-47cd-a767-9829b5015143",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbcfcc06-d503-4bee-abb0-ec70eaf3380e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc1f024c-72fd-470e-ae14-dc4b5c3ff823"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61dffdb8-cc5a-448c-9213-444ffb16d317",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27e2c0a6-a4c1-40f0-a22f-e2201fdf996e"
                    }
                  }
                ]
              },
              {
                "id": "10d9d59e-c4a8-4fdb-983e-3fbebc896384",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bba647cf-6cb5-43b3-b977-443a0f01216f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2faee0b-3f65-4b30-af7a-936a56769e33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ac88148-6044-4153-bcdb-5f211a0edacd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5d78d0e5-da85-4af9-84b8-7fa5f5e4005d"
                    }
                  }
                ]
              },
              {
                "id": "a392b425-dcf2-46fc-b1c6-47211f7d48c4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcc9d789-49d4-4a0f-816f-165dfdbd5e19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af8ad8a7-15cf-45b7-b2d0-74bab93a3812"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec406025-b335-4880-9693-ed2d32583c5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "74fe6c5c-56f0-44b0-a85e-4ea4c6f8f0e1"
                    }
                  }
                ]
              },
              {
                "id": "61d917c2-cb28-4ac4-bf15-3c90bb9faa57",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1f35ff4-b3cc-4c56-a477-d793ac3257f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbd5988a-98ce-4945-9a68-52732aa12a4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "192af2cf-618f-47e4-84f8-296a0fbe16fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "337d8f34-68e3-46f6-bb0c-329161191f62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa84c1bf-f115-447b-8532-3fe09dd6877c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9ad92a8-282e-4f26-94bb-543626f55805"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e1613ac7-6805-4fea-9265-791fc0e2f62e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "855f07bd-4501-4d78-a76c-08394defaae7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14ea4a8e-1eb9-425c-9934-a6b2ae38fb07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c2c6aa3f-48db-4a77-b639-fb9efe7824e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "402a6489-2dc5-4809-8e0f-a8b9624f420a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15866785-70df-4579-8d99-f77d5c8da05a"
            }
          }
        ]
      },
      {
        "id": "0cadb1c6-1c6f-4415-9a14-6cb3a89c5450",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cd50382d-4710-4a24-ab69-ce1ccb3785b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4230b87b-ef5d-406b-aa1b-97f406f0ad13",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd2e6aad-d1e4-4739-8860-e7db0924973e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70087a5b-725c-414f-b2ac-38c114b34e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1a4c91-59e2-4f74-9867-72eb49198726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9c6164-4a19-42a8-a894-a28e9a533901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "13b42e90-3593-460a-a57a-013e692cc724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9654def6-b4f2-4146-9485-afbcdf933860",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad1b9d2-94ce-4a2b-9bc8-aedc655cdc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1fe87a-203f-4f4d-82d9-aac89206702c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc85f1bb-2834-44a8-99e5-447e25a1b513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab310e9-c276-4cc5-a0a9-2e942ee4914f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35532dbc-3c10-4074-b3d0-bbbf43fb27f5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f74a42-c9e7-48da-9663-7af9f754f29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37723750-1b15-41c0-951d-dc8d8351dcba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a6ea20-cbb0-43aa-8eee-0a9bb6169cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42e80cca-809e-476b-b117-672a1e6b7e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc47d8c-3e58-44e3-8f31-10fd0f370f3e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a55f409-9d1f-4700-9651-47befc196d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1268e3-f774-4127-90d8-4dd3b13affba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c70348a-2550-46ce-a99a-589dcfaf93dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cab74e44-06b3-4b4a-a23c-f1866ba697f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51db61f2-cc35-4585-af9a-374f3812d8ab",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1523cc26-fc50-4eee-a12a-ad4659e4380c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42515636-7711-484c-8f02-466b3bd480c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87fe932-783d-4447-8eeb-8e316048505c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a35afe1-6cbf-48dc-a43b-89ef3a96de61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b61876-4a15-4a1f-9403-37f5614eff86",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddbabfa-0f6a-42f1-998a-52d832f3f83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c84521-bf98-4525-ba04-4157cbe0043d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f427c45-96d8-4cdb-a601-e617ba9e1232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f86972e5-004d-4beb-92e5-4cd57551a353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63029944-5ca1-4827-9855-44f7a0336045",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d7c81-83fd-42e1-b70b-df528f8b4af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dae9e9-94a8-4df4-8632-b8b8915a3867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3c3075-a49a-49de-a743-8be16788894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7deffb65-8a62-4448-9489-92688a0b8c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7be73cc-762f-4371-82d3-44d8dd6bf02f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a2bc80-0fde-4eb3-bf53-6ede8e76297d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31836b34-6fb8-40f5-b9e9-cc7e3e36197c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e67404-9575-4014-b0da-f6fb0aa2281b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e59fbaa3-9707-49c6-9584-bb5d77585111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d448ead3-0fcd-47cf-950d-fa04619c141b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864b7aea-ab05-47d3-ae96-a045036059fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e84e1ae-daed-45e0-9b6e-6ebd3a633a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c375f195-8a29-4a0b-8496-e3cb6daccd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe8d438-19bf-4063-a071-ff67c5a44b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b136a80-b1e5-454f-b865-f3fa0c59331d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9190525-af1e-42a6-844e-57402edab355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a7fae6-ecea-4b2d-aeb7-f43be0e2bf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f58d17-a6d3-410f-bdcc-fefcdf8b492d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14c8c024-0c9e-49fa-af4e-ca7f11b64303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedf6c24-3258-4c1d-bad5-54790745942d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd87c1e0-42f9-4eff-b8ca-27e4f496ae25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8217d90-3069-4120-8ba9-c4906f637c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d05b66-544d-496d-9361-f5510d3b20fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "40bb1141-4f3d-4607-9159-f895c20755c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a57c5e2-e7ce-4857-b475-e9c37821e999",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f98e2fb-2f3c-4193-9e2f-c824c0cf4925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347b9b7d-200e-4e09-a584-fd3bc559bf6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab51717-d819-4ff8-a539-42566a33603a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb5b3d9-fa40-4bb8-a167-52f49a0f0000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50543aae-9fdb-49c1-ac7c-a45e9a9606ab",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ddaf4d-c853-4ed7-a368-b40248ae61bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c4e7d1-1980-4cd6-80e4-f78d1b2474da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b9724d-e319-4fa6-93e6-949a65becfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c20f64f5-bffd-4d75-9233-4be45b33e08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd57a58-aa20-46b9-86d0-7fd3e09eaff7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc6034-6f7a-425c-8cfe-b4365fe8778f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71165908-793c-4cb0-96db-e567be344a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c49a0e-8fe7-4e74-8938-cc49907d5bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4649719-731c-44ab-944d-f8216732dfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f382aa-4d19-41ac-990a-4fb116292206",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab60b627-e30d-4574-ab2c-71afb8e79f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d044581-0039-4675-894e-fafb8d08817f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc05de92-135c-4f09-b266-07a3bc24b599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1458bd5-501b-4809-afe2-b2f249f15ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b378dd5-14e9-4842-a3b0-5f304f1ef1b6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fc3e54-a64e-4434-86c7-54dafc98ef53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcd7a0f-2618-4438-89fd-b0b2200534d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb17a038-291c-4756-8263-be3687f3e9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4d5c96-2282-4201-9b78-058d72bbb406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b455997-c4ca-4de9-bb5d-b79aabf81a10",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e20707e-04b0-4e0e-a0c5-4fb74495fd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1315ea2-65e6-48e0-8e1a-2b763076dfde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ce5afb-b373-41d5-b0ab-6706c231d5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "01fe9901-c34d-45aa-bf69-984cff23c6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd09df7-7a2d-464a-a9eb-ac62064f0a02",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95131e5d-0882-46ef-b869-2d3c5846d4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16efee7f-fbd6-400b-8836-e9f27ff1129c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528d874b-fb92-4dac-a4d2-8b6cdd0dade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "272d6298-2226-4654-a480-0ad5971771cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74a844b-c62b-4a9b-a264-2848281fab3f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088053e8-a5bb-4f45-a3eb-b85d5daff466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e16643d-3c44-4e5d-8f18-4d427c38d1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745e77c7-7baf-4008-931e-c5e33d3e166d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "991eb720-a682-4307-90e6-18bb33445e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52f475a-7260-47c1-b8ed-74539cc4748e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c84827-9686-46c5-9090-98b371507e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ba5a6d-fee2-4081-8bbe-05ad10d7928a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf20e01c-49cc-4fae-a94f-d3b68f565060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f4a2c0-f602-4cec-8d9a-f9a8a130e9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0c0650-1639-4901-9113-c9f4b47d87a8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009c8901-b950-4664-86ab-34c1a283d60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb95a696-57c4-4d38-a255-16037d6b1b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bfea0d-68b4-46ad-af35-2cd782180fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f83d44d-2c08-4b4f-9df9-a5a55b48ae63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d13642-dc5f-4388-a34e-b8ff421e3321",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136cc0c0-17c6-4852-8dd6-c578a3007558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "622f195d-86f6-4a14-be1b-95d226f6fba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78edd5bc-d48b-45c3-a2e9-5e9efc288350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "183f8b94-c129-4846-a126-4e96260141fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beeef7f5-9a4e-4bab-9c87-5846a7ee58b5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250d030a-33cd-4a09-9e64-d569e893adc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef39f08-bc3a-4189-a7e8-f7056268c976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed1cd06-3a8b-4a38-b540-f5114464d463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72a57223-1a84-4670-abf2-82e0087bf4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82db3a03-56a6-4b8e-a911-3928c82561a6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43958219-cf3a-42c5-b61a-e4ed627e0a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9f6dfb-0f6a-4a5e-80c8-23d72fc5e3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627617c3-1808-4936-95c5-55e8e6461bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09b14db-da44-45f3-9bf9-2275f6ec9c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3482030-7e95-4438-84a6-9b03960df742",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d52dee3-0fd0-4eed-9aa1-a11b24a44027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa05d23a-2a85-48bb-b7c9-c4e2473beac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdafa40-a317-44c9-802f-62c70eb3065e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "363cfe2e-dfdb-410f-9499-67a927bca35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ee7165-8507-4b85-9b98-8794db66ff7b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52d4498-10a0-4f25-9798-796d885a359c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c77355-83fd-4e09-aae8-79c4ec0185c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafd3338-9713-40c6-aee0-328e65395704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7ee1ae-daa7-4c00-95bc-2ea571f39111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8cd92c-d61b-4b4a-b469-ec0e6566ae9f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7371c418-a6ee-4ff7-abf9-dacd8236c26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f714bd4-ad51-48a2-9361-434ccc8cfd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb5456b-af2b-41f4-b4ce-629745f078d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd16aa9-a344-42d8-8140-9d014e01595b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e3edf6-2372-4a5b-9343-21b05dc26a99",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5204f5c8-2020-412c-add3-84773995b125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6921d5-9b4e-43a7-b2ec-804ed208f33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb33cc1-4672-4638-a4a6-1838fb8e05f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93bcdbce-2d2f-456c-916d-479981098595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88d770a-dfef-4472-b687-ded5b9f2512d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57b2330-ccb1-4152-8f46-0dd984d9bdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648ac3e5-03e9-4b1e-afea-85a39b406634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfc340c-9324-4b0c-b108-792455612dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a65795d-065b-4f85-8004-917edfb76428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05da0496-f496-4731-94b8-14d000452d60",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cc5049-de9f-4daf-88f6-3f6eeb28ddd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c027cde6-7ae8-49d4-b5f4-5e0cee76e3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023fa03f-ad56-4ac4-a994-97da858f6d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce751303-2ee1-4ee1-af58-d92301719671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f1a498-78df-4d60-aad3-ee09b66201f5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fd47e9-b2cf-4ad2-8065-52be4f4e1edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f19410-eb9d-4731-83e0-64d607eb2b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcc3c8e-e529-4d28-a596-e010cc2d39ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18140fd2-0d6d-4a30-a5be-24da137e30c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8093d1-a097-479f-b86e-e0e9d10e41c9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a012da-5576-4a35-a5db-d25e77c128b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c92c6a-9fd5-4be0-ac90-432b70985f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7f7a3c-72f9-4d7a-9447-7fec884e0f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a09153-85e2-4296-8e78-54715816d5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d03204-b50a-42f1-ab57-a0a442787ef7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e2c2f6-cc85-45db-9278-2ef7a6da31d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692d1ee2-5760-4cae-9a07-0efc4ed25dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e295c8-e05a-437a-ad24-f3fd0b457fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8195e091-ec76-4d76-b70c-98d672936d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05398d5f-6bea-4c39-86c1-da98a934a515",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a38b2f-041f-4f19-aad7-9cfdabf79c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e1b673-db6c-4cea-b9dd-29e0902f8dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bae1c2-9e36-404b-8542-b39914e105d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1431f028-2a95-4ab1-90fe-6711c20ef4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ecb1ae-86c2-47af-aa2e-0da6f8f876d1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b114d391-0b5f-407f-92ed-25c5f291a7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877fed00-bce0-4f2a-a6aa-013027e13f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a7dd0d-c91f-42df-9943-88a599c45aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67d7dc40-42e2-42aa-9e0c-ebdcf20dc9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db38689-02e2-4c34-976a-172c2340f062",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1883490f-9178-465e-accc-bc4710d9bb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c2a827-8142-4d5a-ba9f-d4c45bcd7b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6550340-fee4-483d-a15c-06ecf8803b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46fcefcb-4b0b-436a-9499-580f32bd9d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2398b490-981b-41d8-ad82-ff29b83168c6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87a5532-c2fc-4b06-af5f-1862ada21bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778a48e9-a43d-4790-80ac-c03d7197760c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e0787c-9918-4de6-8f5f-8db6bd451647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1fd3c19-d81b-4217-a663-550016359918"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e06d82ae-487d-4a30-b78b-5b126f4074a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c91c28d7-9741-4e7c-a972-108fbffafcf1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0389f2-1938-4143-8508-a4245b7e5e54",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "27f2ac14-14d0-4c41-ae1c-2aafa90e4ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9718297-385b-4d58-87b8-203059082bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99d22d74-2baa-43b1-8ef4-6acdb2e8fc00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c0046a2-0ae0-4bff-9642-8a7e362c8f8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ef9e65b-2ed1-41e9-b473-c883e74235ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d72318db-de8f-437a-a474-4ad3f7fe8489",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43e850fd-3f7f-47b4-a289-abb473006d8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa9de902-9a3f-4066-9c46-d75f63747723",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0db004d2-4c63-4e05-a7df-38fe28b595c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cc1d2d4-7602-4a38-a6f5-77014b12c0a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "344f5791-5809-41a1-a1f2-9b3e04316c3c"
            }
          }
        ]
      },
      {
        "id": "d6f915b0-628c-4d54-9fb7-344c25433b15",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2c51aa44-df52-407c-8f69-6f4a8ef47ccd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "943893f6-c587-49f3-a05d-3b0ff53dd7fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27694f58-4267-4f33-b240-569a3bb52251",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9acef2-4dbb-4657-abae-648067c5b6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff77a64-435b-4626-8aa8-d2b4cd1b16d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f3f6d9-a713-4656-9ab7-987a7ab8e3df",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf66345-6f03-4115-be18-75498a772022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbd2d3d-c01d-4654-acb3-302659c09d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3b1929-46f0-4070-a19b-12074565f454",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89443fcc-90b7-496d-bf5e-aa8a7ca2f24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9be9db2-4e61-4880-a6bb-7c8f7bf5d10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f86ae8-970a-441a-a8cd-621c039eeb3f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f03611-e1d3-4f3e-9518-3909cf0fbe67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f35ac0-552a-4f2e-8de0-301ac579017a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c205586-9a94-44df-8f63-3dfec85c58ba",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357b27ac-357b-44c4-9cad-92881e77ec18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6208af6-5263-4108-b02c-2c6567725dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5735899e-38b9-463f-a61a-7e8877d8e6ea",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ea967e-3c87-43ec-bbc8-43b9dbe04fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c683774e-89b8-4d05-84b5-e447f42af3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f633a09-851d-401c-8ddc-6d70b6db43fe",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52ee141-8cda-4dc0-b0d4-c97c273eaa6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50cf168-7494-4757-9617-81ab6be56505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68cc037-c747-4985-98be-bde6e7055fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a22eb1-21af-4db2-bbc6-0b96f91601eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a353539-3e61-4659-8a92-5cd9d9930bf3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867ad7e2-5cea-4526-94c2-02f0f1823b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f15ca8dc-538d-4487-a196-a7c392d1fa45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89d693f-1575-4296-8d4d-74c8219c45de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f684c06e-1a72-4b6e-a77a-a1c21f4b1c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043f2d33-5fdf-4a1d-a5c3-4a9201d7f73f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a385412e-75ee-4f33-bb67-b7b3e35f0ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a1cd2b-789d-41a6-a786-3c17b21f9877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faad8bd4-306a-4a06-866d-57c0dcdfdb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f614a0-3178-47a9-b1aa-5313897774ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a85412-2f0b-4ebb-9920-e0c3785bf6fb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1669e9-b227-4089-90ca-4674b6d48917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ad5e8a-5402-4efa-b575-c9bd074afe52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38102549-5d1b-4f6d-9b77-90b1cf5247ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f59ea62-4334-4d87-8523-9e570ee7becb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6def35e4-a81e-4393-804e-d8b6fde3d815",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc28db6a-17c4-4bee-a442-6c48617d3d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7005bd31-95e1-40b1-b926-6f1fe3401ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c7b6e0-5071-4573-88d3-97e51d85914c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39b21b4-753c-4676-9c73-e3ee6708291c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6baef39-57a2-4ce6-a1cc-54be622004c3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5502d13-6d5d-44e3-9ba3-04b366626432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8787c6cd-3470-48f7-96ca-a5126002b5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e79850f-79a1-4699-8cdc-b9d30fcd73a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306cdfe1-a0ef-4208-9a3b-79c625ffe663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb22aeea-024a-41b4-a3ed-4a4bde6576f6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a87a31-0a4a-4586-becd-337ba63f2ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a5e641d-65cf-43cc-95d5-c1d1a9892e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62c3219-a496-4f63-a474-15a08a93ad57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae43e0b-464b-48ad-abf7-1dd048b2d3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6513956-1bb8-4706-8d7e-76e56bc0d161",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b12767e-000b-407d-8eb9-7068462f5850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec18939-4ef8-4460-8d81-844bc43d997c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001a6627-69ab-4ad7-a1c3-fd7cd4cf5961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d1ae9c-71a6-4c68-886c-0f19e93fd10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b4f8a0-dfc3-492d-8bf7-e62c235ffe71",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607cc18b-195f-44b1-8350-b9ce9a84f8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78a000e-8bbd-414e-845e-fe09d129e40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f095e32b-d254-4f6f-9167-f980aa75455e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c13fbd-384d-4802-9eed-4f704f9dc594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dca17d5-7115-4e16-b1fb-af07e5e9284c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edce161c-e100-49b8-8e2a-7bdb6df8e393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b2c7b8-8479-4fd4-94f6-4f134e438478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9fc562-514b-4e17-a956-51ff2503a17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9905e1b0-e1c5-466c-8cee-b63d4efbc822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13606ff7-756e-4d3f-a0d1-2e8113844e48",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef11a5f-6b53-4228-a564-96a8e0fade09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6391f729-2232-43ee-bddb-123d5d21c116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5f3873-440a-4091-9607-656736b2810d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1831b00e-33a1-42c4-a699-cc744b82ce99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a766a62c-e15a-4339-be07-6243a31b869f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44e7707-707e-4734-87f4-ec42f390619d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa57847-fb75-4202-aa10-afed9981c010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a2d6c2-f9c6-4775-86f6-d90d2da750ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642a083e-5cb1-49bc-acd8-58ed30196071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afd11b3-99f5-484e-9d7a-5e37710c5c12",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49053d93-c033-4b5c-a2b2-9be2dd3c0d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b48986-53d5-404b-9389-7a67fe89ac1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d350d278-ffd7-46a2-b9f9-cbd341b6369e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e17ef27-8128-44bb-af1d-8d313152df55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f560e4-cdbd-49a3-8b6e-6a174b2f4c39",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da9cf2d-ac02-4210-b2d2-f4034d390ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51b01c5-d383-40c8-9697-921263223747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b81575d-b89e-4e00-9d1c-e086cbfcd270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49f69ad-3e42-4c21-a615-f94a63fd59c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58bea64-4252-4253-b2c1-d6d18e472cf7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03b5c90-e202-4b9e-8b9f-4f480f75a0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643c5007-bba1-444f-8513-812e41667939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d637dc3-530c-45fd-98a3-fa3b11a54c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cd1d27-40e1-44c4-a7a1-0c2db60e68f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e6ec1e-d102-4196-9bf8-70681fb4c0ff",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fad314-056c-478c-9a08-1ab23774dbbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2542bb-18c7-4336-b2fd-4653562ab3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68338df-96bf-4503-a3ce-b3bce28bd165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb2bfeb-06f3-45c9-ad8e-ec23b9f24906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b4437a-f739-4393-9793-09c14b405276",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c4b9d9-436d-4274-96f8-ef1f024f70eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34ac67e-d2a2-4a69-911a-71805130b986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e679e0d-fdf4-4eba-b49d-1cb2bb82060f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc48902c-57ab-4787-817d-ff7b8edcb2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4158d40b-e3e8-48a2-88fd-8979673afa29",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6ed4a9-beb9-4971-aa0c-724ef0acf75c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c0915a0-7095-4dd5-b9a0-db4af4bdda07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4a8d3f-dc36-44c0-829f-1f2d54a05e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e1fceb-58a0-43ec-b537-e3e979650c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10948adb-81cb-44f2-ac02-d7f7de4b92e8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4cdd46-946b-478e-b902-546fd0a58782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe43bed-4ca4-4d11-b0d8-947e259614b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ec515c-2e7a-4b40-ab37-a2c1d4b8132e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b49236-0d0b-44f8-ab95-650f96039599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ea1446-fca4-4b85-867a-386e00f129ab",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e344ab03-b7d5-48a5-98ad-9d83f366ecae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f9bb036-f816-4f51-b677-b95939273f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04844c16-6a8f-497b-b18b-20e20c32c9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34c4523-0521-4b95-92c2-d5937fc8e7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cced74-0e2e-4820-b7ba-68ae8366979f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26ef3a0-3883-4012-b070-511e930ae1c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc897a2-69f2-4d00-acd8-4ea477b1667a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296d3269-ea0a-46e9-949e-23e1f032600b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e985f472-f2f1-4a27-bb3c-69206bef1632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702df531-c7a7-415c-8afc-aa8197aa3fe9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e18d5b-8758-48d2-b704-a6e3114a52cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d653ef05-5453-4b85-a41e-1b16af2b8fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c930cb7-368d-42c7-bf17-a1db0a611887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87605196-e4d1-4d9b-a4ed-da0ced45a58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf6d714-210b-4e2a-addc-e81615a1c521",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbca61ea-c3bd-4ef8-9e71-b2a897271d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab98e8f8-d44c-44e4-9807-2024c108de34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae290a6-40cf-44ae-829b-5cad43a26956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbab823c-d402-4a5e-95f8-2efbdc82fe7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d04cf3-d6f2-4a7b-ad7c-0bf00a60eaa8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d033f63-e5c7-44e9-acbb-90f862890c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1410e3-6992-4f68-85f7-56a08caa4f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbc8a3d-668d-4ef3-acd6-5c23133959fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d670fa-5666-4397-964a-18c454123de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99690b1-6aeb-4514-97b0-c3f3889a0c31",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37fcbe3-e8f2-4591-8b02-57bfd84e66f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4291ce80-b21a-49f9-81d9-b320c501f751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672678ab-a4d2-460d-a9db-7d5c19612a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2202e304-dea4-426e-a42a-6199382091ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f426b2-043f-492b-8cd3-f8cf113b0f88",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe46f3d-2da9-4c79-b120-c2e277823230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caee3f1d-845e-4d67-9435-d1bedb7447b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69210b31-8dc4-42f7-a3bd-70ef0845933e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47c99c3-b351-4fcc-a900-32a8a791d13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed6fa84-99de-4829-8a18-227937e69f29",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97764438-189a-4f9b-a587-89802bca96ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8bad72-0312-4389-ae2b-184497a13af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b19f03-710a-4c8a-b8ac-9b85cb86f3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0000a6-5a27-487f-98cf-fb66577e537e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f52962c-7733-4b8e-bde1-a452cb7e5df5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f2abf2-7237-47af-9e4a-bdb0fd5fbef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a292f3e-2639-42a1-99e6-7df6666994ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea8a435-1239-4ada-8b03-2c36233758b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8f3679-a05c-484e-a185-ca81d05970fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a617d7c-8094-4287-9cf6-51be82e8659b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e6dd0d-db61-403e-8bb9-f2365d9b7122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f499e9-301f-418f-b738-8188857e38a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f814b51d-76e1-4050-9157-a66477fd5638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a80a48-f757-4055-8e41-e876016ea40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c751e412-4169-4d98-894d-1d6a9433437b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197c2b51-7680-4852-86ab-40b4109cf7e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb295a59-fe95-448f-b3a9-9cd7948e365d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94654719-0497-4cbb-a315-f3685bd93738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c575ee-0cc4-466b-96de-e49850b23a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c653e7c-46e1-4ab1-b4fd-d8eea199016c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68477ba5-1c96-400c-939f-ccc46c71100d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f0de53-5892-4c12-a836-f1e2e80ed4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd93212-dc6d-458f-85e4-d8025f76921a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74eca281-f1dd-460f-addd-716d61004745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a0d9b2-f65d-491a-ad59-415ac58ccff5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad298d4f-5a5b-45f3-b0a2-0027f8736229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d38d13-f0a7-46cb-9035-8262d22d11f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e42f4a-3a39-45ac-b191-e94a78affdc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd81ad1d-0059-41cb-8942-28c4d2f47745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bc535c-de65-4da5-8558-9b8b6245efe2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b47eb7-c082-4b3c-94d1-95fc0fa12608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c430193f-72a5-40a7-9823-075b7d33e4d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8667037b-d258-468a-aa34-406d41c05524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe6d3e9-b3f9-4bd9-bd68-08c9cefc7210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2126c2-0b13-4185-9edb-19395c568031",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cd6114-a2c9-4e7a-a2a4-271a300fbeed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6539ad-9029-497f-a200-6fdd9a6f839a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c090d258-af0b-441e-97f5-95e4dc88bda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87cb03d3-3b39-403e-9ac7-a5ab1fcc159f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bd31bf-b1c5-4fa5-a046-7fc21854cc18",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe3abde-6679-455e-adc5-b7a941228b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b74e60-e3c2-4321-8830-d4fc5719b42e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8189e5-d57b-4645-a32b-f5e974e6e35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbfcf35-1830-47d9-a847-41d4f284c723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c35a8d-fa4e-47e3-9764-03d0554e7f7e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a9f73b-35d9-4af6-9c65-fbc47c9daf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1521f5a6-9333-47b2-93a6-6c65360cb569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d36f17-03d4-46df-bbdc-428161e3a5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a19215e-6f90-465a-8107-ee8c2b7d9ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2a4578-5714-42c5-9696-35bec34188dd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4601ff08-e097-43c2-99e6-eb50e2d22c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2d3ee2-634c-4e1a-8ea5-1ae10a62f929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af736dca-f73d-4709-a9d1-8bac91d1e0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01d4737-03ff-4656-87a2-6329837cc925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f3bc72-48a4-4114-a421-7c4a70de98cd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e49dbd4-2acf-47a8-bea2-f77ddd05684b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d042b287-c31a-4f81-8030-1641d5410e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ace900-3128-44b9-9324-1ac238a7043c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdada80-7eee-4c6e-bf3b-7fa0a4850b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c3d123-bc70-4fa4-9afc-91c185d81ecd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17aff07c-bec6-4044-ab81-5a8089bc06e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5cb465-fbf4-43a8-8f2d-1ae3dd23ab20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f407eb-75d0-47df-a557-d3858060cb13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59c6634-3ab0-4ce9-b45d-892898709d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ec2a92-6580-480a-ad49-96571e2ac33f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d35457f-a575-45f0-9cb6-508648c489f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d67cb0c-acfe-4381-99ba-876f8925a728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef66c5fd-98c9-4f1f-bc73-94e36bbf0c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b49eeb-57a4-4f60-89d0-fc435788362b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1c408e-9503-4526-99af-fcdb32c598c7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45ebc28-f765-43d9-a1d5-140e76621dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e41eddf-0571-4a29-9af6-483ca4c10b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5766bcf2-a28c-475d-8b66-aac3e6ab9739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfed6c9-49b9-4a33-b0eb-8e9d0f2bc068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf6b5b5-6424-40c1-a156-f6c0c7c9a4c1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080c43cc-952f-432c-b38e-9c3d41293d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcca918-6366-4135-a314-bae80acd8d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43792b13-6244-4112-968f-d494a2890de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3d6a91-fece-4f07-a0f6-949fc6e398ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142e24f3-bb48-4bfd-8106-4f2b82a364db",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f8e6b8-8e41-4bb0-99ac-17b390e05f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9849b98-4d4f-4e3d-827a-d7d61566eed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db935721-ea6e-4c97-9824-b898bd53305b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9d19ef-b5e5-41a5-bda9-4780aaec66d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5316eb3d-5d64-44bb-8b2c-6af30468a02e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb92468c-d0d3-4830-a820-57e225c307af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71c06dc-46d1-409a-86cc-8d092bddb82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659157a5-ecd5-4d6a-a3d4-0d5afaeb981a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae521be-c043-4766-a0d4-cf969ae62d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058f4906-5daf-421c-8004-8c824a370c7f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee82a56c-ad78-411f-858e-1ccfc5ebe61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ded71a5-651b-47e6-a922-7c85cd89aa62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd837001-9f8d-4535-a42e-d7799706b705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df75664e-31d5-4ea4-9ad9-28dc5e067212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e33c61-6ed7-404a-b9a4-a183a686d1e1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f8db9e-1b37-42b6-bc39-f10987cd38f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a67a1b-a218-4d5a-b9f6-9f05d3a704bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec75b9b-701d-4bea-9fb2-6159c79422d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37cf43d-36b8-4503-b2d3-bca8f0294c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b16ed60-73ad-42ec-8c59-8abd24bc5959",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dfbf21-1edd-4670-b8a5-4726e2cc79fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918a3868-efd2-4d44-976e-48532dc156dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f35b32-1695-4c82-98e9-552f993e9235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94325f14-3e7c-4a00-a0fe-81a77665cc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dca559-6a30-4c07-a3fb-27fbb64cbe27",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf46ef79-44fa-47e9-8073-47c3bcb601cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8d8241-f31a-4069-962a-809b1aa0c218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2c8b51-68d1-4039-b97b-9ca3cc495fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd06b89f-e37d-496e-9bfb-dab4cc0afc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a6568c-70a9-4262-a01d-3d229993d1fa",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fdbf83-2273-48ed-b4ea-8fff1dff6fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464a8f98-182a-479c-9c66-7cfc8e4d794e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54c2d43-300d-4f32-99f7-33bc2b2c215c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f7714e-c366-428a-880e-47b754bd1103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080fe4eb-dec2-466b-a4b8-a86703beb4c1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7504a411-d43b-4570-bc0c-89875cd3ebcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9c5fea-7645-4949-a144-c9dae2c0b18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7ad65c-cb90-41b7-8890-8eb6af5eda43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d9eaab-29e0-4a81-ac64-b795d3694b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41c8f8f-39df-4ba4-99de-9b788554014a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc486b77-b036-40d4-9f30-ed3769a190a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4cf509-9554-4ef8-890e-4fb7093f7761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9665f031-950b-4ee3-9e17-ab58449eb55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bf89ba-523f-4861-b5c9-2a696d443cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420592e7-518c-4deb-b6a6-4e15d8ce62d5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccedf963-7107-49dd-8043-f54cdba9d9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857083c1-a86e-4e5f-8db3-dfdaa5f2dc30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115bcc5e-a5bd-48e1-b85c-b7597291e26d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7550eb87-3511-402e-afd6-f725b750318a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d617eb-bdd2-45d5-9a1e-f1094220f329",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de616cd6-d520-4fe2-9d10-fe170f67e9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de0b2bb-e0f8-4755-ab8f-c9e3946732bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d6a1f1-5793-4039-bb2e-fedda03f049c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2eaaf42-179a-41bb-9c18-c3dff9614378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1774d7bd-214a-4728-8d96-0e55cfde0fb3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062a6631-7dd7-4e15-8b8c-3961c3d59c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c742b32a-2fee-499f-907c-1e92a5f272f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e336b9-4dff-4eba-bf18-5dc229ba0238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2150376-9655-4139-8f6b-3739b54b2016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3af4310-d3ef-42c1-adaf-4f4db729aecd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94fd6a8-cda6-446e-b7fe-548e02b543ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b426dca-f4bd-4ab1-9d3b-408aff5eae87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef25c662-0ac0-4002-b502-d6dc59ca09cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38839cc-72e0-404e-9fa2-c3c45f3f4f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9301d0c-0506-4be1-99f9-0fe844857c4b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5106d83e-d46a-4882-aa77-48543a078ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa2e7ee-1f99-4bf9-ac95-d675720607b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fb2eac-8e08-4462-9187-061dfa832cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c874a9fd-6899-4b3f-a3c0-ed1fec4945be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4db001-504c-41d7-aaf2-76dc39efd390",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94ae962-ba1b-43b0-9e58-bd3aac1ba960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a62090-28d1-4753-b966-82990feee1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f823835c-5528-4def-8212-edbb613aa86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ef085e-4c7a-46d5-946f-bc2666598c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e40025-765e-4843-9210-558b31403963",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01edac0a-8ad2-4138-87dd-36d6caffeba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9792c5f-b23d-4952-a075-d90b32a45fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90283745-1770-4c40-bddb-a9d59d7aa569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00aa85a5-1042-46f6-bae8-cafec509343d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1546cd-ac33-4ab4-ab65-10156a4f144a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5f6ec4-5b40-4be5-ac12-4f3c1c3a0467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a729fe7-47e2-4bb5-b915-ad5b49a9ac15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39554d8a-6ba3-4812-8f27-57faf40faf88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde1f6dd-6d61-4995-92dc-74184c9f058c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc617df-f105-4820-be48-9bb5afd47cb5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e363d62-d1aa-4bab-b0f2-362a4d4cb16b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a620a7ac-93ce-4307-adb6-52d406eb335e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80443308-475d-41a3-bcd1-1970ace59b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63f1fde-590b-495e-a912-a9d63cf6f1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a9e39c-5e44-456f-8113-f28699712f8e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db508ff6-6c45-4ba2-848d-981ca91b506b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cab59d3-132e-4d7b-a446-9887fa526e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8e284f-13bb-4110-b34f-7ca91b8a5251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2b5a7f-8533-4cd0-8e4b-449d9244859d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccef0a2-9bd8-4107-a718-89d7186a4588",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4a4d8e-4840-4d42-bea0-d1fe47fc0775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506ab2c2-6aff-4263-894f-5e496a980f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b1c42d-e702-4d1c-8bd6-f8e1e38ca076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6679cef-136a-40aa-8939-2e2e9cbc4c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc4e4c9-59d0-4e89-bdf3-49ccba372275",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f01bf9d-158f-4372-8efb-0b1278246346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdab1295-1d38-4a04-b3a9-c0d20216e58e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3fb44b-66ed-4213-9809-d631b4f134da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9038383a-2125-49a9-a16f-3edaef9b8f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be7d7b3-db61-4e48-b31a-ac5701f35cf8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342f1884-9657-4bd5-8825-23989779e82c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f31b1ae0-cb57-417a-96e0-5e0a21da945d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45bfa96-72b6-40d1-8b4a-b6e5fd5f1697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfea910f-1d54-4bf0-9493-6a170703f558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79116cdc-7dd8-4658-a367-4078efedd8a1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02855083-6ec4-420b-a6d1-ad1bd3d383ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39771c7e-a38b-4098-9a1f-236bd4ce75ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92efa725-dbc9-4b74-a800-b7e1a028a727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23bac5f-87e7-4cc4-b776-995499380e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02618c0d-e13d-4719-9fb3-c5ddd9c3245c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed99a83b-736a-4b9d-bbbd-0f07831b877d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35bbefb5-9815-4768-a75e-7c53334e08e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b712888-0397-4d4c-b8d4-7dd00fade161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b1ac07-ff5c-42b2-91bc-057f2bc54fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0743b05-b848-44c3-bcb2-44c8eba17ca0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c72975-403c-4362-a760-0e266c3dea6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7135b75a-1546-441d-a95b-9d8096dd6bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed70143a-8049-45f8-8f1c-fbafda46b199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4574dd65-fc4f-41a0-acd2-e3bb2d39a8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7af737-a467-425a-aeff-e180a9149dae",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279cc358-4d5a-455d-a9cd-5de54778a926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4479ad52-378a-483a-89b4-e3f15a9ae973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8091c295-40bc-4bca-9d8e-99e860aba5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d98be86-4dd0-4bda-9781-d59a18db158f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdc7bde-222b-4cd9-98cc-8705cb131df4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27df3f4-b711-4896-9250-06de96aec045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39602bae-9dc2-49b1-966f-bc6af5776f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8a4796-1e64-4f68-9985-2b7a3950f0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a804165b-3f9a-46d5-9bac-4623a681e209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2281b44-8a7d-47eb-9fa5-506164026b8c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7204eb68-ebbc-42a8-84c7-307a8316af3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d374eb-7e30-491e-ba7c-86a9a19828aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ca9fbc-5be5-4c23-bd14-844123976624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d0d8e2-23e3-4c93-8f0a-b3b6e45d9030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c689ca58-954c-41a9-960a-aaccbcc4a283",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014f64b3-8936-46a5-9220-4d3f0f4a5606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d2fb7b8-ecff-49dd-a28e-3316ca1d2088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e82f972-66b5-4a0e-806d-5f6a1839efbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a7079a-83c5-42a2-b918-ac63e632ed97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4ef95d-4d94-4b52-8e22-f51c0bc67e83",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c59112-9207-4527-8e1d-93458666185a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31c54c8-cc2c-424d-a27d-d12a74420f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc79513a-8ea1-4c9f-8400-dd6afc4fe5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48afa27c-601a-4def-a5b7-b569a76906e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b21c25d-3462-42b3-9a5b-d5114a40b3d3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b890ce46-6295-42db-8dc1-4677687a3b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49209cd7-87c5-4c7a-810e-033851df5bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c579c6-cd13-4ed9-ab85-a3533e4b7083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fe27be-9fbb-4125-80b6-b67e258645d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42364298-818d-4222-ab42-610b91a045ef",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e698711-a082-4212-8671-ff83de70a129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691788d9-2260-441d-bef0-d4751397b013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef7025d-7fcb-41d4-a502-ecabc42b8767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2278541-5561-429a-8694-326f1f610a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091df7e1-7a85-4349-bbf9-01c746f67afb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52d6482-78ea-4fb6-aaa5-219755bb4376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e93a8ca8-2619-4b91-89a2-13d33d023306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d82dd8-df86-4f32-af0f-d043019c1285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5110e8da-62b7-41e9-8905-4bbc7cc53ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d4ca8f-3993-44db-8abd-46e17397b827",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7042e6ba-6643-4553-b746-5a574695cc2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f33073fe-ab05-47a1-a8f0-4819e90a6095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b651ed79-5d82-4532-9d8f-ca929a125d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5208b9fd-16c1-4fc8-96b7-0a5338b129dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfafc9ff-f93b-41b9-9b87-e8a938ec4cda",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacbbfdf-f0bc-4c0e-93e2-5e2497c7a2f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea73f1ae-b799-47da-9b0e-7ae22519da75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89738f90-c45b-4854-9b6c-84b00224572a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981e7aa9-2f82-4ef5-b0a6-0a9de580ebc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3222e886-7398-49ad-a660-aa667ff3a937",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661dd8dd-420f-4815-895c-f8508302cb51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b0f0ba-62c9-4f0b-8799-b84e88704c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918b859b-2cd0-4b53-87a1-e413bec9f8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355a5cbc-d524-463c-a153-6461bdb91488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7307becf-5977-4d95-a7f2-229819e74101",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8441b0d-70e1-46e0-9cf3-fc03ab3d68d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3401de76-bb15-4ffb-ba17-1681b7b24823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92bb280-bfe0-4d84-8df0-12444d1c223e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85307aa9-858a-4390-a342-400c1d71667e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14b4367-500b-4a85-9bca-977db6ba0173",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40056f5-19ba-439e-94b2-882216d3a4ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c0c20d4-51c7-4706-81b4-a96041cbe2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f06f1c-9dc4-4194-bd92-f92456148448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a87c04-2652-4d89-8747-905ca5311ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ee141a-29d8-4819-b520-866a32454038",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36446c16-61f1-4b24-bc66-661a506856df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d46409f-9d69-446b-852b-fe61646e96dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67d8ebd-aed2-462a-8f0d-e4f286fba313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd761905-37f7-47fe-8c06-37c54d777722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1ae285-b0da-424a-848b-337e52b9476a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8e70d5-96fb-4086-b672-1db7acee4851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "003e1e52-379e-4d6e-b6fd-836b91dcf5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85776f34-d7e3-402c-b0f6-ef1f616e52fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec2e40c-8da2-4093-9939-61efe2fb747b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7da571a-ffad-486e-8731-f5a5466bc25c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ebefdb-a9c0-4189-9803-ea9833e36281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3512321-e0f8-4deb-a113-9c12d3beade2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72385caf-abbd-4a32-9266-83091140d083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e221af74-6e1d-4485-aaa2-7d9021c48591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9388f1fb-23fe-47c8-9108-ddd936c79494",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a4ddc8-9a12-43c9-b1b5-64ab98620924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea6646e-0773-42f3-b23d-c1842b28c2b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f5279b-be53-4e46-8573-39338032bccf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c633d49-792e-4094-afdd-76354dc420c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe865ffb-2e8d-43a0-8e88-572bfd41dd1d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95060ae0-008e-4023-9a2f-080f21d79536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045a9b95-2c9e-4ddb-9cf7-fb7b99e7fc6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555da73c-f4fe-47e0-a2e6-2ca1cfc6e8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8688fd9-834a-410e-be10-93b4f9f01fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e1079c-4da0-4965-a32a-c7f49da4f1f1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b414ca72-15b8-4116-9555-a479d33d038e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67e5cbae-33cb-4299-a40e-aaf0511921f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfcf0df-0101-44b4-8a14-25f3cc150d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d055e96-edf0-4e7f-8039-eab301e824bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a226fc81-9fe8-4f0d-a276-9007b7a3b6ba",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7e69a2-bc3d-4228-9118-b4b45cc0c587",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a915aea-e567-4d0d-a020-2e9cca68bf72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad13546-1e76-4a00-a58e-9a7bf0c16d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ae6ec8-bcec-4a98-9407-ba5765351b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005ba2f0-f14c-4fb8-800a-49d388d2398b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1801692f-7e84-475a-bd00-c17de508ae2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfab691e-7784-4779-be4e-8c604e8c7e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf40e0c6-c354-4176-a09d-0d2f83882e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465d4211-408b-4baa-ad42-4ad61c4ed34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0722f9-1895-4c13-aebc-6ff47384b576",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64253221-9841-4580-ab19-b5a0d942d4cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9303851f-d94e-4627-a996-afd751037cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cb97fe-9ef6-41ff-b021-0e9f33009d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49bb99c5-08a4-46c6-9b57-7cb3830743fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c1f90e-b56f-44f0-a685-8f03044cc863",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fee6e9-bf72-4e3c-a817-600af130218e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c6a1d3-63d9-4dbb-9260-df37b108e762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5167f8d-2594-4582-bfc5-cce7419056fc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818d5e02-9823-434f-9c19-e98a19a9bce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933c015b-9ee4-4cb0-8b1e-d31cb690248f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cc00d9-2596-4ced-930b-eda80eac48f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3520c6b8-9b2b-4211-a674-4087d6c63d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88d0a8f-0446-4b2f-8ed2-c54966696aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2bc90e7-c325-4bbc-888c-3e3968761dcd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "427f20f8-9c19-45c4-a7cf-11c5b7140858",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a913d1af-d59e-4d50-8cba-8198e9eb120c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f083b7ad-efa6-4ab7-8ca7-1079b6099262",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33a6787c-b166-4475-837f-7d23206a56ab"
                    }
                  }
                ]
              },
              {
                "id": "171a6b27-89dc-4c94-8bd1-700bc53178ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4bc3202-fa08-4ec6-8846-926ba7b57467",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc371601-233f-48fa-95d6-726f32e7817a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8801a9dc-4c01-4f9d-bdd4-cc347fa267b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc15426-8fe6-48ba-9fc4-baead5ed3037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05d444ce-2dda-4c9e-8cac-a3a44b2a54de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1114aea5-031c-419c-98fc-c368e8f30016",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a5d7694-dc11-48b5-a881-42d27c95c509"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f4b4680-e1e1-41e4-a1cd-197a52fcd4d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a23d4e52-72b5-47d4-bc57-b0db2ea79e1d"
                    }
                  }
                ]
              },
              {
                "id": "285c9106-fb8d-45b4-befc-41d388195a0f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8061b0f5-50aa-41aa-b112-cd469718cfb2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c55e6ad-65a8-4d80-800a-68e2a75f253b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "33d9fc30-5178-4847-aec4-496a0770846e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfe83aa-c0b1-478a-b022-fa99baa7b983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d8e558-9eb0-4dc9-8520-24a5e93fe2e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c312f756-6d0d-420e-8362-1b7e54f5df54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55dc1fa8-b768-4d54-88b3-d67c5926b787",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cb6ba33-9c6c-4274-a319-0cbbb2421385",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47a2e449-bcce-4315-b1c2-f61ea21b46be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e89bc7e-e386-42ad-b58c-50ce7ac080fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ce239a1-b497-4bd8-bba8-9bb04c4d8f6b"
                    }
                  }
                ]
              },
              {
                "id": "4f2f1d59-847d-4c67-a7ce-6d1b80142757",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "216ed3a3-2ee4-4d64-8d6f-c1dc5f26fcb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f38b2a85-c982-4f7b-9aa9-e5aec443c7c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1675de27-8c54-4597-a68a-7c96749cddb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f6b8fc4-f2b7-4b45-a825-900b4582065b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f83d89cc-8a94-4b9d-9b84-943e749d86a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "556f2f74-edca-4a4b-a83f-38d7f4a4c738"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59369eed-8024-4490-95b3-03a03a6fd897",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7597a1a-86bf-4710-84e4-a4fc8735a119"
            }
          }
        ]
      },
      {
        "id": "ba64cbd5-bc1f-46ae-a472-f75df3097705",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eae0f65b-6de4-486d-b65f-0bc078b9107d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc0d1f33-bec5-4919-8061-b56295d99dd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13ed0cea-1d21-4c9b-97fa-7632a2d0cc26",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a8dda6-5140-4949-9d11-ec29632cca29",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0c5d9d85-f228-4611-9d09-62fde3afa5e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07aff49b-6fca-450d-bff6-3bbd695ea5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f754afc0-ed1b-49e5-9695-9585400d9e41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "270370da-bb7c-4a86-8218-218a8d8e76e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "848fd5c7-1193-4803-b921-87aa21c0c272"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c68b272-dfd0-4162-bc5b-11100aec0cd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb0c34ce-4873-4cf5-a57a-b521a6d87b74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "872cf350-f7a9-4277-85c4-3172e11b6e8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1d4cac28-b5bf-4da1-b0c9-20c5a3d28877"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1012b23d-5bd0-45e3-9d5d-ac3e9beedd37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cbc68f5-8c61-470d-abd4-a9817970d4fb"
            }
          }
        ]
      },
      {
        "id": "6d2e21a2-638a-4744-9fa8-b1b7df294c04",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e79d82ae-7754-4620-8e39-562b1eccf4ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc401652-c68d-417a-a3f7-3a6078b8d9d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c56b0a34-e498-4db6-8eb0-f23dddca953d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de431fd-76db-4446-a596-fd0440b1dd43",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23d729ca-5843-47d0-9f52-e2ed2ce31cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f9b685-6a71-4e7c-b325-24677495da1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88ca6e12-b617-43ad-9f3b-a2ceafdcf714"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fde74107-f0d9-47a4-bc7f-7899c2019c75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0003d40-b61f-4481-8cd5-5d07a15d2887"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84fd3619-0aef-4a9a-ad99-25fd715ca9e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08ae5399-de1d-476a-9a6e-3d2d52db5066"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5213b8d-3611-4957-a56d-df66ecf6596f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "97fb891e-ac2f-4d8b-9803-f3002cf72f86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6cd3cf6-1884-45a4-b891-04e7f0a3bffd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95f4242c-1a9b-4d78-8240-76829ff17e31"
            }
          }
        ]
      },
      {
        "id": "f3bd2e19-3312-4700-976d-d0c4a5a80608",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "68991001-4004-477d-952c-5a1a5827c343",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adf99d5b-473a-498d-af42-36589ce94d54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8464a78c-cc2b-4dfd-82eb-db3c71f15818",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc8e674-4956-4095-9ebb-d40c0ddc4a55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37760ed6-42be-4084-863b-f3aa3bedcad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9eb944c-4d2b-417b-a833-ed2149f74cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b58fffb-ca96-47ba-a928-0bf55dcd9faf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31ab9329-f64c-4268-a6df-df18eb9d0c5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9a447a1-1418-49e0-9820-b387693ec22f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "adef0f76-76ba-4eca-bb7e-f9b2d73d11f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fb110af-c597-4ae2-aec4-ca5dcdc46f4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3004c923-b773-40ea-b845-fbaf102bf899",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ae985d6c-a93b-4f26-b1f7-e5c6f964da2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c9c3224-eec6-4693-9aa7-474f2a684d42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b20d4fc-52dd-4b2b-ab4d-6ec553bcee2e"
            }
          }
        ]
      },
      {
        "id": "faedb060-7348-4ee8-86f1-732b732a8bce",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e78823f-93ff-42ae-a1d6-66002c2c88fa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ee01047-c4c0-4896-848b-fe1e84e7c4d7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "db007fa0-b6ab-4a36-a9f1-c781cd483ad4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "baf2147b-7689-4387-9403-6283a56bc41a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0206cd6-ebbf-4764-8335-0ead0bf5b7f3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 153.17063492063497,
      "responseMin": 22,
      "responseMax": 13758,
      "responseSd": 892.187924325529,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725410570023,
      "completed": 1725410616574
    },
    "executions": [
      {
        "id": "a606f57d-c537-44a0-8d45-a634cc9f3bb7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "38e3d280-72ea-4660-a605-3a1fb707d812",
          "httpRequestId": "e817d521-45d9-465e-ae59-40717c87480e"
        },
        "item": {
          "id": "a606f57d-c537-44a0-8d45-a634cc9f3bb7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "33eb8790-4094-4abc-a859-a8cbf961089e",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "0b511d43-33bd-4561-822c-42535bdfe1a1",
        "cursor": {
          "ref": "7ed4253c-e55d-4edb-917f-84d59c6cb6c1",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bd5f27ea-1db2-496e-a3cc-d4bbfdb3884b"
        },
        "item": {
          "id": "0b511d43-33bd-4561-822c-42535bdfe1a1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e5b3597e-1970-4407-8d21-d6c141f33228",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "e9a2acec-fcad-433b-9d80-547e96459997",
        "cursor": {
          "ref": "f867d88c-abbd-459a-915b-1378de6becb4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "781c3847-4c71-4325-8d13-af555e5a857a"
        },
        "item": {
          "id": "e9a2acec-fcad-433b-9d80-547e96459997",
          "name": "did_json"
        },
        "response": {
          "id": "e60b1661-9735-426e-9dcc-068fdd9eb8d7",
          "status": "OK",
          "code": 200,
          "responseTime": 468,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e641c8-9e72-4032-b3d6-a94054a3deac",
        "cursor": {
          "ref": "fbccc656-f9c9-45a7-80b0-25ebaa800c34",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bea0894-1e21-4231-a7e4-06cb4ea146b4"
        },
        "item": {
          "id": "e0e641c8-9e72-4032-b3d6-a94054a3deac",
          "name": "did:invalid"
        },
        "response": {
          "id": "1de7b4a6-981d-4d4d-8f48-0af07b268773",
          "status": "Not Found",
          "code": 404,
          "responseTime": 571,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e641c8-9e72-4032-b3d6-a94054a3deac",
        "cursor": {
          "ref": "fbccc656-f9c9-45a7-80b0-25ebaa800c34",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bea0894-1e21-4231-a7e4-06cb4ea146b4"
        },
        "item": {
          "id": "e0e641c8-9e72-4032-b3d6-a94054a3deac",
          "name": "did:invalid"
        },
        "response": {
          "id": "1de7b4a6-981d-4d4d-8f48-0af07b268773",
          "status": "Not Found",
          "code": 404,
          "responseTime": 571,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76376364-c7bd-4ac4-940a-2a77768a6140",
        "cursor": {
          "ref": "ff93a550-80b7-454e-acc7-225a8d362fef",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f8dd7c59-42f3-4fde-8e3a-da813468da7f"
        },
        "item": {
          "id": "76376364-c7bd-4ac4-940a-2a77768a6140",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7fa14a05-220a-47cc-8ed3-30a89b424de5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9a8889-b31a-4267-81eb-f2ae48ceb9bd",
        "cursor": {
          "ref": "7cb7c095-265d-4662-b981-19c72f19dda2",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9816c0d4-db09-41a0-a605-300edc32b6c2"
        },
        "item": {
          "id": "aa9a8889-b31a-4267-81eb-f2ae48ceb9bd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6fdd1c70-6dc4-4d5e-8916-d3a583806a6c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfca554b-a9a0-4389-8449-bb2714218658",
        "cursor": {
          "ref": "5da7b2e2-a39a-4aca-bec1-b1a563d9b03e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fa942ed2-dd69-4a98-bd73-d6eb7ca34f4b"
        },
        "item": {
          "id": "cfca554b-a9a0-4389-8449-bb2714218658",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8ae62525-c7ad-4c33-942d-474ed30dc872",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4832e33b-caea-4f40-81a0-acc2faa6392c",
        "cursor": {
          "ref": "e410b41f-9584-4acc-9c97-fc6c72858f33",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f70ee55e-6b6b-4d51-b581-c514a671bf89"
        },
        "item": {
          "id": "4832e33b-caea-4f40-81a0-acc2faa6392c",
          "name": "identifiers"
        },
        "response": {
          "id": "c7d451c4-dfad-4452-96bd-f04ef60d2e74",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55064c04-0be1-40d3-8adb-d7188d1bdeec",
        "cursor": {
          "ref": "367f0318-1bdf-45f8-877c-2e2a12d1d596",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "25e2bf99-311a-497e-a8d0-eb86a399de45"
        },
        "item": {
          "id": "55064c04-0be1-40d3-8adb-d7188d1bdeec",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "19a3c6fe-4380-46a5-afd8-afc1053be5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960291d7-4df9-4183-8c4f-485c88e673a3",
        "cursor": {
          "ref": "ec00eb3c-0e56-4fbf-a391-453b5eb2916f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "39e492fc-cbe6-44c7-993b-60670e4c7df2"
        },
        "item": {
          "id": "960291d7-4df9-4183-8c4f-485c88e673a3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b42ef325-05b1-4a90-ba38-1addc5675d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b852bf0-9a40-426a-91eb-223faff24671",
        "cursor": {
          "ref": "b4e457d0-5b65-46bd-b49e-7096f1e41d56",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ab5f6ff5-3f2a-446b-83a5-788a191fd089"
        },
        "item": {
          "id": "6b852bf0-9a40-426a-91eb-223faff24671",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cf7a367f-eb85-46ce-96e0-3c4f960d74bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636fe057-7f51-497f-bb27-1c334ffd0407",
        "cursor": {
          "ref": "5eca7dab-9d5c-4a16-8992-f9d53ed34a8f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "183cec05-0582-4511-9450-440033ff09de"
        },
        "item": {
          "id": "636fe057-7f51-497f-bb27-1c334ffd0407",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b685fa16-cc66-40dc-b2c4-873e7a975424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265a4b92-2956-40e6-a3c2-dad9293398d6",
        "cursor": {
          "ref": "c124c8ed-5ba2-400e-98d2-a4fb8e0901a6",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b2230409-24cf-47e2-a6fa-1946a87e9301"
        },
        "item": {
          "id": "265a4b92-2956-40e6-a3c2-dad9293398d6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "90f92fe3-ade5-4887-9e49-f83a9dc41612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ef8676-5306-48ca-a200-ceb13941f2d7",
        "cursor": {
          "ref": "81701cf4-084f-43c1-b6bd-c59be318148f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b4846f41-84ef-4e1d-aacd-fd40443b8757"
        },
        "item": {
          "id": "15ef8676-5306-48ca-a200-ceb13941f2d7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "413b57e7-fdf7-451d-b013-237694b90de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee4a0de-7833-47d4-add4-2c3021b25bdd",
        "cursor": {
          "ref": "2ac55514-a88f-4750-91ce-1a4a05df7cec",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "93c3096b-4133-4745-9b56-1be426739b92"
        },
        "item": {
          "id": "7ee4a0de-7833-47d4-add4-2c3021b25bdd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e0e07d67-29d3-4f71-80ee-ad9ad7d14f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09eeee8-6196-4d79-b67d-d7dd39d65a5b",
        "cursor": {
          "ref": "a7b22288-8701-48e2-b2e8-ae3400c1656e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9b91e6a3-8e04-4e25-ba32-b80b27f28922"
        },
        "item": {
          "id": "d09eeee8-6196-4d79-b67d-d7dd39d65a5b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5edc0d80-8565-4d79-98db-e0493ac39184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98831390-8231-47cc-b812-ef37a93f578f",
        "cursor": {
          "ref": "6106472d-ff5a-4607-ae10-f13c64bc3ddc",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "09dfea5e-e45c-4be1-b164-43bee7fcff2a"
        },
        "item": {
          "id": "98831390-8231-47cc-b812-ef37a93f578f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "537de979-12ad-4698-b9bd-5e8bd855e854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa887ca-d423-4a0e-9bfe-ad6e80d64188",
        "cursor": {
          "ref": "5e03e45d-199a-480f-bccd-d18f95bd1881",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "11a8a1f9-062e-4ebb-a3db-e04d742049bc"
        },
        "item": {
          "id": "6fa887ca-d423-4a0e-9bfe-ad6e80d64188",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d3f9f559-173e-49f4-af88-e7623cf403f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12f3e8f-7733-44ac-b33f-bbcc48ef5526",
        "cursor": {
          "ref": "266b8310-79de-4477-9a29-29135a7137b3",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "309a6087-01b4-4889-ba94-a5b3e4855aca"
        },
        "item": {
          "id": "b12f3e8f-7733-44ac-b33f-bbcc48ef5526",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7db8a052-07f6-4881-ab79-3853e84e58b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c761a991-bedb-4892-9230-72b40fa0f5df",
        "cursor": {
          "ref": "103a8a42-b70a-4a45-b04d-07ed9d66358d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "de3917af-ac1c-4db3-94d2-05f384ce1426"
        },
        "item": {
          "id": "c761a991-bedb-4892-9230-72b40fa0f5df",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "545afe41-fab0-4192-8f0c-083eb243d16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc69e030-3659-4080-bf2b-25a1966a27e0",
        "cursor": {
          "ref": "af6d32bd-322b-4933-ae5a-df60eee4eebd",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c023304b-5fce-4fd8-bb60-83f81be120c5"
        },
        "item": {
          "id": "dc69e030-3659-4080-bf2b-25a1966a27e0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "08361963-2aa6-4247-bd5e-572a6e6f3325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc24b38-e7b7-47dc-8069-4b4a24400586",
        "cursor": {
          "ref": "781f28b2-eade-454e-a8ca-e6b17788de95",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4ed7fe92-bcb9-4e77-b513-ef4c95eecbc7"
        },
        "item": {
          "id": "6dc24b38-e7b7-47dc-8069-4b4a24400586",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "46af189b-d51f-4870-bd8f-2327b00da6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb18331-1455-48bd-98d5-6ba3f4753b41",
        "cursor": {
          "ref": "d9cd7e75-ca6e-4da3-b2ed-ba0e55e1dff4",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4a6de939-9933-4fec-831f-9b2dd778e686"
        },
        "item": {
          "id": "ceb18331-1455-48bd-98d5-6ba3f4753b41",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "feea7773-9ce2-4133-a56f-6b7226a04f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f2f7bc-9495-4975-ac5c-0d4e4a25de98",
        "cursor": {
          "ref": "6d18b427-1a18-4c0a-b205-fca9ade4fc70",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "76a821d2-c4ad-4f1a-aa2f-83b976065001"
        },
        "item": {
          "id": "b4f2f7bc-9495-4975-ac5c-0d4e4a25de98",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b08fff0f-8469-4c5d-8806-0efecf4871f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4b724d-e31c-4a4e-8895-65c18b7cd631",
        "cursor": {
          "ref": "358c6590-9eca-47d1-9f55-c4a9174af0b1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4d26c730-3b11-4afa-a47e-ed33cdcaadd4"
        },
        "item": {
          "id": "cc4b724d-e31c-4a4e-8895-65c18b7cd631",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e1b1779a-dfd6-49b5-a82e-c0e8619547ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c87c9f-b3c0-4544-b23a-132d48e00906",
        "cursor": {
          "ref": "c6a55ad7-1232-4912-9471-ceacd92db473",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "08992e15-9eb7-440e-a9dc-d75d4d21b8e2"
        },
        "item": {
          "id": "97c87c9f-b3c0-4544-b23a-132d48e00906",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2fe9a1c4-211d-4617-b663-30a80cdf002e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3057152-2ea7-4eb8-af4b-6ebd60c3ed63",
        "cursor": {
          "ref": "de732e19-f31e-4514-9e4c-3db399c9af6b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4f497eaa-2c2b-48d1-a224-67a563c975cb"
        },
        "item": {
          "id": "a3057152-2ea7-4eb8-af4b-6ebd60c3ed63",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a0ae3e20-b67f-4015-95c7-79ab5a5f51f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff6074a-1d67-4828-b051-41e661a675ca",
        "cursor": {
          "ref": "f139ccbf-2e44-4149-ab69-8c439bda5962",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "eb40a1ee-b687-45f2-b32e-0d3144ab62ce"
        },
        "item": {
          "id": "0ff6074a-1d67-4828-b051-41e661a675ca",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "045c741e-1b23-4e16-8852-3db1d018cbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc03a64-83fa-4c76-89ae-6a06429c2259",
        "cursor": {
          "ref": "5f9ef66e-52b7-4286-9fc3-671989ec5020",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "325dfc11-6b4b-4797-b6e3-ff53498db6db"
        },
        "item": {
          "id": "5cc03a64-83fa-4c76-89ae-6a06429c2259",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e1a917dc-5b09-4040-beb4-4fbb42d7247d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66f85ff-a904-48e1-a644-a9ee6860d867",
        "cursor": {
          "ref": "b85d04b7-1f4d-4bb6-b5ad-2c7785e03553",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6bd94881-7823-42ca-8dc9-d640c45090f7"
        },
        "item": {
          "id": "e66f85ff-a904-48e1-a644-a9ee6860d867",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "eb21b694-ee21-49a9-844a-1573f9a79377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b227450-c0ef-4394-b83b-3c4de3a0d67c",
        "cursor": {
          "ref": "114ea39d-f5c4-4bb9-b010-9c35fb9a07a4",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7df5646a-0176-443a-9d10-77cf3db2898c"
        },
        "item": {
          "id": "1b227450-c0ef-4394-b83b-3c4de3a0d67c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "16c1bfa3-1784-4039-b60d-cbcea9366f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b9b3c4-06f2-4afd-82ac-b5c087b7ad05",
        "cursor": {
          "ref": "ca5c067e-b8c3-409e-bcb8-a10728a6c7f9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "01a1ed5f-6d5d-4d2f-a9c3-c9c92b5a825d"
        },
        "item": {
          "id": "c7b9b3c4-06f2-4afd-82ac-b5c087b7ad05",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fc7a14f7-7aa0-4807-b61c-77d9d8ad7586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5237b528-fd6c-4a50-8628-c7bc69db0716",
        "cursor": {
          "ref": "cf765b92-ba70-4271-b25d-f3ae00e69e30",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "53eef849-4d86-4f50-bd57-d992157bf12d"
        },
        "item": {
          "id": "5237b528-fd6c-4a50-8628-c7bc69db0716",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5b3530a1-686b-418f-86b0-3979902a9605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b79336-2a4c-4a43-98b3-2a0a892da7fa",
        "cursor": {
          "ref": "9fb71dc2-422d-444e-8965-e05ccc93ea4c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e731b5e1-d1aa-4ef2-a863-16bd17d3567a"
        },
        "item": {
          "id": "97b79336-2a4c-4a43-98b3-2a0a892da7fa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1b3ea3cc-1d29-4380-b523-2d57062320b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43a5161-8887-40a2-9a13-a0490e4da02e",
        "cursor": {
          "ref": "c44062a5-6c00-4361-8ec1-baa6bbf211a3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "086757fe-c945-43ef-9c63-f4978467369e"
        },
        "item": {
          "id": "c43a5161-8887-40a2-9a13-a0490e4da02e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "60a0092e-cc6f-426a-a254-85e11b5410cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273923ea-f098-463d-8e5d-db6c66893567",
        "cursor": {
          "ref": "16ce08a6-199d-41fd-841b-75e83efecc35",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e2617215-d5d1-45d2-8a79-e6f7b475d974"
        },
        "item": {
          "id": "273923ea-f098-463d-8e5d-db6c66893567",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c1d06b21-d0ce-4daf-9282-443492f7c84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b955c9e5-e503-4e5a-8ab1-73454944ffcc",
        "cursor": {
          "ref": "f2d0b0c7-c709-4e2d-a3fc-7a86073b8d4d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "177cb6f6-d265-4eb2-8b8b-68431eed0f6b"
        },
        "item": {
          "id": "b955c9e5-e503-4e5a-8ab1-73454944ffcc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "482df1e0-b320-4da5-b661-1398b938d334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e6ebf8-d9cd-4c2f-90ce-32d018f69634",
        "cursor": {
          "ref": "8c7f5374-a2f3-4af9-aa93-4f7ddae029f2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4dd2d103-8df9-4994-90af-5a3e5ea9fb00"
        },
        "item": {
          "id": "73e6ebf8-d9cd-4c2f-90ce-32d018f69634",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e0099193-bf30-4461-b84a-e80af7f1a7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd98aa0-c4b2-4141-8f3e-76623aa3e3dc",
        "cursor": {
          "ref": "f1946906-4476-4ce3-a176-180cd1f313a7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3d14d0ca-4e81-47a9-9f82-462e6ceaa605"
        },
        "item": {
          "id": "9dd98aa0-c4b2-4141-8f3e-76623aa3e3dc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8be7ebc1-7ace-4492-97f6-b55b026b898b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe713c0-599a-42c6-9faf-6ff8ab7addef",
        "cursor": {
          "ref": "81662e02-e248-4d9f-852e-527e81e71e93",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c0a6c321-0268-43a4-ba56-b97ca024bcc4"
        },
        "item": {
          "id": "efe713c0-599a-42c6-9faf-6ff8ab7addef",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a37caa0b-a696-4326-9e01-28c7683a2132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b881b81c-568e-42fd-bdf1-5c1babe61c55",
        "cursor": {
          "ref": "79f8aca6-f49a-49d4-b6fe-2e6b24b05b32",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0ca5bba3-3f48-467b-bea7-1a0767a33306"
        },
        "item": {
          "id": "b881b81c-568e-42fd-bdf1-5c1babe61c55",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ce7ae7af-b3da-40cd-8fd2-5bff0840f710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b90553-8b7a-4707-aff6-5a49ef2130ca",
        "cursor": {
          "ref": "17ef6153-ba05-4bff-b1e3-d094c53afee3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8a7f08c8-77ae-47b4-87b4-c568c4cbc751"
        },
        "item": {
          "id": "92b90553-8b7a-4707-aff6-5a49ef2130ca",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a20bc106-2bed-42b0-b5f0-8ca5320f0bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dc2080-98e1-4d98-98f8-285a950d6cae",
        "cursor": {
          "ref": "b1ca8128-73b8-4627-9e8e-1070e0584289",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "087f7ed4-8988-455d-95da-9e30d83df4e9"
        },
        "item": {
          "id": "22dc2080-98e1-4d98-98f8-285a950d6cae",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "22c3be90-cd4e-4f7f-969d-2cd3c657ad1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e1c392-d6de-4b60-b5eb-ba009ef0e9c6",
        "cursor": {
          "ref": "bbb0c810-2937-4f7f-9230-679aa7de0adf",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a9a5275a-9ef6-4fd4-9e33-a6907ebc715f"
        },
        "item": {
          "id": "43e1c392-d6de-4b60-b5eb-ba009ef0e9c6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3dc1d0a6-3075-411d-98dd-c191428241b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdeb441-9d06-42d7-a724-30d381847860",
        "cursor": {
          "ref": "b242233f-b45d-4ad0-b3fb-ee142c06e3cd",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "baf70fd9-f72f-4e07-b03c-8c5972c50d44"
        },
        "item": {
          "id": "1cdeb441-9d06-42d7-a724-30d381847860",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9e8b9b2f-0ba7-4efb-a65d-d118390ccf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec655d94-1481-4614-952f-0022adbd7e6f",
        "cursor": {
          "ref": "e5b16525-f17a-40bb-9dfc-aaf04510f9bf",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9de91776-45ea-46ad-9c52-5872a42bca75"
        },
        "item": {
          "id": "ec655d94-1481-4614-952f-0022adbd7e6f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e6603cde-f890-4131-8beb-3ee7fd5491b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9205c0ba-1fe0-4151-aef3-eb05c26a7644",
        "cursor": {
          "ref": "09ec4077-9bf2-4078-8d2f-6a664ca83151",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1d80f3ed-cc1c-44d8-bb61-65741bac1c4c"
        },
        "item": {
          "id": "9205c0ba-1fe0-4151-aef3-eb05c26a7644",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bfa8ea91-8a3f-43cc-8d7a-930429258277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5945d6e7-0df6-4aca-96e9-94206bbf17da",
        "cursor": {
          "ref": "2711a69b-b06e-47dc-80d8-7eee70c98309",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dedd874a-4b87-4487-8c3f-3d8fa5f9e2c1"
        },
        "item": {
          "id": "5945d6e7-0df6-4aca-96e9-94206bbf17da",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3088191d-55dc-4c69-b84e-348a2fd1169e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4199e046-558f-4cc2-b5ba-b2bbc8abd47a",
        "cursor": {
          "ref": "8df01aef-d237-49e0-881f-7514111a3310",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5b7e1065-37b1-475f-b55f-ec92df158c89"
        },
        "item": {
          "id": "4199e046-558f-4cc2-b5ba-b2bbc8abd47a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "02fd7c2c-8405-4518-974e-a598204a207d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f63aab-9a91-426f-8e90-a4986500d6be",
        "cursor": {
          "ref": "dd816186-47f7-4c90-bc3a-32c1b054e33f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "061e8e55-77fc-41d2-ae0a-4cbdf57cf502"
        },
        "item": {
          "id": "a8f63aab-9a91-426f-8e90-a4986500d6be",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f999bd5b-3098-44ba-b26f-8f5013f72dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595cc09b-3981-4c36-bbb1-3fb483f9bd61",
        "cursor": {
          "ref": "bd218ae9-0e8b-47f2-8563-f3731cef2685",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "146d32ce-2660-460c-b618-db6286bae050"
        },
        "item": {
          "id": "595cc09b-3981-4c36-bbb1-3fb483f9bd61",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fae3a4c8-235b-401c-a3f9-d6793d875904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441c4877-ee2d-4ea8-9146-c04dddf3cbd0",
        "cursor": {
          "ref": "23b1cd6d-2f1c-41b0-8258-42753e29110a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e14e2a7-75af-4bf8-bc2a-5ea3899e7d9f"
        },
        "item": {
          "id": "441c4877-ee2d-4ea8-9146-c04dddf3cbd0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "770a3f15-bbd3-4b09-8f03-12f36229c806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4158bdb9-3625-45f4-a3cc-c4debf710f5a",
        "cursor": {
          "ref": "6e69c8ac-72f3-4933-a6b3-a47ead34b2ce",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1c8d53a0-b54d-4a06-b550-5a2a4827795f"
        },
        "item": {
          "id": "4158bdb9-3625-45f4-a3cc-c4debf710f5a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "402f29ae-cf23-4f50-9e6f-189258c432b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1f888a-d857-4d7d-8a61-d2fa036fd37c",
        "cursor": {
          "ref": "3830af9a-89f9-41ac-aad5-511a881e8c39",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "25bde3e3-9e57-4a78-ada2-9cbde1f3dfc0"
        },
        "item": {
          "id": "3c1f888a-d857-4d7d-8a61-d2fa036fd37c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d077586f-e195-43ca-a8d9-1be5001f6cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe18dfe-3714-4b89-91d2-47ea17258c95",
        "cursor": {
          "ref": "ecd99f42-984c-4bbe-a3c7-ba73d2fa0458",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "27f9c48f-2682-4a76-b620-ed3cf6be06d8"
        },
        "item": {
          "id": "1fe18dfe-3714-4b89-91d2-47ea17258c95",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0c20a3ee-0900-40ed-a2c5-7d758c1657ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d37bb8-6e76-496b-b9f7-153aae82f3b3",
        "cursor": {
          "ref": "503b135e-f1a7-4737-b513-794867dc8b8b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0c595473-5099-4ae3-952a-5efed6dc82f6"
        },
        "item": {
          "id": "15d37bb8-6e76-496b-b9f7-153aae82f3b3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dc31b02b-15f8-4145-b42a-e895ec53fdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049b85b0-9de1-4061-b67e-e1ef324c38f4",
        "cursor": {
          "ref": "d437192f-4fb1-4e20-a51f-b412d91a5581",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4d5af6af-5cd9-432b-ab8f-c6593c7111a4"
        },
        "item": {
          "id": "049b85b0-9de1-4061-b67e-e1ef324c38f4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1cc2eac4-032e-4cc4-adc4-70b07c212dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fc93ed-3577-418c-8cff-8e35a017815f",
        "cursor": {
          "ref": "0f39536f-118f-41f7-ad0b-a8b18269116e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8b975da2-e7fd-4bfc-9970-f825ca3fcafb"
        },
        "item": {
          "id": "d0fc93ed-3577-418c-8cff-8e35a017815f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "475fec42-e68e-40a1-b601-92585efd0c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5608890-2a9a-4d47-a436-d65e2fc2fbf1",
        "cursor": {
          "ref": "f25e6f86-db01-4045-8523-6b820d7f4bb7",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "158f2ed7-4483-486d-9bc5-544c34038b7b"
        },
        "item": {
          "id": "c5608890-2a9a-4d47-a436-d65e2fc2fbf1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c7758f85-2c1d-4e04-abde-0d14d73bd83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ff3303-cdc3-40cf-adf2-2ab5227f4c80",
        "cursor": {
          "ref": "f6b64af5-24b7-44a8-9cd9-52b07998f231",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "668e8b72-15ca-44ea-bbda-d1125d030c5f"
        },
        "item": {
          "id": "f7ff3303-cdc3-40cf-adf2-2ab5227f4c80",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c53c0a01-84c1-4e5b-a5c9-dd9abf53114a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a7ea1f-124a-4b92-af3a-a74b9fa6bc2a",
        "cursor": {
          "ref": "2dfc56b7-205f-47df-9991-9cf77fee81e4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cdc88bb4-ef4b-42a0-af0d-36c2d4177f90"
        },
        "item": {
          "id": "03a7ea1f-124a-4b92-af3a-a74b9fa6bc2a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1bbc6b17-5be1-409b-9d1f-eb957435427c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850590a2-7b92-4401-9fe5-c1241dddd8b8",
        "cursor": {
          "ref": "ed027963-258e-43e5-b3fb-cc5916972bb1",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "521497aa-2224-44ad-bc12-6fe763edef56"
        },
        "item": {
          "id": "850590a2-7b92-4401-9fe5-c1241dddd8b8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ecf7f9b1-7713-4293-bd2b-e40920efc6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0a5941-50fd-43c9-a300-53e141d0a3b9",
        "cursor": {
          "ref": "96880f70-67b6-483e-8337-ef81532ca2e0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "002e3d86-20ba-444a-ac36-da0641bb1e5b"
        },
        "item": {
          "id": "8e0a5941-50fd-43c9-a300-53e141d0a3b9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c4c67e1e-4c23-4976-a907-5e083d938a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03945b7-2203-4ac3-9e9e-446719bc7d8a",
        "cursor": {
          "ref": "2408c276-c0dc-42ac-ac42-2025801a0240",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ebe93ae6-ed62-43cc-a4b8-ad0488e3ff65"
        },
        "item": {
          "id": "c03945b7-2203-4ac3-9e9e-446719bc7d8a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9486d46a-e0e4-4f89-8817-575d142b6257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e2a17e-5c42-409b-a504-5820754a1209",
        "cursor": {
          "ref": "a0d45442-c682-4eb2-9771-58f7433bcf57",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2acdbefa-991e-49c3-aed5-062b4b584068"
        },
        "item": {
          "id": "b4e2a17e-5c42-409b-a504-5820754a1209",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b1f30402-cf6c-462e-9259-35762d735d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84114c19-dcc9-45b3-bcb4-4786b581d9c3",
        "cursor": {
          "ref": "f199ee23-fd64-452a-a63b-bcd5779ce1a9",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1db8bba7-7d98-4be3-96c4-10389298ab7e"
        },
        "item": {
          "id": "84114c19-dcc9-45b3-bcb4-4786b581d9c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4619b0ca-a316-44b4-b396-9f70739edf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549f65f5-bc9a-4305-a407-a737dc9fb16e",
        "cursor": {
          "ref": "4cf6e012-b02c-4c3f-86d1-625a83278a5b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0b3c1116-5a9e-4367-8b04-c699ce6aae77"
        },
        "item": {
          "id": "549f65f5-bc9a-4305-a407-a737dc9fb16e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bdc6dd2c-7a4f-44f1-9969-1af9815efa69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d738926e-9417-41ca-91cc-2a483f5b4b7f",
        "cursor": {
          "ref": "30792711-47a8-41e9-b7aa-fd95a5f7cc85",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "572a7a63-08ff-4641-b900-6471b403393b"
        },
        "item": {
          "id": "d738926e-9417-41ca-91cc-2a483f5b4b7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4ded7ba9-017c-4b73-a9cd-2d2cd992bda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9718e39-b979-40b4-abfd-1e0b65508c1b",
        "cursor": {
          "ref": "46379c07-03a7-401b-bb7f-01f9d660d499",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "95bf2746-07e5-48c8-a251-1b2f36a77db5"
        },
        "item": {
          "id": "a9718e39-b979-40b4-abfd-1e0b65508c1b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f86b67e0-c770-4c65-a5a2-e1fa3a434ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fe5bc9-b3b2-43ea-940b-b37b38cb0089",
        "cursor": {
          "ref": "fdbb87d0-df5a-4fd7-b77c-20cdfd170ba5",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e43eaa77-40a4-426d-a211-b0844f1c8ce0"
        },
        "item": {
          "id": "96fe5bc9-b3b2-43ea-940b-b37b38cb0089",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5195ffb2-6651-4d5e-9106-b6a5b8f74d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0245b268-5403-4452-be65-ddfec1442ed4",
        "cursor": {
          "ref": "45fd748d-8a68-4acd-a731-15399d5b8785",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "158212ba-7bd2-4ada-bdb9-eb93e8ed8af0"
        },
        "item": {
          "id": "0245b268-5403-4452-be65-ddfec1442ed4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6733acdc-8bab-4f08-8f08-26b10f1f32e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87fe8e9-a2d1-48c9-a495-e35ffc9e524d",
        "cursor": {
          "ref": "b2673b27-8d2a-42fe-ab6c-875d23ba2ae4",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e2e2bf7e-13bf-43e4-8f43-f75da377721e"
        },
        "item": {
          "id": "f87fe8e9-a2d1-48c9-a495-e35ffc9e524d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "91ff957d-6127-4a90-a4f5-a80a8f74f139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347a52b2-68f8-4e7e-bddb-c5c7045b7187",
        "cursor": {
          "ref": "3e9d7139-666e-4489-8045-bffadc971041",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a2e714e8-a883-4dfe-8307-612ebe95c8ee"
        },
        "item": {
          "id": "347a52b2-68f8-4e7e-bddb-c5c7045b7187",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fc78549a-07af-4137-89cc-6b1bbedd2f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16677821-4217-465d-90b9-82e7f9ec29e3",
        "cursor": {
          "ref": "ebb48bb3-5628-4a65-84d5-719efdf2f649",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e9c64856-0579-41d7-8a93-3df47dd175bb"
        },
        "item": {
          "id": "16677821-4217-465d-90b9-82e7f9ec29e3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "106fb9c8-58c2-4679-a5bb-d00c312306ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e634be6b-7a4a-4fd4-bb6e-ef8088cc154b",
        "cursor": {
          "ref": "184cb15c-1571-4507-8d00-1b4e25dc6775",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c05c4663-78a9-45f4-af23-082b6ad85d0e"
        },
        "item": {
          "id": "e634be6b-7a4a-4fd4-bb6e-ef8088cc154b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ec1fd0bc-591f-4e8c-af40-0aff9717fef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d9caf8-be9e-4028-8602-cf311b895ff8",
        "cursor": {
          "ref": "40a7f32d-4527-4aa3-9dd4-05d2cf092f07",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "637d50a2-44bc-4508-991b-1c840a2dd823"
        },
        "item": {
          "id": "15d9caf8-be9e-4028-8602-cf311b895ff8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fc9e4915-8ad3-41a2-8c30-4af033c59e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8c8181-51b3-4c68-bd17-bba0e8c52882",
        "cursor": {
          "ref": "9dee1b08-7144-4699-a0e9-276731443918",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6882996b-cef5-4239-876b-00501ddde176"
        },
        "item": {
          "id": "af8c8181-51b3-4c68-bd17-bba0e8c52882",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "76eb38a1-c0ed-4b41-87a1-48a06e2f38eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7190fb-5800-4fd9-b6f5-44156c3889ec",
        "cursor": {
          "ref": "dc11e093-3ad1-4d7c-a738-3ab803c5874e",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dda99e03-7504-43d5-abbf-5196e1ecd4ee"
        },
        "item": {
          "id": "2a7190fb-5800-4fd9-b6f5-44156c3889ec",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2414b452-3c32-49d2-86e9-903f1d1ceffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f30a34-0a8b-44a8-9a6c-8e8d256cf368",
        "cursor": {
          "ref": "b13b1030-3edf-42a3-bae9-512041bc5e29",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d95b575c-0284-4403-bdaf-8d4b82c901c7"
        },
        "item": {
          "id": "b3f30a34-0a8b-44a8-9a6c-8e8d256cf368",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fdda9392-bf1c-4c27-9b9c-e8847be06590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13da8916-36f0-4860-9468-dd0950bc70b4",
        "cursor": {
          "ref": "1cb5c56b-f237-4f9c-acf4-d8049169356e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b1da803d-21e7-4898-b8f2-1db2fe0f6fe5"
        },
        "item": {
          "id": "13da8916-36f0-4860-9468-dd0950bc70b4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6d252a9e-96c8-4aec-ad05-f8a3ab08a1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7138d90-be4d-4867-b182-5bb894fd7a3f",
        "cursor": {
          "ref": "a23285ac-c8ea-4941-a579-7a8a8c44d5be",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ebd0f3ec-fd9a-4e54-b431-fb07c89866f9"
        },
        "item": {
          "id": "b7138d90-be4d-4867-b182-5bb894fd7a3f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "793f77fe-a194-48e4-85aa-28183caa0cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f84082-bfda-4a52-a963-bdf242a4e476",
        "cursor": {
          "ref": "73ace1df-098b-4652-a9d3-c547b1bb35eb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c7421f08-9204-40f4-b3be-edd927215bab"
        },
        "item": {
          "id": "22f84082-bfda-4a52-a963-bdf242a4e476",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "22a841a5-e6ca-4263-8d8b-04c10c5fceee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0704e5c-0d67-467e-891b-966abb9a4cb7",
        "cursor": {
          "ref": "c6829ef8-b71e-4546-976f-a0cc74a97cf4",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e1f164d7-57eb-4fa8-b399-496402387489"
        },
        "item": {
          "id": "c0704e5c-0d67-467e-891b-966abb9a4cb7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "814d426b-20c5-480d-a322-702e6c41e2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5984ea-33b3-447e-976a-3fafaad3eb7e",
        "cursor": {
          "ref": "890458ee-d85d-4acb-8bf3-a9525aa59b99",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "189bdad3-ee59-47dc-adc8-9ebc27f23d83"
        },
        "item": {
          "id": "bd5984ea-33b3-447e-976a-3fafaad3eb7e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7067c1c3-0362-4346-986f-ca9a499c8723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9dc334-eaaf-4326-9bf8-3a303a880a5e",
        "cursor": {
          "ref": "c5d96191-1992-479e-a290-719db7d6f3fc",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "09bc22f8-b954-4989-832a-67a552259e6c"
        },
        "item": {
          "id": "3e9dc334-eaaf-4326-9bf8-3a303a880a5e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "10bd7857-892e-45bd-8e09-a97f99051ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fba46a-ab2b-42f3-baf6-03cfec64f80b",
        "cursor": {
          "ref": "bc25a552-f0dc-4149-8414-8bdef28a8297",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b8555a88-3a94-4802-b56d-c367a2fd602d"
        },
        "item": {
          "id": "f9fba46a-ab2b-42f3-baf6-03cfec64f80b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a0a79137-3617-4cbb-977c-aa4ea1712748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a45f0a9-8f2b-48b6-9fe3-9518c1c90f96",
        "cursor": {
          "ref": "ac00e11c-7923-44ae-a95e-b082a6485c3f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6f2e97c8-08e1-4b4a-aa4c-1067396b327e"
        },
        "item": {
          "id": "3a45f0a9-8f2b-48b6-9fe3-9518c1c90f96",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c615d889-ad96-4996-a2e2-c0e1e5ba0b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0168d1-abb0-4a6a-8bb6-de8fd4329b91",
        "cursor": {
          "ref": "780da91c-23fc-436f-99b2-9163d3e629b9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3e9b9438-f9e4-438e-8c8d-c42fb62ced17"
        },
        "item": {
          "id": "dc0168d1-abb0-4a6a-8bb6-de8fd4329b91",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "49081ad4-50b3-4ab3-a6f1-df957dd3768a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbd11ba-5deb-4727-84cb-c12730c71a72",
        "cursor": {
          "ref": "0b281433-0e9d-4a1d-89fa-47f73c643adc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "98caef70-0051-4452-b6d9-df42b6dfc094"
        },
        "item": {
          "id": "5dbd11ba-5deb-4727-84cb-c12730c71a72",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a44cb2f5-a599-4b93-9580-cf92dcfe783e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f866a010-392b-4317-89d5-d6dea3698d1a",
        "cursor": {
          "ref": "5fa0843e-c6e8-4f36-a289-607f456a5036",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "626292c1-8fb3-4d72-8ad0-0aef2f708550"
        },
        "item": {
          "id": "f866a010-392b-4317-89d5-d6dea3698d1a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b17fb1ef-de5b-4f62-94e0-57c6495ecfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d01bb1e-fa04-4cc6-9e9e-4ade762b806c",
        "cursor": {
          "ref": "aecd43b1-b409-4764-8cbd-b7de479e53a2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1241a316-ddf5-4086-98c2-7b5d68845abf"
        },
        "item": {
          "id": "4d01bb1e-fa04-4cc6-9e9e-4ade762b806c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b4b8f62c-33f4-40cf-987a-826c228cbe14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3eaf5c4-8fc5-4ff9-89be-4ae00ebfd70d",
        "cursor": {
          "ref": "7bb0e91f-623b-44d4-b574-6d6255de70d6",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5660673f-2063-4a47-9c6c-448f2ba205f5"
        },
        "item": {
          "id": "d3eaf5c4-8fc5-4ff9-89be-4ae00ebfd70d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ff834479-8f2e-48e2-8675-ba6bf76c7f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc88feca-a9e9-485e-bd35-7518166dbff1",
        "cursor": {
          "ref": "4c1aa8dc-62fb-4a72-b5be-0a7f83700382",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e5b6959d-7658-4cfa-8bbc-38333417b6c6"
        },
        "item": {
          "id": "dc88feca-a9e9-485e-bd35-7518166dbff1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c13ad9dd-9d33-4f19-b771-33e7fb2291a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc61db25-c24e-494e-b0d2-dad5d011604a",
        "cursor": {
          "ref": "d3d2454a-e315-494f-9e0a-a80a2758fd65",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b01c5deb-8c6e-4896-b117-84e956aa884c"
        },
        "item": {
          "id": "bc61db25-c24e-494e-b0d2-dad5d011604a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4214d7d9-6e91-40a1-9c9d-61410ac1b687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8d2466-4648-4243-a4e2-d7ef3cbbe29c",
        "cursor": {
          "ref": "830f820f-0317-497b-8383-67ef8cc6a123",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "57fd5df9-cbb8-4ef1-9a58-227f0a082fd2"
        },
        "item": {
          "id": "7e8d2466-4648-4243-a4e2-d7ef3cbbe29c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5f1944c4-8207-4739-8164-a2814c1421d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c4b93e-cee2-4f6e-b932-6f78d239c5c4",
        "cursor": {
          "ref": "d0189bd8-e857-4dee-9f46-652fe9fb900e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "18fac509-6656-4671-93ee-2b63c499afcf"
        },
        "item": {
          "id": "61c4b93e-cee2-4f6e-b932-6f78d239c5c4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "51a1f6b5-7e91-4a70-8a68-7c2fb5b70199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532400ec-dc59-4e97-9866-ce97e9b10801",
        "cursor": {
          "ref": "ff347b25-4b27-44fa-8393-fadb175509b1",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "12dc819c-e256-4ab3-802d-7056a2d04554"
        },
        "item": {
          "id": "532400ec-dc59-4e97-9866-ce97e9b10801",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "678963e8-de3d-42ab-a01c-b54ab1653a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a874a21e-abbc-4955-86ad-c6832e4ac3d3",
        "cursor": {
          "ref": "8479f203-e708-44f5-834e-76b676d52f01",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0c77e370-f48d-46aa-839a-5e98a054cff6"
        },
        "item": {
          "id": "a874a21e-abbc-4955-86ad-c6832e4ac3d3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "028facab-ce54-40d8-877c-2e7380344550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1589805-1cb2-49cd-b56e-1f77996d6a2a",
        "cursor": {
          "ref": "a26160f7-86b1-447e-bc7b-3955c4d9a5f0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6bea2caf-36a2-452d-b902-ada063b889f2"
        },
        "item": {
          "id": "d1589805-1cb2-49cd-b56e-1f77996d6a2a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5205e60e-b3da-40f4-9c17-a9f668b2b6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7686e8-7429-4d4c-a3cf-9d6015e866b3",
        "cursor": {
          "ref": "bbb133e6-ee4b-4e66-889c-197b5af11cb0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e083ef95-5d1b-4fcb-807e-fde1543f1418"
        },
        "item": {
          "id": "7b7686e8-7429-4d4c-a3cf-9d6015e866b3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "33c5c61e-4d75-4535-9b33-0a3050d24df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa992d14-043e-46d6-9386-da020e1b906c",
        "cursor": {
          "ref": "5c2eb830-f12f-441b-9751-cb85b3eb28db",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9b0afd06-99a4-460c-8118-67587800e933"
        },
        "item": {
          "id": "fa992d14-043e-46d6-9386-da020e1b906c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cab7d5fa-2f98-4f57-b185-d41eacca67e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078854b1-235a-44cd-8c9a-8b858ea7bcb1",
        "cursor": {
          "ref": "a4ae314d-8bc5-400d-9f2d-220643f0e9ba",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1e696839-d62b-4cbd-ab1d-5cacd349bf8c"
        },
        "item": {
          "id": "078854b1-235a-44cd-8c9a-8b858ea7bcb1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2de9960c-4860-4a66-8323-cb37c4658da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c403e71c-4647-40d2-a7ca-826baebc4dd6",
        "cursor": {
          "ref": "c6394b12-1bf1-464a-82df-4305e89007b2",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9b66dd15-4d55-4dfa-9871-90094657ee8f"
        },
        "item": {
          "id": "c403e71c-4647-40d2-a7ca-826baebc4dd6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "956390d9-4b24-4c7b-82e4-39ce3644045b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "dfa35932-a643-4bb6-b215-edb9255b36d3",
        "cursor": {
          "ref": "e034aab3-e27a-44d9-953c-9444702f4db5",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bade04ef-1383-4bab-9783-291821dcb89a"
        },
        "item": {
          "id": "dfa35932-a643-4bb6-b215-edb9255b36d3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "caa6ea54-0f3e-44c1-9ee5-0fbf2aa34e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2b34f635-30fc-47cd-a767-9829b5015143",
        "cursor": {
          "ref": "fd0e78eb-4c8f-4d37-b43b-29d02becec1a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9763e1e8-472e-4320-8dbb-09e3e5e1211e"
        },
        "item": {
          "id": "2b34f635-30fc-47cd-a767-9829b5015143",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d805d1a0-ba32-4305-b534-42421b660daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "10d9d59e-c4a8-4fdb-983e-3fbebc896384",
        "cursor": {
          "ref": "d36e6e8f-8248-43a7-a75a-a70fe648a5c9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ab4491ae-1cf9-4457-9c82-4b6035a58747"
        },
        "item": {
          "id": "10d9d59e-c4a8-4fdb-983e-3fbebc896384",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4e69813f-bc8d-40da-8b47-85c656efb81e",
          "status": "Created",
          "code": 201,
          "responseTime": 13758,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a392b425-dcf2-46fc-b1c6-47211f7d48c4",
        "cursor": {
          "ref": "2258c05a-c8b9-48a0-a4fe-0a28ce121ef9",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "22ecbc23-8764-479b-b124-a7139ee6d757"
        },
        "item": {
          "id": "a392b425-dcf2-46fc-b1c6-47211f7d48c4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "42ea0a48-30c7-439f-aedf-d3874e615a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "61d917c2-cb28-4ac4-bf15-3c90bb9faa57",
        "cursor": {
          "ref": "7dcfc0d4-cdee-47a7-9ee7-f21334bf9f07",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "931e7deb-29f5-417f-890b-59f0b89434f1"
        },
        "item": {
          "id": "61d917c2-cb28-4ac4-bf15-3c90bb9faa57",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "381c7115-e026-4013-b441-ec175bfd848b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "dd2e6aad-d1e4-4739-8860-e7db0924973e",
        "cursor": {
          "ref": "8f7df340-bbf4-4fd2-9dd9-fd22cf5caef6",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a82fb2a6-0c61-45ac-b1f1-3860c9c286e3"
        },
        "item": {
          "id": "dd2e6aad-d1e4-4739-8860-e7db0924973e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1d706dae-4d57-498d-8734-f6c430f0aa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9654def6-b4f2-4146-9485-afbcdf933860",
        "cursor": {
          "ref": "e715764e-962e-4537-af57-8dee02374fed",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "865197d5-fc9c-4c65-8019-b2c425e5c54e"
        },
        "item": {
          "id": "9654def6-b4f2-4146-9485-afbcdf933860",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "db9e5528-9432-4fca-8346-90b444f45cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35532dbc-3c10-4074-b3d0-bbbf43fb27f5",
        "cursor": {
          "ref": "ea0e8cb1-faef-41a2-ac15-cec1fdc5cb61",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c3be3749-b54a-4700-9b77-5f6942bf2206"
        },
        "item": {
          "id": "35532dbc-3c10-4074-b3d0-bbbf43fb27f5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "715f484c-fb6f-47d2-ae31-fad8682d6658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc47d8c-3e58-44e3-8f31-10fd0f370f3e",
        "cursor": {
          "ref": "b0250630-16be-4df5-9c78-d88a0d0298d6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "74c6da0d-aa85-4c7e-9dbd-36eb5c6c31f4"
        },
        "item": {
          "id": "5cc47d8c-3e58-44e3-8f31-10fd0f370f3e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7792e2a0-213e-4816-bf78-5cb8ae15672d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51db61f2-cc35-4585-af9a-374f3812d8ab",
        "cursor": {
          "ref": "9684de90-e75b-4e4e-b0fe-0a113168bce3",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "92094987-1352-46cc-a7e7-c8354ac50268"
        },
        "item": {
          "id": "51db61f2-cc35-4585-af9a-374f3812d8ab",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2f94e66d-cbb2-498e-b001-5e7fa72e2e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b61876-4a15-4a1f-9403-37f5614eff86",
        "cursor": {
          "ref": "645f2b71-2eae-4c1c-9102-2df4a7b7dbea",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fba10f67-89e4-4603-90b7-012ed240c765"
        },
        "item": {
          "id": "f3b61876-4a15-4a1f-9403-37f5614eff86",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d3065d39-eb83-4ab6-a0f7-b6d0647039cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63029944-5ca1-4827-9855-44f7a0336045",
        "cursor": {
          "ref": "be5fa14b-3be8-40da-82e8-7a6be11cabf1",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4e059785-ea7e-403b-b42f-fef0c2fa92ea"
        },
        "item": {
          "id": "63029944-5ca1-4827-9855-44f7a0336045",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c1973aa1-6e8d-462a-a480-71d35d03c98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7be73cc-762f-4371-82d3-44d8dd6bf02f",
        "cursor": {
          "ref": "6cdf59e2-c792-47e8-a9dc-bf0702638902",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "569389d0-7301-47b9-81d5-b3c2b217b2fd"
        },
        "item": {
          "id": "b7be73cc-762f-4371-82d3-44d8dd6bf02f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dbbe37ec-9e37-4e52-9988-e5a23bb0c21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d448ead3-0fcd-47cf-950d-fa04619c141b",
        "cursor": {
          "ref": "9e2622ee-bc27-4516-b3ed-b1887a372f00",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a0c36c0d-3f3f-4f61-823d-d00314f13b4f"
        },
        "item": {
          "id": "d448ead3-0fcd-47cf-950d-fa04619c141b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c302648a-70fc-46eb-af3a-9446d224d053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b136a80-b1e5-454f-b865-f3fa0c59331d",
        "cursor": {
          "ref": "8b24cd32-8065-4d46-9583-793d62d56063",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2d587f87-c716-48e0-85ea-abb04951ca29"
        },
        "item": {
          "id": "5b136a80-b1e5-454f-b865-f3fa0c59331d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f358b86e-5d52-4347-b59d-016faf57a857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedf6c24-3258-4c1d-bad5-54790745942d",
        "cursor": {
          "ref": "eabd3feb-7741-43ca-bb88-5779c64e6cd7",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5c97e7fc-df91-4ec6-9308-8ab041d324ad"
        },
        "item": {
          "id": "dedf6c24-3258-4c1d-bad5-54790745942d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d82bf7e0-0ae1-4d83-8694-1f66c9d78e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a57c5e2-e7ce-4857-b475-e9c37821e999",
        "cursor": {
          "ref": "540312cc-65ff-465e-a706-1b8dd0b1e195",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "72c9bb58-936f-41af-8bf7-277d2a7de83a"
        },
        "item": {
          "id": "5a57c5e2-e7ce-4857-b475-e9c37821e999",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fa153402-03f3-436b-ba7b-f9ee544508d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50543aae-9fdb-49c1-ac7c-a45e9a9606ab",
        "cursor": {
          "ref": "06e015d7-5646-416b-b4f3-f56c036cc424",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a9190f65-ad65-4a0b-b3c2-7927d89e87ef"
        },
        "item": {
          "id": "50543aae-9fdb-49c1-ac7c-a45e9a9606ab",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "60dd419e-284c-4abc-8bed-c1d044190e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd57a58-aa20-46b9-86d0-7fd3e09eaff7",
        "cursor": {
          "ref": "2dfa2e60-2608-4af2-a570-32dda7540421",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ccea531b-53c0-4e15-9481-ec51f475600a"
        },
        "item": {
          "id": "8dd57a58-aa20-46b9-86d0-7fd3e09eaff7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1494a0dc-a4d5-44fe-83d8-89ef68a483ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f382aa-4d19-41ac-990a-4fb116292206",
        "cursor": {
          "ref": "22eba70a-3fcc-48fa-942e-70477747c3aa",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7bdf9a2b-7554-4976-8895-caa5c361b9d5"
        },
        "item": {
          "id": "d3f382aa-4d19-41ac-990a-4fb116292206",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e33289d4-d36b-425f-8d91-20e00540c14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b378dd5-14e9-4842-a3b0-5f304f1ef1b6",
        "cursor": {
          "ref": "1774f1ac-cae5-487c-a774-b428fdcc60c9",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9dfe5c21-5547-4003-b5f2-71d19aebf94c"
        },
        "item": {
          "id": "5b378dd5-14e9-4842-a3b0-5f304f1ef1b6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dcc01e2c-551d-41ed-b53c-5f2eb7f62e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b455997-c4ca-4de9-bb5d-b79aabf81a10",
        "cursor": {
          "ref": "225923c6-dbaa-4872-a59f-93c287fa85c4",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0b71d9ca-7f3f-4389-b64f-5908b46360f0"
        },
        "item": {
          "id": "8b455997-c4ca-4de9-bb5d-b79aabf81a10",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "17d4b7d5-a309-44dc-bd1c-c0e55f4877b0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "0fd09df7-7a2d-464a-a9eb-ac62064f0a02",
        "cursor": {
          "ref": "600d9791-f0b4-4225-9fdc-64533cf2c970",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5d8184d1-bd99-43c9-b60f-f6f87089380e"
        },
        "item": {
          "id": "0fd09df7-7a2d-464a-a9eb-ac62064f0a02",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "94600197-e232-40ab-b8d1-905abd6b1c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74a844b-c62b-4a9b-a264-2848281fab3f",
        "cursor": {
          "ref": "423340ec-a3f7-45c8-a8c4-d0036367eae1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ff04b02f-94c0-4d84-b32d-b33ff52fa4ff"
        },
        "item": {
          "id": "b74a844b-c62b-4a9b-a264-2848281fab3f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ac404724-b84d-46c4-aa40-21af4c06a661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52f475a-7260-47c1-b8ed-74539cc4748e",
        "cursor": {
          "ref": "c1fcd2cf-745f-4a35-b362-52a3772c4fb0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2eec1bef-037f-400b-949f-cc8e3b43db69"
        },
        "item": {
          "id": "e52f475a-7260-47c1-b8ed-74539cc4748e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a9e4d059-c982-48e0-b0c3-1082f4cd9f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0c0650-1639-4901-9113-c9f4b47d87a8",
        "cursor": {
          "ref": "55c22f8d-52dd-4aa7-bdce-5503d82d0e10",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b5cf33f3-d638-4efb-b78b-41de5cd18d4b"
        },
        "item": {
          "id": "dd0c0650-1639-4901-9113-c9f4b47d87a8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "27da4471-51f5-4598-bc52-41a1309831a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d13642-dc5f-4388-a34e-b8ff421e3321",
        "cursor": {
          "ref": "18d688cf-26b9-482c-a7f7-c48bde801e00",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "93b5de7f-28e7-41cf-9663-550cf3638255"
        },
        "item": {
          "id": "20d13642-dc5f-4388-a34e-b8ff421e3321",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b6c0c178-ec16-4dd4-a2d6-bfe7a20e1a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beeef7f5-9a4e-4bab-9c87-5846a7ee58b5",
        "cursor": {
          "ref": "3cc896d0-bec4-4fe0-adb3-f1eb7aaf9044",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eebe7d31-bf99-4346-9911-868ab53a5eb7"
        },
        "item": {
          "id": "beeef7f5-9a4e-4bab-9c87-5846a7ee58b5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8c54ca62-7ee1-40f1-ae83-7edee44d3e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82db3a03-56a6-4b8e-a911-3928c82561a6",
        "cursor": {
          "ref": "a1c2938b-7000-4f60-af12-05de88fd4d0b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "71d20cfe-9b15-47c7-930d-194e765a24fa"
        },
        "item": {
          "id": "82db3a03-56a6-4b8e-a911-3928c82561a6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "44bcb5c9-2ca0-48ac-8d8a-bb566e366650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3482030-7e95-4438-84a6-9b03960df742",
        "cursor": {
          "ref": "31ce793b-ee5e-4ccd-a354-ea158d5ddd3a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a3c9d762-666a-46c6-910e-14b038419fd6"
        },
        "item": {
          "id": "c3482030-7e95-4438-84a6-9b03960df742",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bd84496c-591e-47ed-8385-c4533ad521c3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "96ee7165-8507-4b85-9b98-8794db66ff7b",
        "cursor": {
          "ref": "603dbe68-a94a-4c3e-a9c3-0bc87362fdcb",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "63153c04-959c-4dba-8621-03800a55b731"
        },
        "item": {
          "id": "96ee7165-8507-4b85-9b98-8794db66ff7b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "364510ab-5cfc-4bb7-a4e7-4224c33cf4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8cd92c-d61b-4b4a-b469-ec0e6566ae9f",
        "cursor": {
          "ref": "68e711d4-8b2c-4438-a56a-991fc80aa577",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "784805bd-5f44-4d08-965d-d8bb97d88874"
        },
        "item": {
          "id": "7a8cd92c-d61b-4b4a-b469-ec0e6566ae9f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "af92db97-aa4e-4436-870e-f127ec8e36bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e3edf6-2372-4a5b-9343-21b05dc26a99",
        "cursor": {
          "ref": "195bd029-8e27-460f-a2fc-2eaa3c7c8c3b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1502e618-b60b-4251-92da-3bf6f7b2ca24"
        },
        "item": {
          "id": "d2e3edf6-2372-4a5b-9343-21b05dc26a99",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7c92c4d1-a1ad-41a9-93d1-8017b5b421ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88d770a-dfef-4472-b687-ded5b9f2512d",
        "cursor": {
          "ref": "b7ccbaa1-f4b9-4151-9101-2d55cd6d1ce5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c4660e09-3adf-4040-977e-de85b8df5770"
        },
        "item": {
          "id": "d88d770a-dfef-4472-b687-ded5b9f2512d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f4b3b1f0-9b91-43d1-8d87-7a387106b541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05da0496-f496-4731-94b8-14d000452d60",
        "cursor": {
          "ref": "db3ad6cb-88f2-42dd-9398-6b5392035152",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "81410f85-45f3-40e5-a1b9-3080f24f1bd5"
        },
        "item": {
          "id": "05da0496-f496-4731-94b8-14d000452d60",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4d03b834-8f6e-4d35-831c-d117f4347844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f1a498-78df-4d60-aad3-ee09b66201f5",
        "cursor": {
          "ref": "550b0ee3-c658-468a-ba60-1aa75b5dcb95",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "13211eee-0120-474f-b3e2-9bc8975ff43c"
        },
        "item": {
          "id": "b3f1a498-78df-4d60-aad3-ee09b66201f5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "20bcbe13-1e17-4697-881b-8a1647fb56ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8093d1-a097-479f-b86e-e0e9d10e41c9",
        "cursor": {
          "ref": "be306932-de76-473b-888e-8265ad561f5a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "809f1c42-c69a-4519-8be6-4c66e5889189"
        },
        "item": {
          "id": "1c8093d1-a097-479f-b86e-e0e9d10e41c9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "336da7f6-2bad-4822-84f3-00d8309e1f6c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "b3d03204-b50a-42f1-ab57-a0a442787ef7",
        "cursor": {
          "ref": "7164167e-03b4-4779-b75b-19a350a6df8a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a5c64a83-17b4-4254-9c70-67de231db327"
        },
        "item": {
          "id": "b3d03204-b50a-42f1-ab57-a0a442787ef7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ebc8c61f-d8b6-48c4-9516-80d10e45f31b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "05398d5f-6bea-4c39-86c1-da98a934a515",
        "cursor": {
          "ref": "042e7978-f327-4c52-b6d4-885c9a89d3c7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8667294e-82b3-400c-8069-3d90f680afc6"
        },
        "item": {
          "id": "05398d5f-6bea-4c39-86c1-da98a934a515",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8ff22614-5a5c-4431-a4e4-5e38b6a4078f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "47ecb1ae-86c2-47af-aa2e-0da6f8f876d1",
        "cursor": {
          "ref": "1dfbc7a5-9171-4b08-9390-74a15f4bc690",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "15e4b3ed-690a-4d0f-b511-af12855ea0fb"
        },
        "item": {
          "id": "47ecb1ae-86c2-47af-aa2e-0da6f8f876d1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1da9feb3-0856-4e1e-a539-c000e2eb2dad",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "2db38689-02e2-4c34-976a-172c2340f062",
        "cursor": {
          "ref": "0d62e220-e6c4-4166-8a1c-e206b37f9c44",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "73515902-4e3c-4228-82e3-a50d24eb2813"
        },
        "item": {
          "id": "2db38689-02e2-4c34-976a-172c2340f062",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fe878454-4158-4189-a03b-c501fc041b71",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "2398b490-981b-41d8-ad82-ff29b83168c6",
        "cursor": {
          "ref": "ed252ec8-548c-4a7b-b452-e8f10a73e8dc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c3564787-a429-47c3-8055-7ec206c0f12b"
        },
        "item": {
          "id": "2398b490-981b-41d8-ad82-ff29b83168c6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "08f2ffa7-82ad-4e2f-94fe-31b69bebce40",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "c91c28d7-9741-4e7c-a972-108fbffafcf1",
        "cursor": {
          "ref": "f6913b83-82e4-42e0-984e-cd567f1e6539",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "729eb4ac-8b75-40a8-acd3-44c247525182"
        },
        "item": {
          "id": "c91c28d7-9741-4e7c-a972-108fbffafcf1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "69cba573-ab7e-4b5a-b8c8-a42b6aafd74b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27694f58-4267-4f33-b240-569a3bb52251",
        "cursor": {
          "ref": "0d32edd8-317b-44be-9b78-f6f23a91feda",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3df3592c-1ed3-4353-b509-d5ab56a86d67"
        },
        "item": {
          "id": "27694f58-4267-4f33-b240-569a3bb52251",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "015a6aa9-12f2-4e0a-9210-f8b525b0d307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f3f6d9-a713-4656-9ab7-987a7ab8e3df",
        "cursor": {
          "ref": "8457812e-2382-4ed3-be2a-000510346f33",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0898c645-1468-4103-82fe-23f4b56c091d"
        },
        "item": {
          "id": "78f3f6d9-a713-4656-9ab7-987a7ab8e3df",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "477f6817-4caa-4958-9a47-fa6b6c937307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3b1929-46f0-4070-a19b-12074565f454",
        "cursor": {
          "ref": "504b723a-0e20-4bc0-9211-6555bd570f07",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c5c0b394-a119-41aa-a30b-8db937938960"
        },
        "item": {
          "id": "aa3b1929-46f0-4070-a19b-12074565f454",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "529549d2-6479-49c2-bfe1-e43b73146942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f86ae8-970a-441a-a8cd-621c039eeb3f",
        "cursor": {
          "ref": "235872e3-3c67-4761-b9fb-20041cecc733",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "23f70c8b-4830-4e12-be56-b16d8b472be8"
        },
        "item": {
          "id": "77f86ae8-970a-441a-a8cd-621c039eeb3f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5244f0eb-78ec-4e9e-a243-5db51b8e16f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c205586-9a94-44df-8f63-3dfec85c58ba",
        "cursor": {
          "ref": "c7b896b4-0aaa-43a4-a549-4feaca4d7b2b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b7782f86-922d-4014-a5b4-e3c7ad272c48"
        },
        "item": {
          "id": "9c205586-9a94-44df-8f63-3dfec85c58ba",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0b4d7103-76c8-41dc-950e-f79cb8cc66e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5735899e-38b9-463f-a61a-7e8877d8e6ea",
        "cursor": {
          "ref": "3714e975-43a0-4313-920b-62c38048bfe7",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2ce7b7aa-21a0-4572-bce9-334583579ff0"
        },
        "item": {
          "id": "5735899e-38b9-463f-a61a-7e8877d8e6ea",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b6b88ac3-d454-453b-8189-f3682421f19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f633a09-851d-401c-8ddc-6d70b6db43fe",
        "cursor": {
          "ref": "78b60ab2-2f17-4a43-bf6c-87bbc933674f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "36647cc2-99d6-4f14-91dc-10d79e136921"
        },
        "item": {
          "id": "4f633a09-851d-401c-8ddc-6d70b6db43fe",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2a6f989d-ceb2-4a63-98e5-08afe41230b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a353539-3e61-4659-8a92-5cd9d9930bf3",
        "cursor": {
          "ref": "5fb6a99c-9427-46d3-8841-cf59f85113cd",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b894ae1e-bb1f-4285-a792-63cc6a94ab5c"
        },
        "item": {
          "id": "0a353539-3e61-4659-8a92-5cd9d9930bf3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c9ba8529-d2db-4553-8c83-0b30794aa9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043f2d33-5fdf-4a1d-a5c3-4a9201d7f73f",
        "cursor": {
          "ref": "35dbe284-8ebd-4a00-8c6e-bbde6b1c989a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4931832e-ccca-427a-a601-e07ab06b5fac"
        },
        "item": {
          "id": "043f2d33-5fdf-4a1d-a5c3-4a9201d7f73f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c5d1380f-ebbc-43c4-885f-a70604b04b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a85412-2f0b-4ebb-9920-e0c3785bf6fb",
        "cursor": {
          "ref": "c9c414e3-b628-41bf-9f63-04a8047aebf8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2d80c6ac-26ff-47a6-a111-851eb5bec74b"
        },
        "item": {
          "id": "27a85412-2f0b-4ebb-9920-e0c3785bf6fb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3460647b-e52f-427b-87fe-cace37dacd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6def35e4-a81e-4393-804e-d8b6fde3d815",
        "cursor": {
          "ref": "a732d655-270a-43aa-82bc-9852c88b30c4",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fccf5f4a-c7a9-4024-b6b7-b8f4b420ab22"
        },
        "item": {
          "id": "6def35e4-a81e-4393-804e-d8b6fde3d815",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f0d364af-5c26-47fc-9c7c-833e543ee8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6baef39-57a2-4ce6-a1cc-54be622004c3",
        "cursor": {
          "ref": "be91bb6a-f21a-42d8-b639-44746f5992ff",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "282ba912-fae7-4d60-90e5-30100d32c6d9"
        },
        "item": {
          "id": "d6baef39-57a2-4ce6-a1cc-54be622004c3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3f1cbf77-3d05-4ab0-b9f0-27fc35b95f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb22aeea-024a-41b4-a3ed-4a4bde6576f6",
        "cursor": {
          "ref": "fc170e9b-e5fc-48af-9c39-868bf71219f5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "de5a971e-5810-4235-afa5-c263e49bcbd5"
        },
        "item": {
          "id": "cb22aeea-024a-41b4-a3ed-4a4bde6576f6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "79a5a79b-57e6-48c0-88c6-43eb2a2e6330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6513956-1bb8-4706-8d7e-76e56bc0d161",
        "cursor": {
          "ref": "238395d2-6240-49fd-96f6-a8b2256c8664",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f11d4ed0-6514-4a38-8842-a10f7f94b021"
        },
        "item": {
          "id": "f6513956-1bb8-4706-8d7e-76e56bc0d161",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8aabcdd9-4afa-48ea-bfe0-b3a2637c0a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b4f8a0-dfc3-492d-8bf7-e62c235ffe71",
        "cursor": {
          "ref": "7b4dce02-2f90-4762-bd64-6edce1bf24ba",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4876eeb6-d090-47c5-9604-a8048ca6b823"
        },
        "item": {
          "id": "86b4f8a0-dfc3-492d-8bf7-e62c235ffe71",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "92388384-9c98-4fa0-9711-cf667ed2954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dca17d5-7115-4e16-b1fb-af07e5e9284c",
        "cursor": {
          "ref": "d8a219f7-cca9-4c6c-be04-7c2741713a29",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "74dbbaef-05a4-4398-8079-388ea0e355c9"
        },
        "item": {
          "id": "1dca17d5-7115-4e16-b1fb-af07e5e9284c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8242e665-31eb-4226-8e82-0e03086f068f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13606ff7-756e-4d3f-a0d1-2e8113844e48",
        "cursor": {
          "ref": "5936e8ce-a1d3-4c0e-8db7-26fbb06e2e08",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a7066751-82d9-4af2-b298-5a2deea4eecc"
        },
        "item": {
          "id": "13606ff7-756e-4d3f-a0d1-2e8113844e48",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5de878a7-b620-4ccb-a01d-a407c1d42d7c",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "a766a62c-e15a-4339-be07-6243a31b869f",
        "cursor": {
          "ref": "662265d5-75c9-4555-8e00-c6c327289ef1",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c05517a9-fa81-43b1-a9f0-e7ffc5cdae1f"
        },
        "item": {
          "id": "a766a62c-e15a-4339-be07-6243a31b869f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "319befc4-c4ba-49bd-91db-1f16394a5fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afd11b3-99f5-484e-9d7a-5e37710c5c12",
        "cursor": {
          "ref": "a02ed20f-fa42-404d-b6c7-4abbf09049e4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6c30a58a-fd5f-415b-a67a-276c3e1382d6"
        },
        "item": {
          "id": "0afd11b3-99f5-484e-9d7a-5e37710c5c12",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "83ae5664-9797-4ffc-bbcc-d2dacaaf1146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f560e4-cdbd-49a3-8b6e-6a174b2f4c39",
        "cursor": {
          "ref": "bf6299b2-4809-4652-acb7-faa314d2a96a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "889b6723-a7ff-449c-962a-7bac18cd5bdb"
        },
        "item": {
          "id": "f4f560e4-cdbd-49a3-8b6e-6a174b2f4c39",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cf6f186c-5085-460e-80ed-68a5337dae87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58bea64-4252-4253-b2c1-d6d18e472cf7",
        "cursor": {
          "ref": "7dc5fb0c-460a-489d-99df-3f6e69d4c4f5",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c1ddca0a-ac3e-4d6d-8180-c3493a962dbe"
        },
        "item": {
          "id": "d58bea64-4252-4253-b2c1-d6d18e472cf7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "faee53c8-e0de-4d16-93c7-fa67a99d56a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e6ec1e-d102-4196-9bf8-70681fb4c0ff",
        "cursor": {
          "ref": "c40244e1-c37b-41ff-a037-b1adb0c8b64e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6a1b902e-ea33-40c0-8ce8-e976739bba38"
        },
        "item": {
          "id": "35e6ec1e-d102-4196-9bf8-70681fb4c0ff",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1a261114-9738-4943-8957-8f558059d34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b4437a-f739-4393-9793-09c14b405276",
        "cursor": {
          "ref": "153df1df-30fa-435e-a357-1797a761383a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "35dc3892-9640-47f7-990f-689511ac5c33"
        },
        "item": {
          "id": "89b4437a-f739-4393-9793-09c14b405276",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3d0fa4bd-0c9a-48ee-a211-363ba1e6bc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4158d40b-e3e8-48a2-88fd-8979673afa29",
        "cursor": {
          "ref": "27ee4870-2c14-4e4b-8c00-0023cb38fc8d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "22a91e90-16a9-4d93-8807-5ecd5c514857"
        },
        "item": {
          "id": "4158d40b-e3e8-48a2-88fd-8979673afa29",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f500bdd2-40d3-4d27-9c4b-e3fa4e873b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10948adb-81cb-44f2-ac02-d7f7de4b92e8",
        "cursor": {
          "ref": "f2e7a6bc-4cae-48b3-a44f-042ca0340799",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b1c411cf-68fd-439b-a4ee-3b3fd6cb53ce"
        },
        "item": {
          "id": "10948adb-81cb-44f2-ac02-d7f7de4b92e8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "92ae1a9d-95e0-4b2f-9b19-577bb43d7962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ea1446-fca4-4b85-867a-386e00f129ab",
        "cursor": {
          "ref": "eabf1892-24f5-44d8-b058-c4a44dd505d7",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "07275c79-06f8-423d-b621-b33dfda68ddf"
        },
        "item": {
          "id": "51ea1446-fca4-4b85-867a-386e00f129ab",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "707ce1d9-7124-4028-a875-2ee25fc80090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cced74-0e2e-4820-b7ba-68ae8366979f",
        "cursor": {
          "ref": "530f6b99-67b1-4263-a5a5-71ed85a06c3f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "83ae8b77-d0a6-4ace-95c6-0162dd6c0caa"
        },
        "item": {
          "id": "92cced74-0e2e-4820-b7ba-68ae8366979f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1cff1d19-1445-47e3-83db-0a2be2148c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702df531-c7a7-415c-8afc-aa8197aa3fe9",
        "cursor": {
          "ref": "25612fc7-842b-4512-a6e5-a2d08c8bdede",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a23d2c6b-aa32-4597-90e0-da1630111cc1"
        },
        "item": {
          "id": "702df531-c7a7-415c-8afc-aa8197aa3fe9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0d37db7f-dfcd-4cd9-ae2c-ea3f1a29a2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf6d714-210b-4e2a-addc-e81615a1c521",
        "cursor": {
          "ref": "e7c755ec-c900-4308-ba62-79d7071a0415",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f89546be-2854-494b-971b-03b95d4d0afa"
        },
        "item": {
          "id": "0cf6d714-210b-4e2a-addc-e81615a1c521",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f0781057-264e-463d-bb49-53dd6a7a0366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d04cf3-d6f2-4a7b-ad7c-0bf00a60eaa8",
        "cursor": {
          "ref": "a1f5a9d4-7ae3-4da3-ab8d-f2095706f6ae",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "86aef829-950b-4b25-9bd8-8c26b6f57593"
        },
        "item": {
          "id": "23d04cf3-d6f2-4a7b-ad7c-0bf00a60eaa8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "67c5ad32-6e6b-4ffe-860e-c6bfc9b2822c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99690b1-6aeb-4514-97b0-c3f3889a0c31",
        "cursor": {
          "ref": "26893be3-7c40-47e9-97e2-0674666b054a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b6695d70-9c88-4e0a-bd3f-f3a7b2aadaf8"
        },
        "item": {
          "id": "c99690b1-6aeb-4514-97b0-c3f3889a0c31",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "05c3c92f-5a12-4c35-b16f-5065bd7f1e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f426b2-043f-492b-8cd3-f8cf113b0f88",
        "cursor": {
          "ref": "4b0f323c-a3a8-4e74-bfab-f0d040a2086f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "915aee62-cd80-4864-8a00-09b0de792fd1"
        },
        "item": {
          "id": "b1f426b2-043f-492b-8cd3-f8cf113b0f88",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e21fd89c-6896-458c-8610-d85e92baeb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed6fa84-99de-4829-8a18-227937e69f29",
        "cursor": {
          "ref": "df29a04d-49b7-4967-bcc9-273a96044e70",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7018b08b-de19-433d-ac2e-34c196d1abdc"
        },
        "item": {
          "id": "0ed6fa84-99de-4829-8a18-227937e69f29",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "70a75b7c-d117-4164-88c9-323a987cd00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f52962c-7733-4b8e-bde1-a452cb7e5df5",
        "cursor": {
          "ref": "371f1ba1-d274-4ab0-bebf-43a79ffc6136",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0c10217f-9781-4b65-9a28-3553fe9b50d5"
        },
        "item": {
          "id": "6f52962c-7733-4b8e-bde1-a452cb7e5df5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fbb7f6ac-a376-489f-9780-e054cd4e9f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a617d7c-8094-4287-9cf6-51be82e8659b",
        "cursor": {
          "ref": "5e8ed9e6-8823-41f3-b2c1-9407b451b1b0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "99d89e50-bb05-4f6e-ad4b-742b6b48dcd0"
        },
        "item": {
          "id": "0a617d7c-8094-4287-9cf6-51be82e8659b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "59e25ebc-8daa-4ba4-891b-4a72690c162b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c751e412-4169-4d98-894d-1d6a9433437b",
        "cursor": {
          "ref": "5106eb52-74f1-4ccc-a9dd-5920b2e94560",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "22d3c19a-68a7-43b0-8b01-36335163bac6"
        },
        "item": {
          "id": "c751e412-4169-4d98-894d-1d6a9433437b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4f3fa724-6ef9-4c60-a54b-b86b2a2352bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c653e7c-46e1-4ab1-b4fd-d8eea199016c",
        "cursor": {
          "ref": "ef83dcf5-2791-4db7-9653-eb78fd1cc4fc",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4bf6bf6e-c793-4bc2-82b3-e401b5cc1479"
        },
        "item": {
          "id": "1c653e7c-46e1-4ab1-b4fd-d8eea199016c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b470ca1d-721e-41fe-b7c8-8f5f1d9dcf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a0d9b2-f65d-491a-ad59-415ac58ccff5",
        "cursor": {
          "ref": "ffd34134-b33b-41b2-b883-d443e2aa213f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "55944db8-df61-4a10-be8d-815f69c5500c"
        },
        "item": {
          "id": "f4a0d9b2-f65d-491a-ad59-415ac58ccff5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8cc3f23f-0cc8-49e3-91de-27f9cd8086c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bc535c-de65-4da5-8558-9b8b6245efe2",
        "cursor": {
          "ref": "7c466560-b0bd-4592-8889-39cb659abb30",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "eac00878-46cc-4971-881e-3ebfc5494027"
        },
        "item": {
          "id": "66bc535c-de65-4da5-8558-9b8b6245efe2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f7685bf9-972b-4ef7-aae9-94735b963841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2126c2-0b13-4185-9edb-19395c568031",
        "cursor": {
          "ref": "19ed9f2e-4302-4593-94e9-243dc6d37e48",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "dd80f1ec-f572-4c5b-a022-cbdd0838eb0b"
        },
        "item": {
          "id": "1f2126c2-0b13-4185-9edb-19395c568031",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "833f9b96-cc93-4af0-95a4-887eaae8c36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bd31bf-b1c5-4fa5-a046-7fc21854cc18",
        "cursor": {
          "ref": "c2b6fc30-45f8-4d9d-8887-d4ecdf51cd8f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1fb4c5cd-d8dc-4faa-8b4f-3ef55bff80f3"
        },
        "item": {
          "id": "80bd31bf-b1c5-4fa5-a046-7fc21854cc18",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "21b924b0-9eb3-49ac-a0e1-021dab55b823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c35a8d-fa4e-47e3-9764-03d0554e7f7e",
        "cursor": {
          "ref": "c5d37cf9-f6fe-483f-960c-f8dcc6634627",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9daa4741-ed37-4de1-ac1f-d358c93e4b21"
        },
        "item": {
          "id": "41c35a8d-fa4e-47e3-9764-03d0554e7f7e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2e0d0761-04c2-450f-a721-fc836f58fbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2a4578-5714-42c5-9696-35bec34188dd",
        "cursor": {
          "ref": "9d573c8c-e371-4005-8a87-fb034bd01701",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "442c28d9-9f3f-42bd-a778-1ecb1b95a719"
        },
        "item": {
          "id": "cc2a4578-5714-42c5-9696-35bec34188dd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "88cb34f6-2307-46cf-b73c-a1c330585153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f3bc72-48a4-4114-a421-7c4a70de98cd",
        "cursor": {
          "ref": "2441e015-8254-49a6-8c9a-1208c57d175b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "71131b0a-db9b-48ec-9305-b38d54f4ff37"
        },
        "item": {
          "id": "29f3bc72-48a4-4114-a421-7c4a70de98cd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9c5d9bdb-74d9-4dd2-9165-b66e9d291030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c3d123-bc70-4fa4-9afc-91c185d81ecd",
        "cursor": {
          "ref": "7c6587d5-41a2-4167-8a5f-3ec455f64d14",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e2035226-24da-4f8c-903e-d069258d75dc"
        },
        "item": {
          "id": "a5c3d123-bc70-4fa4-9afc-91c185d81ecd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "76cc9e91-b016-498e-a123-e6884bf817fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ec2a92-6580-480a-ad49-96571e2ac33f",
        "cursor": {
          "ref": "0147f6b7-ceba-4554-85f2-1e79d3f09dca",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7b2730ad-16d2-4427-8d9e-34a9e85fd16e"
        },
        "item": {
          "id": "b7ec2a92-6580-480a-ad49-96571e2ac33f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c21f561b-1dac-4a5b-8230-a49f1fa9b9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1c408e-9503-4526-99af-fcdb32c598c7",
        "cursor": {
          "ref": "c75eaa0e-b963-43ed-b850-47e5b4518ca4",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "97caad88-2026-4e99-b436-ddf8095aeccc"
        },
        "item": {
          "id": "cf1c408e-9503-4526-99af-fcdb32c598c7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c3fef23a-bad1-4302-8675-5b71228981a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf6b5b5-6424-40c1-a156-f6c0c7c9a4c1",
        "cursor": {
          "ref": "215d8d5e-3ee1-4259-9e57-0d57826b1eb1",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b758919c-0405-4f6a-b04b-27eef6ba2060"
        },
        "item": {
          "id": "aaf6b5b5-6424-40c1-a156-f6c0c7c9a4c1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "08dcb469-d3d8-4acc-83a6-981ffd0e3dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142e24f3-bb48-4bfd-8106-4f2b82a364db",
        "cursor": {
          "ref": "dc1f6a9f-7a15-4459-b446-67f1e9dda653",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ebc7b67d-937c-4ca5-bbd7-c2be17793f42"
        },
        "item": {
          "id": "142e24f3-bb48-4bfd-8106-4f2b82a364db",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d09c8b2f-5414-43d8-9663-705bbc4fc23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5316eb3d-5d64-44bb-8b2c-6af30468a02e",
        "cursor": {
          "ref": "9fb33cba-5ff6-4856-8db0-d8f0f2e724cd",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cd9e1403-2383-4e9d-8ee5-21096fdbbb95"
        },
        "item": {
          "id": "5316eb3d-5d64-44bb-8b2c-6af30468a02e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "373c5b65-1edf-4bae-b0ec-76596881632f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058f4906-5daf-421c-8004-8c824a370c7f",
        "cursor": {
          "ref": "132cd8d6-c709-43e5-b2b4-9584db383c98",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "29116b59-7a17-4531-bd90-15baeb779da8"
        },
        "item": {
          "id": "058f4906-5daf-421c-8004-8c824a370c7f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fae19be3-079f-4dc7-8773-ffbf6f107696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e33c61-6ed7-404a-b9a4-a183a686d1e1",
        "cursor": {
          "ref": "55dae0d2-e952-4d17-b527-4b95a2f3bf9b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c03acd31-8028-4c44-898b-d00150bb2b56"
        },
        "item": {
          "id": "d8e33c61-6ed7-404a-b9a4-a183a686d1e1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "132cf527-cdb4-4373-b9d5-5d724709b176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b16ed60-73ad-42ec-8c59-8abd24bc5959",
        "cursor": {
          "ref": "357abaf8-25d4-4dbe-88fb-f4fe88fb2c6b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "25a14b7d-e62d-40d8-940d-13715af72082"
        },
        "item": {
          "id": "3b16ed60-73ad-42ec-8c59-8abd24bc5959",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8b072d44-4800-4f13-ab7d-17f8ab7f1aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dca559-6a30-4c07-a3fb-27fbb64cbe27",
        "cursor": {
          "ref": "1269a983-916c-4723-adf1-e3e47e8d46ff",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ecfc10bb-9336-4184-81b6-4c36980c237e"
        },
        "item": {
          "id": "c7dca559-6a30-4c07-a3fb-27fbb64cbe27",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1d497d54-dbbd-4e84-969e-0f83271eec8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a6568c-70a9-4262-a01d-3d229993d1fa",
        "cursor": {
          "ref": "a022974e-916e-4d0f-8133-31bc9225e0a7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d250c97c-f7dc-4110-b6d7-f593daec5b2d"
        },
        "item": {
          "id": "33a6568c-70a9-4262-a01d-3d229993d1fa",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "14a22201-dbdf-43d8-83e5-a2a54bef745f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080fe4eb-dec2-466b-a4b8-a86703beb4c1",
        "cursor": {
          "ref": "6867e723-915e-450c-8a9c-511b02fff24c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3549a8b7-bb8b-41e3-8cb7-6bb0fb6b0180"
        },
        "item": {
          "id": "080fe4eb-dec2-466b-a4b8-a86703beb4c1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a0edc909-0811-46cb-a116-279e69599ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41c8f8f-39df-4ba4-99de-9b788554014a",
        "cursor": {
          "ref": "c6094c46-0764-47f0-802b-046fb84510d5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "29d115be-5277-4b11-b2a9-f59a3b8fbab3"
        },
        "item": {
          "id": "b41c8f8f-39df-4ba4-99de-9b788554014a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9a122b1e-9927-4bd1-8228-e92c2b5dcf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420592e7-518c-4deb-b6a6-4e15d8ce62d5",
        "cursor": {
          "ref": "a0b635aa-4753-46b3-bce8-1b9d4fa8814a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cee4d63a-256a-42c4-b1bd-d2a37d2a6bf5"
        },
        "item": {
          "id": "420592e7-518c-4deb-b6a6-4e15d8ce62d5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c0dbb8dc-c534-4431-b09e-05d77f5f9451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d617eb-bdd2-45d5-9a1e-f1094220f329",
        "cursor": {
          "ref": "32cb083e-beac-40d7-a9a6-1edb76aecbba",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7670d532-b454-4ec1-b3d8-cdfb50d2161d"
        },
        "item": {
          "id": "e1d617eb-bdd2-45d5-9a1e-f1094220f329",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a073de74-cd0e-4bb3-a7c6-7a10224383c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1774d7bd-214a-4728-8d96-0e55cfde0fb3",
        "cursor": {
          "ref": "4da881e5-499d-47f6-8f15-8461b7ceb300",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0e11e165-d8fd-49f7-81d9-ec0ecf69d9d9"
        },
        "item": {
          "id": "1774d7bd-214a-4728-8d96-0e55cfde0fb3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "65b302e3-52b3-47b6-83b7-203711c89f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3af4310-d3ef-42c1-adaf-4f4db729aecd",
        "cursor": {
          "ref": "b4ece26b-33c2-4889-be2e-7df1b285c56a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "34c620e5-c56a-4691-ba27-777426ddfa0e"
        },
        "item": {
          "id": "a3af4310-d3ef-42c1-adaf-4f4db729aecd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "84536245-eb3e-4330-bf1e-6f0757727310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9301d0c-0506-4be1-99f9-0fe844857c4b",
        "cursor": {
          "ref": "5f263538-2870-4ce9-8475-4109555b97be",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fc1dae52-d41f-4b68-9031-5d507afdaabe"
        },
        "item": {
          "id": "e9301d0c-0506-4be1-99f9-0fe844857c4b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7126db5f-68c0-465b-aaac-8ea22dc61f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4db001-504c-41d7-aaf2-76dc39efd390",
        "cursor": {
          "ref": "9b653a11-2647-4e5f-b8e2-36216b32d110",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7eaa7d1b-8a10-413b-a97a-cf1efe3e47c1"
        },
        "item": {
          "id": "1d4db001-504c-41d7-aaf2-76dc39efd390",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "22b9de30-65b5-495b-9793-e5311b5e7a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e40025-765e-4843-9210-558b31403963",
        "cursor": {
          "ref": "7d67c8b3-ecdd-41ad-b332-970241c4ccf6",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1af04597-e105-49b6-ac97-8e6114849d60"
        },
        "item": {
          "id": "39e40025-765e-4843-9210-558b31403963",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bf463530-7784-4c9d-a758-50e5e86fe390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1546cd-ac33-4ab4-ab65-10156a4f144a",
        "cursor": {
          "ref": "af37e663-7ee4-4986-a705-6365eebe1634",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3fcaaa0a-01bd-4f61-8b00-77d792b7f9e6"
        },
        "item": {
          "id": "2f1546cd-ac33-4ab4-ab65-10156a4f144a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ef953746-fda8-48e5-93de-be8f370a67ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc617df-f105-4820-be48-9bb5afd47cb5",
        "cursor": {
          "ref": "e41e58f6-e24f-4416-b1a5-519e2ff3ef42",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2b6fd77e-d3ac-4b7b-ae5a-c2b74ebf6467"
        },
        "item": {
          "id": "ccc617df-f105-4820-be48-9bb5afd47cb5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a7b31384-0ea6-45b2-85a6-0cc70c286216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a9e39c-5e44-456f-8113-f28699712f8e",
        "cursor": {
          "ref": "0b6f8192-c78b-4011-a884-b0e847675f96",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c3ccebd0-e335-4198-9c61-162bc4311fcf"
        },
        "item": {
          "id": "79a9e39c-5e44-456f-8113-f28699712f8e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "139794d8-587e-4158-a96e-6e041c6ff49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccef0a2-9bd8-4107-a718-89d7186a4588",
        "cursor": {
          "ref": "89e73c24-9ec7-410b-b428-ca472048004b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "63c63a70-1d38-4e33-9f4b-3a5cfff9a958"
        },
        "item": {
          "id": "3ccef0a2-9bd8-4107-a718-89d7186a4588",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "686b0d4d-2f4c-4a19-9069-4f80fec604e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc4e4c9-59d0-4e89-bdf3-49ccba372275",
        "cursor": {
          "ref": "375d305f-c255-4ae1-a6ae-40775a504966",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a61fe07a-7f6c-43c3-9aa9-1403238d9cee"
        },
        "item": {
          "id": "2dc4e4c9-59d0-4e89-bdf3-49ccba372275",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7861c665-9907-49dd-b008-46363e2b1c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be7d7b3-db61-4e48-b31a-ac5701f35cf8",
        "cursor": {
          "ref": "0becd9a4-5fd2-4334-9feb-c5454bd1679e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ce0a2802-90b0-4fe3-b178-e5e88b078b03"
        },
        "item": {
          "id": "2be7d7b3-db61-4e48-b31a-ac5701f35cf8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6d963dc1-c6af-4b06-a638-1481bc8f5d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79116cdc-7dd8-4658-a367-4078efedd8a1",
        "cursor": {
          "ref": "a785087b-667d-410d-bc43-712f0e7ae108",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "033a796a-aa3a-482f-93ae-4feae36d4011"
        },
        "item": {
          "id": "79116cdc-7dd8-4658-a367-4078efedd8a1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4aba6986-ce14-4bf1-b525-e5a2e186255b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02618c0d-e13d-4719-9fb3-c5ddd9c3245c",
        "cursor": {
          "ref": "be11e7ba-1a3f-440a-9922-968c4ab7b3b6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "81ed1abc-a912-4f71-895c-802c55c54604"
        },
        "item": {
          "id": "02618c0d-e13d-4719-9fb3-c5ddd9c3245c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d5b9db3d-085b-424e-b0fe-c34c2699259c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0743b05-b848-44c3-bcb2-44c8eba17ca0",
        "cursor": {
          "ref": "de574a59-b44e-4178-9acc-3f5f655d7291",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "52b4f520-ea71-4057-b1b7-efcabd8127a5"
        },
        "item": {
          "id": "a0743b05-b848-44c3-bcb2-44c8eba17ca0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bebf1d94-c132-4ea5-b190-5e444ccbfd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7af737-a467-425a-aeff-e180a9149dae",
        "cursor": {
          "ref": "80b9ce5d-5d4b-42e7-aa6e-615a12c88fd6",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "98131bf6-3f6d-4273-a0c1-594f8451196e"
        },
        "item": {
          "id": "3e7af737-a467-425a-aeff-e180a9149dae",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e37946b9-8399-4874-8044-497f2c3dbc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdc7bde-222b-4cd9-98cc-8705cb131df4",
        "cursor": {
          "ref": "501539ab-6ce4-49d4-9e67-050afa09fddc",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cab3e9db-5d59-4022-ba15-9f6dc5d0511d"
        },
        "item": {
          "id": "cbdc7bde-222b-4cd9-98cc-8705cb131df4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "28b0b7c3-d84b-41da-a3b5-2f18c0cd76e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2281b44-8a7d-47eb-9fa5-506164026b8c",
        "cursor": {
          "ref": "57af08ba-3ae8-49ab-a6bc-f2532c2f6418",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8c0ff420-13aa-4cdb-8fca-80a0af025a82"
        },
        "item": {
          "id": "c2281b44-8a7d-47eb-9fa5-506164026b8c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9bcd2a40-dd9a-478a-83b0-371d2776b06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c689ca58-954c-41a9-960a-aaccbcc4a283",
        "cursor": {
          "ref": "74897ecd-9fe4-426d-9b1f-cbd3777d3bd0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ad02430c-eabf-42b1-acff-34c282398839"
        },
        "item": {
          "id": "c689ca58-954c-41a9-960a-aaccbcc4a283",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b4f7fb0e-6659-452a-9365-f7d98aaeca3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4ef95d-4d94-4b52-8e22-f51c0bc67e83",
        "cursor": {
          "ref": "af3e792b-52c6-4ca4-837a-3d1d42fd115d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "666ec293-72fc-4798-95c1-82e672cd9376"
        },
        "item": {
          "id": "2e4ef95d-4d94-4b52-8e22-f51c0bc67e83",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f1cc4fa8-4050-4735-8a2c-b0f31150b2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b21c25d-3462-42b3-9a5b-d5114a40b3d3",
        "cursor": {
          "ref": "5ef40ce1-c68c-40fe-87c0-123b007a3fb5",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3eee0df0-4898-492c-9cb1-f90dfa78b1da"
        },
        "item": {
          "id": "2b21c25d-3462-42b3-9a5b-d5114a40b3d3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a52d9401-1d4d-4997-9f5e-15f067e88440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42364298-818d-4222-ab42-610b91a045ef",
        "cursor": {
          "ref": "eadc3133-7fac-48fa-a273-18f91cf79910",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8a33c4de-767f-48c7-a4fa-ef7da3eba6f3"
        },
        "item": {
          "id": "42364298-818d-4222-ab42-610b91a045ef",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bde05d29-414c-4e16-8eab-b73330e27d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091df7e1-7a85-4349-bbf9-01c746f67afb",
        "cursor": {
          "ref": "700e92dc-8238-40fb-bd5d-123d7a5d9828",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5a6bd402-cc49-4e45-b18c-f5c5265181c0"
        },
        "item": {
          "id": "091df7e1-7a85-4349-bbf9-01c746f67afb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dc258530-4aed-4f8e-b59e-ba09ae1f7489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d4ca8f-3993-44db-8abd-46e17397b827",
        "cursor": {
          "ref": "c4c645ea-5505-46b9-afc6-946bff086602",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2315b27c-5694-4651-94e3-a05d10ba47b7"
        },
        "item": {
          "id": "52d4ca8f-3993-44db-8abd-46e17397b827",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "00e2878b-ea30-4664-bf06-7fd4581c7739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfafc9ff-f93b-41b9-9b87-e8a938ec4cda",
        "cursor": {
          "ref": "adcad319-f475-41c2-86ed-2a0fffd7ff93",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "887d57f5-0326-4dd5-8a5f-02513b0640f3"
        },
        "item": {
          "id": "cfafc9ff-f93b-41b9-9b87-e8a938ec4cda",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9db45031-c8c1-4b47-9c96-c6bb70bc562a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3222e886-7398-49ad-a660-aa667ff3a937",
        "cursor": {
          "ref": "2dbbec5a-358a-40de-8cba-b41439729df0",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ebc8604a-4ce1-4544-ae47-b8e9d607479d"
        },
        "item": {
          "id": "3222e886-7398-49ad-a660-aa667ff3a937",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2d70ad85-ad5f-4dea-a240-95127e2c5868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7307becf-5977-4d95-a7f2-229819e74101",
        "cursor": {
          "ref": "f9edc7b6-e728-4b18-80ec-f86ef4166a0b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "50907201-6581-47eb-ac95-a8a92ea86cbf"
        },
        "item": {
          "id": "7307becf-5977-4d95-a7f2-229819e74101",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7b5a317a-8bc0-4a94-8d33-3488e456839e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14b4367-500b-4a85-9bca-977db6ba0173",
        "cursor": {
          "ref": "f9705044-3d23-4511-9952-7d6f6f46a6c4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c6cced64-d5f0-436f-8e5b-1200c22d711a"
        },
        "item": {
          "id": "f14b4367-500b-4a85-9bca-977db6ba0173",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0fe4939d-351b-4272-8007-515950e64a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ee141a-29d8-4819-b520-866a32454038",
        "cursor": {
          "ref": "96960dec-6653-4c9d-b479-dc2c0dea1be7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ebf7fa96-e139-4c54-8b0b-accb784f7d4f"
        },
        "item": {
          "id": "47ee141a-29d8-4819-b520-866a32454038",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0cb1bf1f-64fe-43b0-9087-f6aebe4536ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1ae285-b0da-424a-848b-337e52b9476a",
        "cursor": {
          "ref": "978a9c37-e51b-415c-ba5c-8259e1e611c6",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ec83bc3a-3dba-4c85-9ae9-27b3b82ab529"
        },
        "item": {
          "id": "3d1ae285-b0da-424a-848b-337e52b9476a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3d4312ea-c763-41fb-aadd-10fab4ead318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7da571a-ffad-486e-8731-f5a5466bc25c",
        "cursor": {
          "ref": "8eb726de-86a4-4628-a820-ce3c5433e7ae",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "94c992e8-f4ba-4ea7-9724-edabb5957e9e"
        },
        "item": {
          "id": "d7da571a-ffad-486e-8731-f5a5466bc25c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1076968c-0a4a-48b5-b95e-6ece9e0652b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9388f1fb-23fe-47c8-9108-ddd936c79494",
        "cursor": {
          "ref": "5280806e-c7f9-44ad-b845-ca42dde58dcf",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "77e18198-722d-44b3-a0d5-eedb3e166247"
        },
        "item": {
          "id": "9388f1fb-23fe-47c8-9108-ddd936c79494",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "19503e9a-1e78-4ca3-8523-8a3572204aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe865ffb-2e8d-43a0-8e88-572bfd41dd1d",
        "cursor": {
          "ref": "f5ddebd2-96fa-4340-a2d7-1c9bd7908ec7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f0cfc0be-a517-45ed-b8da-8bf099d9e8e8"
        },
        "item": {
          "id": "fe865ffb-2e8d-43a0-8e88-572bfd41dd1d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1bc7937d-7847-4815-a48f-018f8ef5d513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e1079c-4da0-4965-a32a-c7f49da4f1f1",
        "cursor": {
          "ref": "13b4bf3c-48cf-4994-aeeb-59e8d08b40be",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6f64304c-e37a-4087-b2e1-389b6140cedb"
        },
        "item": {
          "id": "86e1079c-4da0-4965-a32a-c7f49da4f1f1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "78919259-733c-4567-9f90-49d14f09e677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a226fc81-9fe8-4f0d-a276-9007b7a3b6ba",
        "cursor": {
          "ref": "15fa8155-3c42-4ed5-9b85-ae9f91a403fc",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "381e980e-ca9e-43d4-983a-f9447cb8d839"
        },
        "item": {
          "id": "a226fc81-9fe8-4f0d-a276-9007b7a3b6ba",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a36f5dab-c43a-4558-9d00-dc2adb91df40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005ba2f0-f14c-4fb8-800a-49d388d2398b",
        "cursor": {
          "ref": "cef09b0f-2ab0-435b-befc-e399541be2e4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ac933e61-5df9-466c-a039-25051cff19ce"
        },
        "item": {
          "id": "005ba2f0-f14c-4fb8-800a-49d388d2398b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7441618d-8285-4fcb-abfd-9a6126bb04de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0722f9-1895-4c13-aebc-6ff47384b576",
        "cursor": {
          "ref": "3fe1d356-a084-433f-85d8-bbf92cd145c6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d940e13b-b693-41e5-ae95-4ad99194c59c"
        },
        "item": {
          "id": "cd0722f9-1895-4c13-aebc-6ff47384b576",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ff905223-4cbc-4b4c-b2ab-7990c1c8bc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c1f90e-b56f-44f0-a685-8f03044cc863",
        "cursor": {
          "ref": "fb2f357a-d05c-4a12-a905-284f62aaec47",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c07d9e3b-951c-40af-be26-8283f783b8b4"
        },
        "item": {
          "id": "d8c1f90e-b56f-44f0-a685-8f03044cc863",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1c98c9cf-2bf5-42d3-9aa8-a5d2dedbe727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933c015b-9ee4-4cb0-8b1e-d31cb690248f",
        "cursor": {
          "ref": "6ad94d71-ff9d-43db-a0ab-b87246e47993",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1d7f9f4b-af1a-4b16-aedc-3fb812e4bcb4"
        },
        "item": {
          "id": "933c015b-9ee4-4cb0-8b1e-d31cb690248f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4ec28832-744a-4988-bf59-65606e1f3e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bc3202-fa08-4ec6-8846-926ba7b57467",
        "cursor": {
          "ref": "4b02b424-f763-40ce-b0c5-08b5461aabd3",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8b9c45c8-7f2a-4065-bf1d-11c9081cdb84"
        },
        "item": {
          "id": "d4bc3202-fa08-4ec6-8846-926ba7b57467",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c876a20d-d295-4b30-90a8-8e487d38b30c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8061b0f5-50aa-41aa-b112-cd469718cfb2",
        "cursor": {
          "ref": "5d909724-8429-43d0-a8de-e8add985cbd7",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7ba029be-fe31-4d40-bd93-9ae08a505985"
        },
        "item": {
          "id": "8061b0f5-50aa-41aa-b112-cd469718cfb2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1aa5e648-7ea5-41c3-afd5-b04bf331fb20",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dc1fa8-b768-4d54-88b3-d67c5926b787",
        "cursor": {
          "ref": "cfb4710c-1490-42c0-9326-d8ac4ec067bc",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "12db9c77-7450-4259-a23f-5697d59d08ed"
        },
        "item": {
          "id": "55dc1fa8-b768-4d54-88b3-d67c5926b787",
          "name": "credentials_verify"
        },
        "response": {
          "id": "452699f0-3a34-4496-b35f-8f4cb917805d",
          "status": "OK",
          "code": 200,
          "responseTime": 2726,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2f1d59-847d-4c67-a7ce-6d1b80142757",
        "cursor": {
          "ref": "aed7efb6-3c12-41ef-8561-b033aeb9a720",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "53279bb6-12e2-4965-a1b0-980b91bc165c"
        },
        "item": {
          "id": "4f2f1d59-847d-4c67-a7ce-6d1b80142757",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e4c34778-6752-4d36-bfe9-f8ecda5b9491",
          "status": "OK",
          "code": 200,
          "responseTime": 2536,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ed0cea-1d21-4c9b-97fa-7632a2d0cc26",
        "cursor": {
          "ref": "58fe0057-ac3f-4599-a324-07a2d06c9217",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c2877e11-3a67-4f6d-9f05-f73d43c67028"
        },
        "item": {
          "id": "13ed0cea-1d21-4c9b-97fa-7632a2d0cc26",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f854814e-935d-4908-912b-07a894e7206a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ed0cea-1d21-4c9b-97fa-7632a2d0cc26",
        "cursor": {
          "ref": "58fe0057-ac3f-4599-a324-07a2d06c9217",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c2877e11-3a67-4f6d-9f05-f73d43c67028"
        },
        "item": {
          "id": "13ed0cea-1d21-4c9b-97fa-7632a2d0cc26",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f854814e-935d-4908-912b-07a894e7206a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56b0a34-e498-4db6-8eb0-f23dddca953d",
        "cursor": {
          "ref": "ed5ebb68-54f1-4f31-b6c9-69c727296f26",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "de457a11-b3cd-4107-b262-828ce2917c4b"
        },
        "item": {
          "id": "c56b0a34-e498-4db6-8eb0-f23dddca953d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c7899c4f-a3f6-42c3-b685-565b5c505943",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8464a78c-cc2b-4dfd-82eb-db3c71f15818",
        "cursor": {
          "ref": "327a708e-72f4-4a29-bb80-ea267ab19a4a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a883d1b1-3a89-400d-8e62-dc3aea4e21d0"
        },
        "item": {
          "id": "8464a78c-cc2b-4dfd-82eb-db3c71f15818",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "11b3f74d-db26-4448-b797-9498d0f281d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}